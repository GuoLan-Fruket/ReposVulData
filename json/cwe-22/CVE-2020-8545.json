{"index": 4406, "cve_id": "CVE-2020-8545", "cwe_id": ["CWE-22"], "cve_language": "Python", "cve_description": "Global.py in AIL framework 2.8 allows path traversal.", "cvss": "7.5", "publish_date": "February 6, 2020", "AV": "NETWORK", "AC": "NETWORK", "PR": "NONE", "UI": "NONE", "S": "UNCHANGED", "C": "HIGH", "I": "NONE", "A": "NONE", "commit_id": "e808840f957c810b8e3944cba808716dc722581b", "commit_message": "fix: [Global: filename provided by all feeders] avoid path tranversal", "commit_date": "2020-02-03T09:32:20Z", "project": "circl/ail-framework", "url": "https://api.github.com/repos/CIRCL/AIL-framework/commits/e808840f957c810b8e3944cba808716dc722581b", "html_url": "https://github.com/CIRCL/AIL-framework/commit/e808840f957c810b8e3944cba808716dc722581b", "windows_before": [{"commit_id": "e19a3b3e630ed8cacd492e5c36ffa59c3cdfac78", "commit_date": "Mon Feb 3 09:37:08 2020 +0100", "commit_message": "fix: [Domain explorer UI] fix daterange pagination links", "files_name": ["var/www/templates/crawler/crawler_splash/domain_explorer.html", "var/www/templates/domains/domain_explorer.html"]}, {"commit_id": "4a732ea9f3fa0cd13f3af1289bc309897b4e7521", "commit_date": "Fri Jan 31 17:01:47 2020 +0100", "commit_message": "chg: [export MISP] export Items + Screenshots objects with relationships", "files_name": ["bin/export/MispExport.py", "bin/lib/Correlate_object.py", "bin/lib/Decoded.py", "bin/lib/Screenshot.py", "bin/packages/Correlation.py", "bin/packages/Cryptocurrency.py", "bin/packages/Item.py"]}, {"commit_id": "727bc5596691da467d9585e205a2a7d183c64506", "commit_date": "Thu Jan 30 11:31:33 2020 +0100", "commit_message": "fix: [Tag core] check if item_date type is an integer", "files_name": ["bin/packages/Tag.py"]}, {"commit_id": "b63fa51166b57c6aa7a6b0a5dd291546f3fa064a", "commit_date": "Fri Jan 24 15:03:04 2020 +0100", "commit_message": "chg: [domain explorer] domains explorer v2, filter domains by daterange", "files_name": ["bin/lib/Domain.py", "var/www/blueprints/crawler_splash.py", "var/www/templates/crawler/crawler_splash/domain_explorer.html", "var/www/templates/crawler/menu_sidebar.html", "var/www/templates/domains/card_img_domain.html", "var/www/templates/domains/domain_explorer.html", "var/www/templates/domains/filter_domains.html"]}, {"commit_id": "addb8856740730bbf012d0d522d674be6796323c", "commit_date": "Thu Jan 23 15:43:54 2020 +0100", "commit_message": "chg: [domain core + UI] add domain explorer v1", "files_name": ["bin/lib/Domain.py", "bin/lib/Screenshot.py", "var/www/blueprints/crawler_splash.py", "var/www/modules/hiddenServices/templates/Crawler_dashboard.html", "var/www/templates/crawler/crawler_splash/domain_explorer.html"]}, {"commit_id": "92b71e02c3c186ad7e187a875699cd497b964ea4", "commit_date": "Thu Jan 23 10:01:05 2020 +0100", "commit_message": "fix: [MISP export] force pymisp version", "files_name": ["var/www/update_thirdparty.sh"]}, {"commit_id": "08014f125ad6468d8d1aeb0f7f54e7afa8ecb40e", "commit_date": "Tue Jan 21 15:27:40 2020 +0100", "commit_message": "fix: [tag core] typo", "files_name": ["bin/packages/Tag.py"]}, {"commit_id": "249b3d657f60f97580215b92b2835c26824dff29", "commit_date": "Tue Jan 21 15:23:59 2020 +0100", "commit_message": "fix: [tag core] item date type", "files_name": ["bin/packages/Tag.py"]}, {"commit_id": "f82c93440636ed80aad7ba56b9aedbce77b896fb", "commit_date": "Tue Jan 21 14:44:51 2020 +0100", "commit_message": "chg: [test api] increase import timeout", "files_name": ["tests/testApi.py", "var/www/modules/PasteSubmit/Flask_PasteSubmit.py"]}, {"commit_id": "997e79a4760f2063bdae2d9287ee19bf66f48dee", "commit_date": "Tue Jan 21 13:35:52 2020 +0100", "commit_message": "fix: [Tag core] add tag, update tag last seen", "files_name": ["bin/packages/Tag.py"]}, {"commit_id": "7f278bd31542a8129e4af229084bc03895691e22", "commit_date": "Tue Jan 21 11:39:08 2020 +0100", "commit_message": "fix: [Flask server + cookie session] chg default cookie name (also use port number) + add Flask port number to config", "files_name": ["configs/core.cfg.sample", "var/www/Flask_server.py"]}, {"commit_id": "f139e9564e2f19beb84a8892abf0febb45f7f85e", "commit_date": "Tue Jan 21 10:59:11 2020 +0100", "commit_message": "fix: [expand btc adress] filter empty addr fields", "files_name": ["bin/lib/btc_ail.py"]}, {"commit_id": "165119883a08e6c475829383ed95fbb5c1bb7943", "commit_date": "Mon Jan 20 16:48:19 2020 +0100", "commit_message": "fix: [UI navbar] chg icon decoded tags", "files_name": ["var/www/templates/tags/menu_sidebar.html"]}, {"commit_id": "9357097d2f8c46c7ecea89d6eb88aff0d710223e", "commit_date": "Mon Jan 20 16:42:26 2020 +0100", "commit_message": "chg: [UI + core] tag decoded items, fix: #455", "files_name": ["bin/lib/Correlate_object.py", "bin/lib/Decoded.py", "bin/packages/Tag.py", "var/www/blueprints/correlation.py", "var/www/blueprints/tags_ui.py", "var/www/templates/correlation/metadata_card_decoded.html", "var/www/templates/tags/menu_sidebar.html", "var/www/templates/tags/search_obj_by_tags.html"]}, {"commit_id": "9394ed7d43e36e880d3c558240bf9914ebdbdaf1", "commit_date": "Mon Jan 20 15:19:55 2020 +0100", "commit_message": "fix: [UI show item min] fix empty modal", "files_name": ["var/www/templates/tags/search_obj_by_tags.html"]}, {"commit_id": "2b735e3b97edbe303cca734399782757ca073b3c", "commit_date": "Mon Jan 20 15:13:03 2020 +0100", "commit_message": "chg: [UI item tags search] refractor: search item tag by object, use new functions", "files_name": ["bin/packages/Date.py", "bin/packages/Tag.py", "var/www/blueprints/tags_ui.py", "var/www/modules/PasteSubmit/templates/submit_items.html", "var/www/modules/Tags/Flask_Tags.py", "var/www/modules/Tags/templates/header_Tags.html", "var/www/modules/hiddenServices/templates/domains.html", "var/www/modules/hunter/templates/showTracker.html", "var/www/modules/hunter/templates/trackersManagement.html", "var/www/modules/search/templates/search.html", "var/www/modules/showpaste/Flask_showpaste.py", "var/www/templates/crawler/crawler_splash/showDomain.html", "var/www/templates/modals/show_min_item.html", "var/www/templates/nav_bar.html", "var/www/templates/tags/block_obj_tags_search.html", "var/www/templates/tags/menu_sidebar.html", "var/www/templates/tags/search_obj_by_tags.html"]}, {"commit_id": "6bf9bc3ef7d7979dc9972d851ee9acea128011dd", "commit_date": "Mon Jan 20 09:20:55 2020 +0100", "commit_message": "Merge pull request #453 from mangelft/master", "files_name": ["b5beb89a94c1ac56dd85acc93cafc0148eab14b0 - Sat Jan 18 12:59:40 2020 +0100 : fix: change name popper.js-1.14.3 to popper-core-1.14.3", "var/www/update_thirdparty.sh"]}, {"commit_id": "a77d16f6d735db1fef9dd6b3db2e6579f70d6d15", "commit_date": "Tue Jan 14 16:46:53 2020 +0100", "commit_message": "fix: [UI] screenshot url", "files_name": ["bin/lib/Correlate_object.py", "var/www/blueprints/correlation.py"]}, {"commit_id": "83ae6a0a6cc7ab70a770d01b9e32b4c8006269d2", "commit_date": "Tue Jan 14 16:16:34 2020 +0100", "commit_message": "Merge pull request #450 from CIRCL/tags_v2", "files_name": ["17ee82d9ba8e557ccdeac76da646ad0c4d6a6a5d - Tue Jan 14 16:14:58 2020 +0100 : chg: [UI tags] add + delete image (screenshot) tags", "var/www/templates/correlation/metadata_card_screenshot.html"]}, {"commit_id": "f06551f1a19ddd6bf37c41250d879ebfa7d56823", "commit_date": "Tue Jan 14 16:14:21 2020 +0100", "commit_message": "chg: [UI tags] add + delete image (screenshot) tags", "files_name": ["bin/lib/Correlate_object.py", "bin/lib/Screenshot.py", "bin/packages/Tag.py", "var/www/blueprints/correlation.py", "var/www/templates/correlation/show_correlation.html", "var/www/templates/tags/search_obj_by_tags.html"]}, {"commit_id": "59b27455af53d8bdd47f7969b4f1b4273c1be36d", "commit_date": "Mon Jan 13 18:11:33 2020 +0100", "commit_message": "Merge pull request #449 from CIRCL/tags_v2", "files_name": ["5f8b81fd854503a6d20829ac78d5b2da09310c76 - Mon Jan 13 14:24:35 2020 +0100 : chg: [UI domain] add input: show domain by name", "var/www/blueprints/crawler_splash.py", "var/www/modules/hiddenServices/templates/Crawler_dashboard.html"]}, {"commit_id": "514911eb628a6f4ee30b67d73bc3671fd0ec0827", "commit_date": "Mon Jan 13 11:50:05 2020 +0100", "commit_message": "fix: [UI tags] fix domain links", "files_name": ["var/www/templates/tags/search_obj_by_tags.html"]}, {"commit_id": "12bac87cf3eeb6cc36141131cdce28be091b5960", "commit_date": "Mon Jan 13 11:29:45 2020 +0100", "commit_message": "chg: [tags blueprint] clean code", "files_name": ["var/www/blueprints/tags_ui.py"]}, {"commit_id": "d677b32da6025af51da6a1119f51a318201d4aac", "commit_date": "Mon Jan 13 11:24:03 2020 +0100", "commit_message": "chg: [update v2.7] sort domain full_onion_up and full_regular_up", "files_name": ["update/v2.7/Update_domain_tags.py"]}, {"commit_id": "fb320ca5d5eab1597d9205c84aa96fb6d494f2f3", "commit_date": "Mon Jan 13 11:10:03 2020 +0100", "commit_message": "chg: [UI tags] search domains by tags", "files_name": ["bin/lib/Correlate_object.py", "bin/packages/Tag.py", "var/www/blueprints/tags_ui.py", "var/www/modules/Tags/templates/Tags.html", "var/www/modules/hiddenServices/Flask_hiddenServices.py", "var/www/modules/hiddenServices/templates/Crawler_dashboard.html", "var/www/templates/pagination.html", "var/www/templates/tags/block_obj_tags_search.html", "var/www/templates/tags/menu_sidebar.html", "var/www/templates/tags/search_obj_by_tags.html"]}, {"commit_id": "99897ffa9baaa592c40fd515ca6209cf21549f1d", "commit_date": "Fri Jan 10 16:52:55 2020 +0100", "commit_message": "chg: [core + UI] search domain by tags", "files_name": ["bin/lib/Correlate_object.py", "bin/packages/Tag.py", "var/www/blueprints/tags_ui.py", "var/www/modules/hiddenServices/Flask_hiddenServices.py", "var/www/modules/hiddenServices/templates/Crawler_dashboard.html", "var/www/templates/tags/block_obj_tags_search.html", "var/www/templates/tags/search_obj_by_tags.html"]}, {"commit_id": "b4a36d812f2bf3af973366ae3748f8e609eb332f", "commit_date": "Thu Jan 9 15:11:37 2020 +0100", "commit_message": "Merge branch 'master' into tags_v2", "files_name": ["ce3d98d6207f701d6b08bcfab9ecb7f9cd1d6def - Thu Jan 9 15:07:51 2020 +0100 : chg: [Update v2.7] add update v2.7 scripts", "bin/packages/Date.py", "bin/update-background.py", "update/v1.5/Update-ARDB_Tags.py", "update/v2.7/Update.py", "update/v2.7/Update.sh", "update/v2.7/Update_domain_tags.py", "var/www/modules/Flask_config.py"]}, {"commit_id": "a4dd2242edfe1ca2437d53cb034946fb8bdb5675", "commit_date": "Thu Jan 9 11:54:51 2020 +0100", "commit_message": "Update README.md", "files_name": ["README.md"]}, {"commit_id": "5e7a7946ec3e041bdef23047690f9d18f8fcf372", "commit_date": "Thu Jan 9 11:52:42 2020 +0100", "commit_message": "chg: [README] remove top terms", "files_name": ["README.md", "doc/screenshots/term-tracker.png"]}, {"commit_id": "91ce045d914487521dfe9459519be40303f12e8a", "commit_date": "Thu Jan 9 11:12:58 2020 +0100", "commit_message": "fix: [UI term] remove deprecated trending charts, fix #446 #447", "files_name": ["var/www/modules/terms/Flask_terms.py", "var/www/modules/terms/templates/header_terms.html", "var/www/modules/trendingcharts/templates/header_trendingcharts.html"]}, {"commit_id": "3a691a4af350d92ec14d8b7238b7a98d657affc9", "commit_date": "Wed Jan 8 17:11:37 2020 +0100", "commit_message": "chg: [tags UI] edit object tags (delete tags)", "files_name": ["bin/packages/Tag.py", "var/www/blueprints/tags_ui.py", "var/www/modules/Tags/Flask_Tags.py", "var/www/templates/crawler/crawler_splash/showDomain.html", "var/www/templates/modals/edit_tag.html"]}, {"commit_id": "85d5770e80eb3d85fb9b1f47a1b2b4343418e2f7", "commit_date": "Tue Jan 7 16:14:56 2020 +0100", "commit_message": "chg: [Tag core] objects tagging, Part 2/2 TODO: UI tags domain + screenshot + object rename paste=>item", "files_name": ["bin/Tags.py", "bin/lib/Correlate_object.py", "bin/packages/Tag.py", "var/www/Flask_server.py", "var/www/blueprints/tags_ui.py", "var/www/modules/Tags/Flask_Tags.py", "var/www/modules/showpaste/templates/show_saved_paste.html", "var/www/templates/modals/add_tags.html"]}, {"commit_id": "b557b7fed83c47247594d730f451e1a2b405793d", "commit_date": "Tue Jan 7 14:30:52 2020 +0100", "commit_message": "chg: [Tag core] objects tagging, Part 1/2 TODO UI (tags) + rename paste=>item", "files_name": ["bin/lib/Correlate_object.py", "bin/packages/Tag.py", "bin/submit_paste.py", "update/v2.4/Update_domain.py", "var/www/blueprints/tags.py", "var/www/modules/Tags/Flask_Tags.py", "var/www/modules/restApi/Flask_restApi.py"]}, {"commit_id": "2be06973ee75a527728daaa6021155c2fee6c77f", "commit_date": "Mon Jan 6 17:07:52 2020 +0100", "commit_message": "chg: [Tag core] objects tagging, Part 1/2", "files_name": ["OVERVIEW.md", "bin/Tags.py", "bin/lib/Domain.py"]}], "windows_after": [{"commit_id": "4d8db3fcc4757cad99ed3bbea057e5080abaffa8", "commit_date": "Mon Feb 3 14:51:51 2020 +0100", "commit_message": "fix: [Global: already saved filename] save updated + filter duplicated items", "files_name": ["bin/Global.py"]}, {"commit_id": "8770bf05d732afe3a48cb03cd2b463c73bd8c061", "commit_date": "Mon Feb 3 15:29:37 2020 +0100", "commit_message": "fix: [IPAddress] catch empty config error", "files_name": ["bin/IPAddress.py"]}, {"commit_id": "f422be917af56f757b3f6df138ab08eecf103bc5", "commit_date": "Tue Feb 4 09:29:53 2020 +0100", "commit_message": "fix: [domain explorer web] fix pagination by daterange", "files_name": ["var/www/blueprints/crawler_splash.py"]}, {"commit_id": "6b6c6a4d9e66bbc01db76ecc1261be88bd414aa7", "commit_date": "Tue Feb 4 09:34:05 2020 +0100", "commit_message": "fix: [domain explorer web] fix pagination by daterange", "files_name": ["var/www/blueprints/crawler_splash.py"]}, {"commit_id": "b31fffa728f8bfe759e26d3b974f8dd33a42f20b", "commit_date": "Tue Feb 4 13:04:09 2020 +0100", "commit_message": "chg: [MISP export] add pgp object + add relationship: item + pgp + cryptocurrency", "files_name": ["bin/export/MispExport.py", "bin/lib/Decoded.py", "bin/lib/Domain.py", "bin/packages/Cryptocurrency.py", "bin/packages/Item.py", "bin/packages/Pgp.py", "bin/packages/correlation.py"]}, {"commit_id": "7888f5490232a937c8f03d467c640e72325307cd", "commit_date": "Thu Feb 6 09:18:54 2020 +0100", "commit_message": "Added support for username as notification credentials", "files_name": ["bin/NotificationHelper.py", "configs/core.cfg.sample"]}, {"commit_id": "fc58940ed67f8b8b6c55f1b7ccc44c9da2d7b561", "commit_date": "Thu Feb 6 09:41:43 2020 +0100", "commit_message": "fix: [core Global] catch and log incomplete files", "files_name": ["bin/Global.py"]}, {"commit_id": "c7979d81e3de26b8e45e7e58c78affe7494ef00c", "commit_date": "Thu Feb 6 09:49:43 2020 +0100", "commit_message": "Merge pull request #463 from petmi627/master", "files_name": ["73f98c0897312f0c5984433a8845ed536d44a588 - Thu Feb 6 17:14:08 2020 +0100 : chg: [add MISP import](no correlations) import item + pgp(incomplete) + screenshot(incomplete)", "bin/export/MispExport.py", "bin/export/MispImport.py", "bin/lib/Screenshot.py", "bin/packages/Cryptocurrency.py", "bin/packages/Item.py", "bin/packages/Paste.py", "bin/packages/correlation.py"]}, {"commit_id": "62ce4646e5b605893eec81df22c902e7d1269073", "commit_date": "Fri Feb 7 10:12:38 2020 +0100", "commit_message": "fix: [search items tag] fix daterange", "files_name": ["bin/packages/Tag.py"]}, {"commit_id": "d8fbd72863f56f33de5f70bc450e115861623866", "commit_date": "Fri Feb 7 10:53:45 2020 +0100", "commit_message": "fix: [Global catch incomplete file error] fix #464", "files_name": ["bin/Global.py"]}, {"commit_id": "6bbcef024b3d72cf2c73b8833bc523b76005d3d7", "commit_date": "Fri Feb 7 15:08:41 2020 +0100", "commit_message": "chg: [add MISP import] correlation TODO: create correlation", "files_name": ["bin/export/MispImport.py", "bin/packages/Cryptocurrency.py", "bin/packages/Date.py", "bin/packages/Pgp.py", "bin/packages/correlation.py"]}, {"commit_id": "f9856a1589cb49fc6e407587d7609bf4a3e6af23", "commit_date": "Mon Feb 10 10:31:53 2020 +0100", "commit_message": "fix: [module Webstats + BankAccount-Decoder] fix faup return type + remove old Paste library from BankAccount-Decoder #465", "files_name": ["bin/BankAccount.py", "bin/Decoder.py", "bin/WebStats.py", "bin/packages/Item.py"]}, {"commit_id": "cf24c59e1d390db39b305b1aec7a17d3b0551b0f", "commit_date": "Mon Feb 10 10:44:06 2020 +0100", "commit_message": "fix: [IPAdress] remove leading zeros #465", "files_name": ["bin/IPAddress.py"]}, {"commit_id": "4097d95237a81e3c506743397eea4880622a1ccf", "commit_date": "Mon Feb 10 11:04:24 2020 +0100", "commit_message": "fix: [SentimentAnalysis] download nltk punkt", "files_name": ["bin/SentimentAnalysis.py"]}, {"commit_id": "f950e700bd26900988de32a576655d725a7ff698", "commit_date": "Mon Feb 10 11:06:39 2020 +0100", "commit_message": "chg: [SentimentAnalysis] clean", "files_name": ["bin/SentimentAnalysis.py"]}, {"commit_id": "f2cdb2b3f79e7d1d81b4cdea037925b6def06d81", "commit_date": "Mon Feb 10 13:40:11 2020 +0100", "commit_message": "Added characters limition in trackersManagement.html", "files_name": ["var/www/modules/hunter/templates/trackersManagement.html"]}, {"commit_id": "28c924ef4ef95494c1b0dd19129f5ab5b1858916", "commit_date": "Mon Feb 10 14:21:54 2020 +0100", "commit_message": "Merge pull request #467 from petmi627/master", "files_name": ["25e3022eab56735bd6511a693ddcb517304e9c09 - Tue Feb 11 15:48:30 2020 +0100 : chg: [MISP import] import files obj: decoded + screenshot", "bin/Decoder.py", "bin/export/MispExport.py", "bin/export/MispImport.py", "bin/lib/Correlate_object.py", "bin/lib/Decoded.py", "bin/lib/Screenshot.py", "bin/packages/Cryptocurrency.py", "bin/packages/Item.py", "bin/packages/Pgp.py", "bin/packages/Tag.py", "bin/packages/correlation.py"]}, {"commit_id": "c042a2a66f1137c7ecd9b431c8c00c205e4ff6c6", "commit_date": "Tue Feb 11 15:50:56 2020 +0100", "commit_message": "chg: [MISP import] import files obj: decoded + screenshot", "files_name": ["bin/packages/Correlation.py"]}, {"commit_id": "ac114814fd63ae8a110819f8a86bcbaa29c2bd91", "commit_date": "Wed Feb 12 16:36:02 2020 +0100", "commit_message": "chg: [MISP import-export] pgp and cryptocurrency with relationships", "files_name": ["bin/Decoder.py", "bin/export/MispExport.py", "bin/export/MispImport.py", "bin/lib/Correlate_object.py", "bin/lib/Decoded.py", "bin/packages/Correlation.py"]}, {"commit_id": "eddb0008901a5751335df3288fa4f27d341ea752", "commit_date": "Wed Feb 12 17:12:17 2020 +0100", "commit_message": "chg: [MISP import-export] screenshots with relationships", "files_name": ["bin/export/MispImport.py", "bin/lib/Correlate_object.py", "bin/lib/Screenshot.py"]}, {"commit_id": "4d2449cd6144b4e52eba7057d9f1a4b613f0565a", "commit_date": "Thu Feb 13 15:03:05 2020 +0100", "commit_message": "chg: [MISP import export] decoded with relationships", "files_name": ["bin/Decoder.py", "bin/export/MispImport.py", "bin/lib/Correlate_object.py", "bin/lib/Decoded.py", "bin/lib/Screenshot.py"]}, {"commit_id": "b641be3b588ea43c2554e139cc2a00ceb0d0302d", "commit_date": "Fri Feb 14 09:57:42 2020 +0100", "commit_message": "chg: [MISP import export] item with relationships (domain not handled)", "files_name": ["bin/Decoder.py", "bin/export/MispImport.py", "bin/lib/Correlate_object.py", "bin/lib/Decoded.py", "bin/lib/Screenshot.py", "bin/packages/Correlation.py", "bin/packages/Item.py"]}, {"commit_id": "ee15a9b5c62a71d909279b235ed36ba273cb1544", "commit_date": "Mon Feb 17 10:52:25 2020 +0100", "commit_message": "chg: [UI MISP import] add MISP import", "files_name": ["bin/export/MispExport.py", "bin/export/MispImport.py", "var/www/Flask_server.py", "var/www/blueprints/import_export.py", "var/www/templates/decoded/menu_sidebar.html", "var/www/templates/import_export/export_object.html", "var/www/templates/import_export/import_object.html", "var/www/templates/nav_bar.html"]}, {"commit_id": "4d0e9a94d0a62d7d8d26a88838023dd5dcbd539a", "commit_date": "Mon Feb 17 17:01:16 2020 +0100", "commit_message": "chg: [UI MISP export] add MISP export", "files_name": ["bin/export/MispExport.py", "bin/lib/Correlate_object.py", "bin/packages/Correlation.py", "var/www/blueprints/import_export.py", "var/www/templates/decoded/menu_sidebar.html", "var/www/templates/import_export/export_object.html", "var/www/templates/import_export/import_object.html"]}, {"commit_id": "1b861f55ee4ae8af8467c80d7b3e64522c004cf1", "commit_date": "Tue Feb 18 11:27:00 2020 +0100", "commit_message": "chg: [UI MISP export] add error output", "files_name": ["bin/lib/Correlate_object.py", "var/www/blueprints/import_export.py", "var/www/templates/import_export/block_to_export_input.html", "var/www/templates/import_export/export_object.html"]}, {"commit_id": "b0dde78c2e2a8c5d937b51bd1c459fa1c5952764", "commit_date": "Tue Feb 18 13:47:47 2020 +0100", "commit_message": "chg: [UI MISP import]show  error +imported uuid/global_id", "files_name": ["bin/export/MispImport.py", "bin/lib/Correlate_object.py", "bin/lib/Decoded.py", "bin/lib/Screenshot.py", "bin/packages/Item.py", "var/www/blueprints/import_export.py", "var/www/templates/import_export/block_to_export_input.html", "var/www/templates/import_export/export_object.html", "var/www/templates/import_export/import_object.html"]}, {"commit_id": "b8342cfa69e1edc7247338a518adeabda2bd8679", "commit_date": "Tue Feb 18 17:02:00 2020 +0100", "commit_message": "chg: [UI MISP export] export to MISP instance", "files_name": ["OVERVIEW.md", "bin/export/AILObjects.py", "bin/export/MispExport.py", "bin/export/MispImport.py", "configs/core.cfg.sample", "var/www/blueprints/import_export.py", "var/www/templates/import_export/block_create_misp_event.html", "var/www/templates/import_export/export_object.html"]}, {"commit_id": "62e3d95f226f6523983d26663fe730e0dca4b5e4", "commit_date": "Wed Feb 19 09:35:00 2020 +0100", "commit_message": "merge master => import_export_v1", "files_name": ["301e7e67d1a4cd9155fb8bfa106e6312349caad5 - Wed Feb 19 16:15:41 2020 +0100 : chg: [UI MISP export] add object export picker by user", "bin/Cryptocurrencies.py", "bin/Decoder.py", "bin/Duplicates.py", "bin/MISP_The_Hive_feeder.py", "bin/PgpDump.py", "bin/export/AILObjects.py", "bin/export/MispExport.py", "bin/lib/Correlate_object.py", "bin/packages/Paste.py", "bin/packages/Pgp.py", "var/www/blueprints/import_export.py", "var/www/modules/hashDecoded/Flask_hashDecoded.py", "var/www/modules/showpaste/templates/show_saved_paste.html", "var/www/templates/correlation/show_correlation.html", "var/www/templates/crawler/crawler_splash/showDomain.html", "var/www/templates/import_export/block_add_user_object_to_export.html", "var/www/templates/import_export/export_object.html"]}, {"commit_id": "260d4793788817ae3d7620e3e3e0a4ec30736271", "commit_date": "Wed Feb 19 16:23:19 2020 +0100", "commit_message": "chg: [update v3.0] add update v3.0", "files_name": ["update/v3.0/Update.py", "update/v3.0/Update.sh", "var/www/update_thirdparty.sh"]}, {"commit_id": "57e551552e400f13437ed2fa7607838ab7e3220b", "commit_date": "Wed Feb 19 16:25:49 2020 +0100", "commit_message": "chg: [core] Drop python 3.5 support", "files_name": ["README.md"]}, {"commit_id": "0405d00effc21e7fa71395a6d530913eab125f2b", "commit_date": "Wed Feb 19 16:37:38 2020 +0100", "commit_message": "Merge branch 'master' of https://github.com/CIRCL/AIL-framework", "files_name": ["7bc51a182389d613b8a52b67c89bb553beafd997 - Thu Feb 20 09:25:34 2020 +0100 : fix: [Pytaxonomies install]", "var/www/update_thirdparty.sh"]}, {"commit_id": "c6aabf4ecdc1054bd64144119ee6073d40c2379e", "commit_date": "Thu Feb 20 09:49:04 2020 +0100", "commit_message": "chg: [presentation] add MISP export screenshot", "files_name": ["doc/presentation/source-training/ail-training.tex", "doc/presentation/source-training/screenshot/bitcoin-misp.png", "doc/presentation/source-training/screenshot/domain-misp.png"]}], "parents": [{"commit_id_before": "e19a3b3e630ed8cacd492e5c36ffa59c3cdfac78", "url_before": "https://api.github.com/repos/CIRCL/AIL-framework/commits/e19a3b3e630ed8cacd492e5c36ffa59c3cdfac78", "html_url_before": "https://github.com/CIRCL/AIL-framework/commit/e19a3b3e630ed8cacd492e5c36ffa59c3cdfac78"}], "details": [{"raw_url": "https://github.com/CIRCL/AIL-framework/raw/e808840f957c810b8e3944cba808716dc722581b/bin%2FGlobal.py", "code": "#!/usr/bin/env python3\n# -*-coding:UTF-8 -*\n\"\"\"\nThe ZMQ_Feed_Q Module\n=====================\n\nThis module is consuming the Redis-list created by the ZMQ_Feed_Q Module,\nAnd save the paste on disk to allow others modules to work on them.\n\n..todo:: Be able to choose to delete or not the saved paste after processing.\n..todo:: Store the empty paste (unprocessed) somewhere in Redis.\n\n..note:: Module ZMQ_Something_Q and ZMQ_Something are closely bound, always put\nthe same Subscriber name in both of them.\n\nRequirements\n------------\n\n*Need running Redis instances.\n*Need the ZMQ_Feed_Q Module running to be able to work properly.\n\n\"\"\"\nimport base64\nimport os\nimport time\nimport uuid\nfrom pubsublogger import publisher\n\nfrom Helper import Process\n\nimport magic\n\ndef rreplace(s, old, new, occurrence):\n    li = s.rsplit(old, occurrence)\n    return new.join(li)\n\n\nif __name__ == '__main__':\n    publisher.port = 6380\n    publisher.channel = 'Script'\n    processed_paste = 0\n    time_1 = time.time()\n\n    config_section = 'Global'\n\n    p = Process(config_section)\n\n    # get and sanityze PASTE DIRECTORY\n    PASTES_FOLDER = os.path.join(os.environ['AIL_HOME'], p.config.get(\"Directories\", \"pastes\"))\n    PASTES_FOLDERS = PASTES_FOLDER + '/'\n    PASTES_FOLDERS = os.path.join(os.path.realpath(PASTES_FOLDERS), '')\n\n    # LOGGING #\n    publisher.info(\"Feed Script started to receive & publish.\")\n\n    while True:\n\n        message = p.get_from_set()\n        # Recovering the streamed message informations.\n        if message is not None:\n            splitted = message.split()\n            if len(splitted) == 2:\n                paste, gzip64encoded = splitted\n            else:\n                # TODO Store the name of the empty paste inside a Redis-list.\n                print(\"Empty Paste: not processed\")\n                publisher.debug(\"Empty Paste: {0} not processed\".format(message))\n                continue\n        else:\n            print(\"Empty Queues: Waiting...\")\n            if int(time.time() - time_1) > 30:\n                to_print = 'Global; ; ; ;glob Processed {0} paste(s)'.format(processed_paste)\n                print(to_print)\n                #publisher.info(to_print)\n                time_1 = time.time()\n                processed_paste = 0\n            time.sleep(1)\n            continue\n\n        # remove PASTES_FOLDER from item path (crawled item + submited)\n        if PASTES_FOLDERS in paste:\n            paste = paste.replace(PASTES_FOLDERS, '', 1)\n\n        file_name_paste = paste.split('/')[-1]\n        if len(file_name_paste)>255:\n            new_file_name_paste = '{}{}.gz'.format(file_name_paste[:215], str(uuid.uuid4()))\n            paste = rreplace(paste, file_name_paste, new_file_name_paste, 1)\n\n        # Creating the full filepath\n        filename = os.path.join(PASTES_FOLDER, paste)\n        filename = os.path.realpath(filename)\n\n        # incorrect filename\n        if not os.path.commonprefix([filename, PASTES_FOLDER]) == PASTES_FOLDER:\n            print('Path traversal detected {}'.format(filename))\n            publisher.warning('Global; Path traversal detected')\n        else:\n            dirname = os.path.dirname(filename)\n            if not os.path.exists(dirname):\n                os.makedirs(dirname)\n\n            decoded = base64.standard_b64decode(gzip64encoded)\n\n            with open(filename, 'wb') as f:\n                f.write(decoded)\n            '''try:\n                decoded2 = gunzip_bytes_obj(decoded)\n            except:\n                decoded2 =''\n\n            type = magic.from_buffer(decoded2, mime=True)\n\n            if type!= 'text/x-c++' and type!= 'text/html' and type!= 'text/x-c' and type!= 'text/x-python' and type!= 'text/x-php' and type!= 'application/xml' and type!= 'text/x-shellscript' and type!= 'text/plain' and type!= 'text/x-diff' and type!= 'text/x-ruby':\n\n                print('-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------')\n                print(filename)\n                print(type)\n                print('-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------')\n            '''\n\n            p.populate_set_out(paste)\n            processed_paste+=1\n", "code_before": "#!/usr/bin/env python3\n# -*-coding:UTF-8 -*\n\"\"\"\nThe ZMQ_Feed_Q Module\n=====================\n\nThis module is consuming the Redis-list created by the ZMQ_Feed_Q Module,\nAnd save the paste on disk to allow others modules to work on them.\n\n..todo:: Be able to choose to delete or not the saved paste after processing.\n..todo:: Store the empty paste (unprocessed) somewhere in Redis.\n\n..note:: Module ZMQ_Something_Q and ZMQ_Something are closely bound, always put\nthe same Subscriber name in both of them.\n\nRequirements\n------------\n\n*Need running Redis instances.\n*Need the ZMQ_Feed_Q Module running to be able to work properly.\n\n\"\"\"\nimport base64\nimport os\nimport time\nimport uuid\nfrom pubsublogger import publisher\n\nfrom Helper import Process\n\nimport magic\n\ndef rreplace(s, old, new, occurrence):\n    li = s.rsplit(old, occurrence)\n    return new.join(li)\n\n\nif __name__ == '__main__':\n    publisher.port = 6380\n    publisher.channel = 'Script'\n    processed_paste = 0\n    time_1 = time.time()\n\n    config_section = 'Global'\n\n    p = Process(config_section)\n\n    PASTES_FOLDER = os.path.join(os.environ['AIL_HOME'], p.config.get(\"Directories\", \"pastes\"))\n    PASTES_FOLDERS = PASTES_FOLDER + '/'\n\n    # LOGGING #\n    publisher.info(\"Feed Script started to receive & publish.\")\n\n    while True:\n\n        message = p.get_from_set()\n        # Recovering the streamed message informations.\n        if message is not None:\n            splitted = message.split()\n            if len(splitted) == 2:\n                paste, gzip64encoded = splitted\n            else:\n                # TODO Store the name of the empty paste inside a Redis-list.\n                print(\"Empty Paste: not processed\")\n                publisher.debug(\"Empty Paste: {0} not processed\".format(message))\n                continue\n        else:\n            print(\"Empty Queues: Waiting...\")\n            if int(time.time() - time_1) > 30:\n                to_print = 'Global; ; ; ;glob Processed {0} paste(s)'.format(processed_paste)\n                print(to_print)\n                #publisher.info(to_print)\n                time_1 = time.time()\n                processed_paste = 0\n            time.sleep(1)\n            continue\n\n        file_name_paste = paste.split('/')[-1]\n        if len(file_name_paste)>255:\n            new_file_name_paste = '{}{}.gz'.format(file_name_paste[:215], str(uuid.uuid4()))\n            paste = rreplace(paste, file_name_paste, new_file_name_paste, 1)\n\n        # Creating the full filepath\n        filename = os.path.join(PASTES_FOLDER, paste)\n\n        dirname = os.path.dirname(filename)\n        if not os.path.exists(dirname):\n            os.makedirs(dirname)\n\n        decoded = base64.standard_b64decode(gzip64encoded)\n\n        with open(filename, 'wb') as f:\n            f.write(decoded)\n        '''try:\n            decoded2 = gunzip_bytes_obj(decoded)\n        except:\n            decoded2 =''\n\n        type = magic.from_buffer(decoded2, mime=True)\n\n        if type!= 'text/x-c++' and type!= 'text/html' and type!= 'text/x-c' and type!= 'text/x-python' and type!= 'text/x-php' and type!= 'application/xml' and type!= 'text/x-shellscript' and type!= 'text/plain' and type!= 'text/x-diff' and type!= 'text/x-ruby':\n\n            print('-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------')\n            print(filename)\n            print(type)\n            print('-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------')\n        '''\n\n        # remove PASTES_FOLDER from item path (crawled item + submited)\n        if PASTES_FOLDERS in paste:\n            paste = paste.replace(PASTES_FOLDERS, '', 1)\n\n        p.populate_set_out(paste)\n        processed_paste+=1\n", "patch": "@@ -45,8 +45,10 @@ def rreplace(s, old, new, occurrence):\n \n     p = Process(config_section)\n \n+    # get and sanityze PASTE DIRECTORY\n     PASTES_FOLDER = os.path.join(os.environ['AIL_HOME'], p.config.get(\"Directories\", \"pastes\"))\n     PASTES_FOLDERS = PASTES_FOLDER + '/'\n+    PASTES_FOLDERS = os.path.join(os.path.realpath(PASTES_FOLDERS), '')\n \n     # LOGGING #\n     publisher.info(\"Feed Script started to receive & publish.\")\n@@ -75,40 +77,46 @@ def rreplace(s, old, new, occurrence):\n             time.sleep(1)\n             continue\n \n+        # remove PASTES_FOLDER from item path (crawled item + submited)\n+        if PASTES_FOLDERS in paste:\n+            paste = paste.replace(PASTES_FOLDERS, '', 1)\n+\n         file_name_paste = paste.split('/')[-1]\n         if len(file_name_paste)>255:\n             new_file_name_paste = '{}{}.gz'.format(file_name_paste[:215], str(uuid.uuid4()))\n             paste = rreplace(paste, file_name_paste, new_file_name_paste, 1)\n \n         # Creating the full filepath\n         filename = os.path.join(PASTES_FOLDER, paste)\n+        filename = os.path.realpath(filename)\n \n-        dirname = os.path.dirname(filename)\n-        if not os.path.exists(dirname):\n-            os.makedirs(dirname)\n-\n-        decoded = base64.standard_b64decode(gzip64encoded)\n+        # incorrect filename\n+        if not os.path.commonprefix([filename, PASTES_FOLDER]) == PASTES_FOLDER:\n+            print('Path traversal detected {}'.format(filename))\n+            publisher.warning('Global; Path traversal detected')\n+        else:\n+            dirname = os.path.dirname(filename)\n+            if not os.path.exists(dirname):\n+                os.makedirs(dirname)\n \n-        with open(filename, 'wb') as f:\n-            f.write(decoded)\n-        '''try:\n-            decoded2 = gunzip_bytes_obj(decoded)\n-        except:\n-            decoded2 =''\n+            decoded = base64.standard_b64decode(gzip64encoded)\n \n-        type = magic.from_buffer(decoded2, mime=True)\n+            with open(filename, 'wb') as f:\n+                f.write(decoded)\n+            '''try:\n+                decoded2 = gunzip_bytes_obj(decoded)\n+            except:\n+                decoded2 =''\n \n-        if type!= 'text/x-c++' and type!= 'text/html' and type!= 'text/x-c' and type!= 'text/x-python' and type!= 'text/x-php' and type!= 'application/xml' and type!= 'text/x-shellscript' and type!= 'text/plain' and type!= 'text/x-diff' and type!= 'text/x-ruby':\n+            type = magic.from_buffer(decoded2, mime=True)\n \n-            print('-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------')\n-            print(filename)\n-            print(type)\n-            print('-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------')\n-        '''\n+            if type!= 'text/x-c++' and type!= 'text/html' and type!= 'text/x-c' and type!= 'text/x-python' and type!= 'text/x-php' and type!= 'application/xml' and type!= 'text/x-shellscript' and type!= 'text/plain' and type!= 'text/x-diff' and type!= 'text/x-ruby':\n \n-        # remove PASTES_FOLDER from item path (crawled item + submited)\n-        if PASTES_FOLDERS in paste:\n-            paste = paste.replace(PASTES_FOLDERS, '', 1)\n+                print('-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------')\n+                print(filename)\n+                print(type)\n+                print('-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------')\n+            '''\n \n-        p.populate_set_out(paste)\n-        processed_paste+=1\n+            p.populate_set_out(paste)\n+            processed_paste+=1", "file_path": "files/2020_2/260", "file_language": "py", "file_name": "bin/Global.py", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 1, "llm_check": 1, "static_check": 0, "static": {"rats": [false, []], "semgrep": [false, []]}, "target": -1, "function_before": [], "function_after": []}], "outdated": 0, "cwe_descripiton": "", "cwe_consequence": "", "cwe_method": "", "cwe_solution": ""}
