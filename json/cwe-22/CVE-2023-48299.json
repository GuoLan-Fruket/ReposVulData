{"index": 12665, "cve_id": "CVE-2023-48299", "cwe_id": ["CWE-22"], "cve_language": "Python", "cve_description": "TorchServe is a tool for serving and scaling PyTorch models in production. Starting in version 0.1.0 and prior to version 0.9.0, using the model/workflow management API, there is a chance of uploading potentially harmful archives that contain files that are extracted to any location on the filesystem that is within the process permissions. Leveraging this issue could aid third-party actors in hiding harmful code in open-source/public models, which can be downloaded from the internet, and take advantage of machines running Torchserve. The ZipSlip issue in TorchServe has been fixed by validating the paths of files contained within a zip archive before extracting them. TorchServe release 0.9.0 includes fixes to address the ZipSlip vulnerability.", "cvss": "5.3", "publish_date": "November 21, 2023", "AV": "NETWORK", "AC": "NETWORK", "PR": "NONE", "UI": "NONE", "S": "UNCHANGED", "C": "NONE", "I": "LOW", "A": "NONE", "commit_id": "bfb3d42396727614aef625143b4381e64142f9bb", "commit_message": "fix zip slip error (#2634)", "commit_date": "2023-09-29T23:46:40Z", "project": "pytorch/serve", "url": "https://api.github.com/repos/pytorch/serve/commits/bfb3d42396727614aef625143b4381e64142f9bb", "html_url": "https://github.com/pytorch/serve/commit/bfb3d42396727614aef625143b4381e64142f9bb", "windows_before": [{"commit_id": "533bb613864e954f006079b2f600a579bd14a8d4", "commit_date": "Fri Sep 29 11:11:50 2023 -0700", "commit_message": "Default Hostname verifier in Test (#2631)", "files_name": ["frontend/server/src/test/java/org/pytorch/serve/TestUtils.java"]}, {"commit_id": "7123319ddee0e3a5fde3c6733bbe5cd5e7472e69", "commit_date": "Fri Sep 29 10:30:18 2023 -0700", "commit_message": "Changes for PyTorch 2.1.0 and Python 3.11 (#2621)", "files_name": [".github/workflows/ci_gpu.yml", ".github/workflows/regression_tests_gpu.yml", "CONTRIBUTING.md", "README.md", "benchmarks/auto_benchmark.py", "binaries/conda/build_packages.py", "docker/README.md", "docker/build_image.sh", "docker/build_upload_release.py", "docker/docker_nightly.py", "docs/code_coverage.md", "docs/getting_started.md", "requirements/torch_cu121_linux.txt", "requirements/torch_cu121_windows.txt", "requirements/torch_darwin.txt", "requirements/torch_linux.txt", "requirements/torch_windows.txt", "ts_scripts/install_dependencies.py"]}, {"commit_id": "83717b694d9eee3944fb2ce54a421f32b6889954", "commit_date": "Fri Sep 29 10:15:49 2023 -0700", "commit_message": "Sha-256 (#2629)", "files_name": ["frontend/archive/src/main/java/org/pytorch/serve/archive/utils/ZipUtils.java"]}, {"commit_id": "d8a11464b098c17207d96a35d89cb83b412a0433", "commit_date": "Wed Sep 27 10:29:51 2023 -0700", "commit_message": "Display nightly workflow status badge (#2619)", "files_name": ["README.md"]}, {"commit_id": "3cb5a73d3789fd5712e017e1b1074d6704ae1fb0", "commit_date": "Tue Sep 26 16:32:16 2023 -0700", "commit_message": "Update path to sample input text for inf2 opt benchmark model (#2617)", "files_name": ["benchmarks/models_config/opt_6.7b_neuronx.yaml"]}, {"commit_id": "c3ca2599b4d36d2b61302064b02eab1b65e1908d", "commit_date": "Tue Sep 26 02:44:45 2023 -0700", "commit_message": "Llama2 on inf2 example tests, bug fixes and documentation (#2607)", "files_name": ["examples/large_models/inferentia2/llama2/Readme.md", "examples/large_models/inferentia2/llama2/requirements.txt", "ts/tests/unit_tests/test_hf_batch_streamer.py", "ts/tests/unit_tests/test_micro_batching.py", "ts_scripts/spellcheck_conf/wordlist.txt"]}, {"commit_id": "ab69b69a59d6ca6074df7e6d4014f07eb48dedba", "commit_date": "Thu Sep 21 13:00:14 2023 -0700", "commit_message": "Example showing how to run TorchServe's backend code only (#2605)", "files_name": ["docs/getting_started.md", "examples/image_classifier/resnet_18/README.md", "examples/image_classifier/resnet_18/debugging_backend/debugger_screenshot.png", "examples/image_classifier/resnet_18/debugging_backend/test_handler.py", "ts/torch_handler/unit_tests/test_utils/mock_context.py"]}, {"commit_id": "d0ae857abfe6d36813c88e531316149a5a354a93", "commit_date": "Tue Sep 19 15:20:35 2023 -0700", "commit_message": "Example for Llama2 on Inf2 (#2458)", "files_name": ["examples/large_models/inferentia2/llama2/Readme.md", "examples/large_models/inferentia2/llama2/config.properties", "examples/large_models/inferentia2/llama2/inf2_handler.py", "examples/large_models/inferentia2/llama2/model-config.yaml", "examples/large_models/inferentia2/llama2/requirements.txt", "examples/large_models/inferentia2/llama2/test_stream_response.py", "examples/large_models/inferentia2/opt/Readme.md", "examples/large_models/inferentia2/opt/inf2_handler.py", "examples/large_models/inferentia2/opt/model-config.yaml", "examples/large_models/inferentia2/opt/requirements.txt", "examples/large_models/inferentia2/opt/sample_text.txt", "examples/large_models/inferentia2/util/inf2_save_split_checkpoints.py", "ts/handler_utils/hf_batch_streamer.py", "ts/handler_utils/micro_batching.py", "ts_scripts/spellcheck_conf/wordlist.txt"]}, {"commit_id": "80b1679c9135cdad276e31e41a0be01559dcb044", "commit_date": "Tue Sep 19 13:05:39 2023 -0700", "commit_message": "Issues/update docker newman (#2603)", "files_name": [".github/workflows/regression_tests_docker.yml", "docker/Dockerfile"]}, {"commit_id": "2bf505bae3046b0f7d0900727ec36e611bb5dca3", "commit_date": "Fri Sep 15 16:22:24 2023 -0700", "commit_message": "pinning newman version to 5.3.2 as CI was flaky (#2598)", "files_name": ["ts_scripts/install_dependencies.py", "ts_scripts/mac_npm_deps"]}, {"commit_id": "9cd3389907511068500d136189ac056540dfcd6e", "commit_date": "Fri Sep 15 15:04:31 2023 -0700", "commit_message": "Issue with tests on GPU runner (#2597)", "files_name": [".github/workflows/regression_tests_gpu_binaries.yml"]}, {"commit_id": "b3eced56b4d9d5d3b8597aa506a0bcf954d291bc", "commit_date": "Fri Sep 15 15:06:37 2023 -0400", "commit_message": "Metrics Docs Updates (#2560)", "files_name": ["docs/index.rst", "docs/metrics.md", "docs/metrics_api.md", "kubernetes/AKS/README.md"]}, {"commit_id": "b04f6dec7a4ed02a8280c1d7dcae5f24b5ecf078", "commit_date": "Thu Sep 14 17:47:13 2023 -0700", "commit_message": "A guide for loading models in TorchServe (#2592)", "files_name": ["docs/README.md", "docs/model_loading.md"]}, {"commit_id": "f1c22a55f3382a955525aab47317966f5c53f95a", "commit_date": "Mon Sep 11 17:43:20 2023 -0700", "commit_message": "Update docker nightly workflow to use GPU runner since these have more space (#2586)", "files_name": [".github/workflows/docker-nightly-build.yml", "docker/docker_nightly.py", "kubernetes/kserve/docker_nightly.py"]}, {"commit_id": "719785d2aff76a507c60acad0774f6f60cc5d30e", "commit_date": "Mon Sep 11 20:01:18 2023 -0400", "commit_message": "Update CODEOWNERS (#2581)", "files_name": ["CODEOWNERS"]}, {"commit_id": "daeb3146bca68c32279190b390f153e3fb9e8a88", "commit_date": "Mon Sep 11 15:16:32 2023 -0700", "commit_message": "Update deepspeed example (#2587)", "files_name": ["examples/large_models/deepspeed/Readme.md"]}, {"commit_id": "821f9bce4124b459ae6a30fbd242797a534a0597", "commit_date": "Mon Sep 11 12:25:35 2023 -0700", "commit_message": " Run regression tests on nightlies (PyPI CPU, GPU. & Conda CPU, GPU) (#2562)", "files_name": [".github/workflows/regression_tests_cpu_binaries.yml", ".github/workflows/regression_tests_gpu_binaries.yml", "test/regression_tests.py"]}, {"commit_id": "5e30a7d874e4bbf4687ba8a9ac2d8b86b4f96d27", "commit_date": "Mon Sep 11 04:55:32 2023 +0530", "commit_message": "add nightly build for torchserve-kfs image (#2574)", "files_name": [".github/workflows/docker-nightly-build.yml", "kubernetes/kserve/build_image.sh", "kubernetes/kserve/docker_nightly.py"]}, {"commit_id": "8ae2f510ab97d7fd4a6116867bbae3f91cf9add5", "commit_date": "Sat Sep 9 04:58:34 2023 +0530", "commit_message": "move dali preprocess to handler util (#2485)", "files_name": ["examples/nvidia_dali/README.md", "examples/nvidia_dali/custom_handler.py", "examples/nvidia_dali/dali_config.json", "examples/nvidia_dali/index_to_name.json", "examples/nvidia_dali/model-config.yaml", "examples/nvidia_dali/model.py", "examples/nvidia_dali/requirements.txt", "examples/nvidia_dali/serialize_dali_pipeline.py", "kubernetes/kserve/kf_request_json/v2/mnist/README.md", "model-archiver/model_archiver/model_packaging_utils.py", "test/pytest/test_dali_preprocess.py", "ts/handler_utils/preprocess/__init__.py", "ts/handler_utils/preprocess/built-in/Readme.md", "ts/handler_utils/preprocess/built-in/__init__.py", "ts/handler_utils/preprocess/built-in/dali_pipeline_generation.py", "ts/handler_utils/preprocess/built-in/default.dali", "ts/handler_utils/preprocess/built-in/requirements.txt", "ts/handler_utils/preprocess/dali.py", "ts/torch_handler/dali_handler.py", "ts/torch_handler/dali_image_classifier.py"]}, {"commit_id": "72536685e54e7a31134e3545f9f7cc34be4ab38d", "commit_date": "Wed Sep 6 14:38:05 2023 -0700", "commit_message": "fix example code for image classifier - resnet18 model (#2568)", "files_name": ["examples/image_classifier/resnet_18/README.md"]}, {"commit_id": "499d33dfc509c8618d11c2cb00c84ede832b0e4e", "commit_date": "Tue Sep 5 23:19:58 2023 +0530", "commit_message": "fix return type (#2566)", "files_name": ["kubernetes/kserve/kserve_wrapper/TorchserveModel.py"]}, {"commit_id": "16242d6087a641879297cb2b9572d6a5c7f5373a", "commit_date": "Thu Aug 31 16:57:28 2023 -0700", "commit_message": "Refactor conda build script to publish all binaries from ubuntu machine (#2561)", "files_name": [".github/workflows/official_release.yml", ".github/workflows/torchserve-nightly-build.yml", "binaries/conda/build_packages.py"]}, {"commit_id": "242895c6b4596c4119ec09d6139e627c5dd696b6", "commit_date": "Wed Aug 30 21:49:22 2023 -0500", "commit_message": "asr speech recognition example (#2047)", "files_name": ["examples/asr_rnnt_emformer/00_save_jit_model.sh", "examples/asr_rnnt_emformer/01_create_model_archive.sh", "examples/asr_rnnt_emformer/02_configure_server.sh", "examples/asr_rnnt_emformer/03_predict.py", "examples/asr_rnnt_emformer/1089-134686-0000.wav", "examples/asr_rnnt_emformer/1089-134686.trans.txt", "examples/asr_rnnt_emformer/README.md", "examples/asr_rnnt_emformer/config.properties", "examples/asr_rnnt_emformer/handler.py", "examples/asr_rnnt_emformer/requirements.txt", "examples/asr_rnnt_emformer/save_jit_model.py"]}, {"commit_id": "656a30d9bfe847bf2fb1bae1be7e46b31706e286", "commit_date": "Wed Aug 30 15:17:26 2023 -0500", "commit_message": "Fix typo (#2393)", "files_name": ["kubernetes/autoscale.md"]}, {"commit_id": "4a3c0e1ddd00ee6168e225d8e21c1cf4e2c6cece", "commit_date": "Wed Aug 30 16:17:06 2023 -0400", "commit_message": "Fix code snippets in Docker.md (#2345)", "files_name": ["examples/image_classifier/mnist/Docker.md"]}, {"commit_id": "e2568f02be77800d63a94118b8d69e90ab23546d", "commit_date": "Wed Aug 30 15:15:12 2023 -0400", "commit_message": "Create CODEOWNERS (#2545)", "files_name": ["CODEOWNERS"]}, {"commit_id": "a37bb3c31b13c6406536002de5db3d8f2ffa8542", "commit_date": "Wed Aug 30 15:06:24 2023 -0400", "commit_message": "Typehints for model_loader and model_service_worker (#2540)", "files_name": ["mypy.ini", "ts/model_loader.py", "ts/model_service_worker.py", "ts/tests/unit_tests/test_model_service_worker.py"]}, {"commit_id": "30ff0336e27828482be0b1c0174237d352f34f50", "commit_date": "Wed Aug 30 14:07:52 2023 -0400", "commit_message": "Update large_model_inference.md (#2542)", "files_name": ["docs/large_model_inference.md"]}, {"commit_id": "a599fa09737449c7010c263b14d76369673f8d81", "commit_date": "Wed Aug 30 14:25:25 2023 +0900", "commit_message": "fix typo : Artifact terminology unification (#2551)", "files_name": ["examples/Huggingface_Transformers/Transformer_handler_generalized.py", "examples/captum/Captum_visualization_for_bert.ipynb", "examples/captum/Captum_visualization_for_mnist.ipynb", "examples/diffusers/stable_diffusion_handler.py", "examples/large_models/Huggingface_accelerate/custom_handler.py", "examples/large_models/Huggingface_pippy/pippy_handler.py", "examples/large_models/deepspeed/custom_handler.py", "examples/large_models/deepspeed_mii/DeepSpeed_mii_handler.py", "examples/large_models/inferentia2/inf2_handler.py", "kubernetes/kserve/kserve_wrapper/TSModelRepository.py", "ts/handler_utils/micro_batching.py", "ts/torch_handler/base_handler.py"]}, {"commit_id": "65f6005e0a551a8f041ba20922510fe27536fe1e", "commit_date": "Tue Aug 29 14:56:49 2023 -0700", "commit_message": "always use tmp dir to load model (#2535)", "files_name": ["frontend/archive/src/main/java/org/pytorch/serve/archive/model/ModelArchive.java", "frontend/archive/src/main/java/org/pytorch/serve/archive/utils/ZipUtils.java", "frontend/server/src/main/java/org/pytorch/serve/util/messages/EnvironmentUtils.java", "frontend/server/src/main/java/org/pytorch/serve/wlm/ModelManager.java", "frontend/server/src/main/java/org/pytorch/serve/wlm/WorkerLifeCycle.java"]}, {"commit_id": "d3eeb0799db275e0082ef81ad8e403a505fe1ed6", "commit_date": "Mon Aug 28 21:34:58 2023 -0400", "commit_message": "merge queue (#2548)", "files_name": [".github/workflows/ci_cpu.yml", ".github/workflows/ci_gpu.yml", ".github/workflows/doc-automation.yml", ".github/workflows/docker-ci.yaml", ".github/workflows/lint.yml", ".github/workflows/regression_tests_cpu.yml"]}], "windows_after": [{"commit_id": "7b1c359ec4f20ea50e5c42e47d0e83e7234e7767", "commit_date": "Fri Sep 29 16:51:35 2023 -0700", "commit_message": "Use process build for GPU command (#2632)", "files_name": ["frontend/server/src/main/java/org/pytorch/serve/wlm/WorkerThread.java"]}, {"commit_id": "eaad8a46f0fde682f7be938a77956d1cde734d22", "commit_date": "Fri Sep 29 16:55:55 2023 -0700", "commit_message": "Enable Netty HTTP header validation (#2630)", "files_name": ["frontend/server/src/main/java/org/pytorch/serve/http/HttpRequestHandlerChain.java", "frontend/server/src/main/java/org/pytorch/serve/job/RestJob.java", "frontend/server/src/main/java/org/pytorch/serve/util/NettyUtils.java", "frontend/server/src/main/java/org/pytorch/serve/workflow/WorkflowManager.java"]}, {"commit_id": "6e5b8cd2bd82317dd5515c43c9db4035f9543737", "commit_date": "Fri Sep 29 16:58:37 2023 -0700", "commit_message": "Uncontrolled input fix for ModelManager (#2635)", "files_name": ["frontend/server/src/main/java/org/pytorch/serve/wlm/ModelManager.java"]}, {"commit_id": "253c2057d50fa904317c823c1575d847f40c4df0", "commit_date": "Fri Sep 29 18:36:41 2023 -0700", "commit_message": "Llama2 Chatbot on Mac (#2618)", "files_name": ["README.md", "examples/LLM/llama2/chat_app/Readme.md", "examples/LLM/llama2/chat_app/client_app.py", "examples/LLM/llama2/chat_app/llama_cpp_handler.py", "examples/LLM/llama2/chat_app/model-config.yaml", "examples/LLM/llama2/chat_app/package_llama.sh", "examples/LLM/llama2/chat_app/requirements.txt", "examples/LLM/llama2/chat_app/screenshots/Client.png", "examples/LLM/llama2/chat_app/screenshots/Server.png", "examples/LLM/llama2/chat_app/screenshots/Workers.png", "examples/LLM/llama2/chat_app/screenshots/architecture.png", "examples/LLM/llama2/chat_app/screenshots/batch_size.png", "examples/LLM/llama2/chat_app/torchserve_server_app.py", "ts_scripts/spellcheck_conf/wordlist.txt"]}, {"commit_id": "5f36b20c754bef7fdfd9778ed3c5ea5647505213", "commit_date": "Mon Oct 2 09:58:18 2023 -0700", "commit_message": "Update SECURITY.md (#2643)", "files_name": ["SECURITY.md"]}, {"commit_id": "8dfa6c8f11d0195fc2eb4e2db0fcab4bf39b5082", "commit_date": "Mon Oct 2 10:12:52 2023 -0700", "commit_message": "Update default address from 0.0.0.0 to 127.0.0.1 in documentation and examples (#2624)", "files_name": ["benchmarks/config_kf.properties", "docs/batch_inference_with_ts.md", "docs/configuration.md", "examples/asr_rnnt_emformer/config.properties", "examples/cloudformation/ec2-asg.yaml", "examples/cloudformation/ec2.yaml", "examples/diffusers/config.properties", "examples/large_models/Huggingface_accelerate/config.properties", "examples/large_models/Huggingface_accelerate/llama2/config.properties", "examples/large_models/deepspeed_mii/config.properties", "kubernetes/EKS/README.md", "kubernetes/examples/FasterTransformer_HuggingFace_Bert.md", "kubernetes/kserve/README.md", "kubernetes/kserve/config.properties", "kubernetes/kserve/developer_guide.md", "kubernetes/kserve/image_transformer/README.md", "kubernetes/kserve/kf_request_json/v2/bert/README.md", "kubernetes/kserve/kf_request_json/v2/mnist/README.md", "kubernetes/kserve/kserve_wrapper/README.md"]}, {"commit_id": "6c82e99da4c589ebd260e6a9576279e8f96fb0ed", "commit_date": "Mon Oct 2 11:46:46 2023 -0700", "commit_message": "Create dependabot.yml (#2642)", "files_name": [".github/dependabot.yml"]}, {"commit_id": "1f1ab2b78c958983197fecaab5ca13f37cd2a845", "commit_date": "Mon Oct 2 19:28:19 2023 -0700", "commit_message": "Fix for GPU regression failure  (#2636)", "files_name": [".github/workflows/regression_tests_docker.yml", ".github/workflows/regression_tests_gpu.yml", "examples/dcgan_fashiongen/create_mar.sh", "test/pytest/test_sm_mme_requirements.py", "test/pytest/test_torch_compile.py"]}, {"commit_id": "4051ae3e4a93837750e036c252af7a436100c4e9", "commit_date": "Tue Oct 3 10:13:04 2023 -0700", "commit_message": "Bind torchserve container ports to localhost ports (#2646)", "files_name": ["benchmarks/benchmark-ab.py", "benchmarks/jmeter.md", "docker/README.md", "docker/start.sh", "docker/test_container_health.sh", "docker/test_container_model_prediction.sh", "docs/batch_inference_with_ts.md", "docs/use_cases.md", "examples/asr_rnnt_emformer/01_create_model_archive.sh", "examples/image_classifier/mnist/Docker.md", "frontend/server/src/main/java/org/pytorch/serve/util/NettyUtils.java", "frontend/tools/gradle/launcher.gradle", "test/pytest/test_data/torch_compile/config.properties"]}, {"commit_id": "a6fd770fb435a18957c0e69f644bbfbc56dccf46", "commit_date": "Tue Oct 3 11:23:24 2023 -0700", "commit_message": "Update dependabot.yml (#2648)", "files_name": [".github/dependabot.yml"]}, {"commit_id": "b97dfa33951853dba57ec231c6c3bdceff9e56b7", "commit_date": "Tue Oct 3 16:05:26 2023 -0700", "commit_message": "disable flaky link checking (#2667)", "files_name": [".github/workflows/lint.yml"]}, {"commit_id": "68f795a25060b5a30653040136bc092935c52abd", "commit_date": "Tue Oct 3 21:39:45 2023 +0000", "commit_message": "Bump mock from 5.0.2 to 5.1.0 (#2657)", "files_name": ["requirements/developer.txt"]}, {"commit_id": "c84cdb8a4d5f323f5010b893f3d99f80d77af636", "commit_date": "Tue Oct 3 16:00:57 2023 -0700", "commit_message": "Update README.md (#2666)", "files_name": ["test/README.md"]}, {"commit_id": "1cd95d745f0e46d47d31db2c9cbe254c96623523", "commit_date": "Tue Oct 3 23:32:20 2023 +0000", "commit_message": "Bump packaging from 23.1 to 23.2 (#2660)", "files_name": ["requirements/common.txt"]}, {"commit_id": "7cc44999665aa202122a6021ea852a7cab79b20c", "commit_date": "Tue Oct 3 23:33:25 2023 +0000", "commit_message": "Bump pygit2 from 1.12.1 to 1.13.1 (#2659)", "files_name": ["requirements/developer.txt"]}, {"commit_id": "3bbd5aa4188165eb9d4e9e4e33d40c22a423c968", "commit_date": "Tue Oct 3 23:57:44 2023 +0000", "commit_message": "Bump com.github.spotbugs from 4.0.2 to 5.1.3 in /frontend (#2656)", "files_name": ["frontend/build.gradle"]}, {"commit_id": "eb2ff7c23554aafcd7284f6c669d010b0b2e56b4", "commit_date": "Tue Oct 3 18:39:54 2023 -0700", "commit_message": "Bump onnx from 1.14.0 to 1.14.1 (#2661)", "files_name": ["requirements/developer.txt"]}, {"commit_id": "9dd1d961b5bc5be8fd4a48b495a9a1d64e209f7f", "commit_date": "Tue Oct 3 21:15:21 2023 -0700", "commit_message": "Bump pillow from 9.3.0 to 10.0.1 in /requirements (#2670)", "files_name": ["requirements/torch_common.txt"]}, {"commit_id": "7b36a5dae442429389df2718bc7593106f0f2d7d", "commit_date": "Tue Oct 3 21:16:02 2023 -0700", "commit_message": "Update node version to 18 (#2663)", "files_name": ["ts_scripts/install_dependencies.py"]}, {"commit_id": "28d9d9939800261f12037fd73f2cda6f107528af", "commit_date": "Tue Oct 3 23:09:12 2023 -0700", "commit_message": "Bump com.amazonaws:DynamoDBLocal from 1.13.2 to 2.0.0 in /plugins (#2650)", "files_name": ["plugins/DDBEndPoint/build.gradle"]}, {"commit_id": "8d1299322e799cda65c8b7eb30d1ff19e53fd1bb", "commit_date": "Wed Oct 4 10:21:34 2023 +0200", "commit_message": "Continous batching for single GPU LLM inference (#2628)", "files_name": ["frontend/archive/src/main/java/org/pytorch/serve/archive/model/ModelConfig.java", "frontend/server/src/main/java/org/pytorch/serve/job/GRPCJob.java", "frontend/server/src/main/java/org/pytorch/serve/job/Job.java", "frontend/server/src/main/java/org/pytorch/serve/job/RestJob.java", "frontend/server/src/main/java/org/pytorch/serve/util/codec/CodecUtils.java", "frontend/server/src/main/java/org/pytorch/serve/util/codec/ModelRequestEncoder.java", "frontend/server/src/main/java/org/pytorch/serve/util/codec/ModelResponseDecoder.java", "frontend/server/src/main/java/org/pytorch/serve/util/messages/RequestInput.java", "frontend/server/src/main/java/org/pytorch/serve/wlm/BatchAggregator.java", "frontend/server/src/main/java/org/pytorch/serve/wlm/ContinuousBatching.java", "frontend/server/src/main/java/org/pytorch/serve/wlm/Model.java", "frontend/server/src/main/java/org/pytorch/serve/wlm/WorkLoadManager.java", "frontend/server/src/main/java/org/pytorch/serve/wlm/WorkerThread.java", "test/pytest/conftest.py", "test/pytest/test_continuous_batching.py", "test/pytest/test_data/__init__.py", "test/pytest/test_data/streaming/__init__.py", "test/pytest/test_data/streaming/fake_streaming_model.py", "test/pytest/test_data/streaming/model_config.yaml", "test/pytest/test_data/streaming/stream.ipynb", "test/pytest/test_data/streaming/stream_handler.py", "test/pytest/test_handler.py", "test/pytest/test_utils.py", "ts/context.py", "ts/protocol/otf_message_handler.py", "ts/tests/unit_tests/test_otf_codec_protocol.py"]}, {"commit_id": "88a19deabdc9c2eabdc587dbed877b12db412f7b", "commit_date": "Wed Oct 4 02:38:21 2023 -0700", "commit_message": "updates to security guidelines and docker config (#2669)", "files_name": ["SECURITY.md", "docker/README.md"]}, {"commit_id": "9b0ce175b0eb1e5577c8d591c422ce3f4c098703", "commit_date": "Wed Oct 4 12:09:02 2023 -0700", "commit_message": "disable these tests from getting executed in merge group (#2677)", "files_name": [".github/workflows/regression_tests_cpu_binaries.yml", ".github/workflows/regression_tests_gpu_binaries.yml"]}, {"commit_id": "40ce26901f1ed23cf02ae7326a3820a9419d47b8", "commit_date": "Wed Oct 4 12:48:04 2023 -0700", "commit_message": "Cleaning up previous runs from GPU runner (#2676)", "files_name": [".github/workflows/ci_gpu.yml"]}, {"commit_id": "e346a93d01c8055fd78875abf125d02372a1ff52", "commit_date": "Wed Oct 4 14:39:01 2023 -0700", "commit_message": "Update dependabot.yml to monthly (#2675)", "files_name": [".github/dependabot.yml"]}, {"commit_id": "f10a07149caeae765d774ed98abe2d57ac01c679", "commit_date": "Wed Oct 4 18:18:45 2023 -0700", "commit_message": "adding TP llama example (#2623)", "files_name": ["examples/large_models/tp_llama/REAME.md", "examples/large_models/tp_llama/checkpoint_converter.py", "examples/large_models/tp_llama/convert_checkpoints.py", "examples/large_models/tp_llama/dialogs.txt", "examples/large_models/tp_llama/generate.py", "examples/large_models/tp_llama/llama-handler.py", "examples/large_models/tp_llama/llama2.py", "examples/large_models/tp_llama/llama2_tokenizer.py", "examples/large_models/tp_llama/model-config.yaml", "examples/large_models/tp_llama/sample_text.txt", "ts_scripts/spellcheck_conf/wordlist.txt"]}, {"commit_id": "cf19d7c5d80a4445fd7eec4c0448613f45f910e7", "commit_date": "Thu Oct 5 15:33:42 2023 +0200", "commit_message": "Implement Test for ModelRequestEncoder (#2580)", "files_name": ["frontend/server/src/test/java/org/pytorch/serve/util/codec/ModelRequestEncoderTest.java", "frontend/server/testng.xml"]}, {"commit_id": "726dad2c70300e8c1d2b940cff281ed50a193e28", "commit_date": "Thu Oct 5 16:21:53 2023 -0700", "commit_message": "Manually Dispatch Most workflows (#2686)", "files_name": [".github/workflows/ci_cpu.yml", ".github/workflows/ci_gpu.yml", ".github/workflows/codeql.yml", ".github/workflows/regression_tests_docker.yml", ".github/workflows/regression_tests_gpu.yml"]}, {"commit_id": "cddbcfe2bc63e0c30027ca29ee41b44e56aeeb7e", "commit_date": "Thu Oct 5 21:28:09 2023 -0700", "commit_message": "torch.export.export tutorial (#2620)", "files_name": ["examples/pt2/README.md"]}, {"commit_id": "e29512ace20939b2bf99335ab3c202b22e95da9a", "commit_date": "Fri Oct 6 09:10:27 2023 -0700", "commit_message": "update test wheels with official 2.1 wheels (#2684)", "files_name": ["requirements/torch_cu121_linux.txt", "requirements/torch_darwin.txt", "requirements/torch_linux.txt", "requirements/torch_windows.txt"]}, {"commit_id": "f57240fc14ee088d5355bf5f498b49b8ab987dd2", "commit_date": "Fri Oct 6 11:29:51 2023 -0700", "commit_message": "Update llama documentation (#2683)", "files_name": ["README.md", "examples/LLM/llama2/README.md", "examples/LLM/llama2/chat_app/client_app.py", "examples/LLM/llama2/images/llama.png", "examples/LLM/llama2/images/software_stack_inf2.jpg", "ts_scripts/spellcheck_conf/wordlist.txt"]}, {"commit_id": "504c7344bf2c7610d88815eeb5e44a0a33f5a6f5", "commit_date": "Sun Oct 8 21:15:43 2023 -0700", "commit_message": "allow paralllevel as 1 to start torchrun npro-per-node (#2608)", "files_name": ["frontend/archive/src/main/java/org/pytorch/serve/archive/model/ModelConfig.java", "frontend/archive/src/test/java/org/pytorch/serve/archive/model/ModelConfigTest.java", "frontend/server/src/main/java/org/pytorch/serve/wlm/Model.java"]}], "parents": [{"commit_id_before": "533bb613864e954f006079b2f600a579bd14a8d4", "url_before": "https://api.github.com/repos/pytorch/serve/commits/533bb613864e954f006079b2f600a579bd14a8d4", "html_url_before": "https://github.com/pytorch/serve/commit/533bb613864e954f006079b2f600a579bd14a8d4"}], "details": [{"raw_url": "https://github.com/pytorch/serve/raw/bfb3d42396727614aef625143b4381e64142f9bb/frontend%2Farchive%2Fsrc%2Fmain%2Fjava%2Forg%2Fpytorch%2Fserve%2Farchive%2Futils%2FZipUtils.java", "code": "package org.pytorch.serve.archive.utils;\n\nimport java.io.File;\nimport java.io.FileFilter;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.nio.file.Files;\nimport java.security.DigestInputStream;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.UUID;\nimport java.util.zip.ZipEntry;\nimport java.util.zip.ZipInputStream;\nimport java.util.zip.ZipOutputStream;\nimport org.apache.commons.compress.archivers.ArchiveEntry;\nimport org.apache.commons.compress.archivers.tar.TarArchiveInputStream;\nimport org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream;\nimport org.apache.commons.io.FileUtils;\nimport org.apache.commons.io.IOUtils;\n\npublic final class ZipUtils {\n\n    private ZipUtils() {}\n\n    public static void unzip(InputStream is, File dest) throws IOException {\n        try (ZipInputStream zis = new ZipInputStream(is)) {\n            ZipEntry entry;\n            while ((entry = zis.getNextEntry()) != null) {\n                File file = new File(dest, entry.getName());\n                File canonicalDestDir = dest.getCanonicalFile();\n                File canonicalFile = file.getCanonicalFile();\n\n                // Check for Zip Slip vulnerability\n                if (!canonicalFile.getPath().startsWith(canonicalDestDir.getPath())) {\n                    throw new IOException(\"Detected Zip Slip vulnerability: \" + entry.getName());\n                }\n\n                if (entry.isDirectory()) {\n                    FileUtils.forceMkdir(file);\n                } else {\n                    File parentFile = file.getParentFile();\n                    FileUtils.forceMkdir(parentFile);\n                    try (OutputStream os = Files.newOutputStream(file.toPath())) {\n                        IOUtils.copy(zis, os);\n                    }\n                }\n            }\n        }\n    }\n\n    public static void addToZip(int prefix, File file, FileFilter filter, ZipOutputStream zos)\n            throws IOException {\n        String name = file.getCanonicalPath().substring(prefix);\n        if (name.startsWith(\"/\")) {\n            name = name.substring(1);\n        }\n        if (file.isDirectory()) {\n            if (!name.isEmpty()) {\n                ZipEntry entry = new ZipEntry(name + '/');\n                zos.putNextEntry(entry);\n            }\n            File[] files = file.listFiles(filter);\n            if (files != null) {\n                for (File f : files) {\n                    addToZip(prefix, f, filter, zos);\n                }\n            }\n        } else if (file.isFile()) {\n            ZipEntry entry = new ZipEntry(name);\n            zos.putNextEntry(entry);\n            try (FileInputStream fis = (FileInputStream) Files.newInputStream(file.toPath())) {\n                IOUtils.copy(fis, zos);\n            }\n        }\n    }\n\n    public static File unzip(InputStream is, String eTag, String type, boolean isMar)\n            throws IOException {\n        File tmpDir = FileUtils.getTempDirectory();\n        File modelDir = new File(tmpDir, type);\n        FileUtils.forceMkdir(modelDir);\n\n        File tmp = File.createTempFile(type, \".download\");\n        FileUtils.forceDelete(tmp);\n        FileUtils.forceMkdir(tmp);\n\n        MessageDigest md;\n        try {\n            md = MessageDigest.getInstance(\"SHA-256\");\n        } catch (NoSuchAlgorithmException e) {\n            throw new AssertionError(e);\n        }\n        if (isMar) {\n            unzip(new DigestInputStream(is, md), tmp);\n        } else {\n            decompressTarGzipFile(new DigestInputStream(is, md), tmp);\n        }\n        if (eTag == null) {\n            eTag = UUID.randomUUID().toString().replaceAll(\"-\", \"\");\n        }\n\n        File dir = new File(modelDir, eTag);\n\n        FileUtils.moveDirectory(tmp, dir);\n\n        return dir;\n    }\n\n    public static void decompressTarGzipFile(InputStream is, File dest) throws IOException {\n        try (GzipCompressorInputStream gzi = new GzipCompressorInputStream(is);\n                TarArchiveInputStream tis = new TarArchiveInputStream(gzi)) {\n            ArchiveEntry entry;\n            while ((entry = tis.getNextEntry()) != null) {\n                String name = entry.getName().substring(entry.getName().indexOf('/') + 1);\n                File file = new File(dest, name);\n                File canonicalDestDir = dest.getCanonicalFile();\n                File canonicalFile = file.getCanonicalFile();\n\n                // Check for Zip Slip vulnerability\n                if (!canonicalFile.getPath().startsWith(canonicalDestDir.getPath())) {\n                    throw new IOException(\"Detected Zip Slip vulnerability: \" + entry.getName());\n                }\n\n                if (entry.isDirectory()) {\n                    FileUtils.forceMkdir(file);\n                } else {\n                    File parentFile = file.getParentFile();\n                    FileUtils.forceMkdir(parentFile);\n                    try (OutputStream os = Files.newOutputStream(file.toPath())) {\n                        IOUtils.copy(tis, os);\n                    }\n                }\n            }\n        }\n    }\n\n    public static File createTempDir(String eTag, String type) throws IOException {\n        File tmpDir = FileUtils.getTempDirectory();\n        File modelDir = new File(tmpDir, type);\n\n        if (eTag == null) {\n            eTag = UUID.randomUUID().toString().replaceAll(\"-\", \"\");\n        }\n\n        File dir = new File(modelDir, eTag);\n        if (dir.exists()) {\n            FileUtils.forceDelete(dir);\n        }\n        FileUtils.forceMkdir(dir);\n\n        return dir;\n    }\n\n    public static File createSymbolicDir(File source, File dest) throws IOException {\n        String sourceDirName = source.getName();\n        File targetLink = new File(dest, sourceDirName);\n        Files.createSymbolicLink(targetLink.toPath(), source.toPath());\n\n        return targetLink;\n    }\n}\n", "code_before": "package org.pytorch.serve.archive.utils;\n\nimport java.io.File;\nimport java.io.FileFilter;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.nio.file.Files;\nimport java.security.DigestInputStream;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.UUID;\nimport java.util.zip.ZipEntry;\nimport java.util.zip.ZipInputStream;\nimport java.util.zip.ZipOutputStream;\nimport org.apache.commons.compress.archivers.ArchiveEntry;\nimport org.apache.commons.compress.archivers.tar.TarArchiveInputStream;\nimport org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream;\nimport org.apache.commons.io.FileUtils;\nimport org.apache.commons.io.IOUtils;\n\npublic final class ZipUtils {\n\n    private ZipUtils() {}\n\n    public static void unzip(InputStream is, File dest) throws IOException {\n        try (ZipInputStream zis = new ZipInputStream(is)) {\n            ZipEntry entry;\n            while ((entry = zis.getNextEntry()) != null) {\n                String name = entry.getName();\n                File file = new File(dest, name);\n                if (entry.isDirectory()) {\n                    FileUtils.forceMkdir(file);\n                } else {\n                    File parentFile = file.getParentFile();\n                    FileUtils.forceMkdir(parentFile);\n                    try (OutputStream os = Files.newOutputStream(file.toPath())) {\n                        IOUtils.copy(zis, os);\n                    }\n                }\n            }\n        }\n    }\n\n    public static void addToZip(int prefix, File file, FileFilter filter, ZipOutputStream zos)\n            throws IOException {\n        String name = file.getCanonicalPath().substring(prefix);\n        if (name.startsWith(\"/\")) {\n            name = name.substring(1);\n        }\n        if (file.isDirectory()) {\n            if (!name.isEmpty()) {\n                ZipEntry entry = new ZipEntry(name + '/');\n                zos.putNextEntry(entry);\n            }\n            File[] files = file.listFiles(filter);\n            if (files != null) {\n                for (File f : files) {\n                    addToZip(prefix, f, filter, zos);\n                }\n            }\n        } else if (file.isFile()) {\n            ZipEntry entry = new ZipEntry(name);\n            zos.putNextEntry(entry);\n            try (FileInputStream fis = (FileInputStream) Files.newInputStream(file.toPath())) {\n                IOUtils.copy(fis, zos);\n            }\n        }\n    }\n\n    public static File unzip(InputStream is, String eTag, String type, boolean isMar)\n            throws IOException {\n        File tmpDir = FileUtils.getTempDirectory();\n        File modelDir = new File(tmpDir, type);\n        FileUtils.forceMkdir(modelDir);\n\n        File tmp = File.createTempFile(type, \".download\");\n        FileUtils.forceDelete(tmp);\n        FileUtils.forceMkdir(tmp);\n\n        MessageDigest md;\n        try {\n            md = MessageDigest.getInstance(\"SHA-256\");\n        } catch (NoSuchAlgorithmException e) {\n            throw new AssertionError(e);\n        }\n        if (isMar) {\n            unzip(new DigestInputStream(is, md), tmp);\n        } else {\n            decompressTarGzipFile(new DigestInputStream(is, md), tmp);\n        }\n        if (eTag == null) {\n            eTag = UUID.randomUUID().toString().replaceAll(\"-\", \"\");\n        }\n\n        File dir = new File(modelDir, eTag);\n\n        FileUtils.moveDirectory(tmp, dir);\n\n        return dir;\n    }\n\n    public static void decompressTarGzipFile(InputStream is, File dest) throws IOException {\n        try (GzipCompressorInputStream gzi = new GzipCompressorInputStream(is);\n                TarArchiveInputStream tis = new TarArchiveInputStream(gzi)) {\n            ArchiveEntry entry;\n            while ((entry = tis.getNextEntry()) != null) {\n                String name = entry.getName().substring(entry.getName().indexOf('/') + 1);\n                File file = new File(dest, name);\n                if (entry.isDirectory()) {\n                    FileUtils.forceMkdir(file);\n                } else {\n                    File parentFile = file.getParentFile();\n                    FileUtils.forceMkdir(parentFile);\n                    try (OutputStream os = Files.newOutputStream(file.toPath())) {\n                        IOUtils.copy(tis, os);\n                    }\n                }\n            }\n        }\n    }\n\n    public static File createTempDir(String eTag, String type) throws IOException {\n        File tmpDir = FileUtils.getTempDirectory();\n        File modelDir = new File(tmpDir, type);\n\n        if (eTag == null) {\n            eTag = UUID.randomUUID().toString().replaceAll(\"-\", \"\");\n        }\n\n        File dir = new File(modelDir, eTag);\n        if (dir.exists()) {\n            FileUtils.forceDelete(dir);\n        }\n        FileUtils.forceMkdir(dir);\n\n        return dir;\n    }\n\n    public static File createSymbolicDir(File source, File dest) throws IOException {\n        String sourceDirName = source.getName();\n        File targetLink = new File(dest, sourceDirName);\n        Files.createSymbolicLink(targetLink.toPath(), source.toPath());\n\n        return targetLink;\n    }\n}\n", "patch": "@@ -28,8 +28,15 @@ public static void unzip(InputStream is, File dest) throws IOException {\n         try (ZipInputStream zis = new ZipInputStream(is)) {\n             ZipEntry entry;\n             while ((entry = zis.getNextEntry()) != null) {\n-                String name = entry.getName();\n-                File file = new File(dest, name);\n+                File file = new File(dest, entry.getName());\n+                File canonicalDestDir = dest.getCanonicalFile();\n+                File canonicalFile = file.getCanonicalFile();\n+\n+                // Check for Zip Slip vulnerability\n+                if (!canonicalFile.getPath().startsWith(canonicalDestDir.getPath())) {\n+                    throw new IOException(\"Detected Zip Slip vulnerability: \" + entry.getName());\n+                }\n+\n                 if (entry.isDirectory()) {\n                     FileUtils.forceMkdir(file);\n                 } else {\n@@ -108,6 +115,14 @@ public static void decompressTarGzipFile(InputStream is, File dest) throws IOExc\n             while ((entry = tis.getNextEntry()) != null) {\n                 String name = entry.getName().substring(entry.getName().indexOf('/') + 1);\n                 File file = new File(dest, name);\n+                File canonicalDestDir = dest.getCanonicalFile();\n+                File canonicalFile = file.getCanonicalFile();\n+\n+                // Check for Zip Slip vulnerability\n+                if (!canonicalFile.getPath().startsWith(canonicalDestDir.getPath())) {\n+                    throw new IOException(\"Detected Zip Slip vulnerability: \" + entry.getName());\n+                }\n+\n                 if (entry.isDirectory()) {\n                     FileUtils.forceMkdir(file);\n                 } else {", "file_path": "files/2023_11/220", "file_language": "java", "file_name": "frontend/archive/src/main/java/org/pytorch/serve/archive/utils/ZipUtils.java", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 0}], "outdated": 0, "cwe_descripiton": "", "cwe_consequence": "", "cwe_method": "", "cwe_solution": ""}
