{"index": 12268, "cve_id": "CVE-2023-42819", "cwe_id": ["CWE-22"], "cve_language": "Python", "cve_description": "JumpServer is an open source bastion host. Logged-in users can access and modify the contents of any file on the system. A user can use the 'Job-Template' menu and create a playbook named 'test'. Get the playbook id from the detail page, like 'e0adabef-c38f-492d-bd92-832bacc3df5f'. An attacker can exploit the directory traversal flaw using the provided URL to access and retrieve the contents of the file. `https://jumpserver-ip/api/v1/ops/playbook/e0adabef-c38f-492d-bd92-832bacc3df5f/file/?key=../../../../../../../etc/passwd` a similar method to modify the file content is also present. This issue has been addressed in version 3.6.5. Users are advised to upgrade. There are no known workarounds for this vulnerability.", "cvss": "8.8", "publish_date": "September 27, 2023", "AV": "NETWORK", "AC": "NETWORK", "PR": "LOW", "UI": "NONE", "S": "UNCHANGED", "C": "HIGH", "I": "HIGH", "A": "HIGH", "commit_id": "d0321a74f1713d031560341c8fd0a1859e6510d8", "commit_message": "perf: \u4f18\u5316 Playbook \u6587\u4ef6\u521b\u5efa\u903b\u8f91", "commit_date": "2023-09-19T10:47:25Z", "project": "jumpserver/jumpserver", "url": "https://api.github.com/repos/jumpserver/jumpserver/commits/d0321a74f1713d031560341c8fd0a1859e6510d8", "html_url": "https://github.com/jumpserver/jumpserver/commit/d0321a74f1713d031560341c8fd0a1859e6510d8", "windows_before": [{"commit_id": "74cc174d7a2ed6820d4862994038e034dbe5fbe2", "commit_date": "Tue Sep 19 18:15:50 2023 +0800", "commit_message": "Merge pull request #11622 from jumpserver/pr@dev@perf_random_error", "files_name": ["0eba6d2175ab752399c5aee2dbaaf311bf0a398d - Tue Sep 19 18:11:27 2023 +0800 : fix: \u4fee\u590d random error", "apps/common/utils/random.py", "apps/users/models/user.py"]}, {"commit_id": "58592a13e36b17845e123203a6c4e28bb39c5956", "commit_date": "Tue Sep 19 17:38:46 2023 +0800", "commit_message": "fix: \u89e3\u9501ip\u5931\u8d25\u95ee\u9898 (#11611)", "files_name": ["apps/settings/api/security.py"]}, {"commit_id": "b8fb23a0a053921a75153e4a7971ec8e28bdfee4", "commit_date": "Tue Sep 19 16:30:48 2023 +0800", "commit_message": "perf: user setting (#11610)", "files_name": ["apps/users/serializers/preference/lina.py"]}, {"commit_id": "f5c43488fd3e157e4c388ba77de3cb0d0d85ba98", "commit_date": "Tue Sep 19 15:28:29 2023 +0800", "commit_message": "perf: \u4f18\u5316 es host \u4e2d\u5305\u542b # \u5b57\u7b26\u65f6\u63d0\u793a\u9519\u8bef", "files_name": ["apps/locale/ja/LC_MESSAGES/django.po", "apps/locale/zh/LC_MESSAGES/django.po", "apps/terminal/serializers/storage.py"]}, {"commit_id": "19c76ba01cdf6b1d8dc283e8a2772fe490b20326", "commit_date": "Tue Sep 19 14:13:16 2023 +0800", "commit_message": "perf: \u5220\u9664\u53d1\u5e03\u673a\u6267\u884c\u7684\u4efb\u52a1\u76ee\u5f55", "files_name": ["apps/terminal/automations/deploy_applet_host/__init__.py"]}, {"commit_id": "68c4cd5928a06737d39a43ed4d8d3cc4d0abe432", "commit_date": "Tue Sep 19 14:56:32 2023 +0800", "commit_message": "perf: \u4fee\u590d\u53d1\u5e03\u673a\u5b89\u88c5\u5e94\u7528\u7684\u62a5\u9519", "files_name": ["apps/terminal/api/applet/host.py"]}, {"commit_id": "e5bfa29c7be9a23c941085d706ab1ee61c3f197d", "commit_date": "Tue Sep 19 14:53:43 2023 +0800", "commit_message": "fix: \u521b\u5efa\u7528\u6237\u63a8\u9001\u5931\u8d25\u95ee\u9898 (#11606)", "files_name": ["apps/accounts/serializers/account/account.py"]}, {"commit_id": "cbb772def7e39a83bba07a8cf1de142b450c438b", "commit_date": "Tue Sep 19 11:09:58 2023 +0800", "commit_message": "fix: \u4fee\u590dconnection token \u83b7\u53d6user\u9519\u8bef (#11603)", "files_name": ["apps/authentication/api/connection_token.py"]}, {"commit_id": "e6fe7c489e67e60c1813cdb42d118b6a744a284c", "commit_date": "Tue Sep 19 10:59:33 2023 +0800", "commit_message": "perf: \u4fee\u6539\u8d26\u53f7\u751f\u6210 (#11591)", "files_name": ["apps/accounts/const/automation.py", "apps/accounts/migrations/0016_accounttemplate_password_rules.py", "apps/accounts/models/__init__.py", "apps/accounts/models/automations/base.py", "apps/accounts/models/automations/push_account.py", "apps/accounts/models/base.py", "apps/accounts/models/template.py", "apps/accounts/serializers/account/account.py", "apps/accounts/serializers/account/template.py", "apps/accounts/serializers/automations/change_secret.py", "apps/accounts/utils.py", "apps/common/utils/random.py", "apps/locale/ja/LC_MESSAGES/django.mo", "apps/locale/ja/LC_MESSAGES/django.po", "apps/locale/zh/LC_MESSAGES/django.mo", "apps/locale/zh/LC_MESSAGES/django.po"]}, {"commit_id": "0b30f5cf8850d233d3744eb2c801b5456c76f54a", "commit_date": "Tue Sep 19 10:36:03 2023 +0800", "commit_message": "perf: \u7ffb\u8bd1 (#11602)", "files_name": ["apps/locale/ja/LC_MESSAGES/django.mo", "apps/locale/ja/LC_MESSAGES/django.po", "apps/locale/zh/LC_MESSAGES/django.mo", "apps/locale/zh/LC_MESSAGES/django.po", "apps/terminal/models/applet/applet.py"]}, {"commit_id": "018f1a0e8d859ebbcbd27143d8f92eabf3518b7c", "commit_date": "Mon Sep 18 18:42:02 2023 +0800", "commit_message": "perf: \u5220\u9664\u7ba1\u7406\u7528\u6237\u9519\u8bef\u63d0\u9192 (#11596)", "files_name": ["apps/locale/ja/LC_MESSAGES/django.mo", "apps/locale/ja/LC_MESSAGES/django.po", "apps/locale/zh/LC_MESSAGES/django.mo", "apps/locale/zh/LC_MESSAGES/django.po", "apps/users/models/user.py"]}, {"commit_id": "24ed57b98a84114185d35cc0963b422218874d2b", "commit_date": "Mon Sep 18 16:20:55 2023 +0800", "commit_message": "fix: \u4e09\u65b9\u767b\u5f55\u7528\u6237\u65e0\u6cd5\u4e0b\u7ebf (#11592)", "files_name": ["apps/audits/signal_handlers/login_log.py", "apps/authentication/signal_handlers.py"]}, {"commit_id": "04a790c4eec6339769547f3abcd560dda2b76cf2", "commit_date": "Mon Sep 18 14:17:45 2023 +0800", "commit_message": "perf: \u4f18\u5316 account template platform required", "files_name": ["apps/accounts/migrations/0015_auto_20230825_1120.py", "apps/accounts/models/template.py"]}, {"commit_id": "2d9a3ef7d46090061d5ae704a4fb317508856a57", "commit_date": "Mon Sep 18 14:25:56 2023 +0800", "commit_message": "perf: \u4fee\u6539 migrations\uff0c\u4e0d\u751f\u6210\u65b0\u7684\u8fc1\u79fb\u6587\u4ef6", "files_name": ["apps/ops/migrations/0026_auto_20230810_1039.py", "apps/terminal/models/applet/applet.py"]}, {"commit_id": "0d2adeccf28a9f56f4c3da32118974c3dd2dd7f1", "commit_date": "Mon Sep 18 14:09:18 2023 +0800", "commit_message": "perf: \u4f18\u5316 applet account delete", "files_name": ["apps/terminal/signal_handlers/applet.py"]}, {"commit_id": "886f977311eae5ae6f0e6cced246b34ac260e021", "commit_date": "Mon Sep 18 11:14:20 2023 +0800", "commit_message": "perf: \u4fee\u590d chrome \u90e8\u5206\u5143\u7d20\u5b9a\u4f4d\u5931\u8d25\u7684\u95ee\u9898", "files_name": ["apps/terminal/applets/chrome/ChangeLog", "apps/terminal/applets/chrome/app.py", "apps/terminal/applets/chrome/manifest.yml"]}, {"commit_id": "9367e79bcf4fb3212e1bc03c3150e5e013a1c5e7", "commit_date": "Mon Sep 18 11:11:12 2023 +0800", "commit_message": "perf: \u7ffb\u8bd1 (#11583)", "files_name": ["apps/locale/ja/LC_MESSAGES/django.mo", "apps/locale/ja/LC_MESSAGES/django.po", "apps/locale/zh/LC_MESSAGES/django.mo", "apps/locale/zh/LC_MESSAGES/django.po"]}, {"commit_id": "af733ecbad1c17839bedefa171a4e7f7b97d977e", "commit_date": "Sun Sep 17 16:07:05 2023 +0800", "commit_message": "fix: \u4fee\u6539\u5e73\u53f0id\u5e8f\u5217\u5316\u5c5e\u6027 \u6539\u4e3a\u975e\u53ea\u8bfb (#11581)", "files_name": ["apps/assets/serializers/platform.py"]}, {"commit_id": "09f9775eab006001451e951034a66d18e461c4a4", "commit_date": "Sun Sep 17 12:50:31 2023 +0800", "commit_message": "fix: \u5e73\u53f0\u65e0category type \u8fc7\u6ee4 (#11580)", "files_name": ["apps/assets/api/platform.py"]}, {"commit_id": "1c2a362beb990e53c041a9f83305e4a605efea2a", "commit_date": "Fri Sep 15 17:15:15 2023 +0800", "commit_message": "perf: \u4fee\u6539usersession \u6a21\u5757\u4f4d\u7f6e", "files_name": ["apps/audits/api.py", "apps/audits/migrations/0024_usersession.py", "apps/audits/models.py", "apps/audits/serializers.py", "apps/audits/signal_handlers/login_log.py", "apps/audits/urls/api_urls.py", "apps/rbac/builtin.py", "apps/rbac/const.py", "apps/rbac/tree.py", "apps/users/api/__init__.py", "apps/users/api/session.py", "apps/users/migrations/0045_delete_usersession.py", "apps/users/models/__init__.py", "apps/users/models/session.py", "apps/users/serializers/__init__.py", "apps/users/serializers/session.py", "apps/users/signal_handlers.py", "apps/users/urls/api_urls.py"]}, {"commit_id": "bb1e6743675540b92c743db6dc50805cbacf6f81", "commit_date": "Fri Sep 15 17:18:45 2023 +0800", "commit_message": "Merge pull request #11578 from jumpserver/pr@dev@perf_host_deploy_log", "files_name": ["a75677ab0848ec47e019b1c1d6c373fe9b79411c - Fri Sep 15 17:15:12 2023 +0800 : perf: \u4fee\u590d\u53d1\u5e03\u673a\u5386\u53f2\u6267\u884c\u4efb\u52a1\u65e5\u5fd7\u65e0\u6cd5\u67e5\u770b\u7684\u95ee\u9898", "apps/terminal/api/applet/host.py"]}, {"commit_id": "b1daa4d3573968bd513d192633309a144e689b2c", "commit_date": "Fri Sep 15 16:39:49 2023 +0800", "commit_message": "fix: \u4fee\u6539\u4e0d\u5e38\u767b\u5f55\u7528\u6237\u9501\u5b9a\u903b\u8f91 (#11576)", "files_name": ["apps/users/tasks.py"]}, {"commit_id": "c32271ec6fb754993a234df7ff2a22de71d5ad2a", "commit_date": "Fri Sep 15 16:16:04 2023 +0800", "commit_message": "fix: mysql \u6ca1\u914d\u7f6essl ansible \u8fde\u63a5\u5931\u8d25\u95ee\u9898 (#11574)", "files_name": ["apps/accounts/automations/change_secret/database/mongodb/main.yml", "apps/accounts/automations/change_secret/database/mysql/main.yml", "apps/accounts/automations/gather_accounts/database/mongodb/main.yml", "apps/accounts/automations/gather_accounts/database/mysql/main.yml", "apps/accounts/automations/push_account/database/mongodb/main.yml", "apps/accounts/automations/push_account/database/mysql/main.yml", "apps/accounts/automations/verify_account/database/mongodb/main.yml", "apps/accounts/automations/verify_account/database/mysql/main.yml", "apps/assets/automations/gather_facts/database/mongodb/main.yml", "apps/assets/automations/gather_facts/database/mysql/main.yml", "apps/assets/automations/ping/database/mongodb/main.yml", "apps/assets/automations/ping/database/mysql/main.yml", "apps/ops/ansible/inventory.py"]}, {"commit_id": "beb4f14be9695d43206be4e4ac18045acd2d32b6", "commit_date": "Fri Sep 15 11:25:02 2023 +0800", "commit_message": "perf: \u4f18\u5316 jobexecution \u521b\u5efa", "files_name": ["apps/ops/api/job.py"]}, {"commit_id": "e719904874b668e9a127049b55f5994b742915be", "commit_date": "Fri Sep 15 11:26:13 2023 +0800", "commit_message": "fix: \u4fee\u590d\u5de5\u5355\u56de\u590d\u62a5500 (#11571)", "files_name": ["apps/tickets/api/comment.py", "apps/tickets/serializers/comment.py"]}, {"commit_id": "664bc2a4d9a6af4e6b23e1899982921c8607e9e8", "commit_date": "Thu Sep 14 18:30:16 2023 +0800", "commit_message": "Merge pull request #11568 from jumpserver/pr@dev@perf_deplay_task", "files_name": ["b91db8c146dd7b53231f7239f7c963a0b20924a2 - Thu Sep 14 18:17:22 2023 +0800 : perf: \u4f18\u5316\u63a8\u9001\u90e8\u7f72\u4efb\u52a1\uff0c\u4e8b\u52a1\u63d0\u4ea4\u540e\u518d\u6267\u884c", "apps/terminal/api/applet/host.py"]}, {"commit_id": "500aeeb77f6e78d070d3525d131abde7a69b3374", "commit_date": "Thu Sep 14 18:15:25 2023 +0800", "commit_message": "perf: \u5347\u7ea7flower (#11567)", "files_name": ["poetry.lock", "pyproject.toml"]}, {"commit_id": "3abc8bddfa30cce09f0ca653591ea4c6557b5bf7", "commit_date": "Wed Sep 13 16:52:11 2023 +0800", "commit_message": "feat: \u7528\u6237\u5728\u7ebfsession\u63a7\u5236", "files_name": ["apps/audits/api.py", "apps/audits/signal_handlers/login_log.py", "apps/audits/utils.py", "apps/rbac/builtin.py", "apps/rbac/const.py", "apps/rbac/tree.py", "apps/terminal/api/session/session.py", "apps/terminal/models/session/__init__.py", "apps/terminal/signal_handlers/session.py", "apps/users/api/__init__.py", "apps/users/api/session.py", "apps/users/migrations/0044_usersession.py", "apps/users/models/__init__.py", "apps/users/models/session.py", "apps/users/serializers/__init__.py", "apps/users/serializers/session.py", "apps/users/signal_handlers.py", "apps/users/urls/api_urls.py"]}, {"commit_id": "5cbbf9e737250749ae0d7bee38e8702197df494f", "commit_date": "Thu Sep 14 14:30:53 2023 +0800", "commit_message": "Merge pull request #11561 from jumpserver/pr@dev@perf_i18n", "files_name": ["7204a86f87555f2545fa4337b0ea8c61807763fe - Thu Sep 14 14:26:17 2023 +0800 : perf: \u4f18\u5316\u7ffb\u8bd1", "apps/authentication/backends/passkey/serializer.py", "apps/locale/zh/LC_MESSAGES/django.mo", "apps/locale/zh/LC_MESSAGES/django.po", "apps/settings/serializers/auth/base.py"]}, {"commit_id": "829194420a4874f5414c4492183fe8283c6042c4", "commit_date": "Thu Sep 14 13:54:20 2023 +0800", "commit_message": "Merge pull request #11559 from jumpserver/pr@dev@limit_super_privilege", "files_name": ["61dc95d9aeacf6e5285357e2be8c59cec73b59c4 - Thu Sep 14 11:29:28 2023 +0800 : Merge pull request #11560 from jumpserver/pr@dev@perf_i18n", "a9f60a9117897f0d2cd156d623fe830f8950c384 - Thu Sep 14 11:26:12 2023 +0800 : perf: \u4f18\u5316\u7ffb\u8bd1", "apps/locale/ja/LC_MESSAGES/django.mo", "apps/locale/ja/LC_MESSAGES/django.po", "apps/locale/zh/LC_MESSAGES/django.mo", "apps/locale/zh/LC_MESSAGES/django.po"]}, {"commit_id": "82f96d6ed2dc67f124a8c851269608a15e8dcabd", "commit_date": "Thu Sep 14 10:42:16 2023 +0800", "commit_message": "feat: \u9650\u5236\u8d85\u7ea7\u6743\u9650", "files_name": ["apps/jumpserver/conf.py", "apps/jumpserver/settings/custom.py", "apps/users/models/user.py"]}, {"commit_id": "f6c56d497968aac25b93a8fcc371358539a5a31b", "commit_date": "Wed Sep 13 19:13:14 2023 +0800", "commit_message": "perf: \u7f51\u7edc\u8bbe\u5907 ansible enables true", "files_name": ["apps/assets/migrations/0123_device_automation_ansible_enabled.py"]}, {"commit_id": "54d0a1b8713340e9c4f9298faf99bf3772216d8f", "commit_date": "Wed Sep 13 17:44:45 2023 +0800", "commit_message": "Merge pull request #11554 from jumpserver/pr@dev@perf_add_tip", "files_name": ["5b4a267ccd42663bcfbf8f2d34e5343ce03869c6 - Wed Sep 13 17:44:10 2023 +0800 : Merge pull request #11553 from jumpserver/pr@dev@feat_support_ansbile_raw", "a6d78834e778228a9e496d6d81c854462f500f4c - Wed Sep 13 17:43:29 2023 +0800 : perf: \u6dfb\u52a0tips", "apps/common/management/commands/check_api.py"]}, {"commit_id": "07da98e438e5881239b2e2052a03ccead751e77a", "commit_date": "Wed Sep 13 17:25:05 2023 +0800", "commit_message": "feat: \u4f5c\u4e1a\u4e2d\u5fc3\u652f\u6301 raw (\u7f51\u7edc\u8bbe\u5907\u4f7f\u7528)", "files_name": ["apps/ops/const.py", "apps/ops/models/job.py"]}], "windows_after": [{"commit_id": "f3ca45aa7444db52dfe5f75e3cf3c234f08634c7", "commit_date": "Tue Sep 19 18:04:24 2023 +0800", "commit_message": "perf: \u4f18\u5316 Playbook \u6587\u4ef6\u521b\u5efa\u903b\u8f91", "files_name": ["apps/ops/api/playbook.py"]}, {"commit_id": "ea3ff1ebcbdceab05c5c3a49c36c072273cb87ab", "commit_date": "Tue Sep 19 19:39:01 2023 +0800", "commit_message": "perf: \u4f18\u5316\u767b\u5f55\u9875\u9762\u79fb\u52a8\u7aef\u5e03\u5c40", "files_name": ["apps/authentication/templates/authentication/login.html"]}, {"commit_id": "90131db55a21621630b7fa33856b8a08c671e9a0", "commit_date": "Wed Sep 20 11:12:15 2023 +0800", "commit_message": "perf: \u4fee\u6539\u4efb\u52a1\u68c0\u67e5 (#11609)", "files_name": ["apps/accounts/automations/push_account/manager.py", "apps/accounts/signal_handlers.py", "apps/assets/automations/base/manager.py", "apps/common/utils/verify_code.py", "apps/locale/ja/LC_MESSAGES/django.mo", "apps/locale/ja/LC_MESSAGES/django.po", "apps/locale/zh/LC_MESSAGES/django.mo", "apps/locale/zh/LC_MESSAGES/django.po"]}, {"commit_id": "39baf880552fd403c0df08f6d8531d70850b4470", "commit_date": "Wed Sep 20 14:29:53 2023 +0800", "commit_message": "fix: ansible postgresql (#11629)", "files_name": ["apps/accounts/automations/push_account/database/postgresql/main.yml", "apps/accounts/automations/verify_account/database/postgresql/main.yml"]}, {"commit_id": "a51549cf1c2de22f04b2bb56bc3467f4ae0371bb", "commit_date": "Wed Sep 20 15:30:29 2023 +0800", "commit_message": "perf: ansible\u4efb\u52a1 \u672a\u6fc0\u6d3b\u7684\u65f6\u5019\u5173\u95ed\u5b9a\u65f6\u4efb\u52a1 (#11631)", "files_name": ["apps/ops/mixin.py"]}, {"commit_id": "948c499d9e27d4bf39b37ae6d957240d6648b0f0", "commit_date": "Wed Sep 20 17:41:35 2023 +0800", "commit_message": "fix: \u4fee\u590d\u4eea\u8868\u677f\u56fe\u8868\u65f6\u95f4\u8303\u56f4\u4e0d\u51c6 (#11633)", "files_name": ["apps/jumpserver/api.py"]}, {"commit_id": "ed832af6318e4ad35aecb2966f521b30b607f664", "commit_date": "Wed Sep 20 18:14:39 2023 +0800", "commit_message": "fix: \u4fee\u590d\u8fd0\u884cjob \u7ec4\u7ec7\u5207\u6362\u95ee\u9898", "files_name": ["apps/ops/tasks.py"]}, {"commit_id": "1c74dd00bad97ede7b931f4e78075903f638a2d6", "commit_date": "Wed Sep 20 21:45:21 2023 +0800", "commit_message": "fix: \u89e3\u51b3sqlserver\u65e0\u6cd5\u63a8\u9001\u548c\u6539\u5bc6\u7684\u95ee\u9898 (#11637)", "files_name": ["apps/accounts/automations/change_secret/database/sqlserver/main.yml", "apps/accounts/automations/push_account/database/sqlserver/main.yml"]}, {"commit_id": "e11367088a4deb779afc7dd1e5be17a5a0d2fe04", "commit_date": "Thu Sep 21 10:15:10 2023 +0800", "commit_message": "perf: \u4fee\u6539 acl \u767b\u5f55\u9650\u5236\u95ee\u9898", "files_name": ["apps/acls/models/base.py", "apps/authentication/api/connection_token.py", "apps/orgs/utils.py"]}, {"commit_id": "803d5900962ba3d5177f4145a26794ad3e6fcd39", "commit_date": "Thu Sep 21 12:34:13 2023 +0800", "commit_message": "perf: \u4fee\u6539\u751f\u6210 applet accounts", "files_name": ["apps/terminal/signal_handlers/applet.py"]}, {"commit_id": "b023ca0c692759e83f0329f5f2ee7fbdceff220a", "commit_date": "Thu Sep 21 14:02:09 2023 +0800", "commit_message": "fix: saml \u7528\u6237\u6ca1\u73b0\u5728\u8bb0\u5f55 (#11641)", "files_name": ["apps/audits/api.py", "apps/audits/models.py", "apps/audits/signal_handlers/login_log.py"]}, {"commit_id": "cdbe5d31e9fe1d2f8951ea4e58335613040f664a", "commit_date": "Thu Sep 21 14:28:34 2023 +0800", "commit_message": "perf: \u4fee\u590d\u4e8b\u52a1\u4e2d\u4efb\u52a1\u6267\u884c", "files_name": ["apps/accounts/serializers/account/account.py", "apps/accounts/tasks/push_account.py", "apps/common/decorators.py", "apps/ops/api/job.py", "apps/ops/tasks.py", "apps/terminal/api/applet/host.py", "apps/terminal/tasks.py"]}, {"commit_id": "1d6d92c1600c745529948c89a9396677ef63564e", "commit_date": "Thu Sep 21 15:19:12 2023 +0800", "commit_message": "perf: \u4fee\u590d task id \u4e0d\u5bf9\u7684\u95ee\u9898", "files_name": ["apps/terminal/api/applet/host.py"]}, {"commit_id": "0397bdeb46c5fda4bae8f5053a3b3f379ed0dfb4", "commit_date": "Thu Sep 21 15:38:16 2023 +0800", "commit_message": "Revert \"perf: \u4fee\u590d task id \u4e0d\u5bf9\u7684\u95ee\u9898\"", "files_name": ["apps/terminal/api/applet/host.py"]}, {"commit_id": "4cb499953c8f11709c68ee5e65d2a66536f94718", "commit_date": "Thu Sep 21 15:39:46 2023 +0800", "commit_message": "Revert \"perf: \u4fee\u590d\u4e8b\u52a1\u4e2d\u4efb\u52a1\u6267\u884c\"", "files_name": ["apps/accounts/serializers/account/account.py", "apps/accounts/tasks/push_account.py", "apps/common/decorators.py", "apps/ops/api/job.py", "apps/ops/tasks.py", "apps/terminal/api/applet/host.py", "apps/terminal/tasks.py"]}, {"commit_id": "9892ff7dd64f476b35f3aa3916c51d9229d07762", "commit_date": "Thu Sep 21 15:57:04 2023 +0800", "commit_message": "feat: \u4ee3\u7801\u7247\u6bb5\u652f\u6301 oracle \u548c mariadb", "files_name": ["apps/ops/const.py", "apps/ops/migrations/0026_auto_20230810_1039.py", "apps/ops/models/adhoc.py", "apps/ops/models/job.py"]}, {"commit_id": "1de7af4984d779504dd6840bab39efeadae875c4", "commit_date": "Thu Sep 21 16:51:54 2023 +0800", "commit_message": "fix: \u89e3\u51b3 master \u51b2\u7a81", "files_name": ["d102db7a7b19285cd03cd7c0cb7ffdce0803b1ff - Thu Sep 21 16:53:09 2023 +0800 : Merge pull request #11650 from jumpserver/pr@dev@dev_master", "91dce82b38ca4ba756829c745f6f259718cabc03 - Thu Sep 21 17:01:03 2023 +0800 : fix: \u5b89\u5168\u8bbe\u7f6e\u5f00\u542f\u4ec5\u5df2\u5b58\u5728\u7528\u6237\u767b\u5f55\uff0c\u4f01\u4e1a\u5fae\u4fe1\u7b49\u626b\u63cf\u767b\u5f55\uff0c\u5982\u679c\u7528\u6237\u4e0d\u5b58\u5728\uff0c\u8fd8\u662f\u4f1a\u81ea\u52a8\u521b\u5efa\u7528\u6237\u767b\u5f55\u6210\u529f\u3002 (#11651)", "apps/authentication/views/base.py"]}, {"commit_id": "5d4fa2205811e7aaa5034c2955f1090262ec1348", "commit_date": "Fri Sep 22 09:45:22 2023 +0800", "commit_message": "chore: \u4f18\u5316 README \u6587\u6848", "files_name": ["README.md"]}, {"commit_id": "71285935028e41398f2782b6a1ada8fb8214058b", "commit_date": "Fri Sep 22 15:06:58 2023 +0800", "commit_message": "perf: CeleryTaskExecution \u6dfb\u52a0\u9ed8\u8ba4\u6392\u5e8f (#11663)", "files_name": ["apps/accounts/migrations/0004_auto_20230106_1507.py", "apps/accounts/migrations/0015_auto_20230825_1120.py", "apps/ops/migrations/0027_alter_celerytaskexecution_options.py", "apps/ops/models/celery.py", "apps/terminal/migrations/0062_applet_edition.py"]}, {"commit_id": "cefd9f4ab25709886d7476021637e07a108b8141", "commit_date": "Fri Sep 22 15:05:18 2023 +0800", "commit_message": "fix: \u89e3\u51b3\u8282\u70b9\u8d44\u4ea7\u6570\u91cf\u65b9\u6cd5\u8ba1\u7b97\u4e0d\u51c6\u786e\u7684\u95ee\u9898", "files_name": ["apps/assets/models/node.py"]}, {"commit_id": "43dbb4c22693b5bae8ffcfdcefd0c8a6b34ef6bd", "commit_date": "Thu Sep 21 17:43:37 2023 +0800", "commit_message": "perf: \u6dfb\u52a0 patch \u547d\u4ee4", "files_name": ["Dockerfile"]}, {"commit_id": "0cf17310e1492c5c4c1a5be6bc37cf281e8df9f7", "commit_date": "Fri Sep 22 17:07:52 2023 +0800", "commit_message": "fix: \u4fee\u590d DOMAINS \u6dfb\u52a0 80\u548c443 \u4e0d\u751f\u6548\u7684\u95ee\u9898", "files_name": ["apps/jumpserver/settings/base.py"]}, {"commit_id": "138adeff763e7609580b4208941af82fe0a66e55", "commit_date": "Fri Sep 22 16:16:22 2023 +0800", "commit_message": "perf: \u6dfb\u52a0 ping \u547d\u4ee4", "files_name": ["Dockerfile"]}, {"commit_id": "0f3ddc3bf1e81bd701df54d42c09fd826d487422", "commit_date": "Mon Sep 25 16:19:02 2023 +0800", "commit_message": "fix: \u4fee\u590d\u7cfb\u7edf\u7528\u6237\u540c\u6b65\u540c\u65f6\u5305\u542bpwd/ssh-key\u5bfc\u81f4\u521b\u5efa\u8d26\u53f7id\u51b2\u7a81\u62a5\u9519\u7684\u95ee\u9898", "files_name": ["apps/assets/migrations/0100_auto_20220711_1413.py"]}, {"commit_id": "4065baf78511b83f466f606dd74efeb358efaad4", "commit_date": "Mon Sep 25 16:25:44 2023 +0800", "commit_message": "feat: \u7528\u6237\u767b\u5f55\u5821\u5792\u673a\u65f6\u901a\u77e5\u7ba1\u7406\u5458 (#11686)", "files_name": ["apps/acls/const.py", "apps/acls/notifications.py", "apps/acls/templates/acls/user_login_reminder.html", "apps/audits/signal_handlers/login_log.py", "apps/authentication/mixins.py", "apps/locale/ja/LC_MESSAGES/django.mo", "apps/locale/ja/LC_MESSAGES/django.po", "apps/locale/zh/LC_MESSAGES/django.mo", "apps/locale/zh/LC_MESSAGES/django.po", "apps/tickets/handlers/base.py"]}, {"commit_id": "d64e77db30281af06f81fdc451446d34d857af02", "commit_date": "Mon Sep 25 16:37:00 2023 +0800", "commit_message": "perf: \u53bb\u6389print (#11687)", "files_name": ["apps/acls/notifications.py"]}, {"commit_id": "42bdb2cf140d39261a0ef5faa9562844473bac0a", "commit_date": "Mon Sep 25 15:54:15 2023 +0800", "commit_message": "perf: \u4f18\u5316\u627e\u56de\u5bc6\u7801\u65f6\u533a\u53f7\u5e26\u52a0\u53f7\u65e0\u6cd5\u5339\u914d\u7684\u95ee\u9898", "files_name": ["apps/users/views/profile/reset.py"]}, {"commit_id": "10363dcc5bfcfacd1e7e70dddfaae5245a65a5c2", "commit_date": "Mon Sep 25 21:39:16 2023 +0800", "commit_message": "fix: \u4fee\u590d\u7528\u6237username \u4e2d\u6587 \u767b\u5f55\u5931\u8d25\u95ee\u9898 (#11692)", "files_name": ["apps/authentication/views/login.py"]}, {"commit_id": "c369b5478c9ba912bad71576a6920249766e0b83", "commit_date": "Mon Sep 25 21:49:47 2023 +0800", "commit_message": "fix: \u4fee\u590d\u66b4\u529b\u6821\u9a8c\u9a8c\u8bc1\u7801", "files_name": ["apps/common/utils/verify_code.py"]}, {"commit_id": "1f00c00183fa70195061e8d4a82769388ac6823a", "commit_date": "Mon Sep 25 22:58:43 2023 +0800", "commit_message": "fix: \u4fee\u590d\u9a8c\u8bc1\u7801\u6821\u9a8c\u903b\u8f91\u548c\u62a5\u9519\u4fe1\u606f", "files_name": ["apps/common/utils/verify_code.py"]}, {"commit_id": "9bde2ff6e1d8fe58ba070db61f098cafced515e9", "commit_date": "Mon Sep 25 22:58:12 2023 +0800", "commit_message": "fix: pubkey auth require svc sign", "files_name": ["apps/authentication/mixins.py", "apps/common/permissions.py"]}, {"commit_id": "7c67d882aa884da6ea268427e5999db2560aa296", "commit_date": "Mon Sep 25 23:18:50 2023 +0800", "commit_message": "Revert \"fix: pubkey auth require svc sign\"", "files_name": ["apps/authentication/mixins.py", "apps/common/permissions.py"]}, {"commit_id": "cbe3d66b397212db24f0f94d613b5665157b6c9e", "commit_date": "Mon Sep 25 22:58:12 2023 +0800", "commit_message": "fix: pubkey auth require svc sign", "files_name": ["apps/authentication/backends/pubkey.py", "apps/common/permissions.py"]}, {"commit_id": "56a26481a4ca086fe8be58d6de06dabbfbb011aa", "commit_date": "Tue Sep 26 12:06:54 2023 +0800", "commit_message": "perf: \u8d26\u53f7\u6a21\u7248 \u751f\u6210\u968f\u673a\u5bc6\u7801\u5bc6\u94a5\u53ca\u8d26\u53f7\u6279\u91cf\u66f4\u65b0500", "files_name": ["apps/accounts/models/mixins/vault.py", "apps/accounts/serializers/account/template.py"]}, {"commit_id": "2069fee79553417368402230a2d43d8afa691932", "commit_date": "Wed Sep 27 10:31:44 2023 +0800", "commit_message": "perf: \u4f18\u5316\u53d1\u9001\u90ae\u4ef6", "files_name": ["apps/common/tasks.py"]}, {"commit_id": "15a5dda9e0cdbe2ac618a6b2a09df8928f485c88", "commit_date": "Wed Sep 27 15:12:24 2023 +0800", "commit_message": "perf: \u4fee\u6539\u9ed8\u8ba4\u7684\u90ae\u7bb1\u5730\u5740", "files_name": ["apps/common/tasks.py", "apps/users/migrations/0046_auto_20230927_1456.py"]}, {"commit_id": "f79084c2dff35702c77fe150c3249c2cd45fa13d", "commit_date": "Wed Sep 27 14:13:06 2023 +0800", "commit_message": "fix: \u8d26\u53f7\u6388\u6743\u8fc7\u6ee4\u6307\u5b9a\u8d26\u53f7api \u5931\u6548\u95ee\u9898", "files_name": ["apps/accounts/api/account/account.py"]}, {"commit_id": "896d42c53efc0d402c9982d868a42c1bbb4ac570", "commit_date": "Thu Sep 28 16:32:41 2023 +0800", "commit_message": "perf: \u66f4\u65b0jms-storage\u7248\u672c", "files_name": ["poetry.lock", "pyproject.toml"]}, {"commit_id": "27c505853baa901eb19583443754e281e5e32511", "commit_date": "Sat Oct 7 13:07:47 2023 +0800", "commit_message": "perf: \u4f18\u5316\u5fd8\u8bb0\u5bc6\u7801", "files_name": ["apps/authentication/api/password.py", "apps/authentication/errors/mfa.py", "apps/common/exceptions.py", "apps/common/utils/verify_code.py", "apps/locale/ja/LC_MESSAGES/django.po", "apps/locale/zh/LC_MESSAGES/django.po", "apps/users/models/user.py", "apps/users/views/profile/reset.py"]}, {"commit_id": "28196573bb962a63f10d87e66585d8e687c83e7a", "commit_date": "Thu Sep 28 11:24:34 2023 +0800", "commit_message": "perf: \u4fee\u6539\u968f\u673a\u4f7f\u7528secrets", "files_name": ["apps/common/utils/random.py"]}, {"commit_id": "2aed3fcaea05bf7bbeca58a8f64a78913ef79409", "commit_date": "Sat Oct 7 11:35:25 2023 +0800", "commit_message": "perf: \u4fee\u6539\u968f\u673a\u6570\u751f\u6210\uff0c\u907f\u514d\u4f7f\u7528 random \u5e93", "files_name": ["apps/common/utils/random.py"]}, {"commit_id": "0c1f4d99f8858c5e6a555ed58c044f0438860c07", "commit_date": "Sat Oct 7 15:28:40 2023 +0800", "commit_message": "fix: \u4fee\u590d\u5de5\u5355\u5f15\u5165html\u9519\u8bef\u95ee\u9898 (#11744)", "files_name": ["apps/tickets/handlers/base.py"]}, {"commit_id": "42b4e7697d1941075b9393576b0b4f2b927c0b91", "commit_date": "Sat Oct 7 15:50:28 2023 +0800", "commit_message": "feat: \u8d44\u4ea7\u767b\u5f55acl\u52a8\u4f5c\u589e\u52a0\u64cd\u4f5c\u65e5\u5fd7 (#11741)", "files_name": ["apps/audits/backends/db.py", "apps/audits/const.py", "apps/authentication/api/connection_token.py"]}, {"commit_id": "f206d963a094e77c0a343536e29618cc3f9213f5", "commit_date": "Sat Oct 7 14:47:17 2023 +0800", "commit_message": "perf: \u4f18\u5316\u4f1a\u8bdd api", "files_name": ["apps/locale/zh/LC_MESSAGES/django.mo", "apps/terminal/api/session/session.py", "apps/terminal/api/session/task.py", "apps/terminal/permissions.py"]}, {"commit_id": "60399fae29131ae6f74199fe91e74646ff2eed86", "commit_date": "Sat Oct 7 17:41:20 2023 +0800", "commit_message": "feat: \u767b\u5f55\u8d44\u4ea7\u6d88\u606f\u63d0\u9192 (#11747)", "files_name": ["apps/acls/notifications.py", "apps/acls/templates/acls/asset_login_reminder.html", "apps/authentication/api/connection_token.py"]}, {"commit_id": "68707085fa0b5ab87d84e51703de69fcdbea751a", "commit_date": "Sat Oct 7 17:41:45 2023 +0800", "commit_message": "perf: \u65e5\u5fd7\u4fdd\u5b58\u65f6\u95f4\u4e0d\u5c11\u4e8e6\u4e2a\u6708 (#11742)", "files_name": ["apps/jumpserver/settings/custom.py"]}], "parents": [{"commit_id_before": "ce645b1710c5821119f313e1b3d801470565aac0", "url_before": "https://api.github.com/repos/jumpserver/jumpserver/commits/ce645b1710c5821119f313e1b3d801470565aac0", "html_url_before": "https://github.com/jumpserver/jumpserver/commit/ce645b1710c5821119f313e1b3d801470565aac0"}], "details": [{"raw_url": "https://github.com/jumpserver/jumpserver/raw/d0321a74f1713d031560341c8fd0a1859e6510d8/apps%2Fops%2Fapi%2Fplaybook.py", "code": "import os\nimport shutil\nimport zipfile\n\nfrom django.conf import settings\nfrom django.core.exceptions import SuspiciousFileOperation\nfrom django.shortcuts import get_object_or_404\nfrom django.utils.translation import gettext_lazy as _\nfrom rest_framework import status\n\nfrom common.exceptions import JMSException\nfrom orgs.mixins.api import OrgBulkModelViewSet\nfrom rbac.permissions import RBACPermission\nfrom ..exception import PlaybookNoValidEntry\nfrom ..models import Playbook\nfrom ..serializers.playbook import PlaybookSerializer\n\n__all__ = [\"PlaybookViewSet\", \"PlaybookFileBrowserAPIView\"]\n\nfrom rest_framework.views import APIView\nfrom rest_framework.response import Response\nfrom django.utils._os import safe_join\n\n\ndef unzip_playbook(src, dist):\n    fz = zipfile.ZipFile(src, 'r')\n    for file in fz.namelist():\n        fz.extract(file, dist)\n\n\nclass PlaybookViewSet(OrgBulkModelViewSet):\n    serializer_class = PlaybookSerializer\n    permission_classes = (RBACPermission,)\n    model = Playbook\n    search_fields = ('name', 'comment')\n\n    def perform_destroy(self, instance):\n        if instance.job_set.exists():\n            raise JMSException(code='playbook_has_job', detail={\"msg\": _(\"Currently playbook is being used in a job\")})\n        instance_id = instance.id\n        super().perform_destroy(instance)\n        dest_path = safe_join(settings.DATA_DIR, \"ops\", \"playbook\", instance_id.__str__())\n        shutil.rmtree(dest_path)\n\n    def get_queryset(self):\n        queryset = super().get_queryset()\n        queryset = queryset.filter(creator=self.request.user)\n        return queryset\n\n    def perform_create(self, serializer):\n        instance = serializer.save()\n        if 'multipart/form-data' in self.request.headers['Content-Type']:\n            src_path = safe_join(settings.MEDIA_ROOT, instance.path.name)\n            dest_path = safe_join(settings.DATA_DIR, \"ops\", \"playbook\", instance.id.__str__())\n            try:\n                unzip_playbook(src_path, dest_path)\n            except RuntimeError as e:\n                raise JMSException(code='invalid_playbook_file', detail={\"msg\": \"Unzip failed\"})\n\n            if 'main.yml' not in os.listdir(dest_path):\n                raise PlaybookNoValidEntry\n\n        else:\n            if instance.create_method == 'blank':\n                dest_path = safe_join(settings.DATA_DIR, \"ops\", \"playbook\", instance.id.__str__())\n                os.makedirs(dest_path)\n                with open(safe_join(dest_path, 'main.yml'), 'w') as f:\n                    f.write('## write your playbook here')\n\n\nclass PlaybookFileBrowserAPIView(APIView):\n    rbac_perms = ()\n    permission_classes = (RBACPermission,)\n    rbac_perms = {\n        'GET': 'ops.change_playbook',\n        'POST': 'ops.change_playbook',\n        'DELETE': 'ops.change_playbook',\n        'PATCH': 'ops.change_playbook',\n    }\n    protected_files = ['root', 'main.yml']\n\n    def get(self, request, **kwargs):\n        playbook_id = kwargs.get('pk')\n        playbook = get_object_or_404(Playbook, id=playbook_id)\n        work_path = playbook.work_dir\n        file_key = request.query_params.get('key', '')\n        if file_key:\n            try:\n                file_path = safe_join(work_path, file_key)\n                with open(file_path, 'r') as f:\n                    content = f.read()\n            except UnicodeDecodeError:\n                content = _('Unsupported file content')\n            except SuspiciousFileOperation:\n                raise JMSException(code='invalid_file_path', detail={\"msg\": _(\"Invalid file path\")})\n            return Response({'content': content})\n        else:\n            expand_key = request.query_params.get('expand', '')\n            nodes = self.generate_tree(playbook, work_path, expand_key)\n            return Response(nodes)\n\n    def post(self, request, **kwargs):\n        playbook_id = kwargs.get('pk')\n        playbook = get_object_or_404(Playbook, id=playbook_id)\n        work_path = playbook.work_dir\n\n        parent_key = request.data.get('key', '')\n        if parent_key == 'root':\n            parent_key = ''\n        if os.path.dirname(parent_key) == 'root':\n            parent_key = os.path.basename(parent_key)\n\n        full_path = safe_join(work_path, parent_key)\n\n        is_directory = request.data.get('is_directory', False)\n        content = request.data.get('content', '')\n        name = request.data.get('name', '')\n\n        def find_new_name(p, is_file=False):\n            if not p:\n                if is_file:\n                    p = 'new_file.yml'\n                else:\n                    p = 'new_dir'\n            np = safe_join(full_path, p)\n            n = 0\n            while os.path.exists(np):\n                n += 1\n                np = safe_join(full_path, '{}({})'.format(p, n))\n            return np\n\n        try:\n            if is_directory:\n                new_file_path = find_new_name(name)\n                os.makedirs(new_file_path)\n            else:\n                new_file_path = find_new_name(name, True)\n                with open(new_file_path, 'w') as f:\n                    f.write(content)\n        except SuspiciousFileOperation:\n            raise JMSException(code='invalid_file_path', detail={\"msg\": _(\"Invalid file path\")})\n\n        relative_path = os.path.relpath(os.path.dirname(new_file_path), work_path)\n        new_node = {\n            \"name\": os.path.basename(new_file_path),\n            \"title\": os.path.basename(new_file_path),\n            \"id\": safe_join(relative_path, os.path.basename(new_file_path))\n            if not safe_join(relative_path, os.path.basename(new_file_path)).startswith('.')\n            else os.path.basename(new_file_path),\n            \"isParent\": is_directory,\n            \"pId\": relative_path if not relative_path.startswith('.') else 'root',\n            \"open\": True,\n        }\n        if not is_directory:\n            new_node['iconSkin'] = 'file'\n        return Response(new_node)\n\n    def patch(self, request, **kwargs):\n        playbook_id = kwargs.get('pk')\n        playbook = get_object_or_404(Playbook, id=playbook_id)\n        work_path = playbook.work_dir\n\n        file_key = request.data.get('key', '')\n        new_name = request.data.get('new_name', '')\n\n        if file_key in self.protected_files and new_name:\n            raise JMSException(code='this_file_can_not_be_rename', detail={\"msg\": _(\"This file can not be rename\")})\n\n        if os.path.dirname(file_key) == 'root':\n            file_key = os.path.basename(file_key)\n\n        content = request.data.get('content', '')\n        is_directory = request.data.get('is_directory', False)\n\n        if not file_key or file_key == 'root':\n            return Response(status=status.HTTP_400_BAD_REQUEST)\n        file_path = safe_join(work_path, file_key)\n\n        # rename\n        if new_name:\n            try:\n                new_file_path = safe_join(os.path.dirname(file_path), new_name)\n                if new_file_path == file_path:\n                    return Response(status=status.HTTP_200_OK)\n                if os.path.exists(new_file_path):\n                    raise JMSException(code='file_already exists', detail={\"msg\": _(\"File already exists\")})\n                os.rename(file_path, new_file_path)\n            except SuspiciousFileOperation:\n                raise JMSException(code='invalid_file_path', detail={\"msg\": _(\"Invalid file path\")})\n\n        # edit content\n        else:\n            if not is_directory:\n                with open(file_path, 'w') as f:\n                    f.write(content)\n        return Response(status=status.HTTP_200_OK)\n\n    def delete(self, request, **kwargs):\n        playbook_id = kwargs.get('pk')\n        playbook = get_object_or_404(Playbook, id=playbook_id)\n        work_path = playbook.work_dir\n        file_key = request.query_params.get('key', '')\n        if not file_key:\n            raise JMSException(code='file_key_is_required', detail={\"msg\": _(\"File key is required\")})\n\n        if file_key in self.protected_files:\n            raise JMSException(code='This file can not be delete', detail={\"msg\": _(\"This file can not be delete\")})\n        file_path = safe_join(work_path, file_key)\n        if os.path.isdir(file_path):\n            shutil.rmtree(file_path)\n        else:\n            os.remove(file_path)\n        return Response({'msg': 'ok'})\n\n    @staticmethod\n    def generate_tree(playbook, root_path, expand_key=None):\n        nodes = [{\n            \"name\": playbook.name,\n            \"title\": playbook.name,\n            \"id\": 'root',\n            \"isParent\": True,\n            \"open\": True,\n            \"pId\": '',\n            \"temp\": False\n        }]\n        for path, dirs, files in os.walk(root_path):\n            dirs.sort()\n            files.sort()\n\n            relative_path = os.path.relpath(path, root_path)\n            for d in dirs:\n                dir_id = os.path.relpath(safe_join(path, d), root_path)\n\n                node = {\n                    \"name\": d,\n                    \"title\": d,\n                    \"id\": dir_id,\n                    \"isParent\": True,\n                    \"open\": True,\n                    \"pId\": relative_path if not relative_path.startswith('.') else 'root',\n                    \"temp\": False\n                }\n                if expand_key == node['id']:\n                    node['open'] = True\n                nodes.append(node)\n            for f in files:\n                file_id = os.path.relpath(safe_join(path, f), root_path)\n                node = {\n                    \"name\": f,\n                    \"title\": f,\n                    \"iconSkin\": 'file',\n                    \"id\": file_id,\n                    \"isParent\": False,\n                    \"open\": False,\n                    \"pId\": relative_path if not relative_path.startswith('.') else 'root',\n                    \"temp\": False\n                }\n                nodes.append(node)\n        return nodes\n", "code_before": "import os\nimport shutil\nimport zipfile\n\nfrom django.conf import settings\nfrom django.shortcuts import get_object_or_404\nfrom django.utils.translation import gettext_lazy as _\nfrom rest_framework import status\n\nfrom common.exceptions import JMSException\nfrom orgs.mixins.api import OrgBulkModelViewSet\nfrom rbac.permissions import RBACPermission\nfrom ..exception import PlaybookNoValidEntry\nfrom ..models import Playbook\nfrom ..serializers.playbook import PlaybookSerializer\n\n__all__ = [\"PlaybookViewSet\", \"PlaybookFileBrowserAPIView\"]\n\nfrom rest_framework.views import APIView\nfrom rest_framework.response import Response\n\n\ndef unzip_playbook(src, dist):\n    fz = zipfile.ZipFile(src, 'r')\n    for file in fz.namelist():\n        fz.extract(file, dist)\n\n\nclass PlaybookViewSet(OrgBulkModelViewSet):\n    serializer_class = PlaybookSerializer\n    permission_classes = (RBACPermission,)\n    model = Playbook\n    search_fields = ('name', 'comment')\n\n    def perform_destroy(self, instance):\n        if instance.job_set.exists():\n            raise JMSException(code='playbook_has_job', detail={\"msg\": _(\"Currently playbook is being used in a job\")})\n        instance_id = instance.id\n        super().perform_destroy(instance)\n        dest_path = os.path.join(settings.DATA_DIR, \"ops\", \"playbook\", instance_id.__str__())\n        shutil.rmtree(dest_path)\n\n    def get_queryset(self):\n        queryset = super().get_queryset()\n        queryset = queryset.filter(creator=self.request.user)\n        return queryset\n\n    def perform_create(self, serializer):\n        instance = serializer.save()\n        if 'multipart/form-data' in self.request.headers['Content-Type']:\n            src_path = os.path.join(settings.MEDIA_ROOT, instance.path.name)\n            dest_path = os.path.join(settings.DATA_DIR, \"ops\", \"playbook\", instance.id.__str__())\n            try:\n                unzip_playbook(src_path, dest_path)\n            except RuntimeError as e:\n                raise JMSException(code='invalid_playbook_file', detail={\"msg\": \"Unzip failed\"})\n\n            if 'main.yml' not in os.listdir(dest_path):\n                raise PlaybookNoValidEntry\n\n        else:\n            if instance.create_method == 'blank':\n                dest_path = os.path.join(settings.DATA_DIR, \"ops\", \"playbook\", instance.id.__str__())\n                os.makedirs(dest_path)\n                with open(os.path.join(dest_path, 'main.yml'), 'w') as f:\n                    f.write('## write your playbook here')\n\n\nclass PlaybookFileBrowserAPIView(APIView):\n    rbac_perms = ()\n    permission_classes = (RBACPermission,)\n    rbac_perms = {\n        'GET': 'ops.change_playbook',\n        'POST': 'ops.change_playbook',\n        'DELETE': 'ops.change_playbook',\n        'PATCH': 'ops.change_playbook',\n    }\n    protected_files = ['root', 'main.yml']\n\n    def get(self, request, **kwargs):\n        playbook_id = kwargs.get('pk')\n        playbook = get_object_or_404(Playbook, id=playbook_id)\n        work_path = playbook.work_dir\n        file_key = request.query_params.get('key', '')\n        if file_key:\n            file_path = os.path.join(work_path, file_key)\n            with open(file_path, 'r') as f:\n                try:\n                    content = f.read()\n                except UnicodeDecodeError:\n                    content = _('Unsupported file content')\n                return Response({'content': content})\n        else:\n            expand_key = request.query_params.get('expand', '')\n            nodes = self.generate_tree(playbook, work_path, expand_key)\n            return Response(nodes)\n\n    def post(self, request, **kwargs):\n        playbook_id = kwargs.get('pk')\n        playbook = get_object_or_404(Playbook, id=playbook_id)\n        work_path = playbook.work_dir\n\n        parent_key = request.data.get('key', '')\n        if parent_key == 'root':\n            parent_key = ''\n        if os.path.dirname(parent_key) == 'root':\n            parent_key = os.path.basename(parent_key)\n        full_path = os.path.join(work_path, parent_key)\n\n        is_directory = request.data.get('is_directory', False)\n        content = request.data.get('content', '')\n        name = request.data.get('name', '')\n\n        def find_new_name(p, is_file=False):\n            if not p:\n                if is_file:\n                    p = 'new_file.yml'\n                else:\n                    p = 'new_dir'\n            np = os.path.join(full_path, p)\n            n = 0\n            while os.path.exists(np):\n                n += 1\n                np = os.path.join(full_path, '{}({})'.format(p, n))\n            return np\n\n        if is_directory:\n            new_file_path = find_new_name(name)\n            os.makedirs(new_file_path)\n        else:\n            new_file_path = find_new_name(name, True)\n            with open(new_file_path, 'w') as f:\n                f.write(content)\n\n        relative_path = os.path.relpath(os.path.dirname(new_file_path), work_path)\n        new_node = {\n            \"name\": os.path.basename(new_file_path),\n            \"title\": os.path.basename(new_file_path),\n            \"id\": os.path.join(relative_path, os.path.basename(new_file_path))\n            if not os.path.join(relative_path, os.path.basename(new_file_path)).startswith('.')\n            else os.path.basename(new_file_path),\n            \"isParent\": is_directory,\n            \"pId\": relative_path if not relative_path.startswith('.') else 'root',\n            \"open\": True,\n        }\n        if not is_directory:\n            new_node['iconSkin'] = 'file'\n        return Response(new_node)\n\n    def patch(self, request, **kwargs):\n        playbook_id = kwargs.get('pk')\n        playbook = get_object_or_404(Playbook, id=playbook_id)\n        work_path = playbook.work_dir\n\n        file_key = request.data.get('key', '')\n        new_name = request.data.get('new_name', '')\n\n        if file_key in self.protected_files and new_name:\n            return Response({'msg': '{} can not be rename'.format(file_key)}, status=status.HTTP_400_BAD_REQUEST)\n\n        if os.path.dirname(file_key) == 'root':\n            file_key = os.path.basename(file_key)\n\n        content = request.data.get('content', '')\n        is_directory = request.data.get('is_directory', False)\n\n        if not file_key or file_key == 'root':\n            return Response(status=status.HTTP_400_BAD_REQUEST)\n        file_path = os.path.join(work_path, file_key)\n\n        # rename\n        if new_name:\n            new_file_path = os.path.join(os.path.dirname(file_path), new_name)\n            if new_file_path == file_path:\n                return Response(status=status.HTTP_200_OK)\n            if os.path.exists(new_file_path):\n                return Response({'msg': '{} already exists'.format(new_name)}, status=status.HTTP_400_BAD_REQUEST)\n            os.rename(file_path, new_file_path)\n        # edit content\n        else:\n            if not is_directory:\n                with open(file_path, 'w') as f:\n                    f.write(content)\n        return Response(status=status.HTTP_200_OK)\n\n    def delete(self, request, **kwargs):\n        playbook_id = kwargs.get('pk')\n        playbook = get_object_or_404(Playbook, id=playbook_id)\n        work_path = playbook.work_dir\n        file_key = request.query_params.get('key', '')\n        if not file_key:\n            return Response({'msg': 'key is required'}, status=status.HTTP_400_BAD_REQUEST)\n        if file_key in self.protected_files:\n            return Response({'msg': ' {} can not be delete'.format(file_key)}, status=status.HTTP_400_BAD_REQUEST)\n        file_path = os.path.join(work_path, file_key)\n        if os.path.isdir(file_path):\n            shutil.rmtree(file_path)\n        else:\n            os.remove(file_path)\n        return Response({'msg': 'ok'})\n\n    @staticmethod\n    def generate_tree(playbook, root_path, expand_key=None):\n        nodes = [{\n            \"name\": playbook.name,\n            \"title\": playbook.name,\n            \"id\": 'root',\n            \"isParent\": True,\n            \"open\": True,\n            \"pId\": '',\n            \"temp\": False\n        }]\n        for path, dirs, files in os.walk(root_path):\n            dirs.sort()\n            files.sort()\n\n            relative_path = os.path.relpath(path, root_path)\n            for d in dirs:\n                node = {\n                    \"name\": d,\n                    \"title\": d,\n                    \"id\": os.path.join(relative_path, d) if not os.path.join(relative_path, d).startswith(\n                        '.') else d,\n                    \"isParent\": True,\n                    \"open\": True,\n                    \"pId\": relative_path if not relative_path.startswith('.') else 'root',\n                    \"temp\": False\n                }\n                if expand_key == node['id']:\n                    node['open'] = True\n                nodes.append(node)\n            for f in files:\n                node = {\n                    \"name\": f,\n                    \"title\": f,\n                    \"iconSkin\": 'file',\n                    \"id\": os.path.join(relative_path, f) if not os.path.join(relative_path, f).startswith(\n                        '.') else f,\n                    \"isParent\": False,\n                    \"open\": False,\n                    \"pId\": relative_path if not relative_path.startswith('.') else 'root',\n                    \"temp\": False\n                }\n                nodes.append(node)\n        return nodes\n", "patch": "@@ -3,6 +3,7 @@\n import zipfile\n \n from django.conf import settings\n+from django.core.exceptions import SuspiciousFileOperation\n from django.shortcuts import get_object_or_404\n from django.utils.translation import gettext_lazy as _\n from rest_framework import status\n@@ -18,6 +19,7 @@\n \n from rest_framework.views import APIView\n from rest_framework.response import Response\n+from django.utils._os import safe_join\n \n \n def unzip_playbook(src, dist):\n@@ -37,7 +39,7 @@ def perform_destroy(self, instance):\n             raise JMSException(code='playbook_has_job', detail={\"msg\": _(\"Currently playbook is being used in a job\")})\n         instance_id = instance.id\n         super().perform_destroy(instance)\n-        dest_path = os.path.join(settings.DATA_DIR, \"ops\", \"playbook\", instance_id.__str__())\n+        dest_path = safe_join(settings.DATA_DIR, \"ops\", \"playbook\", instance_id.__str__())\n         shutil.rmtree(dest_path)\n \n     def get_queryset(self):\n@@ -48,8 +50,8 @@ def get_queryset(self):\n     def perform_create(self, serializer):\n         instance = serializer.save()\n         if 'multipart/form-data' in self.request.headers['Content-Type']:\n-            src_path = os.path.join(settings.MEDIA_ROOT, instance.path.name)\n-            dest_path = os.path.join(settings.DATA_DIR, \"ops\", \"playbook\", instance.id.__str__())\n+            src_path = safe_join(settings.MEDIA_ROOT, instance.path.name)\n+            dest_path = safe_join(settings.DATA_DIR, \"ops\", \"playbook\", instance.id.__str__())\n             try:\n                 unzip_playbook(src_path, dest_path)\n             except RuntimeError as e:\n@@ -60,9 +62,9 @@ def perform_create(self, serializer):\n \n         else:\n             if instance.create_method == 'blank':\n-                dest_path = os.path.join(settings.DATA_DIR, \"ops\", \"playbook\", instance.id.__str__())\n+                dest_path = safe_join(settings.DATA_DIR, \"ops\", \"playbook\", instance.id.__str__())\n                 os.makedirs(dest_path)\n-                with open(os.path.join(dest_path, 'main.yml'), 'w') as f:\n+                with open(safe_join(dest_path, 'main.yml'), 'w') as f:\n                     f.write('## write your playbook here')\n \n \n@@ -83,13 +85,15 @@ def get(self, request, **kwargs):\n         work_path = playbook.work_dir\n         file_key = request.query_params.get('key', '')\n         if file_key:\n-            file_path = os.path.join(work_path, file_key)\n-            with open(file_path, 'r') as f:\n-                try:\n+            try:\n+                file_path = safe_join(work_path, file_key)\n+                with open(file_path, 'r') as f:\n                     content = f.read()\n-                except UnicodeDecodeError:\n-                    content = _('Unsupported file content')\n-                return Response({'content': content})\n+            except UnicodeDecodeError:\n+                content = _('Unsupported file content')\n+            except SuspiciousFileOperation:\n+                raise JMSException(code='invalid_file_path', detail={\"msg\": _(\"Invalid file path\")})\n+            return Response({'content': content})\n         else:\n             expand_key = request.query_params.get('expand', '')\n             nodes = self.generate_tree(playbook, work_path, expand_key)\n@@ -105,7 +109,8 @@ def post(self, request, **kwargs):\n             parent_key = ''\n         if os.path.dirname(parent_key) == 'root':\n             parent_key = os.path.basename(parent_key)\n-        full_path = os.path.join(work_path, parent_key)\n+\n+        full_path = safe_join(work_path, parent_key)\n \n         is_directory = request.data.get('is_directory', False)\n         content = request.data.get('content', '')\n@@ -117,27 +122,30 @@ def find_new_name(p, is_file=False):\n                     p = 'new_file.yml'\n                 else:\n                     p = 'new_dir'\n-            np = os.path.join(full_path, p)\n+            np = safe_join(full_path, p)\n             n = 0\n             while os.path.exists(np):\n                 n += 1\n-                np = os.path.join(full_path, '{}({})'.format(p, n))\n+                np = safe_join(full_path, '{}({})'.format(p, n))\n             return np\n \n-        if is_directory:\n-            new_file_path = find_new_name(name)\n-            os.makedirs(new_file_path)\n-        else:\n-            new_file_path = find_new_name(name, True)\n-            with open(new_file_path, 'w') as f:\n-                f.write(content)\n+        try:\n+            if is_directory:\n+                new_file_path = find_new_name(name)\n+                os.makedirs(new_file_path)\n+            else:\n+                new_file_path = find_new_name(name, True)\n+                with open(new_file_path, 'w') as f:\n+                    f.write(content)\n+        except SuspiciousFileOperation:\n+            raise JMSException(code='invalid_file_path', detail={\"msg\": _(\"Invalid file path\")})\n \n         relative_path = os.path.relpath(os.path.dirname(new_file_path), work_path)\n         new_node = {\n             \"name\": os.path.basename(new_file_path),\n             \"title\": os.path.basename(new_file_path),\n-            \"id\": os.path.join(relative_path, os.path.basename(new_file_path))\n-            if not os.path.join(relative_path, os.path.basename(new_file_path)).startswith('.')\n+            \"id\": safe_join(relative_path, os.path.basename(new_file_path))\n+            if not safe_join(relative_path, os.path.basename(new_file_path)).startswith('.')\n             else os.path.basename(new_file_path),\n             \"isParent\": is_directory,\n             \"pId\": relative_path if not relative_path.startswith('.') else 'root',\n@@ -156,7 +164,7 @@ def patch(self, request, **kwargs):\n         new_name = request.data.get('new_name', '')\n \n         if file_key in self.protected_files and new_name:\n-            return Response({'msg': '{} can not be rename'.format(file_key)}, status=status.HTTP_400_BAD_REQUEST)\n+            raise JMSException(code='this_file_can_not_be_rename', detail={\"msg\": _(\"This file can not be rename\")})\n \n         if os.path.dirname(file_key) == 'root':\n             file_key = os.path.basename(file_key)\n@@ -166,16 +174,20 @@ def patch(self, request, **kwargs):\n \n         if not file_key or file_key == 'root':\n             return Response(status=status.HTTP_400_BAD_REQUEST)\n-        file_path = os.path.join(work_path, file_key)\n+        file_path = safe_join(work_path, file_key)\n \n         # rename\n         if new_name:\n-            new_file_path = os.path.join(os.path.dirname(file_path), new_name)\n-            if new_file_path == file_path:\n-                return Response(status=status.HTTP_200_OK)\n-            if os.path.exists(new_file_path):\n-                return Response({'msg': '{} already exists'.format(new_name)}, status=status.HTTP_400_BAD_REQUEST)\n-            os.rename(file_path, new_file_path)\n+            try:\n+                new_file_path = safe_join(os.path.dirname(file_path), new_name)\n+                if new_file_path == file_path:\n+                    return Response(status=status.HTTP_200_OK)\n+                if os.path.exists(new_file_path):\n+                    raise JMSException(code='file_already exists', detail={\"msg\": _(\"File already exists\")})\n+                os.rename(file_path, new_file_path)\n+            except SuspiciousFileOperation:\n+                raise JMSException(code='invalid_file_path', detail={\"msg\": _(\"Invalid file path\")})\n+\n         # edit content\n         else:\n             if not is_directory:\n@@ -189,10 +201,11 @@ def delete(self, request, **kwargs):\n         work_path = playbook.work_dir\n         file_key = request.query_params.get('key', '')\n         if not file_key:\n-            return Response({'msg': 'key is required'}, status=status.HTTP_400_BAD_REQUEST)\n+            raise JMSException(code='file_key_is_required', detail={\"msg\": _(\"File key is required\")})\n+\n         if file_key in self.protected_files:\n-            return Response({'msg': ' {} can not be delete'.format(file_key)}, status=status.HTTP_400_BAD_REQUEST)\n-        file_path = os.path.join(work_path, file_key)\n+            raise JMSException(code='This file can not be delete', detail={\"msg\": _(\"This file can not be delete\")})\n+        file_path = safe_join(work_path, file_key)\n         if os.path.isdir(file_path):\n             shutil.rmtree(file_path)\n         else:\n@@ -216,11 +229,12 @@ def generate_tree(playbook, root_path, expand_key=None):\n \n             relative_path = os.path.relpath(path, root_path)\n             for d in dirs:\n+                dir_id = os.path.relpath(safe_join(path, d), root_path)\n+\n                 node = {\n                     \"name\": d,\n                     \"title\": d,\n-                    \"id\": os.path.join(relative_path, d) if not os.path.join(relative_path, d).startswith(\n-                        '.') else d,\n+                    \"id\": dir_id,\n                     \"isParent\": True,\n                     \"open\": True,\n                     \"pId\": relative_path if not relative_path.startswith('.') else 'root',\n@@ -230,12 +244,12 @@ def generate_tree(playbook, root_path, expand_key=None):\n                     node['open'] = True\n                 nodes.append(node)\n             for f in files:\n+                file_id = os.path.relpath(safe_join(path, f), root_path)\n                 node = {\n                     \"name\": f,\n                     \"title\": f,\n                     \"iconSkin\": 'file',\n-                    \"id\": os.path.join(relative_path, f) if not os.path.join(relative_path, f).startswith(\n-                        '.') else f,\n+                    \"id\": file_id,\n                     \"isParent\": False,\n                     \"open\": False,\n                     \"pId\": relative_path if not relative_path.startswith('.') else 'root',", "file_path": "files/2023_9/98", "file_language": "py", "file_name": "apps/ops/api/playbook.py", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 1, "llm_check": 0, "static_check": 1, "static": {"rats": [false, []], "semgrep": [true, ["       python.django.security.injection.request-data-write.request-data-write                         \n          Found user-controlled request data passed into '.write(...)'. This could be dangerous if a  \n          malicious actor is able to control data into sensitive files. For example, a malicious actor\n          could force rolling of critical log files, or cause a denial-of-service by using up         \n          available disk space. Instead, ensure that request data is properly escaped or sanitized.   \n          Details: https://sg.run/0Q6j                                                                \n\n          164\u2506 content = request.data.get('content', '')\n          165\u2506 is_directory = request.data.get('is_directory', False)\n          166\u2506 \n          167\u2506 if not file_key or file_key == 'root':\n          168\u2506     return Response(status=status.HTTP_400_BAD_REQUEST)\n          169\u2506 file_path = os.path.join(work_path, file_key)\n          170\u2506 \n          171\u2506 # rename\n          172\u2506 if new_name:\n          173\u2506     new_file_path = os.path.join(os.path.dirname(file_path), new_name)\n          174\u2506     if new_file_path == file_path:\n          175\u2506         return Response(status=status.HTTP_200_OK)\n          176\u2506     if os.path.exists(new_file_path):\n          177\u2506         return Response({'msg': '{} already exists'.format(new_name)},                                   \n  status=status.HTTP_400_BAD_REQUEST)                                                                                   \n          178\u2506     os.rename(file_path, new_file_path)\n          179\u2506 # edit content\n          180\u2506 else:\n          181\u2506     if not is_directory:\n          182\u2506         with open(file_path, 'w') as f:          183\u2506             f.write(content)", "       python.django.security.injection.request-data-write.request-data-write                         \n          Found user-controlled request data passed into '.write(...)'. This could be dangerous if a  \n          malicious actor is able to control data into sensitive files. For example, a malicious actor\n          could force rolling of critical log files, or cause a denial-of-service by using up         \n          available disk space. Instead, ensure that request data is properly escaped or sanitized.   \n          Details: https://sg.run/0Q6j                                                                \n\n          111\u2506 content = request.data.get('content', '')\n          112\u2506 name = request.data.get('name', '')\n          113\u2506 \n          114\u2506 def find_new_name(p, is_file=False):\n          115\u2506     if not p:\n          116\u2506         if is_file:\n          117\u2506             p = 'new_file.yml'\n          118\u2506         else:\n          119\u2506             p = 'new_dir'\n          120\u2506     np = os.path.join(full_path, p)\n          121\u2506     n = 0\n          122\u2506     while os.path.exists(np):\n          123\u2506         n += 1\n          124\u2506         np = os.path.join(full_path, '{}({})'.format(p, n))\n          125\u2506     return np\n          126\u2506 \n          127\u2506 if is_directory:\n          128\u2506     new_file_path = find_new_name(name)\n          129\u2506     os.makedirs(new_file_path)\n          130\u2506 else:\n          131\u2506     new_file_path = find_new_name(name, True)\n          132\u2506     with open(new_file_path, 'w') as f:\n          133\u2506         f.write(content)"]]}, "target": -1, "function_before": [], "function_after": []}], "outdated": 0, "cwe_descripiton": "", "cwe_consequence": "", "cwe_method": "", "cwe_solution": ""}
