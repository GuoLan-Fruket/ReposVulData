{"index": 10116, "cve_id": "CVE-2022-23470", "cwe_id": ["CWE-22"], "cve_language": "Python", "cve_description": "Galaxy is an open-source platform for data analysis. An arbitrary file read exists in Galaxy 22.01 and Galaxy 22.05 due to the switch to Gunicorn, which can be used to read any file accessible to the operating system user under which Galaxy is running. This vulnerability affects Galaxy 22.01 and higher, after the switch to gunicorn, which serve static contents directly. Additionally, the vulnerability is mitigated when using Nginx or Apache to serve /static/* contents, instead of Galaxy's internal middleware. This issue has been patched in commit `e5e6bda4f` and will be included in future releases. Users are advised to manually patch their installations. There are no known workarounds for this vulnerability.", "cvss": "7.5", "publish_date": "December 6, 2022", "AV": "NETWORK", "AC": "NETWORK", "PR": "NONE", "UI": "NONE", "S": "UNCHANGED", "C": "HIGH", "I": "NONE", "A": "NONE", "commit_id": "e5e6bda4f014f807ca77ee0cf6af777a55918346", "commit_message": "Contain directory traversal for static files to host static root.", "commit_date": "2022-12-05T19:35:56Z", "project": "galaxyproject/galaxy", "url": "https://api.github.com/repos/galaxyproject/galaxy/commits/e5e6bda4f014f807ca77ee0cf6af777a55918346", "html_url": "https://github.com/galaxyproject/galaxy/commit/e5e6bda4f014f807ca77ee0cf6af777a55918346", "windows_before": [{"commit_id": "c797ae2df15d39ffa2ab77fd392c7e455ad2e690", "commit_date": "Mon Dec 5 18:52:50 2022 +0100", "commit_message": "Use model class string literals instead of enum", "files_name": ["lib/galaxy/quota/_schema.py", "lib/galaxy/schema/schema.py"]}, {"commit_id": "9976d9b42ebfa6179dad2985577d3390095e12b8", "commit_date": "Mon Dec 5 12:42:27 2022 -0500", "commit_message": "Set gravity log dir for tests", "files_name": ["lib/galaxy_test/driver/driver_util.py"]}, {"commit_id": "36f6e3901127b9aa0c180994f74b80ecc066f416", "commit_date": "Thu Nov 17 20:04:59 2022 -0500", "commit_message": "Update gravity section of sample config for 1.0", "files_name": ["lib/galaxy/config/sample/galaxy.yml.sample"]}, {"commit_id": "f329c71a9727e09f4afab8e61dd9a967748dfaf4", "commit_date": "Thu Nov 17 20:01:50 2022 -0500", "commit_message": "Update gravity launch test for 1.0", "files_name": ["lib/galaxy_test/driver/driver_util.py"]}, {"commit_id": "0b9c30779dee6f73a4e1d4f81a91e77ec135d616", "commit_date": "Thu Nov 17 18:48:19 2022 -0500", "commit_message": "Document setting env vars on static handlers", "files_name": ["lib/galaxy/config/sample/job_conf.sample.yml"]}, {"commit_id": "619c6ae47ed145a5ed3254f0ec9b40763aa5a239", "commit_date": "Thu Nov 17 18:28:45 2022 -0500", "commit_message": "Use Gravity 1.0.0 pre-release", "files_name": ["lib/galaxy/dependencies/pinned-requirements.txt"]}, {"commit_id": "1684da5c150ebe1c3fb466e51616e6709a3689c9", "commit_date": "Thu Nov 17 18:27:56 2022 -0500", "commit_message": "Don't modify venv activate to set $GRAVITY_STATE_DIR", "files_name": ["scripts/common_startup.sh", "scripts/common_startup_functions.sh"]}, {"commit_id": "d707507f46a17a042d70c0f07b1be3f6f71dfbdf", "commit_date": "Mon Dec 5 18:51:18 2022 +0100", "commit_message": "Use a fixed example date", "files_name": ["lib/galaxy/managers/metrics.py"]}, {"commit_id": "d37ae6bb729f1edc1813aaa97af960c181812bae", "commit_date": "Mon Dec 5 12:00:12 2022 -0500", "commit_message": "Typescript, already finding bugs...", "files_name": ["client/src/components/AboutGalaxy.vue"]}, {"commit_id": "131c4279c65395f14e62e9e08469d10b8ecd8b20", "commit_date": "Mon Dec 5 11:41:50 2022 -0500", "commit_message": "Add webpack-injected global declarations for use in ts", "files_name": ["client/src/components/AboutGalaxy.vue", "client/types/globals.d.ts"]}, {"commit_id": "d3e3b68331a8a8d63cee9103db8bb9ec8bd0bfd6", "commit_date": "Mon Dec 5 11:29:28 2022 -0500", "commit_message": "Swap to lang='ts' in AvailableDatatypes", "files_name": ["client/src/components/AvailableDatatypes/AvailableDatatypes.vue"]}, {"commit_id": "2b902bbfb4849bbc25859829cb68577bd5911143", "commit_date": "Mon Dec 5 10:59:53 2022 -0500", "commit_message": "Allow vue to switch between parsers depending on lang", "files_name": ["client/.eslintrc.json"]}, {"commit_id": "197d38d4254ef8064c3ee8a6f779d3a185f74cec", "commit_date": "Mon Dec 5 10:53:51 2022 -0500", "commit_message": "Add vueCompilerOptions to tsconfig specifying 2.7 instead of the default 3", "files_name": ["client/tsconfig.json"]}, {"commit_id": "33aa87ae61ace88d20caa6f15e9ca938fd193572", "commit_date": "Mon Dec 5 14:31:02 2022 +0000", "commit_message": "Documents use of k8s_extra_job_envs", "files_name": ["lib/galaxy/config/sample/job_conf.xml.sample_advanced"]}, {"commit_id": "ab570a53cab7b911bec4be16b825646d67d42ccc", "commit_date": "Thu Dec 1 09:15:20 2022 -0500", "commit_message": "Adjust RuleDefinitions.test.ts for ts configuration.", "files_name": ["client/tests/jest/standalone/RuleDefinitions.test.ts"]}, {"commit_id": "519426aadf1130893c1216e3c6c4feaa49e417f0", "commit_date": "Wed Nov 30 22:15:20 2022 -0500", "commit_message": "Extend @vue/tsconfig for base configuration, clean up tsconfig.", "files_name": ["client/package.json", "client/tsconfig.json", "client/types/shim-vue.d.ts", "client/yarn.lock"]}, {"commit_id": "1faa50e75fb5cd0f68163553fab703a4ac9c20ff", "commit_date": "Wed Nov 30 21:43:50 2022 -0500", "commit_message": "Separate application tsconfig from testing base", "files_name": ["client/tsconfig.json", "client/tsconfig.webpack.json", "client/webpack.config.js"]}, {"commit_id": "66994d631a02d15a1603fba161338a317a30896b", "commit_date": "Wed Nov 30 18:57:44 2022 -0500", "commit_message": "REBASE // just split this thing up into testing|app", "files_name": ["client/tsconfig.json"]}, {"commit_id": "5d416f24f18841ca6a012126b5996d28fb9e85fa", "commit_date": "Wed Nov 30 17:20:24 2022 -0500", "commit_message": "Include tests/**/*.ts in tsconfig", "files_name": ["client/tsconfig.json"]}, {"commit_id": "2405bef7996f15bdc43ebf2500804fc7c4179db5", "commit_date": "Wed Nov 30 17:14:06 2022 -0500", "commit_message": "Merge jslint overrides post-rebase", "files_name": ["client/.eslintrc.json"]}, {"commit_id": "f5762583209c0051d51bc6f1da13e3f1bbbda5cf", "commit_date": "Wed Nov 30 17:11:04 2022 -0500", "commit_message": "Move global type declarations to types dir", "files_name": ["client/src/entry/analysis/index.ts", "client/tsconfig.json", "client/types/shim-vue.d.ts", "client/types/types.d.ts", "client/webpack.config.js"]}, {"commit_id": "b8fa41a28517b151e7791b7d53805f5cae6920c9", "commit_date": "Wed Nov 30 16:39:48 2022 -0500", "commit_message": "Explicitly include vue type shim.  It's always the small things...", "files_name": ["client/tsconfig.json"]}, {"commit_id": "7eca34139ca25dccf48be50ccda5f599720dad86", "commit_date": "Fri Sep 30 13:31:10 2022 -0400", "commit_message": "Add vue shim", "files_name": ["client/shim-vue.d.ts", "client/tsconfig.json", "client/webpack.config.js"]}, {"commit_id": "5521dc79a4028d81383e6bebbc656f2317082c4b", "commit_date": "Thu May 12 11:10:13 2022 -0400", "commit_message": "Allow synthetic default imports", "files_name": ["client/src/entry/analysis/index.ts", "client/src/onload/getRootFromIndexLink.ts", "client/tsconfig.json", "client/webpack.config.js"]}, {"commit_id": "de0c6e8afb88eea5ef9c6272d42076dc037b279b", "commit_date": "Wed May 11 22:14:55 2022 -0400", "commit_message": "Set up eslint correctly for typescript", "files_name": ["client/.eslintrc.json"]}, {"commit_id": "3ed7e293504811e4751f3daac9f31058a8455897", "commit_date": "Wed May 11 10:21:38 2022 -0400", "commit_message": "Updates to tsconfig; scope include correctly and use es2015 modules instead of cjs.", "files_name": ["client/tsconfig.json"]}, {"commit_id": "96ce630d2b3ab4fc98ebc39c3315a93dfedd3f0e", "commit_date": "Wed May 11 08:09:54 2022 -0400", "commit_message": "incremental work, it compiles?", "files_name": ["client/src/onload/getRootFromIndexLink.ts", "client/src/utils/serverPath.js", "client/src/utils/serverPath.ts", "client/tsconfig.json"]}, {"commit_id": "f83c10bffb1e6440d107b0f4a53d5d490539cfd6", "commit_date": "Tue May 10 21:38:49 2022 -0400", "commit_message": "Initial deps and config for typescript", "files_name": ["client/tsconfig.json", "client/webpack.config.js", "client/yarn.lock"]}, {"commit_id": "bcad747e70f597d1082afbe89fc8f70b368355df", "commit_date": "Mon Dec 5 13:08:38 2022 +0000", "commit_message": "Update my email address", "files_name": ["CONTRIBUTORS.md"]}, {"commit_id": "9fd598fc2b3185adacb20fe8c7d8b93c7d8e9952", "commit_date": "Mon Nov 28 12:49:11 2022 +0000", "commit_message": "Simplify how args are passed", "files_name": ["lib/galaxy/webapps/galaxy/api/trs_consumer.py"]}, {"commit_id": "3c98bcffa36e83e43df4c0a8f862f5f524528aa8", "commit_date": "Mon Nov 28 12:48:49 2022 +0000", "commit_message": "Formatting", "files_name": ["lib/galaxy_test/api/test_workflows.py"]}, {"commit_id": "2e705eaf9f2e75bd6b0c8c7fa574224456eb4411", "commit_date": "Mon Nov 28 12:44:28 2022 +0000", "commit_message": "Test `source_metadata` contents", "files_name": ["lib/galaxy_test/api/test_workflows.py"]}, {"commit_id": "83e2de3d9e08e6abced81dca1999165fcba214fd", "commit_date": "Fri Nov 4 19:31:37 2022 +0000", "commit_message": "Fixed non-URL TRS import regression", "files_name": ["client/src/components/Workflow/Import/TrsUrlImport.vue", "client/src/utils/navigation/navigation.yml", "lib/galaxy/webapps/galaxy/api/trs_consumer.py", "lib/galaxy/webapps/galaxy/api/workflows.py", "test/integration_selenium/test_trs_import.py"]}, {"commit_id": "96e69879a0f94580552d77a657af8f3331694ffb", "commit_date": "Fri Nov 4 15:45:29 2022 +0000", "commit_message": "use `is None` instead of `== None`", "files_name": ["test/unit/workflows/test_trs_proxy.py"]}, {"commit_id": "c5bc5aa85722d0600c8b2f5a50811b227559d0d4", "commit_date": "Fri Nov 4 15:13:57 2022 +0000", "commit_message": "Fix formatting issues", "files_name": ["client/src/components/Workflow/Import/TrsImport.vue", "client/src/components/Workflow/Import/TrsUrlImport.vue", "lib/galaxy/webapps/galaxy/api/trs_consumer.py", "lib/galaxy/workflow/trs_proxy.py", "lib/galaxy_test/api/test_workflows.py", "test/unit/workflows/test_trs_proxy.py"]}, {"commit_id": "02d829ddb385bab0d1aa4aadf606f1bc41a8d394", "commit_date": "Fri Nov 4 14:17:28 2022 +0000", "commit_message": "Match tool IDs with slashes, and unquote them.", "files_name": ["lib/galaxy/workflow/trs_proxy.py", "lib/galaxy_test/api/test_workflows.py", "test/unit/workflows/test_trs_proxy.py"]}, {"commit_id": "4490339fdca99b8463b740a48468bf4a7c5ed487", "commit_date": "Fri Nov 4 13:41:49 2022 +0000", "commit_message": "Auto-import the workflow if TRS URL was provided in query", "files_name": ["client/src/components/Workflow/Import/TrsUrlImport.vue"]}, {"commit_id": "06a9d8eff45b169d89177ba059e23bcddc7ee6cc", "commit_date": "Fri Nov 4 13:41:28 2022 +0000", "commit_message": "Fixed wrong workflow name being checked", "files_name": ["lib/galaxy_test/api/test_workflows.py"]}, {"commit_id": "4bf41470b5001a3ce48acfa6e35a16cec3f8384e", "commit_date": "Fri Nov 4 12:12:15 2022 +0000", "commit_message": "Unit tests for `TrsProxy` changes", "files_name": ["lib/galaxy/webapps/galaxy/api/workflows.py", "lib/galaxy/workflow/trs_proxy.py", "test/unit/workflows/test_trs_proxy.py"]}, {"commit_id": "159cade2d16a72756e804da9b012d8f229dd2f68", "commit_date": "Wed Nov 2 19:38:21 2022 +0000", "commit_message": "Allow workflows to be imported directly from TRS URLs", "files_name": ["client/src/components/Workflow/Import/TrsImport.vue", "client/src/components/Workflow/Import/TrsUrlImport.vue", "client/src/components/Workflow/services.js", "client/src/entry/analysis/router.js", "lib/galaxy/managers/workflows.py", "lib/galaxy/webapps/galaxy/api/trs_consumer.py", "lib/galaxy/webapps/galaxy/api/trs_search.py", "lib/galaxy/webapps/galaxy/api/workflows.py", "lib/galaxy/workflow/trs_proxy.py", "lib/galaxy_test/api/test_workflows.py", "test/unit/workflows/test_trs_proxy.py"]}, {"commit_id": "e159127ff0657a87f0b8cc738bd20d8f24a48588", "commit_date": "Mon Dec 5 10:40:58 2022 +0100", "commit_message": "restore  notation", "files_name": ["client/src/utils/filterConversion.js"]}, {"commit_id": "47ff70af8ecb439fc4002c4a9ba54857acb0cc14", "commit_date": "Sun Dec 4 19:11:10 2022 +0100", "commit_message": "Fix model_class schema annotations", "files_name": ["lib/galaxy/quota/_schema.py", "lib/galaxy/schema/fields.py", "lib/galaxy/schema/schema.py", "lib/galaxy/webapps/galaxy/services/dataset_collections.py"]}, {"commit_id": "6b764f3897ab014151dca034eb02edca77d94555", "commit_date": "Sun Dec 4 07:38:36 2022 -0500", "commit_message": "Merge pull request #15103 from galaxyproject/dependabot/npm_and_yarn/client/decode-uri-component-0.2.1", "files_name": ["69e4e4e7d9baf3798ef6bf6a27378db840d6bbb6 - Sat Dec 3 22:16:06 2022 +0000 : Merge pull request #15104 from galaxybot/dev_auto_update_dependencies", "bbd0e644741962f491ab3562f84d9e49723d6f27 - Sat Dec 3 03:15:22 2022 +0000 : Update Python dependencies", "lib/galaxy/dependencies/dev-requirements.txt", "lib/galaxy/dependencies/pinned-requirements.txt"]}, {"commit_id": "4c40fe807162024135989b1539a53ac338ae6acf", "commit_date": "Sat Dec 3 10:41:09 2022 -0500", "commit_message": "Merge pull request #15082 from guerler/composition_bar", "files_name": ["6a5608bcd6194329c5b6a2497c61d514c34abd15 - Sat Dec 3 10:34:49 2022 +0100 : Merge pull request #15031 from jmchilton/structured_test_decorators", "0dca4db4405541c7db562e906d256cecefa2f42a - Fri Dec 2 16:44:00 2022 +0000 : Bump decode-uri-component from 0.2.0 to 0.2.1 in /client", "client/package.json", "client/yarn.lock"]}, {"commit_id": "b3f0098ddb77e2d67c79ed3bef3afdfbaf2d643d", "commit_date": "Fri Dec 2 11:43:24 2022 -0500", "commit_message": "Merge pull request #15102 from nsoranzo/js_lint_github_wf", "files_name": ["71be0f9743fb514e1cf74e4ab6eff8d1d7e38bca - Fri Dec 2 15:09:31 2022 +0000 : Move JavaScript linting to GitHub workflows", ".circleci/config.yml", ".github/workflows/js_lint.yaml"]}, {"commit_id": "bbabe3dedf2ab2ca14440b7c218b254845f6692f", "commit_date": "Fri Dec 2 14:47:23 2022 +0100", "commit_message": "add `get_published_history_names_from_server` to histories published test", "files_name": ["lib/galaxy_test/selenium/test_histories_published.py"]}, {"commit_id": "48c9d6f7c843f6bf7e1cc98dc45d72ace82728ef", "commit_date": "Fri Dec 2 13:12:28 2022 +0100", "commit_message": "Relax file source access requirements in tests", "files_name": ["lib/galaxy_test/driver/integration_setup.py", "test/integration/test_remote_files_posix.py"]}], "windows_after": [{"commit_id": "1482c2be3792f8bc70a99f898f9ae348dc61fa4e", "commit_date": "Mon Dec 5 14:36:31 2022 -0500", "commit_message": "Merge remote-tracking branch 'upstream/release_22.01' into release_22.05", "files_name": ["bd5b9fdf9a1092c053ca6407f4171361b7692e58 - Mon Dec 5 20:49:32 2022 +0100 : Merge pull request #15097 from dannon/ts-vue-redux", "1a04b0f39602eece0c49eb0322a63ba4b0889efb - Mon Dec 5 14:52:14 2022 -0500 : Merge remote-tracking branch 'upstream/release_22.05' into dev", "a3b2d702604398403d984e07c02794e754313339 - Mon Dec 5 18:31:20 2022 -0500 : convert utcdate to composition+ts", "client/src/components/UtcDate.vue"]}, {"commit_id": "16f94c869b012f56484d522238ca1ecd4bfb6791", "commit_date": "Mon Dec 5 18:31:21 2022 -0500", "commit_message": "Make one-liner computeds more brief.", "files_name": ["client/src/components/UtcDate.vue"]}, {"commit_id": "5b9a19c971ae4c84a6eca1b05d92f5a64650ab68", "commit_date": "Mon Dec 5 18:31:22 2022 -0500", "commit_message": "Overhaul utcdate test to toggle props and observe text instead of directly inspecting computeds", "files_name": ["client/src/components/UtcDate.test.js"]}, {"commit_id": "8af76ab49f56c39b5791a88d887427ad345cdeef", "commit_date": "Mon Dec 5 18:31:23 2022 -0500", "commit_message": "Drop unused import from RuleDefinitions.test.ts", "files_name": ["client/tests/jest/standalone/RuleDefinitions.test.ts"]}, {"commit_id": "cc6402e13569b4e3e4ef6529f975c0b8a95c5411", "commit_date": "Mon Dec 5 18:31:24 2022 -0500", "commit_message": "Use type declaration for props.", "files_name": ["client/src/components/UtcDate.test.js", "client/src/components/UtcDate.vue"]}, {"commit_id": "1986e73841f3c7658ccc105ea3ee5bc00ffd7c5a", "commit_date": "Tue Dec 6 11:50:42 2022 +0100", "commit_message": "Merge pull request #15105 from mvdbeek/model_class_fix", "files_name": ["b7c62d0ac8e55ab3f23eb00402c4eead7b0343e4 - Sat Dec 3 12:03:10 2022 +0100 : Add script that can dump openapi schema without a running galaxy", "lib/galaxy/webapps/galaxy/fast_app.py", "scripts/dump_openapi_schema.py"]}, {"commit_id": "7b864a8c458362d162ced06a37cf1c106b68af06", "commit_date": "Sun Dec 4 21:06:41 2022 +0100", "commit_message": "Add makefile target to update autogenerated client", "files_name": ["Makefile", "client/package.json", "client/yarn.lock"]}, {"commit_id": "1192bb542871a47bb65beb73019c2ea90a0ca8db", "commit_date": "Tue Dec 6 13:14:37 2022 +0100", "commit_message": "Add generated schema", "files_name": ["client/src/schema/fetcher.ts", "client/src/schema/index.ts", "client/src/schema/schema.ts"]}, {"commit_id": "d39dd525c98035f4da6defd1a4021ec73fb35599", "commit_date": "Sun Dec 4 22:02:27 2022 +0100", "commit_message": "Use autogenerated client in datatypes service", "files_name": ["client/src/components/Datatypes/factory.ts", "client/src/components/Datatypes/index.js", "client/src/components/Datatypes/index.test.js", "client/src/components/Datatypes/model.ts", "client/src/components/Datatypes/services.js", "client/src/components/Datatypes/services.ts", "client/src/components/Datatypes/test-data/datatypes.json", "client/src/components/Datatypes/test-data/datatypes.mapping.json", "client/src/components/Datatypes/test_fixtures.js", "client/src/components/Datatypes/test_fixtures.ts"]}, {"commit_id": "2c8cf9846056e1674f8c56e655cd7e2312ce5cc4", "commit_date": "Sun Dec 4 22:39:31 2022 +0100", "commit_message": "Strip trailing slash in getAppRoot", "files_name": ["client/src/onload/loadConfig.js"]}, {"commit_id": "ee083cde3f5eba4b43e061158f30dd3653f350a4", "commit_date": "Mon Dec 5 10:59:45 2022 +0100", "commit_message": "Only strip trailing slash for fetcher", "files_name": ["client/src/onload/loadConfig.js", "client/src/schema/fetcher.ts"]}, {"commit_id": "87e68c24e4b3d406acea70c5665ef9640b2beb56", "commit_date": "Mon Dec 5 12:56:52 2022 +0100", "commit_message": "Convert Dataset/services.js to typescript and use typed client", "files_name": ["client/src/components/Dataset/DatasetLink/DatasetLink.vue", "client/src/components/Dataset/DatasetList.vue", "client/src/components/Dataset/compositeDatasetUtils.js", "client/src/components/Dataset/services.js", "client/src/components/Dataset/services.ts", "client/src/components/History/CurrentHistory/HistoryPanel.vue"]}, {"commit_id": "7cb88fa7501c5f40772b5557826620c2eaa6841f", "commit_date": "Mon Dec 5 13:08:34 2022 +0100", "commit_message": "Move rethrowSimple into openapi-typescript-fetch middleware", "files_name": ["client/src/components/Datatypes/services.ts", "client/src/schema/fetcher.ts"]}, {"commit_id": "55b6cc60f1e790329abe5a874988585e92a8148b", "commit_date": "Tue Dec 6 11:22:35 2022 +0100", "commit_message": "Type fixes for strict mode", "files_name": ["client/src/components/Dataset/services.ts", "client/src/components/Datatypes/model.ts", "client/src/schema/fetcher.ts", "client/src/utils/simple-error.ts"]}, {"commit_id": "adac1f51d2046db9dfe0baf1a904890f1bebfffa", "commit_date": "Tue Dec 6 12:12:04 2022 +0100", "commit_message": "Use FetchArgType to extact types", "files_name": ["client/src/components/Dataset/services.ts"]}, {"commit_id": "0051281b1f603447f14f9fb2ae535da01830e436", "commit_date": "Tue Dec 6 12:20:10 2022 +0100", "commit_message": "Use FetchArgType throughout", "files_name": ["client/src/components/Dataset/services.ts"]}, {"commit_id": "d689b7916991858720a656cc853351dae02775df", "commit_date": "Tue Dec 6 14:51:49 2022 +0100", "commit_message": "Merge pull request #15090 from davelopez/fix_task_history_export_ftp", "files_name": ["8e5a942c4855902484798a74d1b79a61581b3ed0 - Tue Dec 6 14:56:12 2022 +0100 : Drop unused paths type import", "client/src/components/Dataset/services.ts"]}, {"commit_id": "6f836720c7ae0c15edeb692470c47f5ab58a3fe4", "commit_date": "Tue Dec 6 09:07:51 2022 -0500", "commit_message": "Merge pull request #15106 from mvdbeek/typescript_api_client", "files_name": ["8a6563f2bc2c31f03012ea9de5ac34fd1a3c8688 - Tue Dec 6 09:30:35 2022 -0500 : Add toplevel tsconfig // fixes precommit hook and might help vscode find settings better?", "tsconfig.js"]}, {"commit_id": "d739c7a24e3dbf786b9051dae03b62b0ab34ccd5", "commit_date": "Tue Dec 6 15:30:58 2022 +0100", "commit_message": "convert animationFrame to ts", "files_name": ["client/src/composables/sensors/animationFrame.ts"]}, {"commit_id": "576edb50fe024117ad87ba5ea601644050e1ced2", "commit_date": "Tue Dec 6 09:31:09 2022 -0500", "commit_message": "Flag explicit any as warning instead of masking", "files_name": ["client/.eslintrc.json"]}, {"commit_id": "4ae456b854407dd0d9504d96091b0478189acbd8", "commit_date": "Thu Dec 1 13:29:33 2022 +0100", "commit_message": "fix animation frame resize observer", "files_name": ["client/src/components/History/Multiple/MultipleViewList.vue", "client/src/composables/sensors/animationFrameResizeObserver.js"]}, {"commit_id": "eab33026c1812c486e7ef91f8c64d27495fc1638", "commit_date": "Tue Dec 6 09:35:14 2022 -0500", "commit_message": "Set an explicit outDir.  We don't *use* this in our build process, but it prevents errors when vscode thinks it needs to overwrite js", "files_name": ["client/tsconfig.json"]}, {"commit_id": "3044722832861084c3d556caa4a558ffcad2c0c8", "commit_date": "Tue Dec 6 09:35:35 2022 -0500", "commit_message": "Drop explicit node_modules exclude -- this is already in the default setting", "files_name": ["client/tsconfig.json"]}, {"commit_id": "47f41efd9b9e4cfd10a78525a967c8b1fb9284dc", "commit_date": "Tue Dec 6 15:41:04 2022 +0100", "commit_message": "convert sensors to ts", "files_name": ["client/package.json", "client/src/composables/sensors/animationFrameResizeObserver.ts", "client/src/composables/sensors/animationFrameScroll.ts", "client/yarn.lock"]}, {"commit_id": "07d33086bd9ec5616f205e4bc9a160558d5887b7", "commit_date": "Tue Dec 6 15:46:40 2022 +0100", "commit_message": "convert filter to ts", "files_name": ["client/src/composables/utils/filter.ts"]}, {"commit_id": "b98481f484b2afb55a65f2ad54d586cb2aaaa85b", "commit_date": "Tue Dec 6 15:47:49 2022 +0100", "commit_message": "remove unused import", "files_name": ["client/src/composables/utils/filter.ts"]}, {"commit_id": "442e74ab47464a142689e96c7d6987be67a84cb3", "commit_date": "Tue Dec 6 15:55:28 2022 +0100", "commit_message": "remove var", "files_name": ["client/src/composables/sensors/animationFrame.ts", "client/src/composables/sensors/animationFrameResizeObserver.ts"]}, {"commit_id": "f2c5eb349649c2f8a7f6da18eecc9b64ee9180aa", "commit_date": "Tue Dec 6 15:59:00 2022 +0100", "commit_message": "fix typo", "files_name": ["client/src/composables/sensors/animationFrameResizeObserver.ts"]}, {"commit_id": "be46794aa008b66caaa20ec70527c83d05f6f546", "commit_date": "Tue Dec 6 10:16:59 2022 -0500", "commit_message": "Merge pull request #14985 from itisAliRH/vuetify_published_histories", "files_name": ["ced9e3cef038128012cb539e3e092b083e15850e - Tue Dec 6 16:26:02 2022 +0100 : make index const", "client/src/composables/sensors/animationFrame.ts"]}, {"commit_id": "fad0453e72da141ade6adfb787d91cef7af088fc", "commit_date": "Tue Dec 6 10:53:21 2022 -0500", "commit_message": "Update gravity section of sample config", "files_name": ["lib/galaxy/config/sample/galaxy.yml.sample"]}, {"commit_id": "d30fd7bfc5ad7efb7468e648ce51e9092d1ebbcf", "commit_date": "Tue Dec 6 11:46:22 2022 -0500", "commit_message": "Update gravity to 0.13.6", "files_name": ["lib/galaxy/dependencies/dev-requirements.txt", "lib/galaxy/dependencies/pinned-requirements.txt"]}, {"commit_id": "9a87821c1c9e0d38f717740f557e4626dad66de0", "commit_date": "Tue Dec 6 12:04:29 2022 -0500", "commit_message": "Update to 2022 NAR paper", "files_name": ["CITATION"]}, {"commit_id": "24e2755ea1b82252d91f88975ff0fa2538be22b8", "commit_date": "Tue Dec 6 19:46:04 2022 +0100", "commit_message": "update the workflow form language", "files_name": ["client/src/components/Workflow/Editor/Forms/FormSection.vue"]}, {"commit_id": "f5a24f084b6f130b372e91a591d48f7728620b3f", "commit_date": "Tue Dec 6 19:54:33 2022 +0100", "commit_message": "Merge pull request #15121 from dannon/minor-tsconfig-tweaks", "files_name": ["d42b9a7d95d4a5d2c91441d922d3b43bf124acb1 - Tue Dec 6 19:55:47 2022 +0100 : Merge pull request #15116 from dannon/convert-utcdate", "da85409c97d8731a6a6eb8bebfc521fd75b0e019 - Tue Dec 6 13:56:57 2022 -0500 : Merge pull request #15123 from mschatz/patch-1", "f2c221f48402259d3f9455e1d094950c68b66078 - Tue Dec 6 20:40:00 2022 +0100 : Merge pull request #15122 from natefoo/gravity-0.13.6", "f882d387d9e4b858d99d8283b5d3eef6af5f9eb8 - Tue Dec 6 19:50:06 2022 +0000 : Fix resolved default value of ``tool_dependency_dir`` and ``involucro_path`` config options", "lib/galaxy/config/__init__.py", "lib/galaxy/config/schemas/config_schema.yml"]}, {"commit_id": "4390d3532d2fc3edcaca7ff36b6087a644c569bc", "commit_date": "Tue Dec 6 16:11:54 2022 -0500", "commit_message": "Merge pull request #15125 from galaxyproject/martenson-patch-1", "files_name": ["f9daab77c3de6806cee304a7eb67d451518aad10 - Wed Dec 7 01:30:38 2022 +0000 : Install involucro when resolvers are instantiated", "lib/galaxy/tool_util/deps/container_resolvers/__init__.py", "lib/galaxy/tool_util/deps/container_resolvers/mulled.py", "lib/galaxy/tool_util/deps/containers.py"]}, {"commit_id": "7676afbf3b2f03c5f50540287facd8c1a824517e", "commit_date": "Wed Dec 7 03:51:07 2022 +0000", "commit_message": "Update minikube-setup-action and use more recent k8s version", "files_name": [".github/workflows/integration.yaml"]}, {"commit_id": "45ae6658fe438751aac7522b5b9ed80ab57500ca", "commit_date": "Tue Dec 6 23:54:08 2022 -0500", "commit_message": "fixing Selenium test", "files_name": ["client/src/components/Form/Elements/FormText.vue"]}, {"commit_id": "fdc59a350d29c31f3140e1b8de98a5a4fc6781ad", "commit_date": "Wed Dec 7 07:32:30 2022 +0100", "commit_message": "Merge pull request #15130 from nsoranzo/fix_test_build_mulled", "files_name": ["2a6f9c2a297a2ce8e4f501fc3b3e9e2d103d59d2 - Wed Dec 7 07:37:59 2022 +0100 : Merge pull request #15017 from natefoo/gravity-1.0", "3158fbac2165ec4bad2185168c4ebd1ccb10612c - Wed Dec 7 10:40:10 2022 +0100 : Merge pull request #15119 from ElectronicBlueberry/composables-ts", "7597d9cd7e5b20aa974d71a4121ae29990e61907 - Mon Aug 8 12:11:33 2022 +0200 : added user api for beacon setting", "lib/galaxy/webapps/galaxy/api/users.py", "lib/galaxy/webapps/galaxy/buildapp.py"]}, {"commit_id": "045e6e2ba689b7dcf0224f79c319bd65836e9db6", "commit_date": "Mon Aug 8 12:13:54 2022 +0200", "commit_message": "added frontedn for beacon user setting", "files_name": ["client/src/components/User/UserBeaconSettings.vue", "client/src/components/User/UserPreferences.vue", "client/src/style/scss/overrides.scss"]}, {"commit_id": "2d0781799371a27ba7a644dc796f5e976100dd14", "commit_date": "Mon Aug 8 12:14:34 2022 +0200", "commit_message": "added endpoint to retrieve beacon histories", "files_name": ["lib/galaxy/webapps/galaxy/api/histories.py"]}, {"commit_id": "ebe7b4efdefc86b72dae97712d428c2e561c5b47", "commit_date": "Tue Aug 9 09:22:31 2022 +0200", "commit_message": "fixing some strings", "files_name": ["lib/galaxy/webapps/galaxy/api/histories.py", "lib/galaxy/webapps/galaxy/api/users.py"]}, {"commit_id": "2141f9dd3569c0951709f973e387dff54f21cf3f", "commit_date": "Thu Aug 25 11:51:05 2022 +0200", "commit_message": "removed beacon history endpoint", "files_name": ["lib/galaxy/webapps/galaxy/api/histories.py"]}, {"commit_id": "5bd9212560f7dfc2365ee990526c31c7e4023ce6", "commit_date": "Thu Aug 25 11:51:55 2022 +0200", "commit_message": "added admin config for beacon sharing", "files_name": ["client/src/components/User/UserPreferences.vue", "doc/source/admin/galaxy_options.rst", "lib/galaxy/config/sample/galaxy.yml.sample", "lib/galaxy/config/schemas/config_schema.yml", "lib/galaxy/managers/configuration.py", "lib/galaxy/webapps/galaxy/api/users.py"]}, {"commit_id": "e17a450a9b010765b5f0bc2b0d0a4fbf78be4df5", "commit_date": "Thu Aug 25 14:51:02 2022 +0200", "commit_message": "removed unused imports", "files_name": ["lib/galaxy/webapps/galaxy/api/histories.py"]}, {"commit_id": "16e2e162c9caa640fa637ff4445d31ad01234bf1", "commit_date": "Fri Sep 30 13:05:59 2022 +0200", "commit_message": "adding buttons to create and switch to history", "files_name": ["client/src/components/User/UserBeaconSettings.vue"]}, {"commit_id": "2be18dc3343211be4a301a0d2784a0b6fe2db8f0", "commit_date": "Thu Oct 6 10:33:52 2022 +0200", "commit_message": "using global store to switch history", "files_name": ["client/src/components/User/UserBeaconSettings.vue"]}, {"commit_id": "a356f457a8197d5d8611d2b7c0148d629d8930e9", "commit_date": "Fri Oct 21 10:55:12 2022 +0200", "commit_message": "making \"enable_beacon_integration\" setting optional", "files_name": []}], "parents": [{"commit_id_before": "7136d72b06b30fee0aefb1d617bbe1fe19a5cb49", "url_before": "https://api.github.com/repos/galaxyproject/galaxy/commits/7136d72b06b30fee0aefb1d617bbe1fe19a5cb49", "html_url_before": "https://github.com/galaxyproject/galaxy/commit/7136d72b06b30fee0aefb1d617bbe1fe19a5cb49"}], "details": [{"raw_url": "https://github.com/galaxyproject/galaxy/raw/e5e6bda4f014f807ca77ee0cf6af777a55918346/lib%2Fgalaxy%2Fweb%2Fframework%2Fmiddleware%2Fstatic.py", "code": "import os\nfrom typing import List, Tuple\n\nfrom paste import request\nfrom paste.fileapp import FileApp\nfrom paste.httpheaders import ETAG\nfrom paste.urlparser import StaticURLParser\n\n\nclass CacheableStaticURLParser(StaticURLParser):\n\n    def __init__(self, directory, cache_seconds=None, directory_per_host=None):\n        StaticURLParser.__init__(self, directory)\n        self.cache_seconds = cache_seconds\n        self.directory_per_host = directory_per_host\n\n    def __call__(self, environ, start_response):\n        path_info = environ.get('PATH_INFO', '')\n        if not path_info:\n            # See if this is a static file hackishly mapped.\n            if os.path.exists(self.directory) and os.path.isfile(self.directory):\n                app = FileApp(self.directory)\n                if self.cache_seconds:\n                    app.cache_control(max_age=int(self.cache_seconds))\n                return app(environ, start_response)\n            return self.add_slash(environ, start_response)\n        if path_info == '/':\n            # @@: This should obviously be configurable\n            filename = 'index.html'\n        else:\n            filename = request.path_info_pop(environ)\n\n        directory = self.directory\n        host = environ.get('HTTP_HOST')\n        if self.directory_per_host and host:\n            for host_key, host_val in self.directory_per_host.items():\n                if host_key in host:\n                    directory = host_val\n                    break\n\n        full = self.normpath(os.path.join(directory, filename))\n        if not full.startswith(directory):\n            # Out of bounds\n            return self.not_found(environ, start_response)\n\n        if not os.path.exists(full):\n            return self.not_found(environ, start_response)\n        if os.path.isdir(full):\n            # @@: Cache?\n            return self.__class__(full)(environ, start_response)\n        if environ.get('PATH_INFO') and environ.get('PATH_INFO') != '/':\n            return self.error_extra_path(environ, start_response)\n        if_none_match = environ.get('HTTP_IF_NONE_MATCH')\n        if if_none_match:\n            mytime = os.stat(full).st_mtime\n            if str(mytime) == if_none_match:\n                headers: List[Tuple[str, str]] = []\n                ETAG.update(headers, mytime)\n                start_response('304 Not Modified', headers)\n                return ['']  # empty body\n        app = FileApp(full)\n        if self.cache_seconds:\n            app.cache_control(max_age=int(self.cache_seconds))\n        return app(environ, start_response)\n\n\ndef make_static(global_conf, document_root, cache_seconds=None):\n    return CacheableStaticURLParser(document_root, cache_seconds)\n", "code_before": "import os\nfrom typing import List, Tuple\n\nfrom paste import request\nfrom paste.fileapp import FileApp\nfrom paste.httpheaders import ETAG\nfrom paste.urlparser import StaticURLParser\n\n\nclass CacheableStaticURLParser(StaticURLParser):\n\n    def __init__(self, directory, cache_seconds=None, directory_per_host=None):\n        StaticURLParser.__init__(self, directory)\n        self.cache_seconds = cache_seconds\n        self.directory_per_host = directory_per_host\n\n    def __call__(self, environ, start_response):\n        path_info = environ.get('PATH_INFO', '')\n        if not path_info:\n            # See if this is a static file hackishly mapped.\n            if os.path.exists(self.directory) and os.path.isfile(self.directory):\n                app = FileApp(self.directory)\n                if self.cache_seconds:\n                    app.cache_control(max_age=int(self.cache_seconds))\n                return app(environ, start_response)\n            return self.add_slash(environ, start_response)\n        if path_info == '/':\n            # @@: This should obviously be configurable\n            filename = 'index.html'\n        else:\n            filename = request.path_info_pop(environ)\n\n        directory = self.directory\n        host = environ.get('HTTP_HOST')\n        if self.directory_per_host and host:\n            for host_key, host_val in self.directory_per_host.items():\n                if host_key in host:\n                    directory = host_val\n                    break\n\n        full = os.path.join(directory, filename)\n        if not os.path.exists(full):\n            return self.not_found(environ, start_response)\n        if os.path.isdir(full):\n            # @@: Cache?\n            return self.__class__(full)(environ, start_response)\n        if environ.get('PATH_INFO') and environ.get('PATH_INFO') != '/':\n            return self.error_extra_path(environ, start_response)\n        if_none_match = environ.get('HTTP_IF_NONE_MATCH')\n        if if_none_match:\n            mytime = os.stat(full).st_mtime\n            if str(mytime) == if_none_match:\n                headers: List[Tuple[str, str]] = []\n                ETAG.update(headers, mytime)\n                start_response('304 Not Modified', headers)\n                return ['']  # empty body\n        app = FileApp(full)\n        if self.cache_seconds:\n            app.cache_control(max_age=int(self.cache_seconds))\n        return app(environ, start_response)\n\n\ndef make_static(global_conf, document_root, cache_seconds=None):\n    return CacheableStaticURLParser(document_root, cache_seconds)\n", "patch": "@@ -38,7 +38,11 @@ def __call__(self, environ, start_response):\n                     directory = host_val\n                     break\n \n-        full = os.path.join(directory, filename)\n+        full = self.normpath(os.path.join(directory, filename))\n+        if not full.startswith(directory):\n+            # Out of bounds\n+            return self.not_found(environ, start_response)\n+\n         if not os.path.exists(full):\n             return self.not_found(environ, start_response)\n         if os.path.isdir(full):", "file_path": "files/2022_12/1725", "file_language": "py", "file_name": "lib/galaxy/web/framework/middleware/static.py", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 0, "llm_check": 1, "static_check": 0, "static": {"rats": [false, []], "semgrep": [false, []]}, "target": -1, "function_before": [], "function_after": []}], "outdated": 0, "cwe_descripiton": "", "cwe_consequence": "", "cwe_method": "", "cwe_solution": ""}
