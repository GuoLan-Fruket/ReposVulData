{"index": 4816, "cve_id": "CVE-2020-5246", "cwe_id": ["CWE-74"], "cve_language": "Python", "cve_description": "Traccar GPS Tracking System before version 4.9 has a LDAP injection vulnerability. It occurs when user input is being used in LDAP search filter. By providing specially crafted input, an attacker can modify the logic of the LDAP query and get admin privileges. The issue only impacts instances with LDAP configuration and where users can craft their own names. This has been patched in version 4.9.", "cvss": "6.5", "publish_date": "July 16, 2020", "AV": "NETWORK", "AC": "NETWORK", "PR": "LOW", "UI": "NONE", "S": "UNCHANGED", "C": "NONE", "I": "HIGH", "A": "NONE", "commit_id": "e4f6e74e57ab743b65d49ae00f6624a20ca0291e", "commit_message": "Encode LDAP user names", "commit_date": "2020-02-26T06:26:18Z", "project": "traccar/traccar", "url": "https://api.github.com/repos/traccar/traccar/commits/e4f6e74e57ab743b65d49ae00f6624a20ca0291e", "html_url": "https://github.com/traccar/traccar/commit/e4f6e74e57ab743b65d49ae00f6624a20ca0291e", "windows_before": [{"commit_id": "886a1ac0550c5aecb13222668f4ca35758ec92d1", "commit_date": "Tue Feb 25 21:40:33 2020 -0800", "commit_message": "Decode ignition value", "files_name": ["src/main/java/org/traccar/protocol/EskyProtocolDecoder.java", "src/test/java/org/traccar/protocol/EskyProtocolDecoderTest.java"]}, {"commit_id": "9662f1d3b813bbdead7613f6919e23b6fe76c6db", "commit_date": "Tue Feb 25 17:40:26 2020 -0800", "commit_message": "Merge pull request #4389 from edvalley/proposed", "files_name": ["1049b01a22e28acb69ea530de824608b72c8222c - Tue Feb 25 18:27:26 2020 -0500 : Changes after review", "src/main/java/org/traccar/MainModule.java", "src/main/java/org/traccar/WebDataHandler.java"]}, {"commit_id": "7db2926c38edafb4cbd9b2cda1a98b5567836bc1", "commit_date": "Sun Feb 23 17:34:08 2020 -0800", "commit_message": "Remove debugging code", "files_name": ["src/main/java/org/traccar/Main.java"]}, {"commit_id": "05990dfe53bc19cd4117491a43434d0edd310d1c", "commit_date": "Sun Feb 23 12:12:12 2020 -0800", "commit_message": "Merge pull request #4488 from alexthefifth/master", "files_name": ["b23b1efe6b3dba788f3acb87b403522097114208 - Sun Feb 23 15:08:41 2020 -0500 : Do not require password (default when programming MT600 via USB)", "src/main/java/org/traccar/protocol/Tlt2hProtocolDecoder.java"]}, {"commit_id": "43abeeb1dad9e15681d87b299752d057914ae29e", "commit_date": "Sat Feb 22 17:43:09 2020 -0800", "commit_message": "Fix style check", "files_name": ["gradle/checkstyle.xml", "src/main/java/org/traccar/api/HealthCheckService.java"]}, {"commit_id": "8d6e45331cb4ba86faaabfe7d1f9e7ccfd6e824d", "commit_date": "Sat Feb 22 16:59:43 2020 -0800", "commit_message": "Support health monitoring", "files_name": ["setup/default.xml", "setup/traccar.service", "src/main/java/org/traccar/Main.java", "src/main/java/org/traccar/api/HealthCheckService.java"]}, {"commit_id": "deb519ebd6798450509afaf4067e140edd7eb0d0", "commit_date": "Sat Feb 22 11:34:57 2020 -0800", "commit_message": "Fix concurrency issues", "files_name": ["src/main/java/org/traccar/api/ExtendedObjectResource.java", "src/main/java/org/traccar/database/BaseObjectManager.java", "src/main/java/org/traccar/database/CommandsManager.java", "src/main/java/org/traccar/database/DeviceManager.java", "src/main/java/org/traccar/database/DriversManager.java", "src/main/java/org/traccar/database/ExtendedObjectManager.java", "src/main/java/org/traccar/database/GroupsManager.java", "src/main/java/org/traccar/database/SimpleObjectManager.java", "src/main/java/org/traccar/database/UsersManager.java"]}, {"commit_id": "cb25fe3e58c0876fe6c000a1f0a7c7435e3fb0e1", "commit_date": "Fri Feb 21 21:54:45 2020 -0800", "commit_message": "Update readme file", "files_name": ["setup/README.txt"]}, {"commit_id": "1bbd6f12b34eaed8699fe943130142d9f2638df8", "commit_date": "Wed Feb 19 23:00:06 2020 -0800", "commit_message": "Remove test confirmation", "files_name": ["src/main/java/org/traccar/protocol/GlobalstarProtocolDecoder.java"]}, {"commit_id": "0f4695199a9a6c212bbe7021aa11db775eb2b7e5", "commit_date": "Tue Feb 18 21:39:04 2020 -0800", "commit_message": "Support UDP protocol", "files_name": ["src/main/java/org/traccar/protocol/EskyProtocol.java", "src/main/java/org/traccar/protocol/EskyProtocolDecoder.java"]}, {"commit_id": "4512941667653c15a28e0917024c04b73238005a", "commit_date": "Tue Feb 18 21:27:12 2020 -0800", "commit_message": "Convert decoded values", "files_name": ["src/main/java/org/traccar/protocol/BceProtocolDecoder.java"]}, {"commit_id": "d199eb36f3b70d80f0a2cffead5777c7998c4e31", "commit_date": "Sat Feb 15 22:01:58 2020 -0800", "commit_message": "Provide default URLs", "files_name": ["src/main/java/org/traccar/geocoder/FactualGeocoder.java", "src/main/java/org/traccar/geocoder/GisgraphyGeocoder.java", "src/main/java/org/traccar/geocoder/MapQuestGeocoder.java", "src/test/java/org/traccar/geocoder/GeocoderTest.java"]}, {"commit_id": "b6fe2bd75a3541d6fe63a6b6161ed04b773e37a6", "commit_date": "Sat Feb 15 21:50:18 2020 -0800", "commit_message": "Provide default URL", "files_name": ["src/main/java/org/traccar/geocoder/OpenCageGeocoder.java"]}, {"commit_id": "f8c83c4f7f517b7482bdf7f29a3704903b876855", "commit_date": "Sat Feb 15 20:23:08 2020 -0500", "commit_message": "Changes after review", "files_name": ["src/main/java/org/traccar/MainModule.java", "src/main/java/org/traccar/WebDataHandler.java", "src/main/java/org/traccar/config/Keys.java"]}, {"commit_id": "81858280f7477da619aaf1adca972827847b47cb", "commit_date": "Sat Feb 15 11:16:43 2020 -0800", "commit_message": "Decode driving behavior", "files_name": ["src/main/java/org/traccar/protocol/BceProtocolDecoder.java"]}, {"commit_id": "8bf4c171e1771eb89506a87ba8435776ee61286e", "commit_date": "Sat Feb 15 11:11:01 2020 -0800", "commit_message": "Fix ADC decoding", "files_name": ["src/main/java/org/traccar/protocol/SuntechProtocolDecoder.java", "src/test/java/org/traccar/protocol/SuntechProtocolDecoderTest.java"]}, {"commit_id": "c860f15e6a541c72d901d928941912edb943883e", "commit_date": "Sat Feb 15 11:01:15 2020 -0800", "commit_message": "Fix checksum calculation", "files_name": ["src/main/java/org/traccar/protocol/GatorProtocolDecoder.java"]}, {"commit_id": "83618b94c380b2f31b65eba20ee295c824cd2726", "commit_date": "Mon Feb 10 23:10:23 2020 -0800", "commit_message": "Fix response message", "files_name": ["src/main/java/org/traccar/protocol/GatorProtocolDecoder.java"]}, {"commit_id": "f144438bdcf1385d8f3e9dbd42b9b90e28f750e4", "commit_date": "Mon Feb 10 22:57:09 2020 -0800", "commit_message": "Support wifi networks", "files_name": ["src/main/java/org/traccar/protocol/HuaShengProtocolDecoder.java"]}, {"commit_id": "9f074b062271e5e46612ef0149dd8e2269c22222", "commit_date": "Mon Feb 10 22:45:25 2020 -0800", "commit_message": "Revert \"Cell info attributes\"", "files_name": ["src/main/java/org/traccar/protocol/Gt06ProtocolDecoder.java"]}, {"commit_id": "d9d79d6e4900b144a66a3e85fdd78c4b9b0c9bd3", "commit_date": "Sun Feb 9 09:43:06 2020 -0800", "commit_message": "Add content type", "files_name": ["src/main/java/org/traccar/protocol/GlobalstarProtocolDecoder.java"]}, {"commit_id": "533d5887d09f794d1d02fd5d8f3b14c480a10a67", "commit_date": "Sat Feb 8 11:49:17 2020 -0800", "commit_message": "Update submodule commit", "files_name": ["9b65e16b36e608c323c8e0b3d2566a511ec7655f - Sat Feb 8 11:15:54 2020 -0800 : Change isetup version", "setup/environment.sh"]}, {"commit_id": "33fdec9a234fc50eb430ce2342d779f5cf681fdc", "commit_date": "Sat Feb 8 10:45:19 2020 -0800", "commit_message": "Update version numbers", "files_name": ["build.gradle", "pom.xml", "setup/traccar.iss", "swagger.json"]}, {"commit_id": "e193ae4656a6e0555565b35e8c657ae0777b156b", "commit_date": "Thu Feb 6 23:16:11 2020 -0800", "commit_message": "Decode additional data", "files_name": ["src/main/java/org/traccar/protocol/BlueProtocolDecoder.java", "src/test/java/org/traccar/protocol/BlueProtocolDecoderTest.java"]}, {"commit_id": "eaacf2e139b15e8d8c25f15b2d1559245184fffa", "commit_date": "Wed Feb 5 21:29:55 2020 -0800", "commit_message": "Cell info attributes", "files_name": ["src/main/java/org/traccar/protocol/Gt06ProtocolDecoder.java"]}, {"commit_id": "2c0563a4f7d4c89551c23c13f17249b5f1b4665a", "commit_date": "Tue Feb 4 22:33:53 2020 -0800", "commit_message": "Implement support for iButton", "files_name": ["src/main/java/org/traccar/protocol/SuntechProtocolDecoder.java", "src/test/java/org/traccar/protocol/SuntechProtocolDecoderTest.java"]}, {"commit_id": "7e9c68727d65c858264a493003f73195e4f51210", "commit_date": "Tue Feb 4 22:04:48 2020 -0800", "commit_message": "Support old Java versions", "files_name": ["src/main/java/org/traccar/protocol/ArnaviBinaryProtocolDecoder.java"]}, {"commit_id": "211dffbcc7d6e43238e7560af968a018b410d60c", "commit_date": "Tue Feb 4 21:29:04 2020 -0800", "commit_message": "Fix build issue", "files_name": ["src/main/java/org/traccar/protocol/GlobalstarProtocolDecoder.java"]}, {"commit_id": "20c2c9eaf19a30bf7cd3182ad3f09af6336404f9", "commit_date": "Tue Feb 4 21:20:53 2020 -0800", "commit_message": "Add content length", "files_name": ["src/main/java/org/traccar/protocol/GlobalstarProtocolDecoder.java"]}, {"commit_id": "b73cafaba31fb6165a6539bb795600642bd3899d", "commit_date": "Mon Feb 3 22:28:53 2020 -0800", "commit_message": "Decode input and output", "files_name": ["src/main/java/org/traccar/protocol/MeitrackProtocolDecoder.java", "src/test/java/org/traccar/protocol/MeitrackProtocolDecoderTest.java"]}, {"commit_id": "117189248da9cac8426d8fa4fb50f8a8d63f56b0", "commit_date": "Mon Feb 3 22:02:24 2020 -0800", "commit_message": "Fix Arnavi response", "files_name": ["src/main/java/org/traccar/protocol/ArnaviBinaryProtocolDecoder.java"]}, {"commit_id": "574566c160357f2e2cac45368ec363ab59952a6d", "commit_date": "Sun Feb 2 16:33:57 2020 -0800", "commit_message": "Fix checkstyle issue", "files_name": ["src/main/java/org/traccar/protocol/ArnaviFrameDecoder.java"]}, {"commit_id": "8b48d8b52f9c29a892dfe4381b3a7226226a76eb", "commit_date": "Sun Feb 2 16:31:10 2020 -0800", "commit_message": "Switch between binary and text", "files_name": ["src/main/java/org/traccar/protocol/ArnaviProtocol.java", "src/main/java/org/traccar/protocol/ArnaviProtocolDecoder.java", "src/main/java/org/traccar/protocol/ArnaviTextProtocolDecoder.java", "src/test/java/org/traccar/protocol/ArnaviTextProtocolDecoderTest.java"]}, {"commit_id": "71735f0c9b17ad1c64a4335a196b4c765b4499c1", "commit_date": "Sun Feb 2 16:26:46 2020 -0800", "commit_message": "Rename classes", "files_name": ["src/main/java/org/traccar/protocol/Arnavi4Protocol.java", "src/main/java/org/traccar/protocol/ArnaviBinaryProtocolDecoder.java", "src/main/java/org/traccar/protocol/ArnaviFrameDecoder.java", "src/main/java/org/traccar/protocol/ArnaviProtocol.java", "src/main/java/org/traccar/protocol/ArnaviTextProtocolDecoder.java", "src/test/java/org/traccar/protocol/ArnaviBinaryProtocolDecoderTest.java", "src/test/java/org/traccar/protocol/ArnaviFrameDecoderTest.java", "src/test/java/org/traccar/protocol/ArnaviTextProtocolDecoderTest.java"]}, {"commit_id": "00f8b1ff552f49ebcb5c1d13c85bd84911a2ac8d", "commit_date": "Sun Feb 2 16:06:09 2020 -0800", "commit_message": "Refactor frame decoder", "files_name": ["src/main/java/org/traccar/protocol/Arnavi4FrameDecoder.java", "src/main/java/org/traccar/protocol/Arnavi4ProtocolDecoder.java"]}, {"commit_id": "c6ce16f71d3cb8c04c080ebd57c5dd53e2b9229a", "commit_date": "Sun Feb 2 15:55:32 2020 -0800", "commit_message": "Fix unit tests", "files_name": ["src/main/java/org/traccar/protocol/Arnavi4FrameDecoder.java", "src/test/java/org/traccar/protocol/Arnavi4FrameDecoderTest.java", "src/test/java/org/traccar/protocol/Arnavi4ProtocolDecoderTest.java"]}, {"commit_id": "ee1dbcf048a922b6023b0714989b454b7dfe9587", "commit_date": "Sun Feb 2 15:36:54 2020 -0800", "commit_message": "Fix merge issues", "files_name": ["src/main/java/org/traccar/helper/Checksum.java", "src/main/java/org/traccar/protocol/Arnavi4FrameDecoder.java", "src/main/java/org/traccar/protocol/Arnavi4Protocol.java", "src/main/java/org/traccar/protocol/Arnavi4ProtocolDecoder.java", "src/test/java/org/traccar/helper/ChecksumTest.java", "src/test/java/org/traccar/protocol/Arnavi4FrameDecoderTest.java", "src/test/java/org/traccar/protocol/Arnavi4ProtocolDecoderTest.java"]}, {"commit_id": "75e5eded6c877577044e9db22cae255cac8d04a1", "commit_date": "Sun Feb 2 15:07:56 2020 -0800", "commit_message": "Move files to new locations", "files_name": ["src/main/java/org/traccar/protocol/Arnavi4FrameDecoder.java", "src/main/java/org/traccar/protocol/Arnavi4Protocol.java", "src/main/java/org/traccar/protocol/Arnavi4ProtocolDecoder.java", "src/test/java/org/traccar/protocol/Arnavi4FrameDecoderTest.java", "src/test/java/org/traccar/protocol/Arnavi4ProtocolDecoderTest.java"]}, {"commit_id": "147f4550827a35a59a000ab5c38237fcc7adf59c", "commit_date": "Sun Feb 2 15:05:06 2020 -0800", "commit_message": "Merge branch 'binakot-master'", "files_name": ["468051a44054ce97f28220176e90983825c8d077 - Sun Feb 2 15:04:47 2020 -0800 : Merge branch 'master' of https://github.com/binakot/traccar into binakot-master", "230227fde27da2db785d97c6894160b256ad6c10 - Sat Feb 1 21:35:24 2020 -0800 : Decode device time", "src/main/java/org/traccar/protocol/TopinProtocolDecoder.java"]}, {"commit_id": "fdf16e5ee51cf7537920d04e1fd4bffbdbd5fa42", "commit_date": "Fri Jan 31 22:53:51 2020 -0800", "commit_message": "Respond with original length", "files_name": ["src/main/java/org/traccar/protocol/TopinProtocolDecoder.java"]}, {"commit_id": "c00fd59ecf8739e47a4f2460bbb4802f4cead1a1", "commit_date": "Thu Jan 30 22:37:36 2020 -0800", "commit_message": "Decode cell towers info", "files_name": ["src/main/java/org/traccar/protocol/HuaShengProtocolDecoder.java", "src/test/java/org/traccar/protocol/HuaShengProtocolDecoderTest.java"]}, {"commit_id": "3bf277a340c57c485af7f3c0ab46b27e070b0998", "commit_date": "Thu Jan 30 22:16:59 2020 -0800", "commit_message": "Add new RST test case", "files_name": ["src/main/java/org/traccar/protocol/RstProtocolDecoder.java", "src/test/java/org/traccar/protocol/RstProtocolDecoderTest.java"]}, {"commit_id": "3c71ac47b4515fb799e67a18b18d722bea4d2241", "commit_date": "Thu Jan 30 05:33:24 2020 -0500", "commit_message": "Log position forwarding failures", "files_name": ["src/main/java/org/traccar/WebDataHandler.java"]}, {"commit_id": "7113e04b9a5cabb509ff0219da18098f4b55924f", "commit_date": "Thu Jan 30 03:49:55 2020 -0500", "commit_message": "Changes after review", "files_name": ["src/main/java/org/traccar/WebDataHandler.java", "src/main/java/org/traccar/config/Keys.java"]}, {"commit_id": "2d5a5e600e576cd4e31046be104cc98f799ad091", "commit_date": "Sun Jan 26 21:24:14 2020 -0800", "commit_message": "Decode BLE location", "files_name": ["src/main/java/org/traccar/protocol/Minifinder2ProtocolDecoder.java", "src/test/java/org/traccar/protocol/Minifinder2ProtocolDecoderTest.java"]}, {"commit_id": "c8198d40db6e623ee45eff121cdf8cfaa2d58281", "commit_date": "Sat Jan 25 09:47:45 2020 -0800", "commit_message": "Support driver license", "files_name": ["src/main/java/org/traccar/protocol/Gt06ProtocolDecoder.java", "src/test/java/org/traccar/protocol/Gt06ProtocolDecoderTest.java"]}], "windows_after": [{"commit_id": "0dcb514f3a0cb66e8c3e4e7b60c9374b2579f7d2", "commit_date": "Tue Feb 25 22:32:54 2020 -0800", "commit_message": "Fix style issue", "files_name": ["src/main/java/org/traccar/database/LdapProvider.java"]}, {"commit_id": "a48c68d4b5fb522081c9182713a4088a66317964", "commit_date": "Fri Feb 28 09:12:30 2020 -0800", "commit_message": "Fix ITS status decoding", "files_name": ["src/main/java/org/traccar/protocol/ItsProtocolDecoder.java"]}, {"commit_id": "1ab53d1f4911e349370542b23a5fa3fe69be7dcc", "commit_date": "Sun Mar 1 23:18:44 2020 +0100", "commit_message": "add support for pushover.net", "files_name": ["src/main/java/org/traccar/notification/NotificatorManager.java", "src/main/java/org/traccar/notificators/NotificatorPushover.java"]}, {"commit_id": "39a2742121de3e016655e9fc5d5ba886e1ab900b", "commit_date": "Sun Mar 1 23:36:54 2020 +0100", "commit_message": "comment too long", "files_name": ["src/main/java/org/traccar/notificators/NotificatorPushover.java"]}, {"commit_id": "4a7a3b59c39bcfe9a6d7ed11b27074d7c1f6b418", "commit_date": "Sun Mar 1 23:44:23 2020 +0100", "commit_message": "comment too long", "files_name": ["src/main/java/org/traccar/notificators/NotificatorPushover.java"]}, {"commit_id": "535b0ffa9a3e435cd58d4f7ade9a4d8c6eb03623", "commit_date": "Sun Mar 1 23:47:33 2020 +0100", "commit_message": "add whitespace", "files_name": ["src/main/java/org/traccar/notificators/NotificatorPushover.java"]}, {"commit_id": "96d7a6c1f8b2563c3b3fb3d4a8737e8c2d606f6e", "commit_date": "Wed Mar 4 00:07:10 2020 -0800", "commit_message": "Support TopFlyTech variation", "files_name": ["src/main/java/org/traccar/protocol/T800xProtocolDecoder.java", "src/test/java/org/traccar/protocol/T800xProtocolDecoderTest.java"]}, {"commit_id": "455f96fb074cb02825c8303d0aa8eff0a848e9fd", "commit_date": "Wed Mar 4 00:25:05 2020 -0800", "commit_message": "Decode GSM signal", "files_name": ["src/main/java/org/traccar/protocol/SolarPoweredProtocolDecoder.java"]}, {"commit_id": "83148e8750ba9689b4dc53f586e0ce1e23cf2032", "commit_date": "Wed Mar 4 00:32:44 2020 -0800", "commit_message": "Convert sensor data", "files_name": ["src/main/java/org/traccar/protocol/BceProtocolDecoder.java"]}, {"commit_id": "dd23d3becaf50ad4cdaf0064712f1f104e1c5967", "commit_date": "Wed Mar 4 16:38:50 2020 +0200", "commit_message": "Allowing custom content type header in location forward", "files_name": ["src/main/java/org/traccar/WebDataHandler.java"]}, {"commit_id": "e7c04c8dfaa67e5bef2d3b9c5ba8924e85045ffc", "commit_date": "Wed Mar 4 21:18:14 2020 +0200", "commit_message": "Fix code review comments and repace url variables for post request as well", "files_name": ["src/main/java/org/traccar/WebDataHandler.java"]}, {"commit_id": "0270f5b639166b385ac779c0d2caa41d7c408771", "commit_date": "Wed Mar 4 21:54:55 2020 +0200", "commit_message": "Adding property to enable URL parameter in json mode", "files_name": ["src/main/java/org/traccar/WebDataHandler.java", "src/main/java/org/traccar/config/Keys.java"]}, {"commit_id": "e39eaf2e9878fe8e575b525dd2ca747e3f5342fe", "commit_date": "Wed Mar 4 21:40:43 2020 +0100", "commit_message": "add Pushover attrs in web interface", "files_name": ["src/main/java/org/traccar/notificators/NotificatorPushover.java"]}, {"commit_id": "b27e8213f380f3ae8c2b9503e0aaecb55c784271", "commit_date": "Wed Mar 4 21:47:19 2020 +0100", "commit_message": "correction for travis-ci", "files_name": ["src/main/java/org/traccar/notificators/NotificatorPushover.java"]}, {"commit_id": "6b7bec4554134517b2f1835d0eb86365e4a8fe42", "commit_date": "Wed Mar 4 22:35:29 2020 -0800", "commit_message": "Fix RPM decoding", "files_name": ["src/main/java/org/traccar/protocol/BceProtocolDecoder.java"]}, {"commit_id": "bc81692c898481cd71ddc54bf05c099796132b5f", "commit_date": "Wed Mar 4 22:40:46 2020 -0800", "commit_message": "Decode ignition value", "files_name": ["src/main/java/org/traccar/protocol/StarLinkProtocolDecoder.java", "src/test/java/org/traccar/protocol/StarLinkProtocolDecoderTest.java"]}, {"commit_id": "7f1e024bca381f93cf1d9e61dadc3bb2f4943da7", "commit_date": "Wed Mar 4 22:55:06 2020 -0800", "commit_message": "Decode additional attributes", "files_name": ["src/main/java/org/traccar/protocol/OmnicommProtocolDecoder.java"]}, {"commit_id": "0443367a581100b4f9abd3d96a50793d80c93e45", "commit_date": "Thu Mar 5 09:22:58 2020 -0800", "commit_message": "Fix coordinates decoding (fix #4496)", "files_name": ["src/main/java/org/traccar/protocol/TelicProtocolDecoder.java", "src/test/java/org/traccar/protocol/TelicProtocolDecoderTest.java"]}, {"commit_id": "9bb835a9d45737d5090d1b78ee69310d59cb0a43", "commit_date": "Thu Mar 5 09:26:06 2020 -0800", "commit_message": "Another minor fix", "files_name": ["src/main/java/org/traccar/protocol/TelicProtocolDecoder.java", "src/test/java/org/traccar/protocol/TelicProtocolDecoderTest.java"]}, {"commit_id": "e46cb0260f224ec296feb7087cdfb05371e6f550", "commit_date": "Thu Mar 5 21:01:51 2020 +0100", "commit_message": "implement device in ui", "files_name": ["src/main/java/org/traccar/notificators/NotificatorPushover.java"]}, {"commit_id": "3c82764799784d3d30d969dbfef9a075f4874278", "commit_date": "Thu Mar 5 22:22:59 2020 +0200", "commit_message": "Rename forward.urlVariables property", "files_name": ["src/main/java/org/traccar/WebDataHandler.java", "src/main/java/org/traccar/config/Keys.java"]}, {"commit_id": "74b5d0c139dd9a76064395aa733330083fd46fb8", "commit_date": "Thu Mar 5 15:06:59 2020 -0800", "commit_message": "Merge pull request #4495 from presidentio/allowing-custom-content-type-header-in-location-forward", "files_name": ["7eecff54effb04d27fdd1d67ed75a1e2dbc3c693 - Thu Mar 5 22:21:45 2020 -0800 : Support OKO AVTO format", "src/main/java/org/traccar/protocol/OkoProtocolDecoder.java", "src/test/java/org/traccar/protocol/OkoProtocolDecoderTest.java"]}, {"commit_id": "d2835b2c6152b448179c0ecae6c9aadc4dce60a6", "commit_date": "Fri Mar 6 16:51:15 2020 +0100", "commit_message": "simplify code", "files_name": ["src/main/java/org/traccar/notificators/NotificatorPushover.java"]}, {"commit_id": "c1b640ef2736b5f3a16440c8fbb12db6ad3bdb56", "commit_date": "Fri Mar 6 19:41:04 2020 +0100", "commit_message": "change copyright date", "files_name": ["src/main/java/org/traccar/notificators/NotificatorPushover.java"]}, {"commit_id": "fa837208bed12dd08e1a540a2279180dec102974", "commit_date": "Fri Mar 6 21:29:27 2020 -0800", "commit_message": "Support Traxsit GPS1 format", "files_name": ["src/main/java/org/traccar/protocol/SigfoxProtocolDecoder.java", "src/test/java/org/traccar/protocol/SigfoxProtocolDecoderTest.java"]}, {"commit_id": "38efcf3dbc8a46b9797e5fb654fc1c68815b3b36", "commit_date": "Sat Mar 7 09:50:49 2020 -0800", "commit_message": "Update response message", "files_name": ["src/main/java/org/traccar/protocol/GlobalstarProtocolDecoder.java"]}, {"commit_id": "405728ba652f6305ee39833b7d4867bb1df7db2f", "commit_date": "Sat Mar 7 20:03:34 2020 +0100", "commit_message": "clean submodule", "files_name": ["679c782f9e464b746e5431a84893229c74fc6c66 - Sat Mar 7 20:35:53 2020 +0100 : remove submodule", "ad2ca9cdb5c70b8139321fdfee86c111c5f690b5 - Sat Mar 7 11:44:12 2020 -0800 : Merge pull request #4494 from floetenbaer/pushover", "9caf803986d14661e2e1842b80ee3aa58c8d5c6d - Sat Mar 7 11:45:52 2020 -0800 : Remove comments", "src/main/java/org/traccar/notificators/NotificatorPushover.java"]}, {"commit_id": "26cc87fd06b94400ee769e8c2985778b3b6e8ff6", "commit_date": "Wed Mar 11 21:09:09 2020 -0700", "commit_message": "Decode additional attributes", "files_name": ["src/main/java/org/traccar/protocol/SigfoxProtocolDecoder.java"]}, {"commit_id": "578a8544bc0d31569fabbc8c3aa26a53d161d5ed", "commit_date": "Wed Mar 11 21:17:02 2020 -0700", "commit_message": "Fix response index", "files_name": ["src/main/java/org/traccar/protocol/EskyProtocolDecoder.java"]}, {"commit_id": "1fdb7794514d59fef165d647f0b9ccf5db271621", "commit_date": "Thu Mar 12 21:27:59 2020 -0700", "commit_message": "Add a test case", "files_name": ["src/test/java/org/traccar/protocol/SolarPoweredProtocolDecoderTest.java"]}, {"commit_id": "e2071c06c0962c083f4f4d5dce5961b08c1920e7", "commit_date": "Sat Mar 14 16:22:47 2020 -0700", "commit_message": "Decode more alarms", "files_name": ["src/main/java/org/traccar/protocol/FifotrackProtocolDecoder.java"]}, {"commit_id": "57c977d8369c96787c778ac2c27769ec53f24a6e", "commit_date": "Sun Mar 15 14:47:36 2020 -0700", "commit_message": "Improve type casting", "files_name": ["src/main/java/org/traccar/BaseProtocolDecoder.java"]}, {"commit_id": "c43208bf5339244cd9a47348ec9daa1805099718", "commit_date": "Sun Mar 15 15:03:43 2020 -0700", "commit_message": "Remove extra method", "files_name": ["src/main/java/org/traccar/BaseProtocol.java", "src/main/java/org/traccar/protocol/WondexProtocol.java"]}, {"commit_id": "f98c3aa5b65e9fa06bcea38d96959b43f6a38245", "commit_date": "Sun Mar 15 15:39:12 2020 -0700", "commit_message": "Simplify data commands", "files_name": ["src/main/java/org/traccar/BaseProtocol.java", "src/main/java/org/traccar/Protocol.java", "src/main/java/org/traccar/database/ActiveDevice.java"]}, {"commit_id": "f9257e664be8c37cc041e004f403d737dd513d6b", "commit_date": "Sun Mar 15 15:43:17 2020 -0700", "commit_message": "Remove unused imports", "files_name": ["src/main/java/org/traccar/Protocol.java", "src/main/java/org/traccar/database/ActiveDevice.java"]}, {"commit_id": "6adcd4a8dd950a5f945c818280974a0302c9fd8b", "commit_date": "Sun Mar 15 15:46:27 2020 -0700", "commit_message": "Remove duplication", "files_name": ["src/main/java/org/traccar/BaseProtocolDecoder.java"]}, {"commit_id": "11dcacc2fdfd29f4440c8c46e501ef565f9b1dfd", "commit_date": "Sun Mar 15 15:58:52 2020 -0700", "commit_message": "Decoder to send queued commands", "files_name": ["src/main/java/org/traccar/BaseProtocolDecoder.java", "src/main/java/org/traccar/database/CommandsManager.java", "src/main/java/org/traccar/database/ConnectionManager.java"]}, {"commit_id": "606afeb37451f921fe3aecffab439cc2bcc7a175", "commit_date": "Sun Mar 15 16:02:37 2020 -0700", "commit_message": "Queue HTTP commands", "files_name": ["src/main/java/org/traccar/database/ActiveDevice.java", "src/main/java/org/traccar/database/CommandsManager.java"]}, {"commit_id": "83494fe445a9c7cb4f6b7de1e97e0d257f8bc7c2", "commit_date": "Sun Mar 15 16:13:52 2020 -0700", "commit_message": "Support HTTP response content", "files_name": ["src/main/java/org/traccar/BaseHttpProtocolDecoder.java", "src/main/java/org/traccar/protocol/LeafSpyProtocolDecoder.java", "src/main/java/org/traccar/protocol/PiligrimProtocolDecoder.java"]}, {"commit_id": "0164474c700337c686fea93e2ca4875adaaf35d5", "commit_date": "Sun Mar 15 16:17:07 2020 -0700", "commit_message": "Remove unused imports", "files_name": ["src/main/java/org/traccar/protocol/LeafSpyProtocolDecoder.java"]}, {"commit_id": "f85af44e180c87993d2d8d760f64af775f99531f", "commit_date": "Sun Mar 15 16:22:35 2020 -0700", "commit_message": "Support commands for OsmAnd", "files_name": ["src/main/java/org/traccar/protocol/OsmAndProtocolDecoder.java"]}, {"commit_id": "2816e5ed49e6d237f2a4e48a98cd4a5f1a893246", "commit_date": "Mon Mar 23 20:59:09 2020 -0700", "commit_message": "Support position for single device", "files_name": ["src/main/java/org/traccar/api/resource/PositionResource.java"]}, {"commit_id": "f3d465abe7f255ec44e976caade642e4c2fd7598", "commit_date": "Mon Mar 23 21:13:35 2020 -0700", "commit_message": "Support null values", "files_name": ["src/main/java/org/traccar/protocol/SigfoxProtocolDecoder.java", "src/test/java/org/traccar/protocol/SigfoxProtocolDecoderTest.java"]}, {"commit_id": "feac85bad4004fb3e316a88285626e12840398d2", "commit_date": "Wed Mar 25 17:25:19 2020 +0000", "commit_message": "Merge remote-tracking branch 'origin/master'", "files_name": ["37810b5062a4b5ea7e1b92800186c03a5817471f - Wed Mar 25 19:09:42 2020 +0000 : compression on jetty", "src/main/java/org/traccar/web/WebServer.java"]}, {"commit_id": "2ee38015efa72f384be1a0d66f46b3cbe08d6c88", "commit_date": "Wed Mar 25 19:19:42 2020 +0000", "commit_message": "falcom protocol", "files_name": ["src/main/java/org/traccar/protocol/FalcomProtocol.java", "src/main/java/org/traccar/protocol/FalcomProtocolDecoder.java"]}, {"commit_id": "bf77eadf252b999d36e6546cf5ccd7852ffaefe0", "commit_date": "Wed Mar 25 21:14:42 2020 +0000", "commit_message": "compression on jetty", "files_name": ["src/main/java/org/traccar/protocol/FalcomProtocol.java", "src/main/java/org/traccar/protocol/FalcomProtocolDecoder.java"]}, {"commit_id": "faa35f608eff1225d35794d0a38398897940d802", "commit_date": "Wed Mar 25 21:33:35 2020 +0000", "commit_message": "compression on jetty", "files_name": ["src/main/java/org/traccar/web/WebServer.java"]}, {"commit_id": "02b79df2316d2b463a74edc7a1dc08231b0121f7", "commit_date": "Wed Mar 25 21:38:53 2020 +0000", "commit_message": "compression on jetty", "files_name": ["src/main/java/org/traccar/web/WebServer.java"]}, {"commit_id": "01bdaf38fe425a15310a36b059a862bca661159e", "commit_date": "Wed Mar 25 14:41:06 2020 -0700", "commit_message": "Merge pull request #4505 from jcardus/jcardus", "files_name": ["854e4c6f1de4620b86842ebd5f21aa26b3f13f2f - Wed Mar 25 21:46:33 2020 -0700 : Decode alarm values", "src/main/java/org/traccar/protocol/SolarPoweredProtocolDecoder.java"]}, {"commit_id": "0cd2d9e4d78fd586f71027e4eab486b047a7383e", "commit_date": "Thu Mar 26 20:51:13 2020 -0700", "commit_message": "Update binary frame decoding", "files_name": ["src/main/java/org/traccar/protocol/Gl200FrameDecoder.java", "src/test/java/org/traccar/protocol/Gl200FrameDecoderTest.java"]}, {"commit_id": "2b9897a9595855385233429d42ed6971b456258a", "commit_date": "Thu Mar 26 21:02:26 2020 -0700", "commit_message": "Decode additional data", "files_name": ["src/main/java/org/traccar/protocol/GlobalstarProtocolDecoder.java", "src/test/java/org/traccar/protocol/GlobalstarProtocolDecoderTest.java"]}, {"commit_id": "0fc02b910558cbcf10fa82f92938475f52d39a52", "commit_date": "Tue Mar 31 21:24:15 2020 -0700", "commit_message": "Implement inputs and outputs", "files_name": ["src/main/java/org/traccar/protocol/SuntechProtocolDecoder.java", "src/test/java/org/traccar/protocol/SuntechProtocolDecoderTest.java"]}, {"commit_id": "2199e490e0c47a267caab2795cdfe023aca1238d", "commit_date": "Tue Mar 31 21:41:10 2020 -0700", "commit_message": "Decode engine data", "files_name": ["src/main/java/org/traccar/protocol/OmnicommProtocolDecoder.java"]}, {"commit_id": "7b2c88d22efb7e6c5ec65b5c8823b5f55a5d3eb6", "commit_date": "Wed Apr 1 22:10:50 2020 -0700", "commit_message": "Support custom prefix", "files_name": ["src/main/java/org/traccar/protocol/AtrackProtocolDecoder.java", "src/test/java/org/traccar/protocol/AtrackProtocolDecoderTest.java"]}, {"commit_id": "719608b5553aceb4734b2d376382670049f87951", "commit_date": "Sat Apr 4 14:41:42 2020 -0700", "commit_message": "Invert flag values", "files_name": ["src/main/java/org/traccar/protocol/GlobalstarProtocolDecoder.java"]}, {"commit_id": "2aaadf1b8c793548558f87465cff50b991181ee1", "commit_date": "Tue Apr 7 22:10:25 2020 -0700", "commit_message": "Fix second fuel decoding", "files_name": []}], "parents": [{"commit_id_before": "886a1ac0550c5aecb13222668f4ca35758ec92d1", "url_before": "https://api.github.com/repos/traccar/traccar/commits/886a1ac0550c5aecb13222668f4ca35758ec92d1", "html_url_before": "https://github.com/traccar/traccar/commit/886a1ac0550c5aecb13222668f4ca35758ec92d1"}], "details": [{"raw_url": "https://github.com/traccar/traccar/raw/e4f6e74e57ab743b65d49ae00f6624a20ca0291e/src%2Fmain%2Fjava%2Forg%2Ftraccar%2Fdatabase%2FLdapProvider.java", "code": "/*\n * Copyright 2017 - 2020 Anton Tananaev (anton@traccar.org)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.traccar.database;\n\nimport javax.naming.Context;\nimport javax.naming.NamingEnumeration;\nimport javax.naming.NamingException;\nimport javax.naming.directory.Attribute;\nimport javax.naming.directory.InitialDirContext;\nimport javax.naming.directory.SearchControls;\nimport javax.naming.directory.SearchResult;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.traccar.config.Config;\nimport org.traccar.model.User;\n\nimport java.util.Hashtable;\n\npublic class LdapProvider {\n\n    private static final Logger LOGGER = LoggerFactory.getLogger(LdapProvider.class);\n\n    private String url;\n    private String searchBase;\n    private String idAttribute;\n    private String nameAttribute;\n    private String mailAttribute;\n    private String searchFilter;\n    private String adminFilter;\n    private String serviceUser;\n    private String servicePassword;\n\n    public LdapProvider(Config config) {\n        String url = config.getString(\"ldap.url\");\n        if (url != null) {\n            this.url = url;\n        } else {\n            this.url = \"ldap://\" + config.getString(\"ldap.server\") + \":\" + config.getInteger(\"ldap.port\", 389);\n        }\n        this.searchBase = config.getString(\"ldap.base\");\n        this.idAttribute = config.getString(\"ldap.idAttribute\", \"uid\");\n        this.nameAttribute = config.getString(\"ldap.nameAttribute\", \"cn\");\n        this.mailAttribute = config.getString(\"ldap.mailAttribute\", \"mail\");\n        this.searchFilter = config.getString(\"ldap.searchFilter\", \"(\" + idAttribute + \"=:login)\");\n        String adminGroup = config.getString(\"ldap.adminGroup\");\n        this.adminFilter = config.getString(\"ldap.adminFilter\");\n        if (this.adminFilter == null && adminGroup != null) {\n            this.adminFilter = \"(&(\" + idAttribute + \"=:login)(memberOf=\" + adminGroup + \"))\";\n        }\n        this.serviceUser = config.getString(\"ldap.user\");\n        this.servicePassword = config.getString(\"ldap.password\");\n    }\n\n    private InitialDirContext auth(String accountName, String password) throws NamingException {\n        Hashtable<String, String> env = new Hashtable<>();\n        env.put(Context.INITIAL_CONTEXT_FACTORY, \"com.sun.jndi.ldap.LdapCtxFactory\");\n        env.put(Context.PROVIDER_URL, url);\n\n        env.put(Context.SECURITY_AUTHENTICATION, \"simple\");\n        env.put(Context.SECURITY_PRINCIPAL, accountName);\n        env.put(Context.SECURITY_CREDENTIALS, password);\n\n        return new InitialDirContext(env);\n    }\n\n    private boolean isAdmin(String accountName) {\n        if (this.adminFilter != null) {\n            try {\n                InitialDirContext context = initContext();\n                String searchString = adminFilter.replace(\":login\", encodeForLdap(accountName));\n                SearchControls searchControls = new SearchControls();\n                searchControls.setSearchScope(SearchControls.SUBTREE_SCOPE);\n                NamingEnumeration<SearchResult> results = context.search(searchBase, searchString, searchControls);\n                if (results.hasMoreElements()) {\n                    results.nextElement();\n                    if (results.hasMoreElements()) {\n                        LOGGER.warn(\"Matched multiple users for the accountName: \" + accountName);\n                        return false;\n                    }\n                    return true;\n                }\n            } catch (NamingException e) {\n                return false;\n            }\n        }\n        return false;\n    }\n\n    public InitialDirContext initContext() throws NamingException {\n        return auth(serviceUser, servicePassword);\n    }\n\n    private SearchResult lookupUser(String accountName) throws NamingException {\n        InitialDirContext context = initContext();\n\n        String searchString = searchFilter.replace(\":login\", encodeForLdap(accountName));\n\n        SearchControls searchControls = new SearchControls();\n        String[] attributeFilter = {idAttribute, nameAttribute, mailAttribute};\n        searchControls.setReturningAttributes(attributeFilter);\n        searchControls.setSearchScope(SearchControls.SUBTREE_SCOPE);\n\n        NamingEnumeration<SearchResult> results = context.search(searchBase, searchString, searchControls);\n\n        SearchResult searchResult = null;\n        if (results.hasMoreElements()) {\n            searchResult = results.nextElement();\n            if (results.hasMoreElements()) {\n                LOGGER.warn(\"Matched multiple users for the accountName: \" + accountName);\n                return null;\n            }\n        }\n\n        return searchResult;\n    }\n\n    public User getUser(String accountName) {\n        SearchResult ldapUser;\n        User user = new User();\n        try {\n            ldapUser = lookupUser(accountName);\n            if (ldapUser != null) {\n                Attribute attribute = ldapUser.getAttributes().get(idAttribute);\n                if (attribute != null) {\n                    user.setLogin((String) attribute.get());\n                } else {\n                    user.setLogin(accountName);\n                }\n                attribute = ldapUser.getAttributes().get(nameAttribute);\n                if (attribute != null) {\n                    user.setName((String) attribute.get());\n                } else {\n                    user.setName(accountName);\n                }\n                attribute = ldapUser.getAttributes().get(mailAttribute);\n                if (attribute != null) {\n                    user.setEmail((String) attribute.get());\n                } else {\n                    user.setEmail(accountName);\n                }\n            }\n            user.setAdministrator(isAdmin(accountName));\n        } catch (NamingException e) {\n            user.setLogin(accountName);\n            user.setName(accountName);\n            user.setEmail(accountName);\n            LOGGER.warn(\"User lookup error\", e);\n        }\n        return user;\n    }\n\n    public boolean login(String username, String password) {\n        try {\n            SearchResult ldapUser = lookupUser(username);\n            if (ldapUser != null) {\n                auth(ldapUser.getNameInNamespace(), password).close();\n                return true;\n            }\n        } catch (NamingException e) {\n            return false;\n        }\n        return false;\n    }\n\n    public String encodeForLdap(String input) {\n        if( input == null ) {\n            return null;\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < input.length(); i++) {\n            char c = input.charAt(i);\n            switch (c) {\n                case '\\\\':\n                    sb.append(\"\\\\5c\");\n                    break;\n                case '*':\n                    sb.append(\"\\\\2a\");\n                    break;\n                case '(':\n                    sb.append(\"\\\\28\");\n                    break;\n                case ')':\n                    sb.append(\"\\\\29\");\n                    break;\n                case '\\0':\n                    sb.append(\"\\\\00\");\n                    break;\n                default:\n                    sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n\n}\n", "code_before": "/*\n * Copyright 2017 Anton Tananaev (anton@traccar.org)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.traccar.database;\n\nimport javax.naming.Context;\nimport javax.naming.NamingEnumeration;\nimport javax.naming.NamingException;\nimport javax.naming.directory.Attribute;\nimport javax.naming.directory.InitialDirContext;\nimport javax.naming.directory.SearchControls;\nimport javax.naming.directory.SearchResult;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.traccar.config.Config;\nimport org.traccar.model.User;\n\nimport java.util.Hashtable;\n\npublic class LdapProvider {\n\n    private static final Logger LOGGER = LoggerFactory.getLogger(LdapProvider.class);\n\n    private String url;\n    private String searchBase;\n    private String idAttribute;\n    private String nameAttribute;\n    private String mailAttribute;\n    private String searchFilter;\n    private String adminFilter;\n    private String serviceUser;\n    private String servicePassword;\n\n    public LdapProvider(Config config) {\n        String url = config.getString(\"ldap.url\");\n        if (url != null) {\n            this.url = url;\n        } else {\n            this.url = \"ldap://\" + config.getString(\"ldap.server\") + \":\" + config.getInteger(\"ldap.port\", 389);\n        }\n        this.searchBase = config.getString(\"ldap.base\");\n        this.idAttribute = config.getString(\"ldap.idAttribute\", \"uid\");\n        this.nameAttribute = config.getString(\"ldap.nameAttribute\", \"cn\");\n        this.mailAttribute = config.getString(\"ldap.mailAttribute\", \"mail\");\n        this.searchFilter = config.getString(\"ldap.searchFilter\", \"(\" + idAttribute + \"=:login)\");\n        String adminGroup = config.getString(\"ldap.adminGroup\");\n        this.adminFilter = config.getString(\"ldap.adminFilter\");\n        if (this.adminFilter == null && adminGroup != null) {\n            this.adminFilter = \"(&(\" + idAttribute + \"=:login)(memberOf=\" + adminGroup + \"))\";\n        }\n        this.serviceUser = config.getString(\"ldap.user\");\n        this.servicePassword = config.getString(\"ldap.password\");\n    }\n\n    private InitialDirContext auth(String accountName, String password) throws NamingException {\n        Hashtable<String, String> env = new Hashtable<>();\n        env.put(Context.INITIAL_CONTEXT_FACTORY, \"com.sun.jndi.ldap.LdapCtxFactory\");\n        env.put(Context.PROVIDER_URL, url);\n\n        env.put(Context.SECURITY_AUTHENTICATION, \"simple\");\n        env.put(Context.SECURITY_PRINCIPAL, accountName);\n        env.put(Context.SECURITY_CREDENTIALS, password);\n\n        return new InitialDirContext(env);\n    }\n\n    private boolean isAdmin(String accountName) {\n        if (this.adminFilter != null) {\n            try {\n                InitialDirContext context = initContext();\n                String searchString = adminFilter.replace(\":login\", accountName);\n                SearchControls searchControls = new SearchControls();\n                searchControls.setSearchScope(SearchControls.SUBTREE_SCOPE);\n                NamingEnumeration<SearchResult> results = context.search(searchBase, searchString, searchControls);\n                if (results.hasMoreElements()) {\n                    results.nextElement();\n                    if (results.hasMoreElements()) {\n                        LOGGER.warn(\"Matched multiple users for the accountName: \" + accountName);\n                        return false;\n                    }\n                    return true;\n                }\n            } catch (NamingException e) {\n                return false;\n            }\n        }\n        return false;\n    }\n\n    public InitialDirContext initContext() throws NamingException {\n        return auth(serviceUser, servicePassword);\n    }\n\n    private SearchResult lookupUser(String accountName) throws NamingException {\n        InitialDirContext context = initContext();\n\n        String searchString = searchFilter.replace(\":login\", accountName);\n\n        SearchControls searchControls = new SearchControls();\n        String[] attributeFilter = {idAttribute, nameAttribute, mailAttribute};\n        searchControls.setReturningAttributes(attributeFilter);\n        searchControls.setSearchScope(SearchControls.SUBTREE_SCOPE);\n\n        NamingEnumeration<SearchResult> results = context.search(searchBase, searchString, searchControls);\n\n        SearchResult searchResult = null;\n        if (results.hasMoreElements()) {\n            searchResult = results.nextElement();\n            if (results.hasMoreElements()) {\n                LOGGER.warn(\"Matched multiple users for the accountName: \" + accountName);\n                return null;\n            }\n        }\n\n        return searchResult;\n    }\n\n    public User getUser(String accountName) {\n        SearchResult ldapUser;\n        User user = new User();\n        try {\n            ldapUser = lookupUser(accountName);\n            if (ldapUser != null) {\n                Attribute attribute = ldapUser.getAttributes().get(idAttribute);\n                if (attribute != null) {\n                    user.setLogin((String) attribute.get());\n                } else {\n                    user.setLogin(accountName);\n                }\n                attribute = ldapUser.getAttributes().get(nameAttribute);\n                if (attribute != null) {\n                    user.setName((String) attribute.get());\n                } else {\n                    user.setName(accountName);\n                }\n                attribute = ldapUser.getAttributes().get(mailAttribute);\n                if (attribute != null) {\n                    user.setEmail((String) attribute.get());\n                } else {\n                    user.setEmail(accountName);\n                }\n            }\n            user.setAdministrator(isAdmin(accountName));\n        } catch (NamingException e) {\n            user.setLogin(accountName);\n            user.setName(accountName);\n            user.setEmail(accountName);\n            LOGGER.warn(\"User lookup error\", e);\n        }\n        return user;\n    }\n\n    public boolean login(String username, String password) {\n        try {\n            SearchResult ldapUser = lookupUser(username);\n            if (ldapUser != null) {\n                auth(ldapUser.getNameInNamespace(), password).close();\n                return true;\n            }\n        } catch (NamingException e) {\n            return false;\n        }\n        return false;\n    }\n\n}\n", "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright 2017 Anton Tananaev (anton@traccar.org)\n+ * Copyright 2017 - 2020 Anton Tananaev (anton@traccar.org)\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -81,7 +81,7 @@ private boolean isAdmin(String accountName) {\n         if (this.adminFilter != null) {\n             try {\n                 InitialDirContext context = initContext();\n-                String searchString = adminFilter.replace(\":login\", accountName);\n+                String searchString = adminFilter.replace(\":login\", encodeForLdap(accountName));\n                 SearchControls searchControls = new SearchControls();\n                 searchControls.setSearchScope(SearchControls.SUBTREE_SCOPE);\n                 NamingEnumeration<SearchResult> results = context.search(searchBase, searchString, searchControls);\n@@ -107,7 +107,7 @@ public InitialDirContext initContext() throws NamingException {\n     private SearchResult lookupUser(String accountName) throws NamingException {\n         InitialDirContext context = initContext();\n \n-        String searchString = searchFilter.replace(\":login\", accountName);\n+        String searchString = searchFilter.replace(\":login\", encodeForLdap(accountName));\n \n         SearchControls searchControls = new SearchControls();\n         String[] attributeFilter = {idAttribute, nameAttribute, mailAttribute};\n@@ -176,4 +176,34 @@ public boolean login(String username, String password) {\n         return false;\n     }\n \n+    public String encodeForLdap(String input) {\n+        if( input == null ) {\n+            return null;\n+        }\n+        StringBuilder sb = new StringBuilder();\n+        for (int i = 0; i < input.length(); i++) {\n+            char c = input.charAt(i);\n+            switch (c) {\n+                case '\\\\':\n+                    sb.append(\"\\\\5c\");\n+                    break;\n+                case '*':\n+                    sb.append(\"\\\\2a\");\n+                    break;\n+                case '(':\n+                    sb.append(\"\\\\28\");\n+                    break;\n+                case ')':\n+                    sb.append(\"\\\\29\");\n+                    break;\n+                case '\\0':\n+                    sb.append(\"\\\\00\");\n+                    break;\n+                default:\n+                    sb.append(c);\n+            }\n+        }\n+        return sb.toString();\n+    }\n+\n }", "file_path": "files/2020_7/107", "file_language": "java", "file_name": "src/main/java/org/traccar/database/LdapProvider.java", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 1}], "outdated": 0, "cwe_descripiton": "", "cwe_consequence": "", "cwe_method": "", "cwe_solution": ""}
