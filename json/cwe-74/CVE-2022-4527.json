{"index": 10051, "cve_id": "CVE-2022-4527", "cwe_id": ["CWE-79", "CWE-707", "CWE-74"], "cve_language": "Python", "cve_description": "A vulnerability was found in collective.task up to 3.0.8. It has been classified as problematic. This affects the function renderCell/AssignedGroupColumn of the file src/collective/task/browser/table.py. The manipulation leads to cross site scripting. It is possible to initiate the attack remotely. Upgrading to version 3.0.9 is able to address this issue. The name of the patch is 1aac7f83fa2c2b41d59ba02748912953461f3fac. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-215907.", "cvss": "6.1", "publish_date": "December 15, 2022", "AV": "NETWORK", "AC": "NETWORK", "PR": "NONE", "UI": "REQUIRED", "S": "CHANGED", "C": "LOW", "I": "LOW", "A": "NONE", "commit_id": "1aac7f83fa2c2b41d59ba02748912953461f3fac", "commit_message": "Escaped some column rendering to avoid xss", "commit_date": "2022-06-10T08:56:09Z", "project": "collective/collective.task", "url": "https://api.github.com/repos/collective/collective.task/commits/1aac7f83fa2c2b41d59ba02748912953461f3fac", "html_url": "https://github.com/collective/collective.task/commit/1aac7f83fa2c2b41d59ba02748912953461f3fac", "windows_before": [{"commit_id": "42f9df8278dff97a37629f5a5482002a3f50969d", "commit_date": "Fri May 13 18:49:18 2022 +0200", "commit_message": "Back to development: 3.0.9", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "e900f90e744626770faad4bbf9dacafe16ae555c", "commit_date": "Fri May 13 17:53:00 2022 +0200", "commit_message": "Preparing release 3.0.8", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "bdf0c5d0a88a83ed64a883859af680c35c276d2a", "commit_date": "Thu May 12 11:50:32 2022 +0200", "commit_message": "Added `get_methods_adapter` on Task content class to get the adapter in expressions", "files_name": ["CHANGES.rst", "src/collective/task/content/task.py"]}, {"commit_id": "0253e0485b7861cd2b9f36dc81ffdd619d9576d6", "commit_date": "Wed Feb 9 14:09:47 2022 +0100", "commit_message": "Back to development: 3.0.8", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "46693ea95f48d383824cc6edd7f1031e5c4ccf4b", "commit_date": "Wed Feb 9 14:09:35 2022 +0100", "commit_message": "Preparing release 3.0.7", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "b6387b9fa79c1465997981bafb40d245ceac4af5", "commit_date": "Wed Feb 9 14:04:55 2022 +0100", "commit_message": "Updated translation of task description", "files_name": ["src/collective/task/locales/fr/LC_MESSAGES/collective.task.po"]}, {"commit_id": "ab1dd6fe397af74a73459bcccaa511508f398423", "commit_date": "Wed May 26 10:30:08 2021 +0200", "commit_message": "Removed useless atct config", "files_name": ["CHANGES.rst", "src/collective/task/profiles.zcml", "src/collective/task/profiles/default/metadata.xml", "src/collective/task/profiles/default/portal_atct.xml"]}, {"commit_id": "bfbe107ba527b33ac55d69a3d581db73fd06e906", "commit_date": "Tue Apr 20 15:15:29 2021 +0200", "commit_message": "Back to development: 3.0.7", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "849ecdd043d3cb07ba25602a0b56993929154285", "commit_date": "Tue Apr 20 15:12:32 2021 +0200", "commit_message": "Preparing release 3.0.6", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "95bee90a0621445b7ca2771fc7202f142243dc1d", "commit_date": "Tue Apr 20 15:12:19 2021 +0200", "commit_message": "Set allowed_mime_types on task_description", "files_name": ["CHANGES.rst", "src/collective/task/behaviors.py"]}, {"commit_id": "378fc78823b5dc599afaf29c37f9c8beea8737ac", "commit_date": "Tue Apr 20 15:11:56 2021 +0200", "commit_message": "Updated MANIFEST", "files_name": ["MANIFEST.in"]}, {"commit_id": "bd92d3b7a4f74eac912ce47690eca74f28a886d5", "commit_date": "Tue Feb 23 10:51:08 2021 +0100", "commit_message": "Updated tests following prettylink changes", "files_name": ["src/collective/task/tests/test_table.py"]}, {"commit_id": "17780293071bc1e6cf432caa4be65819bade575f", "commit_date": "Tue Feb 23 09:11:54 2021 +0100", "commit_message": "Pinned ipdb requirements", "files_name": ["buildout.d/versions.cfg"]}, {"commit_id": "61e9b46be70a8f6f5cceace1f0a679b14be13f19", "commit_date": "Tue Feb 23 08:44:02 2021 +0100", "commit_message": "Corrected typo", "files_name": [".travis.yml"]}, {"commit_id": "08be1ae1d8ae50cdd80dfc13ec2a90b95c7e84be", "commit_date": "Mon Feb 22 18:38:10 2021 +0100", "commit_message": "Fixed maybe travis", "files_name": [".travis.yml"]}, {"commit_id": "10fdae19cbe234e04c85651921a9304c66b550f5", "commit_date": "Mon Feb 22 17:56:36 2021 +0100", "commit_message": "Run local pip", "files_name": [".travis.yml"]}, {"commit_id": "382ca827bcb10860abad3d0ebf25424b1122e2e5", "commit_date": "Mon Feb 22 17:15:21 2021 +0100", "commit_message": "Added virtualenv on travis", "files_name": [".travis.yml"]}, {"commit_id": "9c67ccf92602e8b29682a50eb6e2d463f996cd70", "commit_date": "Mon Feb 22 14:58:00 2021 +0100", "commit_message": "Used requirements. Pinned zc.lockfile and plone.formwidget.namedfile", "files_name": [".travis.yml", "buildout.d/versions.cfg", "requirements.txt", "travis.cfg"]}, {"commit_id": "e790d6786b03703937f93527924151f4ba1337e9", "commit_date": "Mon Feb 22 14:17:02 2021 +0100", "commit_message": "Removed bad step containing empty dependency (persisted now)", "files_name": ["CHANGES.rst", "src/collective/task/migrations/migrate_to_101.py", "src/collective/task/profiles.zcml", "src/collective/task/profiles/default/metadata.xml"]}, {"commit_id": "564f74f407ec139256eed25e00f5024cda421051", "commit_date": "Mon Sep 9 15:06:09 2019 +0200", "commit_message": "Back to development: 3.0.6", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "988773f940caa6cf76ff32f00ca9c9e7bc1aa399", "commit_date": "Mon Sep 9 15:05:48 2019 +0200", "commit_message": "Preparing release 3.0.5", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "da88ae2d20827b9b1503d0a992c2501dffe33e84", "commit_date": "Mon Sep 9 15:04:41 2019 +0200", "commit_message": "Removed bad step containing empty dependency.", "files_name": ["CHANGES.rst", "src/collective/task/migrations/migrate_to_101.py", "src/collective/task/profiles.zcml", "src/collective/task/profiles/default/metadata.xml", "src/collective/task/profiles/uninstall_1.0/import_steps.xml"]}, {"commit_id": "4d97ffdacb28c867d814f05c194600befd0d7d23", "commit_date": "Fri May 10 10:20:45 2019 +0200", "commit_message": "Fixed maximal version for plone 4.3", "files_name": ["buildout.d/versions.cfg"]}, {"commit_id": "f93965c2dfb353da1c0b5f1bd78e2ba97b2c3542", "commit_date": "Thu May 9 15:58:17 2019 +0200", "commit_message": "Added class description", "files_name": ["src/collective/task/browser/batchactions.py"]}, {"commit_id": "e96824b3e97bdcd21f0f08730c0a70cb6b5679ec", "commit_date": "Fri Mar 8 12:12:02 2019 +0100", "commit_message": "Back to development: 3.0.5", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "751fe6ab7d757754f2bd9cade06fc709ba7b9908", "commit_date": "Fri Mar 8 12:11:44 2019 +0100", "commit_message": "Preparing release 3.0.4", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "c22729c2ae4d5dd27c43ba8873e3ba02d262b26d", "commit_date": "Mon Mar 4 12:15:57 2019 +0100", "commit_message": "Improved batch actions. Added tests", "files_name": ["buildout.d/checkouts.cfg", "buildout.d/sources.cfg", "setup.py", "src/collective/task/browser/batchactions.py", "src/collective/task/locales/collective.eeafaceted.batchactions.pot", "src/collective/task/locales/en/LC_MESSAGES/collective.eeafaceted.batchactions.po", "src/collective/task/locales/fr/LC_MESSAGES/collective.eeafaceted.batchactions.po", "src/collective/task/tests/test_batchactions.py"]}, {"commit_id": "e70dd912da9262a42200e70ea116eab49f54376e", "commit_date": "Fri Mar 1 14:24:09 2019 +0100", "commit_message": "Added batch actions to change assigned group or assigned user.", "files_name": ["CHANGES.rst", "src/collective/task/browser/batchactions.py", "src/collective/task/browser/configure.zcml", "src/collective/task/locales/collective.eeafaceted.batchactions.pot", "src/collective/task/locales/collective.task.pot", "src/collective/task/locales/en/LC_MESSAGES/collective.eeafaceted.batchactions.po", "src/collective/task/locales/en/LC_MESSAGES/collective.task.po", "src/collective/task/locales/fr/LC_MESSAGES/collective.eeafaceted.batchactions.po", "src/collective/task/locales/fr/LC_MESSAGES/collective.task.po", "src/collective/task/locales/update.sh"]}, {"commit_id": "476889149a4adc575d119525eb0ed94fd2fb12e3", "commit_date": "Fri Feb 22 11:38:25 2019 +0100", "commit_message": "Back to development: 3.0.4", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "1f4532deb7061bd74cf31efa98a47e4c4783d418", "commit_date": "Fri Feb 22 11:38:02 2019 +0100", "commit_message": "Preparing release 3.0.3", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "79dd536bde054ed2eb4aa7bbc38a6aeb2806af05", "commit_date": "Thu Feb 21 16:57:48 2019 +0100", "commit_message": "Corrected bug when a parent field is multivalued.", "files_name": ["CHANGES.rst", "src/collective/task/adapters.py", "src/collective/task/tests/test_adapters.py"]}, {"commit_id": "065e117d9b57d96ba92d9501c86764e2f7cd3bcf", "commit_date": "Thu Feb 21 11:27:16 2019 +0100", "commit_message": "Improved readme", "files_name": ["README.rst"]}, {"commit_id": "f029b0beb0b5f298c3f7648c569ec4e5a5df75bc", "commit_date": "Wed Aug 22 15:28:52 2018 +0200", "commit_message": "Back to development: 3.0.3", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "794ecdd2e08fb8513d7ba6159b957a52eb00da8c", "commit_date": "Wed Aug 22 15:28:31 2018 +0200", "commit_message": "Preparing release 3.0.2", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "c5b9ab45b5d12fb3aab7187d81c23d60e81de3c6", "commit_date": "Tue Aug 21 22:56:46 2018 +0200", "commit_message": "Use imio.prettylink column for title if imio.prettylink product is present.", "files_name": ["CHANGES.rst", "buildout.d/versions.cfg", "setup.py", "src/collective/task/browser/table.py", "src/collective/task/browser/table.zcml", "src/collective/task/configure.zcml", "src/collective/task/tests/test_table.py"]}, {"commit_id": "ce6e9ecb94251f2f72bc862b4c1147a3c9ec6572", "commit_date": "Mon Jul 30 13:27:34 2018 +0200", "commit_message": "Back to development: 3.1", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "f112dbea3142c5fe55f7d19e6b45c70405279451", "commit_date": "Mon Jul 30 13:27:01 2018 +0200", "commit_message": "Preparing release 3.0.1", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "6241c258560f8d63681872430533435e682928d1", "commit_date": "Mon Jul 30 13:18:18 2018 +0200", "commit_message": "Removed contenttype-task css declaration", "files_name": ["CHANGES.rst", "src/collective/task/browser/static/collectivetask.css"]}, {"commit_id": "5f0e8a0e71fc1aabd9b6d638cc097ed22c65ae31", "commit_date": "Fri Jul 27 11:52:03 2018 +0200", "commit_message": "Forgotten adapter definition", "files_name": ["src/collective/task/configure.zcml"]}, {"commit_id": "38c3c4dbf2f7b587c3213030d65d63365b1a035b", "commit_date": "Fri Jul 27 11:22:23 2018 +0200", "commit_message": "Added validator on assigned_user", "files_name": [".travis.yml", "CHANGES.rst", "buildout.d/checkouts.cfg", "buildout.d/sources.cfg", "src/collective/task/behaviors.py", "src/collective/task/interfaces.py", "src/collective/task/locales/collective.task.pot", "src/collective/task/locales/en/LC_MESSAGES/collective.task.po", "src/collective/task/locales/en/LC_MESSAGES/plone.po", "src/collective/task/locales/fr/LC_MESSAGES/collective.task.po", "src/collective/task/locales/fr/LC_MESSAGES/plone.po", "src/collective/task/locales/plone.pot", "src/collective/task/tests/test_behaviors.py"]}, {"commit_id": "724cc9a3ac7abae9c27eb2d71825c6b0e973709a", "commit_date": "Thu Jul 26 15:01:18 2018 +0200", "commit_message": "pep8 on imports", "files_name": ["CHANGES.rst", "buildout.d/versions.cfg", "src/collective/task/__init__.py", "src/collective/task/adapters.py", "src/collective/task/behaviors.py", "src/collective/task/browser/table.py"]}], "windows_after": [{"commit_id": "8af7b72a495c3ab6b4c94f75facfc9e57f87cc93", "commit_date": "Fri Jun 10 11:24:20 2022 +0200", "commit_message": "Removed useless import", "files_name": ["src/collective/task/browser/table.py"]}, {"commit_id": "19ca0ecc7efb9db2c8f37c566f339a6493d97ed9", "commit_date": "Tue Jun 21 10:45:59 2022 +0200", "commit_message": "Preparing release 3.0.9", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "545c89695b02fb105cc1079a9257970020ebd845", "commit_date": "Tue Jun 21 10:46:10 2022 +0200", "commit_message": "Back to development: 3.0.10", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "fe59019762c1a975ec69b27ba952aa6a0bf7434f", "commit_date": "Sat Jun 25 01:54:11 2022 +0300", "commit_message": "update urls (#5)", "files_name": ["README.rst", "bootstrap.py", "setup.py", "src/collective/task/tests/robot/test_example.robot"]}, {"commit_id": "9b83a14c35e32dd8ec865c8f17708866f98e5edc", "commit_date": "Tue Jul 12 16:12:22 2022 +0200", "commit_message": "Refreshed versions and urls", "files_name": ["CHANGES.rst", "buildout.d/sources.cfg", "buildout.d/versions.cfg"]}, {"commit_id": "01d453c3dcad1a75e9635b4a8e78ee0761d17657", "commit_date": "Tue Jul 12 16:12:43 2022 +0200", "commit_message": "Added AssignedUsersVocabulary for assigned_user field so this vocabulary can be overrided", "files_name": ["CHANGES.rst", "src/collective/task/behaviors.py", "src/collective/task/configure.zcml"]}, {"commit_id": "7810a5478db269ce8e97f3efe3aa4bf72eb487e4", "commit_date": "Tue Jul 12 16:14:27 2022 +0200", "commit_message": "gitignore", "files_name": [".gitignore"]}, {"commit_id": "223176021022c754fc4f56900c65c5ba143434a2", "commit_date": "Fri Aug 19 13:33:35 2022 +0200", "commit_message": "Corrected setup.py, so pyroma can run", "files_name": ["CONTRIBUTORS.rst", "README.rst", "setup.py"]}, {"commit_id": "a6bbdca77f5e4279d454bb5668d07417db9d9e6f", "commit_date": "Fri Aug 19 13:34:35 2022 +0200", "commit_message": "Preparing release 3.0.10", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "f7af4bab44513a0d0e7668ac55f5629cd1e27eee", "commit_date": "Fri Aug 19 13:35:17 2022 +0200", "commit_message": "Back to development: 3.0.11", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "7d3072e67a61b55e7e64e5ff211c4f33c13d27fc", "commit_date": "Mon Mar 6 12:56:44 2023 +0100", "commit_message": "Added interface on LocalRoleMasterSelectField", "files_name": ["CHANGES.rst", "src/collective/task/field.py", "src/collective/task/interfaces.py"]}, {"commit_id": "59a65ada9e93edfde83d7cf50fb934893d440fa0", "commit_date": "Wed Mar 29 13:15:32 2023 +0200", "commit_message": "Preparing release 3.0.11", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "f4bcac9181ebac3358887407387d261c3c6da124", "commit_date": "Wed Mar 29 13:15:43 2023 +0200", "commit_message": "Back to development: 3.0.12", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "54c41d2782ba0cead7570487774aceb2d0a451d9", "commit_date": "Thu Jul 13 16:14:16 2023 +0200", "commit_message": "fix: [DMS-949] min & max for due_date", "files_name": ["src/collective/task/behaviors.py"]}, {"commit_id": "3e96e543f42568e12bfff5839004b1bc0a3afba3", "commit_date": "Thu Jul 20 11:29:10 2023 +0200", "commit_message": "changes", "files_name": ["CHANGES.rst"]}, {"commit_id": "6bacf61e4d70858c878c1d60b72b7a13ed5e4e5c", "commit_date": "Thu Jul 20 11:29:21 2023 +0200", "commit_message": "Preparing release 3.0.12", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "cef2fd81c05126372d9b99c148017d14b4674662", "commit_date": "Thu Jul 20 11:29:34 2023 +0200", "commit_message": "Back to development: 3.0.13", "files_name": ["CHANGES.rst", "setup.py"]}], "parents": [{"commit_id_before": "42f9df8278dff97a37629f5a5482002a3f50969d", "url_before": "https://api.github.com/repos/collective/collective.task/commits/42f9df8278dff97a37629f5a5482002a3f50969d", "html_url_before": "https://github.com/collective/collective.task/commit/42f9df8278dff97a37629f5a5482002a3f50969d"}], "details": [{"raw_url": "https://github.com/collective/collective.task/raw/1aac7f83fa2c2b41d59ba02748912953461f3fac/CHANGES.rst", "code": "Changelog\n=========\n\n3.0.9 (unreleased)\n------------------\n\n- Required z3c.table 2.2 to include escaping, to avoid xss.\n  Escaped some columns.\n  [sgeulette]\n\n3.0.8 (2022-05-13)\n------------------\n\n- Added `get_methods_adapter` on Task content class. So it's possible to get the adapter\n  in an expression by example.\n  [sgeulette]\n\n3.0.7 (2022-02-09)\n------------------\n\n- Removed useless atct config.\n  [sgeulette]\n- Changed `task description` translation\n  [sgeulette]\n\n3.0.6 (2021-04-20)\n------------------\n\n- Removed bad step containing empty dependency (persisted now).\n  [sgeulette]\n- Set allowed_mime_types on task_description\n  [sgeulette]\n\n3.0.5 (2019-09-09)\n------------------\n\n- Removed bad step containing empty dependency.\n  [sgeulette]\n\n3.0.4 (2019-03-08)\n------------------\n\n- Added batch actions (collective.eeafaceted.batchactions) to change assigned group or assigned user.\n  [sgeulette]\n\n3.0.3 (2019-02-22)\n------------------\n\n- Corrected bug when a parent field is multivalued.\n  [sgeulette]\n\n3.0.2 (2018-08-22)\n------------------\n\n- Use imio.prettylink column for title if imio.prettylink product is present.\n  [sgeulette]\n\n3.0.1 (2018-07-30)\n------------------\n\n- Added validator on assigned_user\n  [sgeulette]\n- Corrected table column style.\n  [sgeulette]\n- pep8 on imports\n  [sgeulette]\n\n3.0 (2017-05-30)\n----------------\n\n- Modified enquirer field to be LocalRoleField. Use overridable vocabulary.\n  [sgeulette]\n- Added parents_assigned_groups and parents_enquirers field to manage parents rights\n  [sgeulette]\n- Block local roles on task content\n  [sgeulette]\n- Added special index value for empty field.\n  [sgeulette]\n- Use Owner role in workflow\n  [sgeulette]\n\n2.5 (2016-12-07)\n----------------\n\n- Set initial_trigger to true.\n  [sgeulette]\n\n2.4 (2016-06-22)\n----------------\n\n- Add a get_full_tree_title method returning the path title of a task until its parent container.\n  [fngaha]\n\n\n2.3 (2016-04-15)\n----------------\n\n- Adapted ITask to add method getting the highest parent.\n  [sgeulette]\n- Colorize states\n  [sgeulette]\n- Add icons for transitions\n  [sgeulette]\n- Add viewlet displaying task parents\n  [sgeulette]\n\n2.2.1 (2016-01-13)\n------------------\n\n- Modify a copy of the field.\n  [sgeulette]\n\n2.2 (2015-11-24)\n----------------\n\n- Added TaskContainer related search utility\n  [sgeulette]\n- Added task content interface to differentiate from behavior\n  [sgeulette]\n- Added task_description field\n  [sgeulette]\n- Added assigned_group and due_date indexes. Added indexer methods avoiding acquisition for children. Do not store None in catalog\n  [sgeulette]\n- Added assigned_group default value. default_value decorator didn't worked.\n  Schema defaultFactory is used but is called also in view mode when field is None and can't be less easily overrided !\n  [sgeulette]\n- Changed workflow to use 'Request review' guard permission to differentiate Reviewer and editor transitions (like in plone workflows)\n  [sgeulette]\n- Added item_view as default: use simple item view on task content\n  [sgeulette]\n- Added colorized warning when no assigned user\n  [sgeulette]\n- Added transition between to_do and realized\n  [sgeulette]\n- Replaced workflow title ids. Added english translations\n  [sgeulette]\n- Return unicode in table column\n  [sgeulette]\n\n2.1 (2015-06-30)\n----------------\n\n- Added uninstall 1.0 profile.\n  [sgeulette]\n- Corrected bad classifier\n  [sgeulette]\n\n\n2.0 (2015-06-03)\n----------------\n\n- Complete refactoring to propose a more generic task content and behaviors.\n  [cedricmessiant, sgeulette]\n\n\n1.0 (2015-03-16)\n----------------\n\n- Initial release.\n  [cedricmessiant]\n", "code_before": "Changelog\n=========\n\n3.0.9 (unreleased)\n------------------\n\n- Nothing changed yet.\n\n\n3.0.8 (2022-05-13)\n------------------\n\n- Added `get_methods_adapter` on Task content class. So it's possible to get the adapter\n  in an expression by example.\n  [sgeulette]\n\n3.0.7 (2022-02-09)\n------------------\n\n- Removed useless atct config.\n  [sgeulette]\n- Changed `task description` translation\n  [sgeulette]\n\n3.0.6 (2021-04-20)\n------------------\n\n- Removed bad step containing empty dependency (persisted now).\n  [sgeulette]\n- Set allowed_mime_types on task_description\n  [sgeulette]\n\n3.0.5 (2019-09-09)\n------------------\n\n- Removed bad step containing empty dependency.\n  [sgeulette]\n\n3.0.4 (2019-03-08)\n------------------\n\n- Added batch actions (collective.eeafaceted.batchactions) to change assigned group or assigned user.\n  [sgeulette]\n\n3.0.3 (2019-02-22)\n------------------\n\n- Corrected bug when a parent field is multivalued.\n  [sgeulette]\n\n3.0.2 (2018-08-22)\n------------------\n\n- Use imio.prettylink column for title if imio.prettylink product is present.\n  [sgeulette]\n\n3.0.1 (2018-07-30)\n------------------\n\n- Added validator on assigned_user\n  [sgeulette]\n- Corrected table column style.\n  [sgeulette]\n- pep8 on imports\n  [sgeulette]\n\n3.0 (2017-05-30)\n----------------\n\n- Modified enquirer field to be LocalRoleField. Use overridable vocabulary.\n  [sgeulette]\n- Added parents_assigned_groups and parents_enquirers field to manage parents rights\n  [sgeulette]\n- Block local roles on task content\n  [sgeulette]\n- Added special index value for empty field.\n  [sgeulette]\n- Use Owner role in workflow\n  [sgeulette]\n\n2.5 (2016-12-07)\n----------------\n\n- Set initial_trigger to true.\n  [sgeulette]\n\n2.4 (2016-06-22)\n----------------\n\n- Add a get_full_tree_title method returning the path title of a task until its parent container.\n  [fngaha]\n\n\n2.3 (2016-04-15)\n----------------\n\n- Adapted ITask to add method getting the highest parent.\n  [sgeulette]\n- Colorize states\n  [sgeulette]\n- Add icons for transitions\n  [sgeulette]\n- Add viewlet displaying task parents\n  [sgeulette]\n\n2.2.1 (2016-01-13)\n------------------\n\n- Modify a copy of the field.\n  [sgeulette]\n\n2.2 (2015-11-24)\n----------------\n\n- Added TaskContainer related search utility\n  [sgeulette]\n- Added task content interface to differentiate from behavior\n  [sgeulette]\n- Added task_description field\n  [sgeulette]\n- Added assigned_group and due_date indexes. Added indexer methods avoiding acquisition for children. Do not store None in catalog\n  [sgeulette]\n- Added assigned_group default value. default_value decorator didn't worked.\n  Schema defaultFactory is used but is called also in view mode when field is None and can't be less easily overrided !\n  [sgeulette]\n- Changed workflow to use 'Request review' guard permission to differentiate Reviewer and editor transitions (like in plone workflows)\n  [sgeulette]\n- Added item_view as default: use simple item view on task content\n  [sgeulette]\n- Added colorized warning when no assigned user\n  [sgeulette]\n- Added transition between to_do and realized\n  [sgeulette]\n- Replaced workflow title ids. Added english translations\n  [sgeulette]\n- Return unicode in table column\n  [sgeulette]\n\n2.1 (2015-06-30)\n----------------\n\n- Added uninstall 1.0 profile.\n  [sgeulette]\n- Corrected bad classifier\n  [sgeulette]\n\n\n2.0 (2015-06-03)\n----------------\n\n- Complete refactoring to propose a more generic task content and behaviors.\n  [cedricmessiant, sgeulette]\n\n\n1.0 (2015-03-16)\n----------------\n\n- Initial release.\n  [cedricmessiant]\n", "patch": "@@ -4,8 +4,9 @@ Changelog\n 3.0.9 (unreleased)\n ------------------\n \n-- Nothing changed yet.\n-\n+- Required z3c.table 2.2 to include escaping, to avoid xss.\n+  Escaped some columns.\n+  [sgeulette]\n \n 3.0.8 (2022-05-13)\n ------------------", "file_path": "files/2022_12/1338", "file_language": "rst", "file_name": "CHANGES.rst", "outdated_file_modify": 1, "outdated_file_before": 1, "outdated_file_after": 0}, {"raw_url": "https://github.com/collective/collective.task/raw/1aac7f83fa2c2b41d59ba02748912953461f3fac/setup.py", "code": "# -*- coding: utf-8 -*-\n\"\"\"Installer for the collective.task package.\"\"\"\n\nfrom setuptools import find_packages\nfrom setuptools import setup\n\n\nlong_description = (\n    open('README.rst').read()\n    + '\\n' +\n    'Contributors\\n'\n    '============\\n'\n    + '\\n' +\n    open('CONTRIBUTORS.rst').read()\n    + '\\n' +\n    open('CHANGES.rst').read()\n    + '\\n')\n\n\nsetup(\n    name='collective.task',\n    version='3.0.9.dev0',\n    description=\"Tasks management for Plone.\",\n    long_description=long_description,\n    # Get more from http://pypi.python.org/pypi?%3Aaction=list_classifiers\n    classifiers=[\n        \"Environment :: Web Environment\",\n        \"Framework :: Plone\",\n        \"Framework :: Plone :: 4.3\",\n        \"Programming Language :: Python\",\n        \"Programming Language :: Python :: 2.7\",\n    ],\n    keywords='Plone Python',\n    author='C\u00e9dric Messiant',\n    author_email='cedricmessiant@ecreall.com',\n    url='http://pypi.python.org/pypi/collective.task',\n    license='GPL',\n    packages=find_packages('src', exclude=['ez_setup']),\n    namespace_packages=['collective'],\n    package_dir={'': 'src'},\n    include_package_data=True,\n    zip_safe=False,\n    install_requires=[\n        'dexterity.localrolesfield',\n        'plone.api',\n        'plone.app.lockingbehavior',\n        'plone.directives.form',\n        'plone.formwidget.masterselect',\n        'plone.principalsource',\n        'future',\n        'imio.helpers',\n        'imio.migrator',\n        'setuptools',\n        'z3c.table>=2.2',\n    ],\n    extras_require={\n        'test': [\n            'collective.eeafaceted.batchactions',\n            'imio.prettylink',\n            'plone.app.testing',\n            'plone.app.contenttypes',\n            'plone.app.robotframework[debug]',\n        ],\n    },\n    entry_points=\"\"\"\n    [z3c.autoinclude.plugin]\n    target = plone\n    \"\"\",\n)\n", "code_before": "# -*- coding: utf-8 -*-\n\"\"\"Installer for the collective.task package.\"\"\"\n\nfrom setuptools import find_packages\nfrom setuptools import setup\n\n\nlong_description = (\n    open('README.rst').read()\n    + '\\n' +\n    'Contributors\\n'\n    '============\\n'\n    + '\\n' +\n    open('CONTRIBUTORS.rst').read()\n    + '\\n' +\n    open('CHANGES.rst').read()\n    + '\\n')\n\n\nsetup(\n    name='collective.task',\n    version='3.0.9.dev0',\n    description=\"Tasks management for Plone.\",\n    long_description=long_description,\n    # Get more from http://pypi.python.org/pypi?%3Aaction=list_classifiers\n    classifiers=[\n        \"Environment :: Web Environment\",\n        \"Framework :: Plone\",\n        \"Framework :: Plone :: 4.3\",\n        \"Programming Language :: Python\",\n        \"Programming Language :: Python :: 2.7\",\n    ],\n    keywords='Plone Python',\n    author='C\u00e9dric Messiant',\n    author_email='cedricmessiant@ecreall.com',\n    url='http://pypi.python.org/pypi/collective.task',\n    license='GPL',\n    packages=find_packages('src', exclude=['ez_setup']),\n    namespace_packages=['collective'],\n    package_dir={'': 'src'},\n    include_package_data=True,\n    zip_safe=False,\n    install_requires=[\n        'dexterity.localrolesfield',\n        'plone.api',\n        'plone.app.lockingbehavior',\n        'plone.directives.form',\n        'plone.formwidget.masterselect',\n        'plone.principalsource',\n        'imio.helpers',\n        'imio.migrator',\n        'setuptools',\n        'z3c.table',\n    ],\n    extras_require={\n        'test': [\n            'collective.eeafaceted.batchactions',\n            'imio.prettylink',\n            'plone.app.testing',\n            'plone.app.contenttypes',\n            'plone.app.robotframework[debug]',\n        ],\n    },\n    entry_points=\"\"\"\n    [z3c.autoinclude.plugin]\n    target = plone\n    \"\"\",\n)\n", "patch": "@@ -47,10 +47,11 @@\n         'plone.directives.form',\n         'plone.formwidget.masterselect',\n         'plone.principalsource',\n+        'future',\n         'imio.helpers',\n         'imio.migrator',\n         'setuptools',\n-        'z3c.table',\n+        'z3c.table>=2.2',\n     ],\n     extras_require={\n         'test': [", "file_path": "files/2022_12/1339", "file_language": "py", "file_name": "setup.py", "outdated_file_modify": 1, "outdated_file_before": 1, "outdated_file_after": 0, "llm_check": 0, "static_check": 0, "static": {"rats": [false, []], "semgrep": [false, []]}, "target": 0, "function_before": [], "function_after": []}, {"raw_url": "https://github.com/collective/collective.task/raw/1aac7f83fa2c2b41d59ba02748912953461f3fac/src%2Fcollective%2Ftask%2Fbrowser%2Ftable.py", "code": "# -*- coding: utf-8 -*-\n\"\"\"Define tables and columns.\"\"\"\n\nfrom collective.task import _\nfrom collective.task import PMF\nfrom collective.task.adapters import EMPTY_STRING\nfrom html import escape\nfrom imio.helpers.adapters import NoEscapeLinkColumn\nfrom plone import api\nfrom Products.CMFPlone.utils import normalizeString\nfrom Products.CMFPlone.utils import safe_unicode\nfrom z3c.table.column import Column\nfrom z3c.table.column import LinkColumn\nfrom z3c.table.table import Table\nfrom zope.cachedescriptors.property import CachedProperty\nfrom zope.i18n import translate\n\ntry:\n    from imio.prettylink.interfaces import IPrettyLink\nexcept ImportError:\n    pass\n\n\nclass TasksTable(Table):\n    \"\"\"Table that displays tasks info.\"\"\"\n\n    cssClassEven = u'even'\n    cssClassOdd = u'odd'\n    cssClasses = {'table': 'listing taskContainerListing icons-on'}\n\n    batchSize = 20\n    startBatchingAt = 30\n    results = []\n\n    @CachedProperty\n    def translation_service(self):\n        return api.portal.get_tool('translation_service')\n\n    @CachedProperty\n    def wtool(self):\n        return api.portal.get_tool('portal_workflow')\n\n    @CachedProperty\n    def portal_url(self):\n        return api.portal.get().absolute_url()\n\n    @CachedProperty\n    def values(self):\n        return self.results\n\n\nclass UserColumn(Column):\n    \"\"\"Base user column.\"\"\"\n\n    field = NotImplemented\n\n    def renderCell(self, value):\n        username = getattr(value, self.field, '')\n        if username and username != EMPTY_STRING:\n            member = api.user.get(username)\n            return escape(member.getUser().getProperty('fullname').decode('utf-8'))\n\n        return \"\"\n\n\nclass TitleColumn(LinkColumn):\n    \"\"\"Column that displays title.\"\"\"\n\n    header = PMF(\"Title\")\n    weight = 10\n\n    def getLinkCSS(self, item):\n        return ' class=\"state-%s contenttype-%s\"' % (api.content.get_state(obj=item),\n                                                     normalizeString(item.portal_type))\n\n    def getLinkContent(self, item):\n        return safe_unicode(item.title)\n\n\nclass PrettyLinkTitleColumn(TitleColumn):\n    \"\"\"Column that displays prettylink title.\"\"\"\n\n    header = PMF(\"Title\")\n    weight = 10\n\n    params = {}\n\n    def getPrettyLink(self, obj):\n        pl = IPrettyLink(obj)\n        for k, v in self.params.items():\n            setattr(pl, k, v)\n        return pl.getLink()\n\n    def renderCell(self, item):\n        \"\"\" \"\"\"\n        return self.getPrettyLink(item)\n\n\nclass EnquirerColumn(UserColumn):\n    \"\"\"Column that displays enquirer.\"\"\"\n\n    header = _(\"Enquirer\")\n    weight = 20\n    field = 'enquirer'\n\n\nclass AssignedGroupColumn(Column):\n    \"\"\"Column that displays assigned group.\"\"\"\n\n    header = _(\"Assigned group\")\n    weight = 30\n\n    def renderCell(self, value):\n        if value.assigned_group:\n            group = api.group.get(value.assigned_group).getGroup()\n            return escape(group.getProperty('title').decode('utf-8'))\n        return \"\"\n\n\nclass AssignedUserColumn(UserColumn):\n    \"\"\"Column that displays assigned user.\"\"\"\n\n    header = _(\"Assigned user\")\n    weight = 40\n    field = 'assigned_user'\n\n\nclass DueDateColumn(Column):\n    \"\"\"Column that displays due date.\"\"\"\n\n    header = _(\"Due date\")\n    weight = 50\n    long_format = False\n    time_only = False\n\n    def renderCell(self, value):\n        if value.due_date:\n            return api.portal.get_localized_time(datetime=value.due_date, long_format=self.long_format,\n                                                 time_only=self.time_only)\n        return \"\"\n\n\nclass ReviewStateColumn(Column):\n    \"\"\"Column that displays value's review state.\"\"\"\n\n    header = PMF(\"Review state\")\n    weight = 60\n\n    def renderCell(self, value):\n        state = api.content.get_state(value)\n        if state:\n            wtool = api.portal.get_tool('portal_workflow')\n            state_title = wtool.getTitleForStateOnType(state, value.portal_type)\n            return escape(translate(PMF(state_title), context=self.request))\n        return ''\n", "code_before": "# -*- coding: utf-8 -*-\n\"\"\"Define tables and columns.\"\"\"\n\nfrom collective.task import _\nfrom collective.task import PMF\nfrom collective.task.adapters import EMPTY_STRING\nfrom plone import api\nfrom Products.CMFPlone.utils import normalizeString\nfrom Products.CMFPlone.utils import safe_unicode\nfrom z3c.table.column import Column\nfrom z3c.table.column import LinkColumn\nfrom z3c.table.table import Table\nfrom zope.cachedescriptors.property import CachedProperty\nfrom zope.i18n import translate\n\ntry:\n    from imio.prettylink.interfaces import IPrettyLink\nexcept ImportError:\n    pass\n\n\nclass TasksTable(Table):\n\n    \"\"\"Table that displays tasks info.\"\"\"\n\n    cssClassEven = u'even'\n    cssClassOdd = u'odd'\n    cssClasses = {'table': 'listing taskContainerListing icons-on'}\n\n    batchSize = 20\n    startBatchingAt = 30\n    results = []\n\n    @CachedProperty\n    def translation_service(self):\n        return api.portal.get_tool('translation_service')\n\n    @CachedProperty\n    def wtool(self):\n        return api.portal.get_tool('portal_workflow')\n\n    @CachedProperty\n    def portal_url(self):\n        return api.portal.get().absolute_url()\n\n    @CachedProperty\n    def values(self):\n        return self.results\n\n\nclass UserColumn(Column):\n\n    \"\"\"Base user column.\"\"\"\n\n    field = NotImplemented\n\n    def renderCell(self, value):\n        username = getattr(value, self.field, '')\n        if username and username != EMPTY_STRING:\n            member = api.user.get(username)\n            return member.getUser().getProperty('fullname').decode('utf-8')\n\n        return \"\"\n\n\nclass TitleColumn(LinkColumn):\n\n    \"\"\"Column that displays title.\"\"\"\n\n    header = PMF(\"Title\")\n    weight = 10\n\n    def getLinkCSS(self, item):\n        return ' class=\"state-%s contenttype-%s\"' % (api.content.get_state(obj=item),\n                                                     normalizeString(item.portal_type))\n\n    def getLinkContent(self, item):\n        return safe_unicode(item.title)\n\n\nclass PrettyLinkTitleColumn(TitleColumn):\n\n    \"\"\"Column that displays prettylink title.\"\"\"\n\n    header = PMF(\"Title\")\n    weight = 10\n\n    params = {}\n\n    def getPrettyLink(self, obj):\n        pl = IPrettyLink(obj)\n        for k, v in self.params.items():\n            setattr(pl, k, v)\n        return pl.getLink()\n\n    def renderCell(self, item):\n        \"\"\" \"\"\"\n        return self.getPrettyLink(item)\n\n\nclass EnquirerColumn(UserColumn):\n\n    \"\"\"Column that displays enquirer.\"\"\"\n\n    header = _(\"Enquirer\")\n    weight = 20\n    field = 'enquirer'\n\n\nclass AssignedGroupColumn(Column):\n\n    \"\"\"Column that displays assigned group.\"\"\"\n\n    header = _(\"Assigned group\")\n    weight = 30\n\n    def renderCell(self, value):\n        if value.assigned_group:\n            group = api.group.get(value.assigned_group).getGroup()\n            return group.getProperty('title').decode('utf-8')\n\n        return \"\"\n\n\nclass AssignedUserColumn(UserColumn):\n\n    \"\"\"Column that displays assigned user.\"\"\"\n\n    header = _(\"Assigned user\")\n    weight = 40\n    field = 'assigned_user'\n\n\nclass DueDateColumn(Column):\n\n    \"\"\"Column that displays due date.\"\"\"\n\n    header = _(\"Due date\")\n    weight = 50\n    long_format = False\n    time_only = False\n\n    def renderCell(self, value):\n        if value.due_date:\n            return api.portal.get_localized_time(datetime=value.due_date, long_format=self.long_format,\n                                                 time_only=self.time_only)\n\n        return \"\"\n\n\nclass ReviewStateColumn(Column):\n\n    \"\"\"Column that displays value's review state.\"\"\"\n\n    header = PMF(\"Review state\")\n    weight = 60\n\n    def renderCell(self, value):\n        state = api.content.get_state(value)\n        if state:\n            wtool = api.portal.get_tool('portal_workflow')\n            state_title = wtool.getTitleForStateOnType(state, value.portal_type)\n            return translate(PMF(state_title), context=self.request)\n\n        return ''\n", "patch": "@@ -4,6 +4,8 @@\n from collective.task import _\n from collective.task import PMF\n from collective.task.adapters import EMPTY_STRING\n+from html import escape\n+from imio.helpers.adapters import NoEscapeLinkColumn\n from plone import api\n from Products.CMFPlone.utils import normalizeString\n from Products.CMFPlone.utils import safe_unicode\n@@ -20,7 +22,6 @@\n \n \n class TasksTable(Table):\n-\n     \"\"\"Table that displays tasks info.\"\"\"\n \n     cssClassEven = u'even'\n@@ -49,7 +50,6 @@ def values(self):\n \n \n class UserColumn(Column):\n-\n     \"\"\"Base user column.\"\"\"\n \n     field = NotImplemented\n@@ -58,13 +58,12 @@ def renderCell(self, value):\n         username = getattr(value, self.field, '')\n         if username and username != EMPTY_STRING:\n             member = api.user.get(username)\n-            return member.getUser().getProperty('fullname').decode('utf-8')\n+            return escape(member.getUser().getProperty('fullname').decode('utf-8'))\n \n         return \"\"\n \n \n class TitleColumn(LinkColumn):\n-\n     \"\"\"Column that displays title.\"\"\"\n \n     header = PMF(\"Title\")\n@@ -79,7 +78,6 @@ def getLinkContent(self, item):\n \n \n class PrettyLinkTitleColumn(TitleColumn):\n-\n     \"\"\"Column that displays prettylink title.\"\"\"\n \n     header = PMF(\"Title\")\n@@ -99,7 +97,6 @@ def renderCell(self, item):\n \n \n class EnquirerColumn(UserColumn):\n-\n     \"\"\"Column that displays enquirer.\"\"\"\n \n     header = _(\"Enquirer\")\n@@ -108,7 +105,6 @@ class EnquirerColumn(UserColumn):\n \n \n class AssignedGroupColumn(Column):\n-\n     \"\"\"Column that displays assigned group.\"\"\"\n \n     header = _(\"Assigned group\")\n@@ -117,13 +113,11 @@ class AssignedGroupColumn(Column):\n     def renderCell(self, value):\n         if value.assigned_group:\n             group = api.group.get(value.assigned_group).getGroup()\n-            return group.getProperty('title').decode('utf-8')\n-\n+            return escape(group.getProperty('title').decode('utf-8'))\n         return \"\"\n \n \n class AssignedUserColumn(UserColumn):\n-\n     \"\"\"Column that displays assigned user.\"\"\"\n \n     header = _(\"Assigned user\")\n@@ -132,7 +126,6 @@ class AssignedUserColumn(UserColumn):\n \n \n class DueDateColumn(Column):\n-\n     \"\"\"Column that displays due date.\"\"\"\n \n     header = _(\"Due date\")\n@@ -144,12 +137,10 @@ def renderCell(self, value):\n         if value.due_date:\n             return api.portal.get_localized_time(datetime=value.due_date, long_format=self.long_format,\n                                                  time_only=self.time_only)\n-\n         return \"\"\n \n \n class ReviewStateColumn(Column):\n-\n     \"\"\"Column that displays value's review state.\"\"\"\n \n     header = PMF(\"Review state\")\n@@ -160,6 +151,5 @@ def renderCell(self, value):\n         if state:\n             wtool = api.portal.get_tool('portal_workflow')\n             state_title = wtool.getTitleForStateOnType(state, value.portal_type)\n-            return translate(PMF(state_title), context=self.request)\n-\n+            return escape(translate(PMF(state_title), context=self.request))\n         return ''", "file_path": "files/2022_12/1340", "file_language": "py", "file_name": "src/collective/task/browser/table.py", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 1, "llm_check": 0, "static_check": 0, "static": {"rats": [false, []], "semgrep": [false, []]}, "target": 0, "function_before": [{"function": "class TasksTable(Table):\n\n    \"\"\"Table that displays tasks info.\"\"\"\n\n    cssClassEven = u'even'\n    cssClassOdd = u'odd'\n    cssClasses = {'table': 'listing taskContainerListing icons-on'}\n\n    batchSize = 20\n    startBatchingAt = 30\n    results = []\n\n    @CachedProperty\n    def translation_service(self):\n        return api.portal.get_tool('translation_service')\n\n    @CachedProperty\n    def wtool(self):\n        return api.portal.get_tool('portal_workflow')\n\n    @CachedProperty\n    def portal_url(self):\n        return api.portal.get().absolute_url()\n\n    @CachedProperty\n    def values(self):\n        return self.results", "target": 0}, {"function": "class UserColumn(Column):\n\n    \"\"\"Base user column.\"\"\"\n\n    field = NotImplemented\n\n    def renderCell(self, value):\n        username = getattr(value, self.field, '')\n        if username and username != EMPTY_STRING:\n            member = api.user.get(username)\n            return member.getUser().getProperty('fullname').decode('utf-8')\n\n        return \"\"", "target": 0}, {"function": "class TitleColumn(LinkColumn):\n\n    \"\"\"Column that displays title.\"\"\"\n\n    header = PMF(\"Title\")\n    weight = 10\n\n    def getLinkCSS(self, item):\n        return ' class=\"state-%s contenttype-%s\"' % (api.content.get_state(obj=item),\n                                                     normalizeString(item.portal_type))\n\n    def getLinkContent(self, item):\n        return safe_unicode(item.title)", "target": 0}, {"function": "class PrettyLinkTitleColumn(TitleColumn):\n\n    \"\"\"Column that displays prettylink title.\"\"\"\n\n    header = PMF(\"Title\")\n    weight = 10\n\n    params = {}\n\n    def getPrettyLink(self, obj):\n        pl = IPrettyLink(obj)\n        for k, v in self.params.items():\n            setattr(pl, k, v)\n        return pl.getLink()\n\n    def renderCell(self, item):\n        \"\"\" \"\"\"\n        return self.getPrettyLink(item)", "target": 0}, {"function": "class EnquirerColumn(UserColumn):\n\n    \"\"\"Column that displays enquirer.\"\"\"\n\n    header = _(\"Enquirer\")\n    weight = 20\n    field = 'enquirer'", "target": 0}, {"function": "class AssignedGroupColumn(Column):\n\n    \"\"\"Column that displays assigned group.\"\"\"\n\n    header = _(\"Assigned group\")\n    weight = 30\n\n    def renderCell(self, value):\n        if value.assigned_group:\n            group = api.group.get(value.assigned_group).getGroup()\n            return group.getProperty('title').decode('utf-8')\n\n        return \"\"", "target": 0}, {"function": "class AssignedUserColumn(UserColumn):\n\n    \"\"\"Column that displays assigned user.\"\"\"\n\n    header = _(\"Assigned user\")\n    weight = 40\n    field = 'assigned_user'", "target": 0}, {"function": "class DueDateColumn(Column):\n\n    \"\"\"Column that displays due date.\"\"\"\n\n    header = _(\"Due date\")\n    weight = 50\n    long_format = False\n    time_only = False\n\n    def renderCell(self, value):\n        if value.due_date:\n            return api.portal.get_localized_time(datetime=value.due_date, long_format=self.long_format,\n                                                 time_only=self.time_only)\n\n        return \"\"", "target": 0}, {"function": "class ReviewStateColumn(Column):\n\n    \"\"\"Column that displays value's review state.\"\"\"\n\n    header = PMF(\"Review state\")\n    weight = 60\n\n    def renderCell(self, value):\n        state = api.content.get_state(value)\n        if state:\n            wtool = api.portal.get_tool('portal_workflow')\n            state_title = wtool.getTitleForStateOnType(state, value.portal_type)\n            return translate(PMF(state_title), context=self.request)\n\n        return ''", "target": 0}], "function_after": [{"function": "class TasksTable(Table):\n    \"\"\"Table that displays tasks info.\"\"\"\n\n    cssClassEven = u'even'\n    cssClassOdd = u'odd'\n    cssClasses = {'table': 'listing taskContainerListing icons-on'}\n\n    batchSize = 20\n    startBatchingAt = 30\n    results = []\n\n    @CachedProperty\n    def translation_service(self):\n        return api.portal.get_tool('translation_service')\n\n    @CachedProperty\n    def wtool(self):\n        return api.portal.get_tool('portal_workflow')\n\n    @CachedProperty\n    def portal_url(self):\n        return api.portal.get().absolute_url()\n\n    @CachedProperty\n    def values(self):\n        return self.results", "target": 0}, {"function": "class UserColumn(Column):\n    \"\"\"Base user column.\"\"\"\n\n    field = NotImplemented\n\n    def renderCell(self, value):\n        username = getattr(value, self.field, '')\n        if username and username != EMPTY_STRING:\n            member = api.user.get(username)\n            return escape(member.getUser().getProperty('fullname').decode('utf-8'))\n\n        return \"\"", "target": 0}, {"function": "class TitleColumn(LinkColumn):\n    \"\"\"Column that displays title.\"\"\"\n\n    header = PMF(\"Title\")\n    weight = 10\n\n    def getLinkCSS(self, item):\n        return ' class=\"state-%s contenttype-%s\"' % (api.content.get_state(obj=item),\n                                                     normalizeString(item.portal_type))\n\n    def getLinkContent(self, item):\n        return safe_unicode(item.title)", "target": 0}, {"function": "class PrettyLinkTitleColumn(TitleColumn):\n    \"\"\"Column that displays prettylink title.\"\"\"\n\n    header = PMF(\"Title\")\n    weight = 10\n\n    params = {}\n\n    def getPrettyLink(self, obj):\n        pl = IPrettyLink(obj)\n        for k, v in self.params.items():\n            setattr(pl, k, v)\n        return pl.getLink()\n\n    def renderCell(self, item):\n        \"\"\" \"\"\"\n        return self.getPrettyLink(item)", "target": 0}, {"function": "class EnquirerColumn(UserColumn):\n    \"\"\"Column that displays enquirer.\"\"\"\n\n    header = _(\"Enquirer\")\n    weight = 20\n    field = 'enquirer'", "target": 0}, {"function": "class AssignedGroupColumn(Column):\n    \"\"\"Column that displays assigned group.\"\"\"\n\n    header = _(\"Assigned group\")\n    weight = 30\n\n    def renderCell(self, value):\n        if value.assigned_group:\n            group = api.group.get(value.assigned_group).getGroup()\n            return escape(group.getProperty('title').decode('utf-8'))\n        return \"\"", "target": 0}, {"function": "class AssignedUserColumn(UserColumn):\n    \"\"\"Column that displays assigned user.\"\"\"\n\n    header = _(\"Assigned user\")\n    weight = 40\n    field = 'assigned_user'", "target": 0}, {"function": "class DueDateColumn(Column):\n    \"\"\"Column that displays due date.\"\"\"\n\n    header = _(\"Due date\")\n    weight = 50\n    long_format = False\n    time_only = False\n\n    def renderCell(self, value):\n        if value.due_date:\n            return api.portal.get_localized_time(datetime=value.due_date, long_format=self.long_format,\n                                                 time_only=self.time_only)\n        return \"\"", "target": 0}, {"function": "class ReviewStateColumn(Column):\n    \"\"\"Column that displays value's review state.\"\"\"\n\n    header = PMF(\"Review state\")\n    weight = 60\n\n    def renderCell(self, value):\n        state = api.content.get_state(value)\n        if state:\n            wtool = api.portal.get_tool('portal_workflow')\n            state_title = wtool.getTitleForStateOnType(state, value.portal_type)\n            return escape(translate(PMF(state_title), context=self.request))\n        return ''", "target": 0}]}], "outdated": 1, "cwe_descripiton": "", "cwe_consequence": "", "cwe_method": "", "cwe_solution": ""}
