{"index": 9217, "cve_id": "CVE-2022-3607", "cwe_id": ["CWE-74"], "cve_language": "Python", "cve_description": "Failure to Sanitize Special Elements into a Different Plane (Special Element Injection) in GitHub repository octoprint/octoprint prior to 1.8.3.", "cvss": "6.0", "publish_date": "October 19, 2022", "AV": "LOCAL", "AC": "LOCAL", "PR": "HIGH", "UI": "NONE", "S": "CHANGED", "C": "HIGH", "I": "NONE", "A": "NONE", "commit_id": "3cca3a43f3d085e9bbe5a5840c8255bb1b5d052e", "commit_message": "\ud83d\udd12\ufe0f Close a sanity check hole in language packs\n\nA language pack containing a directory traversing\nsymlink could be uploaded. Upon backup creation, the\nsymlink would then lead to inclusion of whatever it\nwas pointing to in the resulting backup. This could\nbe used by an attacker with admin permissions to extract\ninformation from the server.", "commit_date": "2022-08-31T16:28:50Z", "project": "octoprint/octoprint", "url": "https://api.github.com/repos/OctoPrint/OctoPrint/commits/3cca3a43f3d085e9bbe5a5840c8255bb1b5d052e", "html_url": "https://github.com/OctoPrint/OctoPrint/commit/3cca3a43f3d085e9bbe5a5840c8255bb1b5d052e", "windows_before": [{"commit_id": "ef95ef1c101b79394f134e8fce000e6bae046571", "commit_date": "Wed Aug 24 10:52:48 2022 +0200", "commit_message": "\ud83d\udd12\ufe0f Fix a wrong permission role", "files_name": ["src/octoprint/plugins/pluginmanager/__init__.py"]}, {"commit_id": "20e0b8271492899797bcbcc31651b953add1ad98", "commit_date": "Tue Aug 23 17:58:33 2022 +0200", "commit_message": "\ud83d\udeb8 announcements: be less spammy", "files_name": ["src/octoprint/plugins/announcements/__init__.py", "src/octoprint/plugins/announcements/static/js/announcements.js", "src/octoprint/plugins/announcements/templates/announcements.jinja2", "src/octoprint/plugins/announcements/templates/announcements_navbar.jinja2", "src/octoprint/server/__init__.py", "src/octoprint/static/vendor/fa5-power-transforms.min.css"]}, {"commit_id": "2cbeb27140c5695fd91593baa682e9c930dc4f27", "commit_date": "Thu Aug 18 17:23:11 2022 +0200", "commit_message": "\ud83d\udd12\ufe0f Require the current password for changing it", "files_name": ["docs/api/access.rst", "src/octoprint/server/api/access.py", "src/octoprint/static/js/app/client/access.js", "src/octoprint/static/js/app/viewmodels/access.js", "src/octoprint/static/js/app/viewmodels/usersettings.js", "src/octoprint/templates/dialogs/usersettings/access.jinja2"]}, {"commit_id": "1453076ee3e47fcab2dc73664ec2d61d3ef7fc4f", "commit_date": "Thu Aug 18 17:23:11 2022 +0200", "commit_message": "\ud83d\udd12\ufe0f Require the current password for changing it", "files_name": ["docs/api/access.rst", "src/octoprint/server/api/access.py", "src/octoprint/static/js/app/client/access.js", "src/octoprint/static/js/app/viewmodels/access.js", "src/octoprint/static/js/app/viewmodels/usersettings.js", "src/octoprint/templates/dialogs/usersettings/access.jinja2"]}, {"commit_id": "983685090f9b34c09874d253f0980373f665a4eb", "commit_date": "Thu Aug 18 13:00:54 2022 +0200", "commit_message": "\ud83d\udc9a Add wrapper around limit decorator to fix pytest discovery", "files_name": ["src/octoprint/server/api/__init__.py", "src/octoprint/server/util/flask.py"]}, {"commit_id": "18871db42bf59d8aa832863b3ada06a2e227780b", "commit_date": "Thu Aug 18 16:18:50 2022 +0200", "commit_message": "\ud83d\udea8 Fix Flask/Werkzeug 2.2 warnings", "files_name": ["setup.py", "src/octoprint/server/__init__.py", "src/octoprint/server/util/flask.py", "src/octoprint/server/views.py"]}, {"commit_id": "c87a7b68519c25a4fad0aa684b0a382c514d594b", "commit_date": "Thu Aug 18 10:47:12 2022 +0200", "commit_message": "\ud83d\udc1b Add missing xhr parameter to function", "files_name": ["src/octoprint/static/js/login/login.js"]}, {"commit_id": "6af0ce48dcc7cfcb3034b8f56b4d55f67a4fc23a", "commit_date": "Thu Aug 18 13:00:54 2022 +0200", "commit_message": "\ud83d\udc9a Add wrapper around limit decorator to fix pytest discovery", "files_name": ["src/octoprint/server/api/__init__.py", "src/octoprint/server/util/flask.py"]}, {"commit_id": "f43f45267daae35a0cd581b54e16556c7e810081", "commit_date": "Wed Aug 17 00:13:14 2022 +0000", "commit_message": "Merge branch 'master' into maintenance", "files_name": ["3e3c11811e216fb371a33e28412df83f9701e5b0 - Wed Aug 17 00:45:31 2022 +0200 : \ud83d\udd12\ufe0f Enforce valid type on copy/move of uploads", "src/octoprint/filemanager/storage.py", "src/octoprint/server/__init__.py", "src/octoprint/server/api/files.py"]}, {"commit_id": "a33622e0b79644494e51caea377750aff3659faf", "commit_date": "Mon Aug 15 11:21:59 2022 +0200", "commit_message": "\ud83d\udd12\ufe0f Rate limit failed login attempts", "files_name": ["setup.py", "src/octoprint/server/__init__.py", "src/octoprint/server/api/__init__.py", "src/octoprint/static/css/login.css", "src/octoprint/static/js/login/login.js", "src/octoprint/static/less/login.less", "src/octoprint/templates/login.jinja2"]}, {"commit_id": "ae1cba8d914f390dfa13ea569e23a2f1d30d3384", "commit_date": "Tue Aug 16 11:37:44 2022 +0200", "commit_message": "\u2705 Make E2E tests compatible to prefix paths", "files_name": ["tests/cypress/integration/login.js", "tests/cypress/util/util.js"]}, {"commit_id": "b4ccbf525261781618a3609e6b577be728fc2023", "commit_date": "Mon Aug 15 16:10:19 2022 +0200", "commit_message": "\ud83d\udeb8 Properly reflect all whitespace in filenames (#4613)", "files_name": ["src/octoprint/static/less/octoprint.less"]}, {"commit_id": "65e222da1ecad4c708d53ee572fd78c0e1abb592", "commit_date": "Mon Aug 15 12:16:30 2022 +0200", "commit_message": "\u2728 M20 T support (timestamps for files on sd card) (#4610)", "files_name": ["AUTHORS.md", "docs/development/virtual_printer.rst", "src/octoprint/plugins/virtual_printer/virtual.py", "src/octoprint/printer/standard.py", "src/octoprint/server/api/files.py", "src/octoprint/util/comm.py", "src/octoprint/util/files.py", "tests/util/test_comm.py", "tests/util/test_files.py"]}, {"commit_id": "82c892ba40b3741d1b7711d949e56af64f5bc2de", "commit_date": "Mon Aug 15 11:21:59 2022 +0200", "commit_message": "\ud83d\udd12\ufe0f Rate limit failed login attempts", "files_name": ["setup.py", "src/octoprint/server/__init__.py", "src/octoprint/server/api/__init__.py", "src/octoprint/static/css/login.css", "src/octoprint/static/js/login/login.js", "src/octoprint/static/less/login.less", "src/octoprint/templates/login.jinja2"]}, {"commit_id": "bd51717535dd4e4f3363254be660f6ba39e3a22b", "commit_date": "Fri Aug 12 20:26:18 2022 +0200", "commit_message": "Restore doesn't restore plugins versions. (#4618)", "files_name": ["docs/bundledplugins/backup.rst"]}, {"commit_id": "7fd5a96bcf00f242cae731c837c72939a2ea4dc2", "commit_date": "Fri Aug 12 00:12:27 2022 +0000", "commit_message": "Merge branch 'master' into maintenance", "files_name": ["b4c55fdf560ed1cc096faf6ffc4751c4b67f1deb - Thu Aug 11 17:50:24 2022 +0200 : \u2728 Add octoprint.util.files.search_in_file", "src/octoprint/util/files.py", "tests/util/test_files.py"]}, {"commit_id": "9f1ffde4c07e2515bde6c0c03edb8eb6c23ae16e", "commit_date": "Thu Aug 11 16:23:16 2022 +0200", "commit_message": "\u2705 e2e: Make port configurable", "files_name": ["tests/cypress/integration/login.js", "tests/cypress/util/util.js"]}, {"commit_id": "fb14f953cd6c1a819da00d19be6fef178655bbb7", "commit_date": "Thu Aug 11 14:57:28 2022 +0100", "commit_message": ":bug: Fix spinner icon on file delete (#4616)", "files_name": ["src/octoprint/static/js/app/viewmodels/files.js"]}, {"commit_id": "fd2db95508c2604c5dfee21a00a71f86e31cbd3d", "commit_date": "Tue Aug 9 15:18:12 2022 +0200", "commit_message": "\ud83d\udd16 staging/bugfix is now 1.8.3.dev", "files_name": [".versioneer-lookup"]}, {"commit_id": "18184aa6ffb7790614276314a80cff50d2da04cf", "commit_date": "Tue Aug 9 15:01:51 2022 +0200", "commit_message": "Merge branch 'maintenance' of github.com:OctoPrint/OctoPrint into maintenance", "files_name": ["ee6bd255746e9e4aee4fe32b52e30988372ec764 - Tue Aug 9 15:00:01 2022 +0200 : Merge branch 'master' into maintenance", "87f4a4e8c967dab147beb6213cbf61cca32bec62 - Tue Aug 9 13:54:24 2022 +0200 : \ud83d\udd16 Preparing release of 1.8.2", "SUPPORTERS.md", "src/octoprint/plugins/errortracking/__init__.py"]}, {"commit_id": "91ef0c0d99207984c4f4a0ed3551ba5ea1a69d21", "commit_date": "Tue Aug 9 13:03:42 2022 +0200", "commit_message": "\ud83d\udccc Pin Flask to 2.1", "files_name": ["setup.py"]}, {"commit_id": "f217ef31963aba0f4a52eedbdea536932ec11ef1", "commit_date": "Mon Aug 8 19:21:36 2022 +0200", "commit_message": "\ud83d\udcdd Add hint on how to rebuild CSS files. (#4614)", "files_name": ["docs/development/environment.rst"]}, {"commit_id": "f4110b40a38b3f5e8f85072ed013b3c870426690", "commit_date": "Thu Aug 4 15:35:45 2022 +0200", "commit_message": "\ud83d\udc1b Virtual Printer: Lowercase only filename on SD (#4607)", "files_name": ["src/octoprint/plugins/virtual_printer/virtual.py"]}, {"commit_id": "b332a27247bc9f5914e9f65d3b770bdcafffa64e", "commit_date": "Thu Aug 4 15:26:24 2022 +0200", "commit_message": "\ud83e\udd45 GCV: Make clear that skipping may break stuff", "files_name": ["src/octoprint/plugins/gcodeviewer/templates/gcodeviewer_settings.jinja2"]}, {"commit_id": "45dab6b10c042ccb1b8bc29212db7dd043a52f5b", "commit_date": "Thu Aug 4 05:09:16 2022 -0400", "commit_message": "\ud83d\udeb8 Better error handling for uploading and removing files and folders (#4588)", "files_name": ["src/octoprint/filemanager/storage.py", "src/octoprint/server/api/files.py", "src/octoprint/static/js/app/viewmodels/files.js", "src/octoprint/templates/dialogs/files.jinja2", "tests/filemanager/test_localstorage.py"]}, {"commit_id": "1eaa88aa3400aa8ab730da13e8a094122dca6a53", "commit_date": "Thu Aug 4 05:03:05 2022 -0400", "commit_message": "\ud83d\udc1b Fix arc length calculation for G3 arcs (#4606)", "files_name": ["src/octoprint/util/gcodeInterpreter.py"]}, {"commit_id": "dabdd40806e3409f134ab8e276f078e2a02d062b", "commit_date": "Thu Aug 4 10:33:31 2022 +0200", "commit_message": "\ud83d\udd12\ufe0f Fix another open redirect issue", "files_name": ["src/octoprint/server/util/__init__.py", "src/octoprint/server/views.py", "tests/server/util/test_util.py"]}, {"commit_id": "b100f65f5b12311a32f1dbaf29272d73a66a5fe7", "commit_date": "Wed Aug 3 10:10:50 2022 -0600", "commit_message": "\u2728 Fire action hooks on ALL actions, not just unhandled ones (#4591)", "files_name": ["AUTHORS.md", "src/octoprint/util/comm.py"]}, {"commit_id": "8c871d06c168c522e696737cb5173e99cb402a79", "commit_date": "Wed Aug 3 17:53:58 2022 +0200", "commit_message": "\u267f\ufe0f Add aria labels and roles for accessibility (#4597)", "files_name": ["AUTHORS.md", "src/octoprint/plugins/action_command_notification/templates/action_command_notification_sidebar_header.jinja2", "src/octoprint/plugins/action_command_prompt/templates/action_command_prompt_navbar.jinja2", "src/octoprint/plugins/announcements/templates/announcements_navbar.jinja2", "src/octoprint/plugins/logging/templates/logging_navbar_plugintimingslog.jinja2", "src/octoprint/plugins/logging/templates/logging_navbar_seriallog.jinja2", "src/octoprint/plugins/logging/templates/logging_settings.jinja2", "src/octoprint/plugins/pluginmanager/templates/pluginmanager_settings.jinja2", "src/octoprint/plugins/softwareupdate/templates/softwareupdate_settings.jinja2", "src/octoprint/templates/navbar/offlineindicator.jinja2", "src/octoprint/templates/navbar/settings.jinja2", "src/octoprint/templates/navbar/systemmenu.jinja2", "src/octoprint/templates/sidebar/connection_header.jinja2", "src/octoprint/templates/sidebar/files.jinja2", "src/octoprint/templates/sidebar/files_header.jinja2", "src/octoprint/templates/tabs/control.jinja2", "src/octoprint/templates/tabs/temperature.jinja2"]}, {"commit_id": "8f6077aadc70196ac6c3dbe1f9375b4a89b489e3", "commit_date": "Wed Aug 3 14:23:17 2022 +0200", "commit_message": "Recognize sd card initialization on Repetier fw (#4605)", "files_name": ["src/octoprint/templates/dialogs/settings/serialconnection.jinja2", "src/octoprint/util/comm.py"]}, {"commit_id": "33ca2d8a787397ac0f591f54ca3093ab90f03839", "commit_date": "Wed Aug 3 13:43:22 2022 +0200", "commit_message": "\ud83d\udc1b GCV: Fix loading of pako.js from worker", "files_name": ["src/octoprint/plugins/gcodeviewer/static/js/viewer/worker.js"]}, {"commit_id": "d351794485556ae6207d41d166f202ee4eb76e80", "commit_date": "Wed Aug 3 13:40:20 2022 +0200", "commit_message": "\ud83d\udc1b Make settings threadsafe (#4560)", "files_name": ["src/octoprint/settings/__init__.py"]}, {"commit_id": "62efcee4dd225d626121c9f98a8a6864d6e29697", "commit_date": "Wed Aug 3 11:41:13 2022 +0200", "commit_message": "\u270f Make codespell pre-commit check pass", "files_name": ["docs/jsclientlib/util.rst", "setup.cfg", "src/octoprint/plugins/gcodeviewer/__init__.py", "src/octoprint/plugins/gcodeviewer/static/js/lib/pako.js", "src/octoprint/server/__init__.py", "src/octoprint/static/js/app/main.js", "src/octoprint/util/jinja.py", "tests/static/js/test-helpers.js"]}, {"commit_id": "75cb5930acb90cfd555abf9261f86560fdbf9b63", "commit_date": "Wed Aug 3 11:37:51 2022 +0200", "commit_message": "\ud83d\udc77 Don't exclude docs folder from pre-commit", "files_name": [".pre-commit-config.yaml", "docs/api/files.rst", "docs/api/printerprofiles.rst", "docs/api/timelapse.rst", "docs/conf.py", "docs/configuration/config_yaml.rst", "docs/configuration/yaml.rst", "docs/development/environment.rst", "docs/development/virtual_printer.rst", "docs/events/index.rst", "docs/images/template_plugin_types.ep", "docs/index.rst", "docs/jsclientlib/control.rst", "docs/jsclientlib/job.rst", "docs/modules/filemanager.rst", "docs/modules/server.rst"]}], "windows_after": [{"commit_id": "b83b57406eebca60432fbdcb54f8e7791b377e5b", "commit_date": "Thu Sep 1 12:18:53 2022 +0200", "commit_message": "\ud83d\udc9a Add setting to disable rate limiter", "files_name": [".github/fixtures/with_acl/config.yaml", "src/octoprint/server/__init__.py", "src/octoprint/settings.py"]}, {"commit_id": "40e6217ac1a85cc5ed592873ae49db01d3005da4", "commit_date": "Thu Sep 1 12:45:57 2022 +0200", "commit_message": "\ud83d\udd12 Make session handling more secure", "files_name": ["src/octoprint/access/users.py", "src/octoprint/server/__init__.py", "src/octoprint/server/api/__init__.py", "src/octoprint/server/util/flask.py", "src/octoprint/server/util/sockjs.py", "src/octoprint/static/js/app/viewmodels/usersettings.js", "src/octoprint/templates/dialogs/usersettings/access.jinja2", "tests/server/util/test_flask.py"]}, {"commit_id": "92e8a2a1386aa0ce54cdee14bbafd7f7390b8f8e", "commit_date": "Wed Sep 7 16:12:25 2022 +0200", "commit_message": "Merge branch 'master' into staging/bugfix", "files_name": ["c7f6d0750e3799dab7e5a139c76a679d6ed66385 - Wed Sep 7 16:33:35 2022 +0200 : \ud83d\udc9a Prevent m20 timestamp tests from failing on 32bit time_t. (#4637)", "tests/util/test_files.py"]}, {"commit_id": "452dcdfbccef99b56cd5a9dde0dd20f59c8b2144", "commit_date": "Thu Sep 8 13:05:41 2022 +0200", "commit_message": "\ud83d\udc1b Fix a styling issue in the appearance settings", "files_name": ["src/octoprint/templates/dialogs/settings/appearance.jinja2"]}, {"commit_id": "3092734c62c60d9c1cfa33d5ce5fec7e940b048c", "commit_date": "Thu Sep 8 13:36:47 2022 +0200", "commit_message": "\ud83d\udd12\ufe0f Require FILES_DELETE permission to overwrite a file", "files_name": ["src/octoprint/server/api/files.py", "src/octoprint/static/js/app/viewmodels/files.js"]}, {"commit_id": "0d8919846473a2838d236db26dd59067d4092b9d", "commit_date": "Thu Sep 8 14:30:41 2022 +0200", "commit_message": "\ud83d\udd12\ufe0f Limit logs push to MONITOR_TERMINAL permission", "files_name": ["src/octoprint/server/util/sockjs.py", "src/octoprint/static/js/app/viewmodels/terminal.js"]}, {"commit_id": "e550c94068c04e83de517ca7d87c97f340734ef2", "commit_date": "Thu Sep 8 16:42:57 2022 +0200", "commit_message": "\ud83d\udd12\ufe0f Better path validation for backup downloads", "files_name": ["src/octoprint/plugins/backup/__init__.py"]}, {"commit_id": "dc201416b6b10df83c38f7cbb47e20c4244e1d81", "commit_date": "Thu Sep 8 17:22:52 2022 +0200", "commit_message": "\ud83d\udd12\ufe0f Require ADMIN for user management", "files_name": ["src/octoprint/server/api/access.py", "src/octoprint/static/js/app/viewmodels/access.js"]}, {"commit_id": "14aec958987da315e8de3e344a993b09565ba313", "commit_date": "Thu Sep 8 18:11:21 2022 +0200", "commit_message": "\ud83d\udc1b Allow user creation without groups", "files_name": ["src/octoprint/access/users.py"]}, {"commit_id": "b447779e33a714187fdf3061c5cad501f6a0dce5", "commit_date": "Thu Sep 8 19:20:25 2022 +0200", "commit_message": "\ud83d\udd12\ufe0f Switch password hashing to argon2", "files_name": ["setup.py", "src/octoprint/access/users.py"]}, {"commit_id": "3c8f8c84f4b9a13494d831dd8a736c21feaee12b", "commit_date": "Mon Sep 12 17:21:51 2022 +0200", "commit_message": "\ud83e\udd45 Improve password hash migration", "files_name": ["docs/configuration/config_yaml.rst", "docs/features/accesscontrol.rst", "src/octoprint/access/users.py", "src/octoprint/settings.py", "tests/access/users/test_usermanager.py"]}, {"commit_id": "0db80dc0c9d70f75c28588a2ebdd4f9c4d49a159", "commit_date": "Mon Sep 12 18:30:30 2022 +0200", "commit_message": "\ud83d\udd12\ufe0f Limit folder config in UI to necessities", "files_name": ["src/octoprint/server/api/settings.py", "src/octoprint/static/js/app/viewmodels/settings.js", "src/octoprint/templates/dialogs/settings/folders.jinja2"]}, {"commit_id": "59a0c8e8d79e9d28c4a2dfbf4105f8dd580a8f04", "commit_date": "Mon Sep 19 10:01:28 2022 +0200", "commit_message": "\ud83d\udd12\ufe0f Protect against CSRF attacks (#5)", "files_name": [".github/fixtures/with_acl/config.yaml", "docs/api/general.rst", "docs/jsclientlib/base.rst", "src/octoprint/plugin/types.py", "src/octoprint/plugins/announcements/__init__.py", "src/octoprint/plugins/appkeys/__init__.py", "src/octoprint/plugins/backup/__init__.py", "src/octoprint/plugins/backup/static/js/backup.js", "src/octoprint/plugins/corewizard/__init__.py", "src/octoprint/plugins/discovery/__init__.py", "src/octoprint/plugins/logging/__init__.py", "src/octoprint/plugins/pluginmanager/__init__.py", "src/octoprint/plugins/softwareupdate/__init__.py", "src/octoprint/server/__init__.py", "src/octoprint/server/api/__init__.py", "src/octoprint/server/util/__init__.py", "src/octoprint/server/util/csrf.py", "src/octoprint/server/views.py", "src/octoprint/settings.py", "src/octoprint/static/js/app/client/base.js", "src/octoprint/static/js/app/main.js", "src/octoprint/static/js/app/viewmodels/settings.js"]}, {"commit_id": "d0d226f3e0ad0a6436e4f32519bf38a82aa576ca", "commit_date": "Tue Sep 20 11:04:39 2022 +0200", "commit_message": "\ud83d\udd16 Preparing release of 1.8.3", "files_name": ["SUPPORTERS.md", "src/octoprint/plugins/errortracking/__init__.py", "src/octoprint/translations/de/LC_MESSAGES/messages.mo", "src/octoprint/translations/de/LC_MESSAGES/messages.po", "translations/de/LC_MESSAGES/messages.mo", "translations/de/LC_MESSAGES/messages.po", "translations/messages.pot"]}, {"commit_id": "24e6fcf170b27d91abb8b917716206d691e5fa46", "commit_date": "Tue Sep 20 14:02:49 2022 +0200", "commit_message": "Merge branch 'master' into maintenance", "files_name": ["9bc2d541964d5cbbe91b23b2df33742c5f072abb - Tue Sep 20 14:57:10 2022 +0200 : \ud83d\udd16 staging/bugfix is now 1.8.4.dev", ".versioneer-lookup"]}, {"commit_id": "09cfbe5bbd9894639aa80e8e14dbb41fba592b5a", "commit_date": "Wed Sep 21 22:12:41 2022 +0100", "commit_message": ":pencil2: Fix a typo (`hashs` :arrow_right: `hashes`)", "files_name": ["src/octoprint/access/users.py"]}, {"commit_id": "b87b965fc533120a9bf03825760f3b709309c0ea", "commit_date": "Thu Sep 22 17:45:33 2022 +0200", "commit_message": "\ud83d\udc1b Fix global API key vs session sigs", "files_name": ["src/octoprint/access/users.py", "src/octoprint/server/util/flask.py"]}, {"commit_id": "147d982c875ff581eb3e9823d0e745e2b2dce4e6", "commit_date": "Thu Sep 22 18:52:06 2022 +0200", "commit_message": "\ud83d\udc1b Fix invalid API key and guest behaviour vs CSRF", "files_name": ["src/octoprint/server/util/__init__.py", "src/octoprint/server/util/csrf.py"]}, {"commit_id": "2caf3732d945361c85b25892f2243b9a90ad3b20", "commit_date": "Fri Sep 23 10:30:06 2022 +0200", "commit_message": "\ud83d\udd25 Remove support for tarball language packs", "files_name": ["src/octoprint/server/api/languages.py", "src/octoprint/static/js/app/viewmodels/settings.js", "src/octoprint/templates/dialogs/settings/appearance.jinja2"]}, {"commit_id": "daa5dbc4d6391aaf202063865b7ef86b51133ca4", "commit_date": "Mon Sep 26 12:19:26 2022 +0200", "commit_message": "\ud83d\udc1b Fix setting CSRF cookie on cached responses", "files_name": ["src/octoprint/server/util/csrf.py", "src/octoprint/server/views.py"]}, {"commit_id": "f654060d8f16fc7c37733146e278ef680cbdb978", "commit_date": "Mon Sep 26 15:12:44 2022 +0200", "commit_message": "Merge branch 'staging/bugfix' into maintenance", "files_name": ["f334decb33aea263533bee9a2ee389e0ee059f10 - Mon Sep 26 17:56:18 2022 +0200 : \ud83d\udc1b Only enable argon2 if backend is available", "src/octoprint/access/users.py"]}, {"commit_id": "73c199c98c90b05585cd69cb9f5350fd2e5ec24a", "commit_date": "Tue Sep 27 13:02:39 2022 +0200", "commit_message": "\u2728 Add a reverse proxy test page", "files_name": ["src/octoprint/server/util/flask.py", "src/octoprint/server/views.py", "src/octoprint/static/js/app/client/base.js", "src/octoprint/static/js/reverse_proxy_test/reverse_proxy_test.js", "src/octoprint/templates/reverse_proxy_test.jinja2"]}, {"commit_id": "0093d96da4e12195f97010089a50dbb5164fb77d", "commit_date": "Tue Sep 27 13:28:28 2022 +0200", "commit_message": "\ud83d\udeb8 Downgrade SameSite setting to Lax", "files_name": ["src/octoprint/settings.py"]}, {"commit_id": "be0d452ab9927c03aee219a27490a1d76de52388", "commit_date": "Tue Sep 27 13:43:32 2022 +0200", "commit_message": "\ud83d\udc1b Fix stale session reporting", "files_name": ["docs/api/push.rst", "src/octoprint/server/util/sockjs.py", "src/octoprint/static/js/app/viewmodels/loginstate.js"]}, {"commit_id": "2703d528a3fc570386199b4415eac5bcac23d7e9", "commit_date": "Tue Sep 27 15:46:20 2022 +0200", "commit_message": "\ud83d\udcdd Forgot to mention a port relevant header", "files_name": ["src/octoprint/templates/reverse_proxy_test.jinja2"]}, {"commit_id": "27a576e352a9b3d9abee89ab92cd02012c0e39dd", "commit_date": "Tue Sep 27 15:48:12 2022 +0200", "commit_message": "\ud83d\udd16 Preparing release of 1.8.4", "files_name": ["src/octoprint/plugins/errortracking/__init__.py"]}, {"commit_id": "2f62feaaeca2ebabda7b9ba55f7f399b63d36924", "commit_date": "Tue Sep 27 17:47:38 2022 +0200", "commit_message": "\ud83d\udd16 staging/bugfix is now 1.8.5.dev", "files_name": [".versioneer-lookup"]}, {"commit_id": "cf25c523ea556b92c19e113e05a49c210f9265e0", "commit_date": "Tue Sep 27 17:52:07 2022 +0200", "commit_message": "Merge branch 'staging/bugfix' into maintenance", "files_name": ["84b83b6cecbd6aa2066bfa36f4aa64650098e704 - Wed Sep 28 06:23:12 2022 -0400 : \ud83d\udc1b Defer M20 commands until initial capability report is done (#4577)", "docs/configuration/config_yaml.rst", "docs/plugins/hooks.rst", "src/octoprint/schema/config/serial.py", "src/octoprint/server/api/settings.py", "src/octoprint/static/js/app/viewmodels/settings.js", "src/octoprint/templates/dialogs/settings/serialconnection.jinja2", "src/octoprint/util/comm.py"]}, {"commit_id": "ffdda85c39ae1cfad2211accb40ca44317fc9d45", "commit_date": "Wed Sep 28 13:33:39 2022 +0200", "commit_message": "\u2728 Add privacy policy link to plugins", "files_name": ["docs/plugins/controlproperties.rst", "src/octoprint/plugin/core.py", "src/octoprint/plugins/pluginmanager/__init__.py", "src/octoprint/plugins/pluginmanager/templates/pluginmanager_settings.jinja2"]}, {"commit_id": "4c86459c1bb2cd72152ffad37bf5ad05b9159276", "commit_date": "Wed Sep 28 08:36:48 2022 -0400", "commit_message": "\u2728 Analyze non-extruding moves and notify if exceeds print volume (#4579)", "files_name": ["docs/api/datamodel.rst", "src/octoprint/cli/analysis.py", "src/octoprint/filemanager/analysis.py", "src/octoprint/static/js/app/viewmodels/files.js", "src/octoprint/util/gcodeInterpreter.py"]}, {"commit_id": "e74f87b07ccad219c5b00faa3bfab99c1311bd6c", "commit_date": "Wed Sep 28 14:51:59 2022 +0200", "commit_message": "\u2728 SWU: Add button to clear the Github Access Token (#4609)", "files_name": ["src/octoprint/plugins/softwareupdate/static/js/softwareupdate.js", "src/octoprint/plugins/softwareupdate/templates/snippets/githubToken.jinja2"]}, {"commit_id": "bbd06a0212d3a0dfd300555ffd6387a5e8d36173", "commit_date": "Wed Sep 28 13:58:25 2022 +0100", "commit_message": ":lipstick: Add tooltip to disabled plugin manager install (#4620)", "files_name": ["src/octoprint/plugins/pluginmanager/templates/pluginmanager_settings.jinja2"]}, {"commit_id": "b133eea89448a8e3ce9b99c3cfafac4885fbfb4a", "commit_date": "Wed Sep 28 15:03:47 2022 +0200", "commit_message": "\ud83d\udc1b Initialize exception with provided message (#4625)", "files_name": ["src/octoprint/filemanager/storage.py"]}, {"commit_id": "05ea0b29a475495e1add0c7781fcb3e2e79ca51a", "commit_date": "Wed Sep 28 14:07:24 2022 +0100", "commit_message": ":bug: Fix werkzeug 2.1 compatibility and remove redundant code (#4630)", "files_name": ["src/octoprint/plugins/corewizard/subwizards.py", "src/octoprint/server/api/__init__.py", "src/octoprint/server/api/access.py", "src/octoprint/server/api/printer.py", "src/octoprint/server/api/printer_profiles.py", "src/octoprint/server/api/settings.py", "src/octoprint/server/api/slicing.py", "src/octoprint/server/util/flask.py"]}, {"commit_id": "efdf127df85ae4b0fd266f101c467a2a4d546a6b", "commit_date": "Wed Sep 28 15:22:35 2022 +0200", "commit_message": "\u2728 Correctly handle Marlin's \"No media\" as \"sd card released\" (#4635)", "files_name": ["src/octoprint/util/comm.py"]}, {"commit_id": "4625e6aa7b91489a0772ea22e700a1910f318659", "commit_date": "Wed Sep 28 15:23:40 2022 +0200", "commit_message": "\ud83d\udc1b Fix bug in slicing progress reporting to UI (#4636)", "files_name": ["src/octoprint/static/js/app/viewmodels/files.js"]}, {"commit_id": "776c24da5b0eb3ae503c99365e57efbaa40a9060", "commit_date": "Wed Sep 28 16:28:02 2022 +0200", "commit_message": "\ud83d\udc1b PMGR: Fix repo listing", "files_name": ["src/octoprint/plugins/pluginmanager/__init__.py"]}, {"commit_id": "9303aca6ca26eb1f645edc882cb54742b1a14914", "commit_date": "Wed Sep 28 15:40:58 2022 +0100", "commit_message": "\u2728 Enable multiple file uploads (#4633)", "files_name": ["src/octoprint/static/js/app/viewmodels/files.js", "src/octoprint/templates/sidebar/files.jinja2"]}], "parents": [{"commit_id_before": "ef95ef1c101b79394f134e8fce000e6bae046571", "url_before": "https://api.github.com/repos/OctoPrint/OctoPrint/commits/ef95ef1c101b79394f134e8fce000e6bae046571", "html_url_before": "https://github.com/OctoPrint/OctoPrint/commit/ef95ef1c101b79394f134e8fce000e6bae046571"}], "details": [{"raw_url": "https://github.com/OctoPrint/OctoPrint/raw/3cca3a43f3d085e9bbe5a5840c8255bb1b5d052e/src%2Foctoprint%2Fserver%2Fapi%2Flanguages.py", "code": "__author__ = \"Gina H\u00e4u\u00dfge <osd@foosel.net>\"\n__license__ = \"GNU Affero General Public License http://www.gnu.org/licenses/agpl.html\"\n__copyright__ = \"Copyright (C) 2015 The OctoPrint Project - Released under terms of the AGPLv3 License\"\n\nimport logging\nimport os\nimport tarfile\nimport zipfile\nfrom collections import defaultdict\n\nfrom flask import abort, jsonify, request\nfrom flask_babel import Locale\n\nfrom octoprint.access.permissions import Permissions\nfrom octoprint.plugin import plugin_manager\nfrom octoprint.server.api import api\nfrom octoprint.server.util.flask import no_firstrun_access\nfrom octoprint.settings import settings\nfrom octoprint.util import yaml\n\n\n@api.route(\"/languages\", methods=[\"GET\"])\n@no_firstrun_access\n@Permissions.SETTINGS.require(403)\ndef getInstalledLanguagePacks():\n    translation_folder = settings().getBaseFolder(\"translations\", check_writable=False)\n    if not os.path.exists(translation_folder):\n        return jsonify(language_packs={\"_core\": []})\n\n    core_packs = []\n    plugin_packs = defaultdict(\n        lambda: {\"identifier\": None, \"display\": None, \"languages\": []}\n    )\n    for entry in os.scandir(translation_folder):\n        if not entry.is_dir():\n            continue\n\n        def load_meta(path, locale):\n            meta = {}\n\n            meta_path = os.path.join(path, \"meta.yaml\")\n            if os.path.isfile(meta_path):\n                try:\n                    meta = yaml.load_from_file(path=meta_path)\n                except Exception:\n                    logging.getLogger(__name__).exception(\"Could not load %s\", meta_path)\n                    pass\n                else:\n                    import datetime\n\n                    if \"last_update\" in meta and isinstance(\n                        meta[\"last_update\"], datetime.datetime\n                    ):\n                        meta[\"last_update\"] = (\n                            meta[\"last_update\"] - datetime.datetime(1970, 1, 1)\n                        ).total_seconds()\n\n            loc = Locale.parse(locale)\n            meta[\"locale\"] = locale\n            meta[\"locale_display\"] = loc.display_name\n            meta[\"locale_english\"] = loc.english_name\n            return meta\n\n        if entry.name == \"_plugins\":\n            for plugin_entry in os.scandir(entry.path):\n                if not plugin_entry.is_dir():\n                    continue\n\n                if plugin_entry.name not in plugin_manager().plugins:\n                    continue\n\n                plugin_info = plugin_manager().plugins[plugin_entry.name]\n\n                plugin_packs[plugin_entry.name][\"identifier\"] = plugin_entry.name\n                plugin_packs[plugin_entry.name][\"display\"] = plugin_info.name\n\n                for language_entry in os.scandir(plugin_entry.path):\n                    try:\n                        plugin_packs[plugin_entry.name][\"languages\"].append(\n                            load_meta(language_entry.path, language_entry.name)\n                        )\n                    except Exception:\n                        logging.getLogger(__name__).exception(\n                            \"Error while parsing metadata for language pack {} from {} for plugin {}\".format(\n                                language_entry.name,\n                                language_entry.path,\n                                plugin_entry.name,\n                            )\n                        )\n                        continue\n        else:\n            try:\n                core_packs.append(load_meta(entry.path, entry.name))\n            except ValueError:\n                logging.getLogger(__name__).exception(\n                    \"Core language pack {} doesn't appear to actually be one\".format(\n                        entry.name\n                    )\n                )\n            except Exception:\n                logging.getLogger(__name__).exception(\n                    \"Error while parsing metadata for core language pack {} from {}\".format(\n                        entry.name, entry.path\n                    )\n                )\n\n    result = {\n        \"_core\": {\"identifier\": \"_core\", \"display\": \"Core\", \"languages\": core_packs}\n    }\n    result.update(plugin_packs)\n    return jsonify(language_packs=result)\n\n\n@api.route(\"/languages\", methods=[\"POST\"])\n@no_firstrun_access\n@Permissions.SETTINGS.require(403)\ndef uploadLanguagePack():\n    input_name = \"file\"\n    input_upload_path = (\n        input_name + \".\" + settings().get([\"server\", \"uploads\", \"pathSuffix\"])\n    )\n    input_upload_name = (\n        input_name + \".\" + settings().get([\"server\", \"uploads\", \"nameSuffix\"])\n    )\n    if input_upload_path not in request.values or input_upload_name not in request.values:\n        abort(400, description=\"No file included\")\n\n    upload_name = request.values[input_upload_name]\n    upload_path = request.values[input_upload_path]\n\n    exts = list(\n        filter(\n            lambda x: upload_name.lower().endswith(x), (\".zip\", \".tar.gz\", \".tgz\", \".tar\")\n        )\n    )\n    if not len(exts):\n        abort(\n            400,\n            description=\"File doesn't have a valid extension for a language pack archive\",\n        )\n\n    target_path = settings().getBaseFolder(\"translations\")\n\n    if tarfile.is_tarfile(upload_path):\n        _unpack_uploaded_tarball(upload_path, target_path)\n    elif zipfile.is_zipfile(upload_path):\n        _unpack_uploaded_zipfile(upload_path, target_path)\n    else:\n        abort(400, description=\"Neither zip file nor tarball included\")\n\n    return getInstalledLanguagePacks()\n\n\n@api.route(\"/languages/<string:locale>/<string:pack>\", methods=[\"DELETE\"])\n@no_firstrun_access\n@Permissions.SETTINGS.require(403)\ndef deleteInstalledLanguagePack(locale, pack):\n\n    if pack == \"_core\":\n        target_path = os.path.join(settings().getBaseFolder(\"translations\"), locale)\n    else:\n        target_path = os.path.join(\n            settings().getBaseFolder(\"translations\"), \"_plugins\", pack, locale\n        )\n\n    if os.path.isdir(target_path):\n        import shutil\n\n        shutil.rmtree(target_path)\n\n    return getInstalledLanguagePacks()\n\n\ndef _unpack_uploaded_zipfile(path, target):\n    with zipfile.ZipFile(path, \"r\") as zip:\n        # sanity check\n        for info in zip.infolist():\n            _validate_zip_info(info, target)\n\n        # unpack everything\n        zip.extractall(target)\n\n\ndef _unpack_uploaded_tarball(path, target):\n    with tarfile.open(path, \"r\") as tar:\n        # sanity check\n        for info in tar.getmembers():\n            _validate_tar_info(info, target)\n\n        # unpack everything\n        tar.extractall(target)\n\n\ndef _validate_archive_name(name, target):\n    if not os.path.abspath(os.path.join(target, name)).startswith(target + os.path.sep):\n        raise InvalidLanguagePack(f\"Provided language pack contains invalid name {name}\")\n\n\ndef _validate_zip_info(info, target):\n    _validate_archive_name(info.filename, target)\n\n\ndef _validate_tar_info(info, target):\n    _validate_archive_name(info.name, target)\n    if not (info.isfile() or info.isdir()):\n        raise InvalidLanguagePack(\"Provided language pack contains invalid file type\")\n\n\nclass InvalidLanguagePack(Exception):\n    pass\n", "code_before": "__author__ = \"Gina H\u00e4u\u00dfge <osd@foosel.net>\"\n__license__ = \"GNU Affero General Public License http://www.gnu.org/licenses/agpl.html\"\n__copyright__ = \"Copyright (C) 2015 The OctoPrint Project - Released under terms of the AGPLv3 License\"\n\nimport logging\nimport os\nimport tarfile\nimport zipfile\nfrom collections import defaultdict\n\nfrom flask import abort, jsonify, request\nfrom flask_babel import Locale\n\nfrom octoprint.access.permissions import Permissions\nfrom octoprint.plugin import plugin_manager\nfrom octoprint.server.api import api\nfrom octoprint.server.util.flask import no_firstrun_access\nfrom octoprint.settings import settings\nfrom octoprint.util import yaml\n\n\n@api.route(\"/languages\", methods=[\"GET\"])\n@no_firstrun_access\n@Permissions.SETTINGS.require(403)\ndef getInstalledLanguagePacks():\n    translation_folder = settings().getBaseFolder(\"translations\", check_writable=False)\n    if not os.path.exists(translation_folder):\n        return jsonify(language_packs={\"_core\": []})\n\n    core_packs = []\n    plugin_packs = defaultdict(\n        lambda: {\"identifier\": None, \"display\": None, \"languages\": []}\n    )\n    for entry in os.scandir(translation_folder):\n        if not entry.is_dir():\n            continue\n\n        def load_meta(path, locale):\n            meta = {}\n\n            meta_path = os.path.join(path, \"meta.yaml\")\n            if os.path.isfile(meta_path):\n                try:\n                    meta = yaml.load_from_file(path=meta_path)\n                except Exception:\n                    logging.getLogger(__name__).exception(\"Could not load %s\", meta_path)\n                    pass\n                else:\n                    import datetime\n\n                    if \"last_update\" in meta and isinstance(\n                        meta[\"last_update\"], datetime.datetime\n                    ):\n                        meta[\"last_update\"] = (\n                            meta[\"last_update\"] - datetime.datetime(1970, 1, 1)\n                        ).total_seconds()\n\n            loc = Locale.parse(locale)\n            meta[\"locale\"] = locale\n            meta[\"locale_display\"] = loc.display_name\n            meta[\"locale_english\"] = loc.english_name\n            return meta\n\n        if entry.name == \"_plugins\":\n            for plugin_entry in os.scandir(entry.path):\n                if not plugin_entry.is_dir():\n                    continue\n\n                if plugin_entry.name not in plugin_manager().plugins:\n                    continue\n\n                plugin_info = plugin_manager().plugins[plugin_entry.name]\n\n                plugin_packs[plugin_entry.name][\"identifier\"] = plugin_entry.name\n                plugin_packs[plugin_entry.name][\"display\"] = plugin_info.name\n\n                for language_entry in os.scandir(plugin_entry.path):\n                    try:\n                        plugin_packs[plugin_entry.name][\"languages\"].append(\n                            load_meta(language_entry.path, language_entry.name)\n                        )\n                    except Exception:\n                        logging.getLogger(__name__).exception(\n                            \"Error while parsing metadata for language pack {} from {} for plugin {}\".format(\n                                language_entry.name,\n                                language_entry.path,\n                                plugin_entry.name,\n                            )\n                        )\n                        continue\n        else:\n            try:\n                core_packs.append(load_meta(entry.path, entry.name))\n            except ValueError:\n                logging.getLogger(__name__).exception(\n                    \"Core language pack {} doesn't appear to actually be one\".format(\n                        entry.name\n                    )\n                )\n            except Exception:\n                logging.getLogger(__name__).exception(\n                    \"Error while parsing metadata for core language pack {} from {}\".format(\n                        entry.name, entry.path\n                    )\n                )\n\n    result = {\n        \"_core\": {\"identifier\": \"_core\", \"display\": \"Core\", \"languages\": core_packs}\n    }\n    result.update(plugin_packs)\n    return jsonify(language_packs=result)\n\n\n@api.route(\"/languages\", methods=[\"POST\"])\n@no_firstrun_access\n@Permissions.SETTINGS.require(403)\ndef uploadLanguagePack():\n    input_name = \"file\"\n    input_upload_path = (\n        input_name + \".\" + settings().get([\"server\", \"uploads\", \"pathSuffix\"])\n    )\n    input_upload_name = (\n        input_name + \".\" + settings().get([\"server\", \"uploads\", \"nameSuffix\"])\n    )\n    if input_upload_path not in request.values or input_upload_name not in request.values:\n        abort(400, description=\"No file included\")\n\n    upload_name = request.values[input_upload_name]\n    upload_path = request.values[input_upload_path]\n\n    exts = list(\n        filter(\n            lambda x: upload_name.lower().endswith(x), (\".zip\", \".tar.gz\", \".tgz\", \".tar\")\n        )\n    )\n    if not len(exts):\n        abort(\n            400,\n            description=\"File doesn't have a valid extension for a language pack archive\",\n        )\n\n    target_path = settings().getBaseFolder(\"translations\")\n\n    if tarfile.is_tarfile(upload_path):\n        _unpack_uploaded_tarball(upload_path, target_path)\n    elif zipfile.is_zipfile(upload_path):\n        _unpack_uploaded_zipfile(upload_path, target_path)\n    else:\n        abort(400, description=\"Neither zip file nor tarball included\")\n\n    return getInstalledLanguagePacks()\n\n\n@api.route(\"/languages/<string:locale>/<string:pack>\", methods=[\"DELETE\"])\n@no_firstrun_access\n@Permissions.SETTINGS.require(403)\ndef deleteInstalledLanguagePack(locale, pack):\n\n    if pack == \"_core\":\n        target_path = os.path.join(settings().getBaseFolder(\"translations\"), locale)\n    else:\n        target_path = os.path.join(\n            settings().getBaseFolder(\"translations\"), \"_plugins\", pack, locale\n        )\n\n    if os.path.isdir(target_path):\n        import shutil\n\n        shutil.rmtree(target_path)\n\n    return getInstalledLanguagePacks()\n\n\ndef _unpack_uploaded_zipfile(path, target):\n    with zipfile.ZipFile(path, \"r\") as zip:\n        # sanity check\n        map(_validate_archive_name, zip.namelist())\n\n        # unpack everything\n        zip.extractall(target)\n\n\ndef _unpack_uploaded_tarball(path, target):\n    with tarfile.open(path, \"r\") as tar:\n        # sanity check\n        map(_validate_archive_name, tar.getmembers())\n\n        # unpack everything\n        tar.extractall(target)\n\n\ndef _validate_archive_name(name):\n    if name.startswith(\"/\") or \"..\" in name:\n        raise InvalidLanguagePack(f\"Provided language pack contains invalid name {name}\")\n\n\nclass InvalidLanguagePack(Exception):\n    pass\n", "patch": "@@ -174,7 +174,8 @@ def deleteInstalledLanguagePack(locale, pack):\n def _unpack_uploaded_zipfile(path, target):\n     with zipfile.ZipFile(path, \"r\") as zip:\n         # sanity check\n-        map(_validate_archive_name, zip.namelist())\n+        for info in zip.infolist():\n+            _validate_zip_info(info, target)\n \n         # unpack everything\n         zip.extractall(target)\n@@ -183,16 +184,27 @@ def _unpack_uploaded_zipfile(path, target):\n def _unpack_uploaded_tarball(path, target):\n     with tarfile.open(path, \"r\") as tar:\n         # sanity check\n-        map(_validate_archive_name, tar.getmembers())\n+        for info in tar.getmembers():\n+            _validate_tar_info(info, target)\n \n         # unpack everything\n         tar.extractall(target)\n \n \n-def _validate_archive_name(name):\n-    if name.startswith(\"/\") or \"..\" in name:\n+def _validate_archive_name(name, target):\n+    if not os.path.abspath(os.path.join(target, name)).startswith(target + os.path.sep):\n         raise InvalidLanguagePack(f\"Provided language pack contains invalid name {name}\")\n \n \n+def _validate_zip_info(info, target):\n+    _validate_archive_name(info.filename, target)\n+\n+\n+def _validate_tar_info(info, target):\n+    _validate_archive_name(info.name, target)\n+    if not (info.isfile() or info.isdir()):\n+        raise InvalidLanguagePack(\"Provided language pack contains invalid file type\")\n+\n+\n class InvalidLanguagePack(Exception):\n     pass", "file_path": "files/2022_10/146", "file_language": "py", "file_name": "src/octoprint/server/api/languages.py", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 0, "llm_check": 1, "static_check": 1, "static": {"rats": [false, []], "semgrep": [true, ["       trailofbits.python.tarfile-extractall-traversal.tarfile-extractall-traversal              \n          Possible path traversal through `tarfile.open($PATH).extractall()` if the source tar is\n          controlled by an attacker                                                              \n          Details: https://sg.run/2RLD                                                           \n\n          184\u2506 with tarfile.open(path, \"r\") as tar:\n          185\u2506     # sanity check\n          186\u2506     map(_validate_archive_name, tar.getmembers())\n          187\u2506 \n          188\u2506     # unpack everything          189\u2506     tar.extractall(target)"]]}, "target": 1, "function_before": [{"function": "def _unpack_uploaded_zipfile(path, target):\n    with zipfile.ZipFile(path, \"r\") as zip:\n        # sanity check\n        map(_validate_archive_name, zip.namelist())\n\n        # unpack everything\n        zip.extractall(target)", "target": 1, "line": "@@  -174,7 +174,8  @@ def deleteInstalledLanguagePack(locale, pack):\n def _unpack_uploaded_zipfile(path, target):\n     with zipfile.ZipFile(path, \"r\") as zip:\n         # sanity check\n-        map(_validate_archive_name, zip.namelist())\n+        for info in zip.infolist():\n+            _validate_zip_info(info, target)\n \n         # unpack everything\n         zip.extractall(target)\n"}, {"function": "def _unpack_uploaded_tarball(path, target):\n    with tarfile.open(path, \"r\") as tar:\n        # sanity check\n        map(_validate_archive_name, tar.getmembers())\n\n        # unpack everything\n        tar.extractall(target)", "target": 1, "line": "@@  -183,16 +184,27  @@ def _unpack_uploaded_zipfile(path, target):\n def _unpack_uploaded_tarball(path, target):\n     with tarfile.open(path, \"r\") as tar:\n         # sanity check\n-        map(_validate_archive_name, tar.getmembers())\n+        for info in tar.getmembers():\n+            _validate_tar_info(info, target)\n \n         # unpack everything\n         tar.extractall(target)\n \n \n-def _validate_archive_name(name):\n-    if name.startswith(\"/\") or \"..\" in name:\n+def _validate_archive_name(name, target):\n+    if not os.path.abspath(os.path.join(target, name)).startswith(target + os.path.sep):\n         raise InvalidLanguagePack(f\"Provided language pack contains invalid name {name}\")\n \n \n+def _validate_zip_info(info, target):\n+    _validate_archive_name(info.filename, target)\n+\n+\n+def _validate_tar_info(info, target):\n+    _validate_archive_name(info.name, target)\n+    if not (info.isfile() or info.isdir()):\n+        raise InvalidLanguagePack(\"Provided language pack contains invalid file type\")\n+\n+\n class InvalidLanguagePack(Exception):\n     pass"}, {"function": "def _validate_archive_name(name):\n    if name.startswith(\"/\") or \"..\" in name:\n        raise InvalidLanguagePack(f\"Provided language pack contains invalid name {name}\")", "target": 1, "line": "@@  -183,16 +184,27  @@ def _unpack_uploaded_zipfile(path, target):\n def _unpack_uploaded_tarball(path, target):\n     with tarfile.open(path, \"r\") as tar:\n         # sanity check\n-        map(_validate_archive_name, tar.getmembers())\n+        for info in tar.getmembers():\n+            _validate_tar_info(info, target)\n \n         # unpack everything\n         tar.extractall(target)\n \n \n-def _validate_archive_name(name):\n-    if name.startswith(\"/\") or \"..\" in name:\n+def _validate_archive_name(name, target):\n+    if not os.path.abspath(os.path.join(target, name)).startswith(target + os.path.sep):\n         raise InvalidLanguagePack(f\"Provided language pack contains invalid name {name}\")\n \n \n+def _validate_zip_info(info, target):\n+    _validate_archive_name(info.filename, target)\n+\n+\n+def _validate_tar_info(info, target):\n+    _validate_archive_name(info.name, target)\n+    if not (info.isfile() or info.isdir()):\n+        raise InvalidLanguagePack(\"Provided language pack contains invalid file type\")\n+\n+\n class InvalidLanguagePack(Exception):\n     pass"}, {"function": "class InvalidLanguagePack(Exception):\n    pass", "target": 1, "line": "@@  -183,16 +184,27  @@ def _unpack_uploaded_zipfile(path, target):\n def _unpack_uploaded_tarball(path, target):\n     with tarfile.open(path, \"r\") as tar:\n         # sanity check\n-        map(_validate_archive_name, tar.getmembers())\n+        for info in tar.getmembers():\n+            _validate_tar_info(info, target)\n \n         # unpack everything\n         tar.extractall(target)\n \n \n-def _validate_archive_name(name):\n-    if name.startswith(\"/\") or \"..\" in name:\n+def _validate_archive_name(name, target):\n+    if not os.path.abspath(os.path.join(target, name)).startswith(target + os.path.sep):\n         raise InvalidLanguagePack(f\"Provided language pack contains invalid name {name}\")\n \n \n+def _validate_zip_info(info, target):\n+    _validate_archive_name(info.filename, target)\n+\n+\n+def _validate_tar_info(info, target):\n+    _validate_archive_name(info.name, target)\n+    if not (info.isfile() or info.isdir()):\n+        raise InvalidLanguagePack(\"Provided language pack contains invalid file type\")\n+\n+\n class InvalidLanguagePack(Exception):\n     pass"}], "function_after": [{"function": "def _unpack_uploaded_zipfile(path, target):\n    with zipfile.ZipFile(path, \"r\") as zip:\n        # sanity check\n        for info in zip.infolist():\n            _validate_zip_info(info, target)\n\n        # unpack everything\n        zip.extractall(target)", "target": 0}, {"function": "def _unpack_uploaded_tarball(path, target):\n    with tarfile.open(path, \"r\") as tar:\n        # sanity check\n        for info in tar.getmembers():\n            _validate_tar_info(info, target)\n\n        # unpack everything\n        tar.extractall(target)", "target": 0}, {"function": "def _validate_archive_name(name, target):\n    if not os.path.abspath(os.path.join(target, name)).startswith(target + os.path.sep):\n        raise InvalidLanguagePack(f\"Provided language pack contains invalid name {name}\")", "target": 0}, {"function": "def _validate_zip_info(info, target):\n    _validate_archive_name(info.filename, target)", "target": 0}, {"function": "def _validate_tar_info(info, target):\n    _validate_archive_name(info.name, target)\n    if not (info.isfile() or info.isdir()):\n        raise InvalidLanguagePack(\"Provided language pack contains invalid file type\")", "target": 0}, {"function": "class InvalidLanguagePack(Exception):\n    pass", "target": 0}]}], "outdated": 0, "cwe_descripiton": "", "cwe_consequence": "", "cwe_method": "", "cwe_solution": ""}
