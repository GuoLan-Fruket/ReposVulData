{"index": 2754, "cve_id": "CVE-2018-8097", "cwe_id": ["CWE-94"], "cve_language": "Python", "cve_description": "io/mongo/parser.py in Eve (aka pyeve) before 0.7.5 allows remote attackers to execute arbitrary code via Code Injection in the where parameter.", "cvss": "9.8", "publish_date": "March 14, 2018", "AV": "NETWORK", "AC": "NETWORK", "PR": "NONE", "UI": "NONE", "S": "UNCHANGED", "C": "HIGH", "I": "HIGH", "A": "HIGH", "commit_id": "f8f7019ffdf9b4e05faf95e1f04e204aa4c91f98", "commit_message": "fix mongo visitor parser", "commit_date": "2018-01-14T16:51:26Z", "project": "pyeve/eve", "url": "https://api.github.com/repos/pyeve/eve/commits/f8f7019ffdf9b4e05faf95e1f04e204aa4c91f98", "html_url": "https://github.com/pyeve/eve/commit/f8f7019ffdf9b4e05faf95e1f04e204aa4c91f98", "windows_before": [{"commit_id": "6d1526bf8ad93a3d259b1fd357f0c40e4ed9dbf5", "commit_date": "Fri Jan 12 09:40:13 2018 +0100", "commit_message": "Merge branch 'ensure_mongo_indexes'", "files_name": ["710c34fba1f4a1e2ee7a45021f18988feed88728 - Thu Dec 7 09:18:47 2017 +0100 : Move index creation logic in its own isolated and importable method", "CHANGES", "eve/flaskapp.py", "eve/io/mongo/__init__.py", "eve/io/mongo/mongo.py"]}, {"commit_id": "fd9b05150befba269aaf5454c5658c7331eb1461", "commit_date": "Wed Dec 6 18:01:21 2017 +0100", "commit_message": "Remove twitter and add StackOverflow from support options", "files_name": ["docs/support.rst"]}, {"commit_id": "06cf1aff028bd03957e57268b900ef7054f50eea", "commit_date": "Mon Dec 4 10:49:23 2017 +0100", "commit_message": "Add Codemotion Rome 2017 to sessions list", "files_name": ["docs/rest_api_for_humans.rst"]}, {"commit_id": "ba7d9cf46a9850682ab1b1a551b3182437e048bf", "commit_date": "Mon Dec 4 10:29:26 2017 +0100", "commit_message": "Add sphinxcontrib-embedly to dev-requirements.txt", "files_name": ["CHANGES", "dev-requirements.txt"]}, {"commit_id": "b076c57f43404a0cc9a789e466ecc76119cc2c58", "commit_date": "Mon Dec 4 10:20:22 2017 +0100", "commit_message": "Merge branch 'hotfix_0.7.5'", "files_name": ["defdccd91c533eebd92504df1bc2619de7a8a755 - Mon Dec 4 09:41:41 2017 +0100 : v0.7.5 release date", "CHANGES"]}, {"commit_id": "3c8264e6c9953b400aac1c74bc13f7a79e0a0130", "commit_date": "Mon Dec 4 09:35:21 2017 +0100", "commit_message": "Moritz Schneider", "files_name": ["AUTHORS"]}, {"commit_id": "a5c96d794ddace7b5906cd76b11157a1c71905fc", "commit_date": "Mon Dec 4 09:34:20 2017 +0100", "commit_message": "Changelog for #1091", "files_name": ["CHANGES"]}, {"commit_id": "532968da185812e593ccf50f49478042eda50654", "commit_date": "Mon Dec 4 09:33:00 2017 +0100", "commit_message": "Bump version to 0.7.5", "files_name": ["CHANGES", "eve/__init__.py", "setup.py"]}, {"commit_id": "29e436117ca52cc494465a833ae10d4587dd2755", "commit_date": "Sun Dec 3 13:30:00 2017 +0100", "commit_message": "Fix sanitization of nested queries.", "files_name": ["AUTHORS", "eve/io/mongo/mongo.py", "eve/tests/methods/get.py"]}, {"commit_id": "b608e1b4dd92717118bf8218f713573f394d6482", "commit_date": "Thu Nov 23 10:18:00 2017 +0100", "commit_message": "Fix: serialization failure with schema registries.", "files_name": ["eve/methods/common.py"]}, {"commit_id": "614a64191985450ff114fc9c060e74564ae036ad", "commit_date": "Tue Nov 21 15:40:34 2017 +0100", "commit_message": "Remove flake8 from travis matrix", "files_name": [".travis.yml"]}, {"commit_id": "44f3cc841b40ca32d1490e663e648a0b5ccecfdd", "commit_date": "Tue Nov 21 15:39:16 2017 +0100", "commit_message": "Merge branch 'fix_objectid_validation'", "files_name": ["403b85a264ca4159dbab12ce41bdc61b2eac2f69 - Tue Nov 21 11:55:33 2017 +0100 : flake8 runs on CI with py35", "tox.ini"]}, {"commit_id": "59cda9737962673d40e45f160a4b27d514c3e47e", "commit_date": "Tue Nov 21 11:46:47 2017 +0100", "commit_message": "Improve robustness on ObjectId validation", "files_name": ["eve/io/mongo/validation.py"]}, {"commit_id": "25d87d23a7281ae88b6ebaf4e5f66bc5b061daa0", "commit_date": "Tue Nov 21 10:50:26 2017 +0100", "commit_message": "Merge branch 'flake8'", "files_name": ["01b01fea2de8ad2557e7264ac739148da2e15f5a - Tue Nov 21 10:32:38 2017 +0100 : Re-add flake8 to test runs", "eve/flaskapp.py", "eve/io/mongo/mongo.py", "eve/methods/common.py", "eve/tests/methods/common.py", "eve/tests/methods/delete.py", "eve/tests/methods/post.py", "tox.ini"]}, {"commit_id": "4ccf8aba7e4e534ef30adcaf57f256085bf07dbc", "commit_date": "Tue Nov 21 09:56:17 2017 +0100", "commit_message": "Make sure non-dict schema definitions are correctly handled", "files_name": ["eve/flaskapp.py", "eve/utils.py"]}, {"commit_id": "9386bb46b9be5799600ac7f14ee08400fe48c8d7", "commit_date": "Thu Nov 9 18:29:14 2017 +0100", "commit_message": "Merge branch 'media_endpoint_is_unsercured'", "files_name": ["e7a54065d204ad780c086b9956c5e0cbc0f81bbc - Thu Nov 9 17:45:29 2017 +0100 : New: media endpoint secured by default auth class.", "CHANGES", "eve/auth.py", "eve/endpoints.py", "eve/tests/auth.py", "eve/tests/io/__init__.py"]}, {"commit_id": "52aecc881fc73f5a480940317be49ababa181ee2", "commit_date": "Tue Nov 7 10:02:51 2017 +0100", "commit_message": "Merge branch 'fix_broken_test'", "files_name": ["37c83068c0cd80e667296e44292a4fee6677fc69 - Tue Nov 7 10:02:44 2017 +0100 : Fix test which was broken by previous PR", "eve/tests/methods/get.py"]}, {"commit_id": "2d2ad29ce45db31c5233ba2d322ff31f655f1038", "commit_date": "Tue Nov 7 09:17:56 2017 +0100", "commit_message": "Merge branch 'add_support_for_bitwise_query_operators_#1055'", "files_name": ["d793d5ce7c708f25f6d02094c2a7976e15bb18ed - Tue Nov 7 09:17:45 2017 +0100 : Qiang Zhang", "AUTHORS"]}, {"commit_id": "ee5f4f4fbcbda315701f92e52a2f54a743c2d1e5", "commit_date": "Tue Nov 7 09:16:53 2017 +0100", "commit_message": "Changelog update for #1055", "files_name": ["CHANGES"]}, {"commit_id": "7acb1932d5eeac6034122638fafb31663c71c4b4", "commit_date": "Tue Nov 7 09:13:26 2017 +0100", "commit_message": "Add test for bitwise query operator feature.", "files_name": ["eve/tests/methods/get.py"]}, {"commit_id": "46fd06ae0fb97dd03a2dc95c55f4a575798294ba", "commit_date": "Wed Aug 30 10:04:23 2017 -0700", "commit_message": "Add support to the bitwise query operator.", "files_name": ["eve/io/mongo/mongo.py"]}, {"commit_id": "8b0515bb0262c7a14be296fef0a30f0f01f14dfb", "commit_date": "Sat Nov 4 11:20:13 2017 +0300", "commit_message": "Merge branch 'handling_lists_as_part_of_aggregation_stage_with_parameters_#1058'", "files_name": ["6cbfd43d4dd24989c50dd2d5ff0af8cd71b85b0f - Sat Nov 4 11:19:58 2017 +0300 : Serge Kir", "AUTHORS"]}, {"commit_id": "bf59b1cde9f3a3cc14dc46273a42c2196970a235", "commit_date": "Sat Nov 4 11:18:50 2017 +0300", "commit_message": "Changelog for #1058", "files_name": ["CHANGES"]}, {"commit_id": "6c15df694cc0f52ae51d918f7c8eabcda343784c", "commit_date": "Mon Sep 4 00:56:54 2017 +0300", "commit_message": "Handling lists as part of aggregation stage with parameters", "files_name": ["eve/methods/get.py", "eve/tests/methods/get.py"]}, {"commit_id": "3a25ea797a3f76a325224fabcc35c742a83fd5dc", "commit_date": "Sun Oct 15 10:02:51 2017 +0200", "commit_message": "Merge branch 'use_ordereddict_from_backport_collections_#1070'", "files_name": ["9fb1a668ebaaba8705fb17b458f9d90207d18f14 - Sun Oct 15 10:02:37 2017 +0200 : Changelog for #1070", "CHANGES"]}, {"commit_id": "fa8da196d1034f01401915277fa7dafd1080bcd5", "commit_date": "Tue Oct 10 11:19:14 2017 -0500", "commit_message": "use OrderedDict from backport_collections", "files_name": ["AUTHORS", "eve/render.py", "eve/tests/methods/common.py", "py26-requirements.txt", "requirements.txt", "setup.py"]}, {"commit_id": "cee2f7ec13976f5bc3910f7058648a8b33ec882c", "commit_date": "Tue Aug 29 08:45:46 2017 +0200", "commit_message": "Merge branch 'support_for_decimal_type_#1048'", "files_name": ["46af495c2f316c16cd080ad9fec2ccf423f6528c - Tue Aug 29 08:44:27 2017 +0200 : Minor changelog fixes for #1048", "CHANGES"]}, {"commit_id": "3bf193039a11ff13597ffb72192958562513f4f8", "commit_date": "Sat Aug 19 20:22:18 2017 +0200", "commit_message": "Support Decimal type MongoDB", "files_name": [".travis.yml", "CHANGES", "docs/config.rst", "docs/validation.rst", "eve/io/mongo/mongo.py", "eve/io/mongo/validation.py", "eve/tests/io/mongo.py", "eve/tests/methods/common.py", "eve/tests/methods/post.py", "eve/tests/test_settings.py", "requirements.txt", "setup.py"]}, {"commit_id": "4dfbc5b91145505eeac1bb497aec89e328c0a2c7", "commit_date": "Wed Aug 9 11:31:43 2017 +0200", "commit_message": "Changelog: add reference to proper PR", "files_name": ["CHANGES"]}, {"commit_id": "d11c74590c2a1218e1ac77ae6907f66d7d6fe706", "commit_date": "Wed Aug 9 11:29:11 2017 +0200", "commit_message": "Merge branch 'fix_serialization_bug_randonly_skips_x_of_#1042'", "files_name": ["8b94bbca3dc18ea343a3e7bd139b19e0a60f4f2f - Wed Aug 9 11:28:53 2017 +0200 : Changelog update for #1042", "CHANGES"]}, {"commit_id": "75989836be00835511e77437381f0d2b2f33a241", "commit_date": "Fri Jul 28 13:59:21 2017 +0800", "commit_message": "Fix a serialization bug that randomly skips fields if \"x_of\" is encountered", "files_name": ["AUTHORS", "eve/methods/common.py", "eve/tests/methods/common.py"]}, {"commit_id": "63d87fc110434b9399f133e331dd69d89da2489d", "commit_date": "Sat Jul 15 11:54:36 2017 +0200", "commit_message": "Merge branch 'bulk_delete_on_subresources_#1030'", "files_name": ["7303ad891b4ebf797168054962a309ab033d2aea - Sat Jul 15 11:52:30 2017 +0200 : Amedeo Bussi", "AUTHORS"]}, {"commit_id": "611499f5bad2e7fd64c33707eded6e9d5d576bcf", "commit_date": "Sat Jul 15 11:50:35 2017 +0200", "commit_message": "Changelog for #1030", "files_name": ["CHANGES"]}, {"commit_id": "e2ebf838e092fad2ec20e7673dd776d6caed0c79", "commit_date": "Sat Jul 15 11:40:14 2017 +0200", "commit_message": "pep/flake, and remove duplicate test", "files_name": ["eve/io/base.py", "eve/methods/delete.py", "eve/tests/methods/delete.py", "eve/tests/methods/post.py"]}, {"commit_id": "a151c80dd66a1cb2630000e8d0459e4e85437c15", "commit_date": "Sat Jul 15 11:31:09 2017 +0200", "commit_message": "documentation improvements and fixes", "files_name": ["docs/features.rst"]}, {"commit_id": "86e351fd0c2481e28540020f06b87dc111ec6773", "commit_date": "Tue Jun 20 20:55:06 2017 +0200", "commit_message": "Bulk delete", "files_name": ["docs/features.rst", "eve/io/base.py", "eve/io/mongo/mongo.py", "eve/methods/common.py", "eve/methods/delete.py", "eve/tests/__init__.py", "eve/tests/methods/delete.py", "eve/tests/methods/get.py"]}, {"commit_id": "9cf3db1e6c755c6c6358b20082e360bb735b71fc", "commit_date": "Thu Jul 6 15:38:24 2017 +0200", "commit_message": "MONGO_DBNAME can be now used along with MONGO_URI", "files_name": ["CHANGES", "eve/io/mongo/flask_pymongo.py"]}, {"commit_id": "32a6adcac2b28b5013bf71299b4df893921840b4", "commit_date": "Tue Jun 27 11:23:36 2017 +0200", "commit_message": "Vasilis Lolis", "files_name": ["AUTHORS"]}, {"commit_id": "890290030a935479fbaf992e135c974426ab5a26", "commit_date": "Tue Jun 27 11:23:04 2017 +0200", "commit_message": "typo", "files_name": ["docs/config.rst"]}, {"commit_id": "dfb222577b2cc7d5a7a22ba719dd31a23114be9a", "commit_date": "Wed Jun 21 10:06:03 2017 +0200", "commit_message": "Merge branch 'bulk_embedded_documents_resolution_#1031'", "files_name": ["4eeb9fc41a50b38ab766fe345cd041a6e1207930 - Wed Jun 21 10:04:36 2017 +0200 : Amedeo91", "AUTHORS"]}, {"commit_id": "87186acf964a7889b800095631698f91bafcd526", "commit_date": "Wed Jun 21 10:04:06 2017 +0200", "commit_message": "Changelog for #1031", "files_name": ["CHANGES"]}, {"commit_id": "4d65436d20ec41a9e94b7d4d249f2e969658056a", "commit_date": "Tue Jun 20 23:35:52 2017 +0200", "commit_message": "Bulk Embedded document resolution", "files_name": ["dev-requirements.txt", "eve/io/mongo/mongo.py", "eve/methods/common.py", "requirements.txt", "setup.py"]}, {"commit_id": "d5ec45835ea596933875855f939949ab486c42e3", "commit_date": "Thu Jun 15 10:42:16 2017 +0200", "commit_message": "Delete unnecessary code", "files_name": ["CHANGES", "eve/flaskapp.py"]}, {"commit_id": "98a1febdae04312e9f4be96e3b2394ca2efb2315", "commit_date": "Wed Jun 7 15:30:35 2017 +0200", "commit_message": "Merge branch 'json-request-content-types-#1024'", "files_name": []}], "windows_after": [{"commit_id": "8a13312057a2683492e61d4c4a4b661963de39e0", "commit_date": "Sun Jan 14 18:09:08 2018 +0100", "commit_message": "Orange Tsai", "files_name": ["AUTHORS"]}, {"commit_id": "57c320b925164dbc579355b0a06affa903f2ca1f", "commit_date": "Sun Jan 14 17:51:26 2018 +0100", "commit_message": "fix mongo visitor parser", "files_name": ["eve/io/mongo/parser.py"]}, {"commit_id": "ee4c5580a6e061688b13d5a4e7f95af2b3b1c8ee", "commit_date": "Sun Jan 14 18:09:08 2018 +0100", "commit_message": "Orange Tsai", "files_name": ["AUTHORS"]}, {"commit_id": "315df991a1abdf8aa68eedabec72c222e6fac56d", "commit_date": "Sun Jan 14 18:20:26 2018 +0100", "commit_message": "Bump version to 0.7.6", "files_name": ["CHANGES", "eve/__init__.py", "setup.py"]}, {"commit_id": "45d81e3b092101da089ae89d329d05ddba1ab438", "commit_date": "Sun Jan 14 18:23:45 2018 +0100", "commit_message": "Merge branch 'fix_parsing'", "files_name": ["41c39093859d091777b755e5d3db0a5c3cfc85b7 - Sun Jan 14 18:35:21 2018 +0100 : Merge branch 'release_v0.7.6'", "ccfc2d722faaed480107a64f82a7021fc1dce3be - Fri Dec 15 16:20:11 2017 +0000 : Extendable rendering classes", "eve/default_settings.py", "eve/render.py", "eve/tests/renders.py", "eve/tests/utils.py", "eve/utils.py", "tox.ini"]}, {"commit_id": "bcfbfde783080d5e3052ce79bc48c60fbef72e51", "commit_date": "Fri Dec 15 16:24:45 2017 +0000", "commit_message": "Mistakenly added tox.ini", "files_name": ["tox.ini"]}, {"commit_id": "2d883bb23f19158c3bcdc2490b08f5906be8648a", "commit_date": "Mon Dec 18 11:12:26 2017 +0000", "commit_message": "Updated py2.6 dependencies", "files_name": ["py26-requirements.txt", "setup.py"]}, {"commit_id": "5b247cfef6f6c744dbee3cf1ccf19d7106f6e208", "commit_date": "Mon Dec 18 11:21:10 2017 +0000", "commit_message": "PEP8 compliance", "files_name": ["eve/render.py"]}, {"commit_id": "230e9c9d27db87bb600e6275c52fb2aa3c9c0367", "commit_date": "Thu Jan 4 14:50:10 2018 +0100", "commit_message": "Checking for deprecated features proposal", "files_name": ["eve/default_settings.py", "eve/flaskapp.py"]}, {"commit_id": "a519ba36d3fde20488e88931832397707bc67f9d", "commit_date": "Thu Jan 4 14:50:45 2018 +0100", "commit_message": "Checking for deprecated features proposal - typo fix", "files_name": ["eve/flaskapp.py"]}, {"commit_id": "5406d5dd85b34aa49e0a8ac33b1f3203a4d5aabb", "commit_date": "Mon Jan 15 17:08:30 2018 +0100", "commit_message": "Updated docstrings", "files_name": ["eve/default_settings.py", "eve/render.py"]}, {"commit_id": "e30c956c8fab3959023833c5a2e5255fdff125a2", "commit_date": "Tue Jan 16 17:56:39 2018 +0100", "commit_message": "Updated docs", "files_name": ["docs/config.rst", "docs/features.rst"]}, {"commit_id": "0087bef0f8459006d2cc1094dfec0ad98f24539b", "commit_date": "Tue Jan 16 17:12:19 2018 +0000", "commit_message": "Updated authors", "files_name": ["AUTHORS", "docs/config.rst"]}, {"commit_id": "31deee74fa5c16e6c23faf35f815b318d8ecf29b", "commit_date": "Thu Jan 18 09:28:16 2018 +0100", "commit_message": "Changelog for #1092", "files_name": ["CHANGES"]}, {"commit_id": "80ded9d24ea4b449aa979a06889164ae9f6524bc", "commit_date": "Thu Jan 18 09:28:26 2018 +0100", "commit_message": "Merge branch 'renderer_classes_#1092'", "files_name": ["6a93aca5e2fb695a2ae909703bef5be90311abc1 - Wed Feb 7 09:31:02 2018 +0100 : Add $geometry and $maxDistance to mongo operators", "CHANGES", "eve/io/mongo/mongo.py"]}, {"commit_id": "5c3aa4bd949e90bc0156b0cb0e3ecb302ca40716", "commit_date": "Wed Feb 7 09:47:56 2018 +0100", "commit_message": "Bump version to 0.7.7", "files_name": ["eve/__init__.py", "setup.py"]}, {"commit_id": "74ebf45ac6d110e1e951c09bc3e2b9386dc52054", "commit_date": "Wed Feb 7 09:51:43 2018 +0100", "commit_message": "Merge tag 'v0.7.7'", "files_name": ["73c5f1e70c34de501f19c427265b959782264678 - Wed Feb 7 14:44:06 2018 +0100 : Fix breaking syntax error in v0.7.7", "eve/io/mongo/mongo.py"]}, {"commit_id": "afd573d9254a9a23393f35760e9c515300909ccd", "commit_date": "Wed Feb 7 14:46:35 2018 +0100", "commit_message": "Bump version to 0.7.8", "files_name": ["CHANGES", "eve/__init__.py", "setup.py"]}, {"commit_id": "1d4a308f0091387da1728bd9aaa8638a5be0838c", "commit_date": "Wed Feb 7 14:52:32 2018 +0100", "commit_message": "Merge tag 'v0.7.8'", "files_name": ["8df50c5dc791a82a1394a1fbb09a801fd5510bc8 - Mon Feb 19 11:37:03 2018 +0100 : Fix broken links in documentation/configuration page.", "CHANGES", "docs/config.rst"]}, {"commit_id": "9dd8db6ba2686498a17877d73ff495c4f1d1fc7d", "commit_date": "Thu Feb 22 16:35:07 2018 +0100", "commit_message": "Bump Flask requirement to <=0.13", "files_name": ["CHANGES", "requirements.txt", "setup.py"]}, {"commit_id": "31e664ac5a8f8211748c27f43b03d8d62ccf253e", "commit_date": "Thu Feb 22 16:36:11 2018 +0100", "commit_message": "Merge branch 'bump_flask_requirement_to_0.13'", "files_name": ["cbee8c4d6b0358d64de8b85135b9aed68fe2afbe - Thu Jan 18 12:30:34 2018 -0700 : Fixed typo", "CHANGES"]}, {"commit_id": "a7b4692a3a9ba3810f99c8085375596eb338aeef", "commit_date": "Sat Feb 24 16:05:50 2018 +0300", "commit_message": "kreynen", "files_name": ["AUTHORS", "CHANGES"]}, {"commit_id": "87fc3a07d79e87f4a02d068f710c9dcf9989b86f", "commit_date": "Sat Feb 24 16:07:07 2018 +0300", "commit_message": "Merge branch 'fix_typo_#1102'", "files_name": ["ce175e2840045c5889dedb4e0f608ce4adccde82 - Thu Feb 22 10:54:47 2018 +0100 : docs: Refer to example resources (contacts) consistently", "docs/features.rst"]}, {"commit_id": "000f58fe473a5c54c500598417b6bded988405bf", "commit_date": "Sun Feb 25 11:33:54 2018 +0300", "commit_message": "Olof Johansson", "files_name": ["AUTHORS"]}, {"commit_id": "39ab1421b8640890fd5520e56d81043bee5b1e32", "commit_date": "Sun Feb 25 11:34:20 2018 +0300", "commit_message": "Merge branch 'docs_refer_to_example_resources_consistently_#1114'", "files_name": ["4eb478b9044e4e3bcb43f135863755f8fcdf3791 - Thu Feb 22 11:40:49 2018 +0100 : docs: Use correct name for form-data mime type", "CHANGES", "docs/features.rst"]}, {"commit_id": "e819153a32ea6702ecdb1591bb6613bc4aa98214", "commit_date": "Sun Feb 25 11:39:58 2018 +0300", "commit_message": "Changelog for #1114 and #1115.", "files_name": ["CHANGES"]}, {"commit_id": "53e4bb972bf66add0677ed9e5cbb618e833ff95d", "commit_date": "Sun Feb 25 11:40:14 2018 +0300", "commit_message": "Merge branch 'docs_use_correct_name_for_form-data_type_#1115'", "files_name": ["6168ae9cb0c1ffcc9042669dd2f4e4aa9ec6c715 - Fri Mar 23 13:48:21 2018 +0100 : Fix VALIDATE_FILTERS behaviour for filters on sub-document fields (issue #1123)", "AUTHORS", "eve/tests/methods/get.py", "eve/tests/test_settings.py", "eve/utils.py"]}, {"commit_id": "bae675795d4a5fff8b707247707664e40d28e380", "commit_date": "Fri Mar 23 14:33:08 2018 +0100", "commit_message": "Fix ALLOWED_FILTERS behaviour for filters on sub-document fields", "files_name": ["eve/tests/methods/get.py", "eve/utils.py"]}, {"commit_id": "d463a033f0f792c1c5f56c20dd4f5eea3d621179", "commit_date": "Fri Mar 23 16:59:19 2018 +0100", "commit_message": "Fix Flake8 errors", "files_name": ["eve/tests/methods/get.py", "eve/utils.py"]}, {"commit_id": "d5659c20829a75c306190c049255d8b02c282c4f", "commit_date": "Mon Mar 26 16:53:33 2018 +0200", "commit_message": "Update documentation for global 'ALLOWED_FILTERS' and resource-specific 'allowed_filters' settings", "files_name": ["docs/config.rst", "eve/utils.py"]}, {"commit_id": "fd1654873ff446c11dd607bcb4be16d8414a6910", "commit_date": "Tue Mar 27 10:12:26 2018 +0200", "commit_message": "Changelog for #1125.", "files_name": ["CHANGES"]}, {"commit_id": "ded8489e766cfaedf60a4d065704a96ffb719635", "commit_date": "Tue Mar 27 10:12:45 2018 +0200", "commit_message": "Merge branch 'VALIDATE_FILTERS_doesnt_work_for_subdocument_fields_#1125'", "files_name": ["5a878c23f7e9df2e64271fe781778d73846cd8d8 - Tue Mar 27 11:11:36 2018 +0200 : Reinforce notion that mongod must be running.", "docs/quickstart.rst"]}, {"commit_id": "08273098e80488f420a5b521b1bae5c469ba73f2", "commit_date": "Tue Mar 27 11:12:38 2018 +0200", "commit_message": "Merge branch 'fix_#891'", "files_name": ["8b6bbcc797f0b8096cb8a0aff17be65782a3d6cd - Mon Mar 26 23:54:34 2018 +1100 : Added support for Mongo 3.2+ params $caseSensitive and $diacriticSensitive in $text operator.", "eve/io/mongo/mongo.py"]}, {"commit_id": "713ee5c660f2e780835d6c93f6e2e19d560f1676", "commit_date": "Wed Mar 28 09:26:32 2018 +0200", "commit_message": "Changelog for #1126", "files_name": ["CHANGES"]}, {"commit_id": "959bd1182bb2a3bd26a67ae25d130ea378258d88", "commit_date": "Wed Mar 28 09:27:05 2018 +0200", "commit_message": "Merge branch 'add_support_for_caseSensitive_and_diacriticSensitive_mongo_operators_#1126'", "files_name": ["316827d67c883a8531a31c1af3480595abcc4155 - Wed Mar 28 10:37:07 2018 +0200 : Pin testfixtures to v5.x on py26.", ".vscode/launch.json", ".vscode/settings.json", "CHANGES", "setup.py"]}, {"commit_id": "5e97f38dace39c1b4880a3022c3ba9690cac3e9b", "commit_date": "Wed Mar 28 10:47:39 2018 +0200", "commit_message": "Merge branch 'fallback_to_testfixture5x'", "files_name": ["9864600482c446fc4d7b523d1cf3d3fe36cbfa55 - Tue Mar 27 03:31:03 2018 +0800 : Allow client projection with static exclusive projection", "AUTHORS", "docs/config.rst", "eve/flaskapp.py", "eve/io/base.py", "eve/tests/__init__.py", "eve/tests/io/media.py", "eve/tests/methods/get.py", "eve/tests/test_settings.py"]}, {"commit_id": "b76118d05b1759c9e432595de9bf37689a9b2a63", "commit_date": "Wed Mar 28 15:25:21 2018 +0800", "commit_message": "refactor : staic projection is always dictionary", "files_name": ["eve/flaskapp.py", "eve/io/base.py", "eve/io/mongo/mongo.py", "eve/tests/methods/post.py"]}, {"commit_id": "7c4f4f99473b634cafc28dbf0bbcc6b3124d846f", "commit_date": "Wed Mar 28 10:50:15 2018 +0200", "commit_message": "Changelog for #1128", "files_name": ["CHANGES"]}, {"commit_id": "9dabbf5a3b60a7d109b62ce2f92daf3a8c98e4f0", "commit_date": "Wed Mar 28 10:50:40 2018 +0200", "commit_message": "DHuan", "files_name": ["AUTHORS"]}, {"commit_id": "bee347f19b42032d7c664428b4d7b754a4a0c215", "commit_date": "Wed Mar 28 10:51:17 2018 +0200", "commit_message": "Merge branch 'allow_client_projection_with_static_exclusive_projection_#1128'", "files_name": ["9a2350b7eb39b82d230c94c9cf0909968c6e5e7f - Sun Dec 24 16:08:54 2017 +0700 : Oplog skipped even if confg.OPLOG=True", "eve/methods/common.py"]}, {"commit_id": "eed600260484b7cc638cc0c47a58ef44bc8488dd", "commit_date": "Fri Mar 30 10:51:08 2018 +0200", "commit_message": "Regression test for PR #1095.", "files_name": ["eve/tests/methods/common.py"]}, {"commit_id": "795abe9154448468c3036dc80e5b8a9ac0407eb3", "commit_date": "Fri Mar 30 10:53:36 2018 +0200", "commit_message": "Changelog for #1095.", "files_name": ["CHANGES"]}, {"commit_id": "91edb11c2d2112c5f8d5468b77b8f83ff4d6ef66", "commit_date": "Fri Mar 30 10:54:20 2018 +0200", "commit_message": "Hung Le", "files_name": ["AUTHORS"]}, {"commit_id": "3996d907c8d1094eb9be94238c33d273e12690d5", "commit_date": "Fri Mar 30 10:54:48 2018 +0200", "commit_message": "Merge branch 'oplog_skipped_even_if_OPLOG_is_True_#1095'", "files_name": ["194bc732fa2aa48797e0f8c37a4b5b199ebddab0 - Fri Mar 30 11:03:00 2018 +0200 : typo", "CHANGES"]}, {"commit_id": "6eb74c5f4356712ac024c452db8d25fa9eb6f124", "commit_date": "Fri Mar 30 11:08:28 2018 +0200", "commit_message": "flake8", "files_name": ["eve/tests/methods/common.py"]}, {"commit_id": "d7adbe7f73b2852f8db86f066c521bd10fc3213d", "commit_date": "Fri Mar 30 10:37:05 2018 +0200", "commit_message": "Fix PUT behavior with User-Restricted Resource Access", "files_name": ["eve/io/base.py", "eve/io/mongo/mongo.py", "eve/methods/common.py", "eve/methods/put.py", "eve/tests/auth.py"]}], "parents": [{"commit_id_before": "6d1526bf8ad93a3d259b1fd357f0c40e4ed9dbf5", "url_before": "https://api.github.com/repos/pyeve/eve/commits/6d1526bf8ad93a3d259b1fd357f0c40e4ed9dbf5", "html_url_before": "https://github.com/pyeve/eve/commit/6d1526bf8ad93a3d259b1fd357f0c40e4ed9dbf5"}], "details": [{"raw_url": "https://github.com/pyeve/eve/raw/f8f7019ffdf9b4e05faf95e1f04e204aa4c91f98/eve%2Fio%2Fmongo%2Fparser.py", "code": "# -*- coding: utf-8 -*-\n\n\"\"\"\n    eve.io.mongo.parser\n    ~~~~~~~~~~~~~~~~~~~\n\n    This module implements a Python-to-Mongo syntax parser. Allows the MongoDB\n    data-layer to seamlessly respond to a Python-like query.\n\n    :copyright: (c) 2017 by Nicola Iarocci.\n    :license: BSD, see LICENSE for more details.\n\"\"\"\n\nimport ast\nimport sys\nfrom datetime import datetime   # noqa\nfrom bson import ObjectId       # noqa\n\n\ndef parse(expression):\n    \"\"\" Given a python-like conditional statement, returns the equivalent\n    mongo-like query expression. Conditional and boolean operators (==, <=, >=,\n    !=, >, <) along with a couple function calls (ObjectId(), datetime()) are\n    supported.\n    \"\"\"\n    v = MongoVisitor()\n    try:\n        v.visit(ast.parse(expression))\n    except SyntaxError as e:\n        e = ParseError(e)\n        e.__traceback__ = sys.exc_info()[2]\n        raise e\n    return v.mongo_query\n\n\nclass ParseError(ValueError):\n    pass\n\n\nclass MongoVisitor(ast.NodeVisitor):\n    \"\"\" Implements the python-to-mongo parser. Only Python conditional\n    statements are supported, however nested, combined with most common compare\n    and boolean operators (And and Or).\n\n    Supported compare operators: ==, >, <, !=, >=, <=\n    Supported boolean operators: And, Or\n    \"\"\"\n    op_mapper = {\n        ast.Eq: '',\n        ast.Gt: '$gt',\n        ast.GtE: '$gte',\n        ast.Lt: '$lt',\n        ast.LtE: '$lte',\n        ast.NotEq: '$ne',\n        ast.Or: '$or',\n        ast.And: '$and'\n    }\n\n    def visit_Module(self, node):\n        \"\"\" Module handler, our entry point.\n        \"\"\"\n        self.mongo_query = {}\n        self.ops = []\n        self.current_value = None\n\n        # perform the magic.\n        self.generic_visit(node)\n\n        # if we didn't obtain a query, it is likely that an unsupported\n        # python expression has been passed.\n        if self.mongo_query == {}:\n            raise ParseError(\"Only conditional statements with boolean \"\n                             \"(and, or) and comparison operators are \"\n                             \"supported.\")\n\n    def visit_Expr(self, node):\n        \"\"\" Make sure that we are parsing compare or boolean operators\n        \"\"\"\n        if not (isinstance(node.value, ast.Compare) or\n                isinstance(node.value, ast.BoolOp)):\n            raise ParseError(\"Will only parse conditional statements\")\n        self.generic_visit(node)\n\n    def visit_Compare(self, node):\n        \"\"\" Compare operator handler.\n        \"\"\"\n        self.visit(node.left)\n        left = self.current_value\n\n        operator = self.op_mapper[node.ops[0].__class__] if node.ops else None\n\n        if node.comparators:\n            comparator = node.comparators[0]\n            self.visit(comparator)\n\n        if operator != '':\n            value = {operator: self.current_value}\n        else:\n            value = self.current_value\n\n        if self.ops:\n            self.ops[-1].append({left: value})\n        else:\n            self.mongo_query[left] = value\n\n    def visit_BoolOp(self, node):\n        \"\"\" Boolean operator handler.\n        \"\"\"\n        op = self.op_mapper[node.op.__class__]\n        self.ops.append([])\n        for value in node.values:\n            self.visit(value)\n\n        c = self.ops.pop()\n        if self.ops:\n            self.ops[-1].append({op: c})\n        else:\n            self.mongo_query[op] = c\n\n    def visit_Call(self, node):\n        \"\"\" A couple function calls are supported: bson's ObjectId() and\n        datetime().\n        \"\"\"\n        if isinstance(node.func, ast.Name):\n            if node.func.id == 'ObjectId':\n                try:\n                    self.current_value = ObjectId(node.args[0].s)\n                except:\n                    pass\n            elif node.func.id == 'datetime':\n                values = []\n                for arg in node.args:\n                    values.append(arg.n)\n                try:\n                    self.current_value = datetime(*values)\n                except:\n                    pass\n\n    def visit_Attribute(self, node):\n        \"\"\" Attribute handler ('Contact.Id').\n        \"\"\"\n        self.visit(node.value)\n        self.current_value += \".\" + node.attr\n\n    def visit_Name(self, node):\n        \"\"\" Names handler.\n        \"\"\"\n        self.current_value = node.id\n\n    def visit_Num(self, node):\n        \"\"\" Numbers handler.\n        \"\"\"\n        self.current_value = node.n\n\n    def visit_Str(self, node):\n        \"\"\" Strings handler.\n        \"\"\"\n        self.current_value = node.s\n", "code_before": "# -*- coding: utf-8 -*-\n\n\"\"\"\n    eve.io.mongo.parser\n    ~~~~~~~~~~~~~~~~~~~\n\n    This module implements a Python-to-Mongo syntax parser. Allows the MongoDB\n    data-layer to seamlessly respond to a Python-like query.\n\n    :copyright: (c) 2017 by Nicola Iarocci.\n    :license: BSD, see LICENSE for more details.\n\"\"\"\n\nimport ast\nimport sys\nfrom datetime import datetime   # noqa\nfrom bson import ObjectId       # noqa\n\n\ndef parse(expression):\n    \"\"\" Given a python-like conditional statement, returns the equivalent\n    mongo-like query expression. Conditional and boolean operators (==, <=, >=,\n    !=, >, <) along with a couple function calls (ObjectId(), datetime()) are\n    supported.\n    \"\"\"\n    v = MongoVisitor()\n    try:\n        v.visit(ast.parse(expression))\n    except SyntaxError as e:\n        e = ParseError(e)\n        e.__traceback__ = sys.exc_info()[2]\n        raise e\n    return v.mongo_query\n\n\nclass ParseError(ValueError):\n    pass\n\n\nclass MongoVisitor(ast.NodeVisitor):\n    \"\"\" Implements the python-to-mongo parser. Only Python conditional\n    statements are supported, however nested, combined with most common compare\n    and boolean operators (And and Or).\n\n    Supported compare operators: ==, >, <, !=, >=, <=\n    Supported boolean operators: And, Or\n    \"\"\"\n    op_mapper = {\n        ast.Eq: '',\n        ast.Gt: '$gt',\n        ast.GtE: '$gte',\n        ast.Lt: '$lt',\n        ast.LtE: '$lte',\n        ast.NotEq: '$ne',\n        ast.Or: '$or',\n        ast.And: '$and'\n    }\n\n    def visit_Module(self, node):\n        \"\"\" Module handler, our entry point.\n        \"\"\"\n        self.mongo_query = {}\n        self.ops = []\n        self.current_value = None\n\n        # perform the magic.\n        self.generic_visit(node)\n\n        # if we didn't obtain a query, it is likely that an unsupported\n        # python expression has been passed.\n        if self.mongo_query == {}:\n            raise ParseError(\"Only conditional statements with boolean \"\n                             \"(and, or) and comparison operators are \"\n                             \"supported.\")\n\n    def visit_Expr(self, node):\n        \"\"\" Make sure that we are parsing compare or boolean operators\n        \"\"\"\n        if not (isinstance(node.value, ast.Compare) or\n                isinstance(node.value, ast.BoolOp)):\n            raise ParseError(\"Will only parse conditional statements\")\n        self.generic_visit(node)\n\n    def visit_Compare(self, node):\n        \"\"\" Compare operator handler.\n        \"\"\"\n        self.visit(node.left)\n        left = self.current_value\n\n        operator = self.op_mapper[node.ops[0].__class__] if node.ops else None\n\n        if node.comparators:\n            comparator = node.comparators[0]\n            self.visit(comparator)\n\n        if operator != '':\n            value = {operator: self.current_value}\n        else:\n            value = self.current_value\n\n        if self.ops:\n            self.ops[-1].append({left: value})\n        else:\n            self.mongo_query[left] = value\n\n    def visit_BoolOp(self, node):\n        \"\"\" Boolean operator handler.\n        \"\"\"\n        op = self.op_mapper[node.op.__class__]\n        self.ops.append([])\n        for value in node.values:\n            self.visit(value)\n\n        c = self.ops.pop()\n        if self.ops:\n            self.ops[-1].append({op: c})\n        else:\n            self.mongo_query[op] = c\n\n    def visit_Call(self, node):\n        \"\"\" A couple function calls are supported: bson's ObjectId() and\n        datetime().\n        \"\"\"\n        if isinstance(node.func, ast.Name):\n            expr = None\n            if node.func.id == 'ObjectId':\n                expr = \"('\" + node.args[0].s + \"')\"\n            elif node.func.id == 'datetime':\n                values = []\n                for arg in node.args:\n                    values.append(str(arg.n))\n                expr = \"(\" + \", \".join(values) + \")\"\n            if expr:\n                self.current_value = eval(node.func.id + expr)\n\n    def visit_Attribute(self, node):\n        \"\"\" Attribute handler ('Contact.Id').\n        \"\"\"\n        self.visit(node.value)\n        self.current_value += \".\" + node.attr\n\n    def visit_Name(self, node):\n        \"\"\" Names handler.\n        \"\"\"\n        self.current_value = node.id\n\n    def visit_Num(self, node):\n        \"\"\" Numbers handler.\n        \"\"\"\n        self.current_value = node.n\n\n    def visit_Str(self, node):\n        \"\"\" Strings handler.\n        \"\"\"\n        self.current_value = node.s\n", "patch": "@@ -122,16 +122,19 @@ def visit_Call(self, node):\n         datetime().\n         \"\"\"\n         if isinstance(node.func, ast.Name):\n-            expr = None\n             if node.func.id == 'ObjectId':\n-                expr = \"('\" + node.args[0].s + \"')\"\n+                try:\n+                    self.current_value = ObjectId(node.args[0].s)\n+                except:\n+                    pass\n             elif node.func.id == 'datetime':\n                 values = []\n                 for arg in node.args:\n-                    values.append(str(arg.n))\n-                expr = \"(\" + \", \".join(values) + \")\"\n-            if expr:\n-                self.current_value = eval(node.func.id + expr)\n+                    values.append(arg.n)\n+                try:\n+                    self.current_value = datetime(*values)\n+                except:\n+                    pass\n \n     def visit_Attribute(self, node):\n         \"\"\" Attribute handler ('Contact.Id').", "file_path": "files/2018_3\\66", "file_language": "py", "file_name": "eve/io/mongo/parser.py", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 0, "llm_check": 0, "static_check": 1, "static": {"rats": [true, ["/data/rdhu/other/Static/tmp/2018_3_66.py:134: High: eval\n                self.current_value = eval(node.func.id + expr)\nArgument 1 to this function call should be checked to ensure that it does not\ncome from an untrusted source without first verifying that it contains nothing\ndangerous."]], "semgrep": [true, ["       python.lang.security.audit.eval-detected.eval-detected                                        \n          Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If\n          this content can be input from outside the program, this may be a code injection           \n          vulnerability. Ensure evaluated content is not definable by external sources.              \n          Details: https://sg.run/ZvrD                                                               \n          134\u2506 self.current_value = eval(node.func.id + expr)"]]}, "target": -1, "function_before": [], "function_after": []}], "outdated": 0, "cwe_descripiton": "", "cwe_consequence": "", "cwe_method": "", "cwe_solution": ""}
