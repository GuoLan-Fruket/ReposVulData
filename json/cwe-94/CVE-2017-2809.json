{"index": 2407, "cve_id": "CVE-2017-2809", "cwe_id": ["CWE-94"], "cve_language": "Python", "cve_description": "An exploitable vulnerability exists in the yaml loading functionality of ansible-vault before 1.0.5. A specially crafted vault can execute arbitrary python commands resulting in command execution. An attacker can insert python into the vault to trigger this vulnerability.", "cvss": "7.8", "publish_date": "September 13, 2017", "AV": "LOCAL", "AC": "LOCAL", "PR": "NONE", "UI": "REQUIRED", "S": "UNCHANGED", "C": "HIGH", "I": "HIGH", "A": "HIGH", "commit_id": "3f8f659ef443ab870bb19f95d43543470168ae04", "commit_message": "Fix security issue refs #4\n\n* Update version to 1.0.5\n* Update to use yaml.safe_load()\n* Update to tomoh1r", "commit_date": "2017-09-13T13:10:47Z", "project": "tomoh1r/ansible-vault", "url": "https://api.github.com/repos/tomoh1r/ansible-vault/commits/3f8f659ef443ab870bb19f95d43543470168ae04", "html_url": "https://github.com/tomoh1r/ansible-vault/commit/3f8f659ef443ab870bb19f95d43543470168ae04", "windows_before": [{"commit_id": "1ae50a312349656280fbe7d2acfbda9c1d560dd1", "commit_date": "Sun Nov 29 04:39:17 2015 +0900", "commit_message": "update tox.ini to remove some useless text", "files_name": ["tox.ini"]}, {"commit_id": "fb3c4a05df7249e9f0724d573d2b023298c9f8e4", "commit_date": "Sun Nov 29 04:18:05 2015 +0900", "commit_message": "delete version specified comment", "files_name": ["README.rst"]}, {"commit_id": "776f0385157c2e07003954fde999f6f556451c80", "commit_date": "Sun Nov 29 04:17:16 2015 +0900", "commit_message": "add travis image", "files_name": ["README.rst"]}, {"commit_id": "4971ff6d200c673e9e7ce5b71332ac43a11e4c79", "commit_date": "Sun Nov 29 04:13:07 2015 +0900", "commit_message": "add file .travis.yml", "files_name": [".travis.yml"]}, {"commit_id": "a0484fd978e724666c182547a80e75fd8edd0052", "commit_date": "Sun Nov 29 04:00:17 2015 +0900", "commit_message": "add test of ansible2", "files_name": ["tox.ini"]}, {"commit_id": "293a18c077690f4df065102565a1e3b83016b3a8", "commit_date": "Sun Nov 29 03:47:12 2015 +0900", "commit_message": "Merge remote-tracking branch 'notonthehighstreet/master'", "files_name": ["3707007fbdb4c29320ff1c3ce68697aead7ca680 - Sun Nov 29 03:42:54 2015 +0900 : add test", "MANIFEST.in", "README_test.rst", "ansible_vault/test/file/vault.txt", "ansible_vault/test/test_api.py", "setup.cfg", "setup.py", "tox.ini"]}, {"commit_id": "ba203e1d7a7560ded69d320512cfffeebf8f9b38", "commit_date": "Thu Oct 8 12:15:13 2015 +0100", "commit_message": "update to support new vault path in Ansible 2.0", "files_name": ["ansible_vault/api.py", "setup.py"]}, {"commit_id": "e534c7cc75fa8ed450ab5a13ac7e33b537c5a897", "commit_date": "Sun May 17 11:24:56 2015 +0900", "commit_message": "fix README.rst typo", "files_name": ["CHANGES.txt", "README.rst", "setup.py"]}, {"commit_id": "bec100905802bd40afbc72201e81a8b152c9a59d", "commit_date": "Sun May 17 10:53:53 2015 +0900", "commit_message": "1.0.2 shippd with python modules", "files_name": ["CHANGES.txt", "setup.py"]}, {"commit_id": "717613a6bc46e17f88499161269fd9b8786a9773", "commit_date": "Sun May 17 00:39:23 2015 +0900", "commit_message": "update setup.py use find_packages, add CHANGES.txt", "files_name": ["CHANGES.txt", "setup.py"]}, {"commit_id": "990102f49c7a8aea0038cd75b59347924c9c00ef", "commit_date": "Sun May 17 00:14:11 2015 +0900", "commit_message": "update setup.py author, author_email", "files_name": ["setup.py"]}, {"commit_id": "453439077e83579499f473184c539cf929d384bf", "commit_date": "Sun May 17 00:07:01 2015 +0900", "commit_message": "update README.rst format", "files_name": ["README.rst"]}, {"commit_id": "56cef04568af4979d0170f4c08523eaade5276d0", "commit_date": "Sun May 17 00:05:31 2015 +0900", "commit_message": "update version to 1.0.0", "files_name": ["README.rst", "setup.py"]}, {"commit_id": "8a8abab54cb7eff47b8a48d1943afcee8bdfe841", "commit_date": "Sun May 17 00:02:31 2015 +0900", "commit_message": "update yaml output to literal", "files_name": ["README.rst", "ansible_vault/api.py"]}, {"commit_id": "c89ed0fccbe33095598b0ece821f6dce1029bb59", "commit_date": "Sat May 16 23:55:36 2015 +0900", "commit_message": "add basic implementation", "files_name": ["README.rst", "ansible_vault/api.py"]}, {"commit_id": "3d6e32bfbcaca6dc6fd81d1e20f14743eef21198", "commit_date": "Sat May 16 23:20:32 2015 +0900", "commit_message": "add files", "files_name": [".gitignore", "ansible_vault/__init__.py", "ansible_vault/api.py", "setup.py"]}, {"commit_id": "bf054e1e5501b0c82e6697f2ebefcad625ab2954", "commit_date": "Sat May 16 23:04:05 2015 +0900", "commit_message": "write README.rst", "files_name": ["README.rst"]}, {"commit_id": "2772d4897b4a35e22079c6be4ff4ddeffaa4a5cd", "commit_date": "Sat May 16 22:39:42 2015 +0900", "commit_message": "first commit", "files_name": [".gitignore", "README.rst"]}], "windows_after": [{"commit_id": "a1f5ad907990c63955041751b39286c52b7c5815", "commit_date": "Sat Sep 30 02:54:32 2017 +0900", "commit_message": "Adjust to Ansible 2.4 refs #6", "files_name": [".travis.yml", "CHANGES.txt", "LICENSE.txt", "MANIFEST.in", "ansible_vault/__init__.py", "ansible_vault/api.py", "ansible_vault/test/file/pwned.txt", "ansible_vault/test/file/vault.txt", "ansible_vault/test/test_api.py", "ansible_vault/testing.py", "setup.cfg", "setup.py", "test/conftest.py", "test/test_api.py"]}, {"commit_id": "9bae41430ac60211e97bff4bd25a9da49e1212f0", "commit_date": "Tue Oct 3 22:39:00 2017 +0900", "commit_message": "Fix setup.py refs #8", "files_name": ["CHANGES.txt", "MANIFEST.in", "setup.py"]}, {"commit_id": "91dcd813d4e261b342911f49a30d995a1a72c1a2", "commit_date": "Wed Nov 1 13:31:09 2017 -0400", "commit_message": "Update api.py", "files_name": ["ansible_vault/api.py"]}, {"commit_id": "adf5afac8130ac19c0f0535ca3a412e2c4e45f0d", "commit_date": "Wed Jun 20 20:14:17 2018 +0900", "commit_message": "remove six dependence", "files_name": ["ansible_vault/_compat.py", "ansible_vault/api.py"]}, {"commit_id": "7c0e4fea58dc11851950814d488fad87554db53b", "commit_date": "Thu Jun 21 09:22:29 2018 +0900", "commit_message": "wip", "files_name": [".gitignore", "CHANGES.txt", "README_test.rst", "setup.py", "test/test_api.py"]}, {"commit_id": "9e45c9b7658abeeb695123b5aff7af51c4b12dfa", "commit_date": "Sun Sep 9 15:32:22 2018 +0900", "commit_message": "Use Docker on Travis-CI and Add the Python 3.7 case.", "files_name": [".travis.yml"]}, {"commit_id": "49ef86f25b31745fcf8c24ad44d0a3b38144dd73", "commit_date": "Sun Sep 9 18:42:21 2018 +0900", "commit_message": "Update to 1.1.2", "files_name": [".gitignore", ".travis.yml", "CHANGES.txt", "README.rst", "setup.py"]}, {"commit_id": "ce9ffe3aba34673bd29d24571e2d1baedaebe746", "commit_date": "Sun Sep 9 18:48:33 2018 +0900", "commit_message": "To bold notation.", "files_name": ["README.rst"]}, {"commit_id": "40f0990a01d026d038798883f0e810ea8e393ce1", "commit_date": "Wed Sep 5 18:08:13 2018 +0100", "commit_message": "Add write and read raw data", "files_name": ["ansible_vault/api.py"]}, {"commit_id": "a9156dfee31859bd8ccafb748e87304578becb1f", "commit_date": "Thu Sep 6 17:45:16 2018 +0100", "commit_message": "Update api.py", "files_name": ["ansible_vault/api.py"]}, {"commit_id": "6c97b4e64193848fff585443bdd506761f66d595", "commit_date": "Sun Sep 16 17:46:57 2018 +0900", "commit_message": "Use raw method. Add tests for raw. refs #17", "files_name": ["CHANGES.txt", "README_test.rst", "ansible_vault/api.py", "setup.py", "test/test_api.py"]}, {"commit_id": "6a06e3711b15505682e537561fa14ce1e6a51933", "commit_date": "Sun Sep 16 18:08:19 2018 +0900", "commit_message": "merge master", "files_name": ["c54f850fbbdceabd218702954f3b3245eca0e2b0 - Sun Sep 16 18:26:27 2018 +0900 : Merge #12, take in black, isort refs #12 #14", ".flake8", ".gitignore", ".travis.yml", "CHANGES.txt", "MANIFEST.in", "README.rst", "README_test.rst", "ansible_vault/_compat.py", "ansible_vault/api.py", "ansible_vault/testing.py", "pyproject.toml", "setup.cfg", "setup.py", "test/conftest.py", "test/test_api.py", "test/test_black.py", "test/test_isort.py"]}, {"commit_id": "dbcce7580ef38620c165beea1d96ecb460d6db06", "commit_date": "Mon Jul 15 01:41:52 2019 +0900", "commit_message": "Merge pull request #25 from tomoh1r/issue-14 refs #12 #14", "files_name": ["449726bff7fb957f831a79191a33556e4190e9d3 - Tue Sep 29 22:30:49 2020 -0700 : Update version comparison to use pkg_resources, using this instead of packaging.version.parse for backwards compatability.", "ansible_vault/api.py"]}, {"commit_id": "5c61ed3fb7ca4804dcb833ec15608051daed8d4e", "commit_date": "Sat Feb 6 10:08:49 2021 +0900", "commit_message": "Merge pull request #34 from stevebeck89/fix-version-comparison-logic", "files_name": ["45a6d1eae52e6ed1e38bc796716a06cc992f6e73 - Sat Feb 6 10:23:16 2021 +0900 : Organize vertion 2.0.0 #26", ".flake8", ".github/actions/pip-freeze-v2/action.yml", ".github/actions/pip-freeze/action.yml", ".github/actions/test-it-v2/action.yml", ".github/actions/test-it/action.yml", ".github/workflows/test.yml", ".travis.yml", "CHANGES.txt", "README.rst", "ansible_vault/__init__.py", "ansible_vault/api.py", "setup.py", "test/conftest.py", "test/test_api.py", "test/test_black.py", "test/test_flake8.py", "test/test_isort.py"]}, {"commit_id": "29310e09e7b5a330ab5f4851e9d2f1fc6ab04be7", "commit_date": "Sat Feb 6 17:18:03 2021 +0900", "commit_message": "Merge pull request #35 from tomoh1r/issue-26", "files_name": ["68c1cc31b063edf01b640651846794577ca5a72f - Sat Feb 6 17:19:06 2021 +0900 : Update GitHub Actions src branch to master.", ".github/workflows/test.yml"]}, {"commit_id": "16cd40b6c69104c87f46bb125feae3dd99781ea9", "commit_date": "Sat Feb 6 20:04:00 2021 +0900", "commit_message": "Move ansible-vault/testing to test/lib/testing", "files_name": ["test/conftest.py", "test/lib/testing/__init__.py", "test/test_api.py"]}, {"commit_id": "ac66b152df6e40ba6a344f010add9a6feefea75f", "commit_date": "Sat Feb 6 20:51:51 2021 +0900", "commit_message": "Add VaultLibABC.", "files_name": ["ansible_vault/__init__.py", "ansible_vault/api.py", "ansible_vault/parsing.py"]}, {"commit_id": "b7dc3d9bf1661e1255948358a1ebb954a85c8ff1", "commit_date": "Sat Feb 6 21:02:41 2021 +0900", "commit_message": "Fix python2.7 test failed.", "files_name": ["ansible_vault/parsing.py"]}, {"commit_id": "87b7bf06477518508dad1a02507fac108d6faeb1", "commit_date": "Sat Feb 6 22:10:11 2021 +0900", "commit_message": "Add samples. #36", "files_name": [".github/actions/test-it-v2/action.yml", ".github/actions/test-it/action.yml", ".github/workflows/test.yml", "ansible_vault/__init__.py", "test/conftest.py", "test/sample_io/__init__.py", "test/sample_io/test_json.py", "test/sample_io/test_plain.py", "test/sample_vault/__init__.py", "test/sample_vault/test_password.py", "test/test_api.py"]}, {"commit_id": "c4193c28eece96f6b0e64275b70f4e70935e49a0", "commit_date": "Sun Feb 7 00:47:49 2021 +0900", "commit_message": "Merge pull request #37 from tomoh1r/issue-36", "files_name": ["269e1d0a8b170b79a8481c385bab0edfa2306b71 - Sun Feb 7 01:44:32 2021 +0900 : Fix .github/actions/test-it/action.yml typo.", ".github/actions/test-it/action.yml"]}, {"commit_id": "2510d1740dbffb5f4f1621740b53050fe109c748", "commit_date": "Sun Feb 7 00:57:46 2021 +0900", "commit_message": "Integrate with wiki. #38 #39", "files_name": [".github/actions/test-it/action.yml", ".github/workflows/wiki.yml", "CHANGES.txt", "README.md", "README.rst", "README_test.rst", "doc/Home.md", "doc/sample.md", "doc/unittest.md", "setup.cfg", "setup.py", "test/conftest.py", "test/test_black.py", "test/test_flake8.py", "test/test_isort.py"]}, {"commit_id": "3ecda3c723d68fdcead18568c29138e239df2ff1", "commit_date": "Sun Feb 7 02:37:30 2021 +0900", "commit_message": "Merge pull request #39 from tomoh1r/issue-38", "files_name": ["9bb15efea0c2facbde66bdaef42254f902079459 - Sun Feb 7 02:41:18 2021 +0900 : Add lint-it action.", ".github/actions/lint-it/action.yml", ".github/workflows/test.yml"]}, {"commit_id": "94d3db31d543549ae670f2fb83d613584a32dba1", "commit_date": "Sun Feb 7 02:48:07 2021 +0900", "commit_message": "Arrange workflow to reduce dups.", "files_name": [".github/workflows/test.yml"]}, {"commit_id": "eedaab40adac42d09d760f36a277364819a9adf9", "commit_date": "Sun Feb 7 02:57:28 2021 +0900", "commit_message": "Update doc/sample.md to add descs.", "files_name": ["doc/sample.md"]}, {"commit_id": "6941a92b44fbb525f61fb265a5d58bf2eebf28c6", "commit_date": "Sun Feb 7 10:09:56 2021 +0900", "commit_message": "Create SECURITY.md", "files_name": ["SECURITY.md"]}, {"commit_id": "37cbd09a39837dc89da7e2d1ffdd50d81c3ae498", "commit_date": "Sun Feb 7 12:06:55 2021 +0900", "commit_message": "Adopt CodeQL, Organize lint to dir #40", "files_name": [".github/workflows/codeql-analysis.yml", "test/conftest.py", "test/linter/__init__.py", "test/linter/conftest.py", "test/linter/test_black.py", "test/linter/test_flake8.py", "test/linter/test_isort.py"]}, {"commit_id": "9a3d2a56fff90c04932ef109639a64355044b425", "commit_date": "Sun Feb 7 12:29:06 2021 +0900", "commit_message": "Create CODE_OF_CONDUCT.md (#42)", "files_name": ["CODE_OF_CONDUCT.md"]}, {"commit_id": "865ad4f19c3637f820d34b5c2ab488e19081d142", "commit_date": "Sun Feb 7 12:30:47 2021 +0900", "commit_message": "Update issue templates", "files_name": [".github/ISSUE_TEMPLATE/feature_request.md"]}, {"commit_id": "1f6745d4873b7830bee0b40322db94f8c67a4091", "commit_date": "Sun Feb 7 12:35:47 2021 +0900", "commit_message": "Fix super-linter of CODE_OF_CONDUCT.md", "files_name": ["CODE_OF_CONDUCT.md"]}], "parents": [{"commit_id_before": "1ae50a312349656280fbe7d2acfbda9c1d560dd1", "url_before": "https://api.github.com/repos/tomoh1r/ansible-vault/commits/1ae50a312349656280fbe7d2acfbda9c1d560dd1", "html_url_before": "https://github.com/tomoh1r/ansible-vault/commit/1ae50a312349656280fbe7d2acfbda9c1d560dd1"}], "details": [{"raw_url": "https://github.com/tomoh1r/ansible-vault/raw/3f8f659ef443ab870bb19f95d43543470168ae04/.travis.yml", "code": "---\nlanguage: python\nsudo: false\ncache:\n  directories:\n    - $HOME/.cache/pip\npython:\n  - \"2.7\"\n  - \"3.3\"\n  - \"3.4\"\n  - \"3.5\"\n  - \"3.6\"\ninstall:\n  - python -m pip install -U setuptools pip\n  - python setup.py setup_test\nscript:\n  - python -m pytest\n  - if [ \"$TRAVIS_PYTHON_VERSION\" == '2.7' ] ; then python -m pip install -U 'ansible<2.0.0' && python -m pytest ; fi\n\n# vim:st=2 sts=2 sw=2:\n", "code_before": "---\nlanguage: python\nsudo: false\npython:\n- 2.7\nenv:\n  matrix:\n    - TOXENV=py27\n    - TOXENV=py27-ansible2\ninstall:\n  - pip install tox\nscript: tox\n\n# vim:st=2 sts=2 sw=2:\n", "patch": "@@ -1,14 +1,20 @@\n ---\n language: python\n sudo: false\n+cache:\n+  directories:\n+    - $HOME/.cache/pip\n python:\n-- 2.7\n-env:\n-  matrix:\n-    - TOXENV=py27\n-    - TOXENV=py27-ansible2\n+  - \"2.7\"\n+  - \"3.3\"\n+  - \"3.4\"\n+  - \"3.5\"\n+  - \"3.6\"\n install:\n-  - pip install tox\n-script: tox\n+  - python -m pip install -U setuptools pip\n+  - python setup.py setup_test\n+script:\n+  - python -m pytest\n+  - if [ \"$TRAVIS_PYTHON_VERSION\" == '2.7' ] ; then python -m pip install -U 'ansible<2.0.0' && python -m pytest ; fi\n \n # vim:st=2 sts=2 sw=2:", "file_path": "files/2017_9/587", "file_language": "yml", "file_name": ".travis.yml", "outdated_file_modify": 1, "outdated_file_before": 0, "outdated_file_after": 1}, {"raw_url": "https://github.com/tomoh1r/ansible-vault/raw/3f8f659ef443ab870bb19f95d43543470168ae04/CHANGES.txt", "code": "1.0.5 (2017/09/13)\n\n* Update to use yaml.safe_load()$\n* Update to tomoh1r$\n\n1.0.4 (2015/11/29)\n\n* Apply to Ansible 2\n* Add unit tests\n\n1.0.3 (2015/05/18)\n\n* fix README.rst typo\n\n1.0.2 (2015/05/18)\n\n* shipped with python modules\n\n1.0.1 (2015/05/17)\n\n* add python module\n* add CHANGES.txt\n* update url on setup.py\n\n1.0.0 (2015/05/17)\n\n* first release\n", "code_before": "1.0.3 (2015/05/18)\n\n* fix README.rst typo\n\n1.0.2 (2015/05/18)\n\n* shipped with python modules\n\n1.0.1 (2015/05/17)\n\n* add python module\n* add CHANGES.txt\n* update url on setup.py\n\n1.0.0 (2015/05/17)\n\n* first release\n", "patch": "@@ -1,3 +1,13 @@\n+1.0.5 (2017/09/13)\n+\n+* Update to use yaml.safe_load()$\n+* Update to tomoh1r$\n+\n+1.0.4 (2015/11/29)\n+\n+* Apply to Ansible 2\n+* Add unit tests\n+\n 1.0.3 (2015/05/18)\n \n * fix README.rst typo", "file_path": "files/2017_9/588", "file_language": "txt", "file_name": "CHANGES.txt", "outdated_file_modify": 1, "outdated_file_before": 0, "outdated_file_after": 1}, {"raw_url": "https://github.com/tomoh1r/ansible-vault/raw/3f8f659ef443ab870bb19f95d43543470168ae04/README.rst", "code": "=============\nansible-vault\n=============\n\n.. image:: https://travis-ci.org/tomoh1r/ansible-vault.svg?branch=master\n   :target: https://travis-ci.org/tomoh1r/ansible-vault\n\nThis project aim to R/W an ansible-vault yaml file\n\nYou can install with pip.\n\n.. code-block:: console\n\n   $ pip install ansible-vault\n\nWhen you have an ansible-vault file, then you can read file. See below.\n\n.. code-block:: python\n\n   from ansible_vault import Vault\n\n   vault = Vault('password')\n   data = vault.load(open('vault.yml').read())\n\nWhen you have to write data, then you can write data to file. See below.\n\n.. code-block:: python\n\n   from ansible_vault import Vault\n\n   vault = Vault('password')\n   vault.dump(data, open('vault.yml', 'w'))\n\n   # also you can get encrypted text\n   print(vault.dump(data))\n", "code_before": "=============\nansible-vault\n=============\n\n.. image:: https://travis-ci.org/jptomo/ansible-vault.svg?branch=master\n   :target: https://travis-ci.org/jptomo/ansible-vault\n\nThis project aim to R/W an ansible-vault yaml file\n\nYou can install with pip.\n\n.. code-block:: console\n\n   $ pip install ansible-vault\n\nWhen you have an ansible-vault file, then you can read file. See below.\n\n.. code-block:: python\n\n   from ansible_vault import Vault\n\n   vault = Vault('password')\n   data = vault.load(open('vault.yml').read())\n\nWhen you have to write data, then you can write data to file. See below.\n\n.. code-block:: python\n\n   from ansible_vault import Vault\n\n   vault = Vault('password')\n   vault.dump(data, open('vault.yml', 'w'))\n\n   # also you can get encrypted text\n   print(vault.dump(data))\n", "patch": "@@ -2,8 +2,8 @@\n ansible-vault\n =============\n \n-.. image:: https://travis-ci.org/jptomo/ansible-vault.svg?branch=master\n-   :target: https://travis-ci.org/jptomo/ansible-vault\n+.. image:: https://travis-ci.org/tomoh1r/ansible-vault.svg?branch=master\n+   :target: https://travis-ci.org/tomoh1r/ansible-vault\n \n This project aim to R/W an ansible-vault yaml file\n ", "file_path": "files/2017_9/589", "file_language": "rst", "file_name": "README.rst", "outdated_file_modify": 1, "outdated_file_before": 0, "outdated_file_after": 0}, {"raw_url": "https://github.com/tomoh1r/ansible-vault/raw/3f8f659ef443ab870bb19f95d43543470168ae04/README_test.rst", "code": "===========\nhow to test\n===========\n\n1. create virtualenv\n\n   .. code-block:: console\n\n      $ virtualenv venvtest\n\n2. run test\n\n   .. code-block:: console\n\n      $ ./venvtest/bin/python setup.py setup_test\n      $ ./venvtest/bin/python setup.py test\n", "code_before": "===========\nhow to test\n===========\n\n1. create virtualenv\n\n   .. code-block:: console\n\n      $ virtualenv venvtest\n\n2. run test\n\n   .. code-block:: console\n\n      $ ./venvtest/bin/python setup.py test\n", "patch": "@@ -12,4 +12,5 @@ how to test\n \n    .. code-block:: console\n \n+      $ ./venvtest/bin/python setup.py setup_test\n       $ ./venvtest/bin/python setup.py test", "file_path": "files/2017_9/590", "file_language": "rst", "file_name": "README_test.rst", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 0}, {"raw_url": "https://github.com/tomoh1r/ansible-vault/raw/3f8f659ef443ab870bb19f95d43543470168ae04/ansible_vault%2Fapi.py", "code": "import yaml\ntry:\n    from ansible.utils.vault import VaultLib\nexcept ImportError:\n    # Ansible 2.0 has changed the vault location\n    from ansible.parsing.vault import VaultLib\n\n\nclass Vault(object):\n    '''R/W an ansible-vault yaml file'''\n\n    def __init__(self, password):\n        self.password = password\n        self.vault = VaultLib(password)\n\n    def load(self, stream):\n        '''read vault steam and return python object'''\n        return yaml.safe_load(self.vault.decrypt(stream))\n\n    def dump(self, data, stream=None):\n        '''encrypt data and print stdout or write to stream'''\n        yaml_text = yaml.dump(\n            data,\n            default_flow_style=False,\n            allow_unicode=True)\n        encrypted = self.vault.encrypt(yaml_text)\n        if stream:\n            stream.write(encrypted)\n        else:\n            return encrypted\n", "code_before": "import yaml\ntry:\n    from ansible.utils.vault import VaultLib\nexcept ImportError:\n    # Ansible 2.0 has changed the vault location\n    from ansible.parsing.vault import VaultLib\n\n\nclass Vault(object):\n    '''R/W an ansible-vault yaml file'''\n\n    def __init__(self, password):\n        self.password = password\n        self.vault = VaultLib(password)\n\n    def load(self, stream):\n        '''read vault steam and return python object'''\n        return yaml.load(self.vault.decrypt(stream))\n\n    def dump(self, data, stream=None):\n        '''encrypt data and print stdout or write to stream'''\n        yaml_text = yaml.dump(\n            data,\n            default_flow_style=False,\n            allow_unicode=True)\n        encrypted = self.vault.encrypt(yaml_text)\n        if stream:\n            stream.write(encrypted)\n        else:\n            return encrypted\n", "patch": "@@ -15,7 +15,7 @@ def __init__(self, password):\n \n     def load(self, stream):\n         '''read vault steam and return python object'''\n-        return yaml.load(self.vault.decrypt(stream))\n+        return yaml.safe_load(self.vault.decrypt(stream))\n \n     def dump(self, data, stream=None):\n         '''encrypt data and print stdout or write to stream'''", "file_path": "files/2017_9/591", "file_language": "py", "file_name": "ansible_vault/api.py", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 1, "llm_check": 1, "static_check": 0, "static": {"rats": [false, []], "semgrep": [false, []]}, "target": -1, "function_before": [], "function_after": []}, {"raw_url": "https://github.com/tomoh1r/ansible-vault/raw/3f8f659ef443ab870bb19f95d43543470168ae04/ansible_vault%2Ftest%2Ffile%2Fpwned.txt", "code": "$ANSIBLE_VAULT;1.1;AES256\n31616433623434626463363932323936663066353063393731346536636437633463633137643032\n3663656431663830396662646132343735623538346330640a363532326262353732636161633431\n61353936346235396464333333653831356638393264343662363362653433353762396663653465\n6439366430336336660a363931663030323665633136363362353162333864653933653763656462\n31656431653333343834623731393263393865353831333963616165613237376630646665306363\n6238373037663462343565643737303136333032386136356438\n", "code_before": "", "patch": "@@ -0,0 +1,7 @@\n+$ANSIBLE_VAULT;1.1;AES256\n+31616433623434626463363932323936663066353063393731346536636437633463633137643032\n+3663656431663830396662646132343735623538346330640a363532326262353732636161633431\n+61353936346235396464333333653831356638393264343662363362653433353762396663653465\n+6439366430336336660a363931663030323665633136363362353162333864653933653763656462\n+31656431653333343834623731393263393865353831333963616165613237376630646665306363\n+6238373037663462343565643737303136333032386136356438", "file_path": "files/2017_9/592", "file_language": "txt", "file_name": "ansible_vault/test/file/pwned.txt", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 1}, {"raw_url": "https://github.com/tomoh1r/ansible-vault/raw/3f8f659ef443ab870bb19f95d43543470168ae04/ansible_vault%2Ftest%2Ftest_api.py", "code": "import os\nfrom tempfile import mkstemp\n\nfrom ansible.errors import AnsibleError\nfrom testfixtures import ShouldRaise\nfrom yaml.constructor import ConstructorError\n\n\nhere = os.path.dirname(os.path.abspath(__file__))\n\n\nclass TestVaultLoad(object):\n    def _getTargetClass(self):\n        from ansible_vault import Vault\n        return Vault\n\n    def _makeOne(self, password):\n        return self._getTargetClass()(password)\n\n    def test_can(self):\n        fpath = os.path.join(here, 'file', 'vault.txt')\n        vault = self._makeOne('password')\n        assert vault.load(open(fpath).read()) == 'test'\n\n    def test_cannot(self):\n        fpath = os.path.join(here, 'file', 'vault.txt')\n        vault = self._makeOne('invalid-password')\n        with ShouldRaise(AnsibleError('Decryption failed')):\n            vault.load(open(fpath).read())\n\n    def test_not_pwned(self):\n        fpath = os.path.join(here, 'file', 'pwned.txt')\n        vault = self._makeOne('password')\n        with ShouldRaise(ConstructorError):\n            vault.load(open(fpath).read())\n\n\nclass TestVaultDump(object):\n    def _getTargetClass(self):\n        from ansible_vault import Vault\n        return Vault\n\n    def _makeOne(self, password):\n        return self._getTargetClass()(password)\n\n    def test_dump_file(self):\n        fpath = mkstemp()[1]\n        with open(fpath, 'w+b') as fp:\n            write_vault = self._makeOne('password')\n            write_vault.dump('test', fp)\n\n        with open(fpath, 'r+b') as fp:\n            read_vault = self._makeOne('password')\n            assert read_vault.load(fp.read()) == 'test'\n\n        os.remove(fpath)\n\n    def test_dump_text(self):\n        write_vault = self._makeOne('password')\n        dumped = write_vault.dump('test')\n\n        read_vault = self._makeOne('password')\n        assert read_vault.load(dumped) == 'test'\n", "code_before": "import os\nfrom tempfile import mkstemp\n\nfrom testfixtures import ShouldRaise\n\nfrom ansible.errors import AnsibleError\n\n\nhere = os.path.dirname(os.path.abspath(__file__))\n\n\nclass TestVaultLoad(object):\n    def _getTargetClass(self):\n        from ansible_vault import Vault\n        return Vault\n\n    def _makeOne(self, password):\n        return self._getTargetClass()(password)\n\n    def test_can(self):\n        fpath = os.path.join(here, 'file', 'vault.txt')\n        vault = self._makeOne('password')\n        assert vault.load(open(fpath).read()) == 'test'\n\n    def test_cannot(self):\n        fpath = os.path.join(here, 'file', 'vault.txt')\n        vault = self._makeOne('invalid-password')\n        with ShouldRaise(AnsibleError('Decryption failed')):\n            vault.load(open(fpath).read())\n\n\nclass TestVaultDump(object):\n    def _getTargetClass(self):\n        from ansible_vault import Vault\n        return Vault\n\n    def _makeOne(self, password):\n        return self._getTargetClass()(password)\n\n    def test_dump_file(self):\n        fpath = mkstemp()[1]\n        with open(fpath, 'w+b') as fp:\n            write_vault = self._makeOne('password')\n            write_vault.dump('test', fp)\n\n        with open(fpath, 'r+b') as fp:\n            read_vault = self._makeOne('password')\n            assert read_vault.load(fp.read()) == 'test'\n\n        os.remove(fpath)\n\n    def test_dump_text(self):\n        write_vault = self._makeOne('password')\n        dumped = write_vault.dump('test')\n\n        read_vault = self._makeOne('password')\n        assert read_vault.load(dumped) == 'test'\n", "patch": "@@ -1,9 +1,9 @@\n import os\n from tempfile import mkstemp\n \n-from testfixtures import ShouldRaise\n-\n from ansible.errors import AnsibleError\n+from testfixtures import ShouldRaise\n+from yaml.constructor import ConstructorError\n \n \n here = os.path.dirname(os.path.abspath(__file__))\n@@ -28,6 +28,12 @@ def test_cannot(self):\n         with ShouldRaise(AnsibleError('Decryption failed')):\n             vault.load(open(fpath).read())\n \n+    def test_not_pwned(self):\n+        fpath = os.path.join(here, 'file', 'pwned.txt')\n+        vault = self._makeOne('password')\n+        with ShouldRaise(ConstructorError):\n+            vault.load(open(fpath).read())\n+\n \n class TestVaultDump(object):\n     def _getTargetClass(self):", "file_path": "files/2017_9/593", "file_language": "py", "file_name": "ansible_vault/test/test_api.py", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 1, "llm_check": 0, "static_check": 0, "static": {"rats": [false, []], "semgrep": [false, []]}, "target": 0, "function_before": [{"function": "class TestVaultLoad(object):\n    def _getTargetClass(self):\n        from ansible_vault import Vault\n        return Vault\n\n    def _makeOne(self, password):\n        return self._getTargetClass()(password)\n\n    def test_can(self):\n        fpath = os.path.join(here, 'file', 'vault.txt')\n        vault = self._makeOne('password')\n        assert vault.load(open(fpath).read()) == 'test'\n\n    def test_cannot(self):\n        fpath = os.path.join(here, 'file', 'vault.txt')\n        vault = self._makeOne('invalid-password')\n        with ShouldRaise(AnsibleError('Decryption failed')):\n            vault.load(open(fpath).read())", "target": 0}, {"function": "class TestVaultDump(object):\n    def _getTargetClass(self):\n        from ansible_vault import Vault\n        return Vault\n\n    def _makeOne(self, password):\n        return self._getTargetClass()(password)\n\n    def test_dump_file(self):\n        fpath = mkstemp()[1]\n        with open(fpath, 'w+b') as fp:\n            write_vault = self._makeOne('password')\n            write_vault.dump('test', fp)\n\n        with open(fpath, 'r+b') as fp:\n            read_vault = self._makeOne('password')\n            assert read_vault.load(fp.read()) == 'test'\n\n        os.remove(fpath)\n\n    def test_dump_text(self):\n        write_vault = self._makeOne('password')\n        dumped = write_vault.dump('test')\n\n        read_vault = self._makeOne('password')\n        assert read_vault.load(dumped) == 'test'", "target": 0}], "function_after": [{"function": "class TestVaultLoad(object):\n    def _getTargetClass(self):\n        from ansible_vault import Vault\n        return Vault\n\n    def _makeOne(self, password):\n        return self._getTargetClass()(password)\n\n    def test_can(self):\n        fpath = os.path.join(here, 'file', 'vault.txt')\n        vault = self._makeOne('password')\n        assert vault.load(open(fpath).read()) == 'test'\n\n    def test_cannot(self):\n        fpath = os.path.join(here, 'file', 'vault.txt')\n        vault = self._makeOne('invalid-password')\n        with ShouldRaise(AnsibleError('Decryption failed')):\n            vault.load(open(fpath).read())\n\n    def test_not_pwned(self):\n        fpath = os.path.join(here, 'file', 'pwned.txt')\n        vault = self._makeOne('password')\n        with ShouldRaise(ConstructorError):\n            vault.load(open(fpath).read())", "target": 0}, {"function": "class TestVaultDump(object):\n    def _getTargetClass(self):\n        from ansible_vault import Vault\n        return Vault\n\n    def _makeOne(self, password):\n        return self._getTargetClass()(password)\n\n    def test_dump_file(self):\n        fpath = mkstemp()[1]\n        with open(fpath, 'w+b') as fp:\n            write_vault = self._makeOne('password')\n            write_vault.dump('test', fp)\n\n        with open(fpath, 'r+b') as fp:\n            read_vault = self._makeOne('password')\n            assert read_vault.load(fp.read()) == 'test'\n\n        os.remove(fpath)\n\n    def test_dump_text(self):\n        write_vault = self._makeOne('password')\n        dumped = write_vault.dump('test')\n\n        read_vault = self._makeOne('password')\n        assert read_vault.load(dumped) == 'test'", "target": 0}]}, {"raw_url": "https://github.com/tomoh1r/ansible-vault/raw/3f8f659ef443ab870bb19f95d43543470168ae04/setup.cfg", "code": "[metadata]\ndescription-file = README.rst\n\n[aliases]\nsetup_test = develop easy_install ansible-vault[test]\nrelease = register clean --all sdist\n\n[tools:pytest]\nnorecursedirs = venv\ntestpaths = ansible_vault/test\n", "code_before": "[metadata]\ndescription-file = README.rst\n", "patch": "@@ -1,2 +1,10 @@\n [metadata]\n description-file = README.rst\n+\n+[aliases]\n+setup_test = develop easy_install ansible-vault[test]\n+release = register clean --all sdist\n+\n+[tools:pytest]\n+norecursedirs = venv\n+testpaths = ansible_vault/test", "file_path": "files/2017_9/594", "file_language": "cfg", "file_name": "setup.cfg", "outdated_file_modify": 1, "outdated_file_before": 0, "outdated_file_after": 1}, {"raw_url": "https://github.com/tomoh1r/ansible-vault/raw/3f8f659ef443ab870bb19f95d43543470168ae04/setup.py", "code": "import sys\nimport os\n\nfrom setuptools import setup, find_packages\nfrom setuptools.command.test import test as TestCommand\n\n\ndef _read(fname):\n    here = os.path.dirname(os.path.abspath(__file__))\n    return open(os.path.join(here, fname)).read()\n\n\nclass PyTest(TestCommand):\n    user_options = [('pytest-args=', 'a', \"Arguments to pass to py.test\")]\n\n    def initialize_options(self):\n        TestCommand.initialize_options(self)\n        self.pytest_args = []\n        if len(sys.argv) == 2:\n            self.pytest_args = ['ansible_vault']\n\n    def finalize_options(self):\n        TestCommand.finalize_options(self)\n        self.test_args = []\n        self.test_suite = True\n\n    def run_tests(self):\n        # import here, cause outside the eggs aren't loaded\n        import pytest\n        sys.exit(pytest.main(self.pytest_args))\n\n\nsetup(\n    name='ansible-vault',\n    version='1.0.5',\n    author='Tomohiro NAKAMURA',\n    author_email='quickness.net@gmail.com',\n    url='https://github.com/tomoh1r/ansible-vault',\n    description='R/W an ansible-vault yaml file',\n    long_description=_read('README.rst'),\n    packages=find_packages(),\n    install_requires=['ansible'],\n    cmdclass={'test': PyTest},\n    classifiers=[\n        'Development Status :: 5 - Production/Stable',\n        'License :: OSI Approved :: GNU General Public License v3 (GPLv3)',\n    ],\n    license='GPLv3',\n    extras_require = {\n        'test': ['pytest', 'testfixtures'],\n    }\n)\n", "code_before": "import sys\nimport os\n\nfrom setuptools import setup, find_packages\nfrom setuptools.command.test import test as TestCommand\n\n\ndef _read(fname):\n    here = os.path.dirname(os.path.abspath(__file__))\n    return open(os.path.join(here, fname)).read()\n\n\nclass PyTest(TestCommand):\n    user_options = [('pytest-args=', 'a', \"Arguments to pass to py.test\")]\n\n    def initialize_options(self):\n        TestCommand.initialize_options(self)\n        self.pytest_args = []\n        if len(sys.argv) == 2:\n            self.pytest_args = ['ansible_vault']\n\n    def finalize_options(self):\n        TestCommand.finalize_options(self)\n        self.test_args = []\n        self.test_suite = True\n\n    def run_tests(self):\n        # import here, cause outside the eggs aren't loaded\n        import pytest\n        sys.exit(pytest.main(self.pytest_args))\n\n\nsetup(\n    name='ansible-vault',\n    version='1.0.4',\n    author='Tomohiro NAKAMURA',\n    author_email='quickness.net@gmail.com',\n    url='https://github.com/jptomo/ansible-vault',\n    description='R/W an ansible-vault yaml file',\n    long_description=_read('README.rst'),\n    packages=find_packages(),\n    install_requires=['ansible'],\n    tests_require=['pytest', 'testfixtures'],\n    cmdclass={'test': PyTest},\n    classifiers=[\n        'Development Status :: 5 - Production/Stable',\n        'License :: OSI Approved :: GNU General Public License v3 (GPLv3)',\n    ],\n    license='GPLv3',\n)\n", "patch": "@@ -32,19 +32,21 @@ def run_tests(self):\n \n setup(\n     name='ansible-vault',\n-    version='1.0.4',\n+    version='1.0.5',\n     author='Tomohiro NAKAMURA',\n     author_email='quickness.net@gmail.com',\n-    url='https://github.com/jptomo/ansible-vault',\n+    url='https://github.com/tomoh1r/ansible-vault',\n     description='R/W an ansible-vault yaml file',\n     long_description=_read('README.rst'),\n     packages=find_packages(),\n     install_requires=['ansible'],\n-    tests_require=['pytest', 'testfixtures'],\n     cmdclass={'test': PyTest},\n     classifiers=[\n         'Development Status :: 5 - Production/Stable',\n         'License :: OSI Approved :: GNU General Public License v3 (GPLv3)',\n     ],\n     license='GPLv3',\n+    extras_require = {\n+        'test': ['pytest', 'testfixtures'],\n+    }\n )", "file_path": "files/2017_9/595", "file_language": "py", "file_name": "setup.py", "outdated_file_modify": 1, "outdated_file_before": 0, "outdated_file_after": 1, "llm_check": 0, "static_check": 0, "static": {"rats": [false, []], "semgrep": [false, []]}, "target": 0, "function_before": [{"function": "def _read(fname):\n    here = os.path.dirname(os.path.abspath(__file__))\n    return open(os.path.join(here, fname)).read()", "target": 0}, {"function": "class PyTest(TestCommand):\n    user_options = [('pytest-args=', 'a', \"Arguments to pass to py.test\")]\n\n    def initialize_options(self):\n        TestCommand.initialize_options(self)\n        self.pytest_args = []\n        if len(sys.argv) == 2:\n            self.pytest_args = ['ansible_vault']\n\n    def finalize_options(self):\n        TestCommand.finalize_options(self)\n        self.test_args = []\n        self.test_suite = True\n\n    def run_tests(self):\n        # import here, cause outside the eggs aren't loaded\n        import pytest\n        sys.exit(pytest.main(self.pytest_args))", "target": 0}], "function_after": [{"function": "def _read(fname):\n    here = os.path.dirname(os.path.abspath(__file__))\n    return open(os.path.join(here, fname)).read()", "target": 0}, {"function": "class PyTest(TestCommand):\n    user_options = [('pytest-args=', 'a', \"Arguments to pass to py.test\")]\n\n    def initialize_options(self):\n        TestCommand.initialize_options(self)\n        self.pytest_args = []\n        if len(sys.argv) == 2:\n            self.pytest_args = ['ansible_vault']\n\n    def finalize_options(self):\n        TestCommand.finalize_options(self)\n        self.test_args = []\n        self.test_suite = True\n\n    def run_tests(self):\n        # import here, cause outside the eggs aren't loaded\n        import pytest\n        sys.exit(pytest.main(self.pytest_args))", "target": 0}]}, {"raw_url": "https://github.com/tomoh1r/ansible-vault/raw/1ae50a312349656280fbe7d2acfbda9c1d560dd1/tox.ini", "code": "[tox]\nenvlist = py27, py27-ansible2\nsetupdir = .\n\n[testenv]\nbasepython = python2.7\n\n[testenv:py27]\ncommands = python2.7 setup.py test\n\n[testenv:py27-ansible2]\ncommands =\n    pip install -U git+https://github.com/ansible/ansible.git@stable-2.0#egg=ansible\n    python2.7 setup.py test\n", "code_before": "[tox]\nenvlist = py27, py27-ansible2\nsetupdir = .\n\n[testenv]\nbasepython = python2.7\n\n[testenv:py27]\ncommands = py27: python2.7 setup.py test\n\n[testenv:py27-ansible2]\ncommands =\n    pip install -U git+https://github.com/ansible/ansible.git@stable-2.0#egg=ansible\n    py27-ansible2: python2.7 setup.py test\n", "patch": "@@ -1,14 +0,0 @@\n-[tox]\n-envlist = py27, py27-ansible2\n-setupdir = .\n-\n-[testenv]\n-basepython = python2.7\n-\n-[testenv:py27]\n-commands = python2.7 setup.py test\n-\n-[testenv:py27-ansible2]\n-commands =\n-    pip install -U git+https://github.com/ansible/ansible.git@stable-2.0#egg=ansible\n-    python2.7 setup.py test", "file_path": "files/2017_9/596", "file_language": "ini", "file_name": "tox.ini", "outdated_file_modify": 1, "outdated_file_before": 1, "outdated_file_after": 0}], "outdated": 1, "cwe_descripiton": "", "cwe_consequence": "", "cwe_method": "", "cwe_solution": ""}
