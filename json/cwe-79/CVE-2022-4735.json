{"index": 9905, "cve_id": "CVE-2022-4735", "cwe_id": ["CWE-79"], "cve_language": "Python", "cve_description": "A vulnerability classified as problematic was found in asrashley dash-live. This vulnerability affects the function ready of the file static/js/media.js of the component DOM Node Handler. The manipulation leads to cross site scripting. The attack can be initiated remotely. The name of the patch is 24d01757a5319cc14c4aa1d8b53d1ab24d48e451. It is recommended to apply a patch to fix this issue. VDB-216766 is the identifier assigned to this vulnerability.", "cvss": "6.1", "publish_date": "December 25, 2022", "AV": "NETWORK", "AC": "NETWORK", "PR": "NONE", "UI": "REQUIRED", "S": "CHANGED", "C": "LOW", "I": "LOW", "A": "NONE", "commit_id": "24d01757a5319cc14c4aa1d8b53d1ab24d48e451", "commit_message": "escape strings before using them in HTML tags\n\nExtracting text from a DOM node and interpreting it as HTML can lead\nto a cross-site scripting vulnerability.", "commit_date": "2022-03-01T13:54:02Z", "project": "asrashley/dash-live", "url": "https://api.github.com/repos/asrashley/dash-live/commits/24d01757a5319cc14c4aa1d8b53d1ab24d48e451", "html_url": "https://github.com/asrashley/dash-live/commit/24d01757a5319cc14c4aa1d8b53d1ab24d48e451", "windows_before": [{"commit_id": "c6754609af167dd875b24ecd60764e316e1a4171", "commit_date": "Tue Mar 1 13:40:10 2022 +0000", "commit_message": "move i variable to top level of function to match scope", "files_name": ["static/js/media.js"]}, {"commit_id": "678b46f9f1369ccd4a8e0ba3393c5209e24bc9ed", "commit_date": "Tue Mar 1 11:44:48 2022 +0000", "commit_message": "Add automated codeql analysis", "files_name": [".github/workflows/codeql-analysis.yml"]}, {"commit_id": "d3a6d1cc687e59b1ecd527b195db88fac22fa044", "commit_date": "Tue Mar 1 11:38:28 2022 +0000", "commit_message": "Merge pull request #6 from asrashley/laurl_override", "files_name": ["4ba20a1f92b68a420b9aa646b09da5516883ee01 - Tue Mar 1 11:33:33 2022 +0000 : replace pycrypto with pycryptodome", "requirements.txt"]}, {"commit_id": "ff92f4607c306d6bbfa87f52bdd03bf11498bcb8", "commit_date": "Thu Nov 12 17:33:30 2020 +0000", "commit_message": "add CGI parameters to override LA_URL", "files_name": ["src/drm.py", "src/views.py", "templates/index.html", "tests/dash.py", "tests/drm_test.py", "tests/views_test.py"]}, {"commit_id": "320b7991c2e2587af2b4e8ab79eeec4679067eab", "commit_date": "Thu Nov 12 17:31:13 2020 +0000", "commit_message": "include frame rate in the ffmpeg encoding parameters", "files_name": ["media/create_media.py"]}, {"commit_id": "9a030b37d4d081a39fdccf3009c7c4f1b3c36e9e", "commit_date": "Thu Nov 12 17:30:27 2020 +0000", "commit_message": "round height to 4 pixel boundary", "files_name": ["media/create_media.py"]}, {"commit_id": "1ffbc57896e4e46855a42af6ef79a1865ebfce55", "commit_date": "Fri Nov 19 11:29:17 2021 +0000", "commit_message": "Merge pull request #5 from asrashley/dependabot/pip/jinja2-2.11.3", "files_name": ["e78b14069121834f7ec5b4203d704e53700e8a7e - Sat Mar 20 01:49:10 2021 +0000 : Bump jinja2 from 2.10.1 to 2.11.3", "requirements.txt"]}, {"commit_id": "6a8a0b0155a3d3e5780d18ec09f0bbd7b0e3d0a4", "commit_date": "Wed Dec 16 11:52:27 2020 +0000", "commit_message": "allow IV size to be specified in bits or bytes", "files_name": ["src/mp4.py"]}, {"commit_id": "ebb30cc297accc09d9a1bb4a499bc8d5ab94be32", "commit_date": "Wed Sep 2 15:40:49 2020 +0100", "commit_message": "BasicDashValidator: fixup checking a stream using a segment template", "files_name": ["tests/dash.py"]}, {"commit_id": "8abcc0167e25265a520904caa149c9ff8538e7d1", "commit_date": "Wed Sep 2 15:37:27 2020 +0100", "commit_message": "change main_audio CGI parameter to support a stream ID", "files_name": ["src/views.py", "templates/index.html"]}, {"commit_id": "15fa37eb0c003c6a4040c53623fd4cd8eff205bf", "commit_date": "Wed Sep 2 15:34:58 2020 +0100", "commit_message": "support PIFF UUID box type", "files_name": ["src/drm.py", "src/mp4.py"]}, {"commit_id": "1904c36638586c192a2db358df57c573a2b76b9c", "commit_date": "Fri Apr 17 16:00:01 2020 +0100", "commit_message": "added missing DRM template file", "files_name": ["templates/drm/template.xml"]}, {"commit_id": "19c67b1a96917a0c20e0511e328683581db05b57", "commit_date": "Tue Jan 21 08:38:28 2020 +0000", "commit_message": "Merge pull request #3 from asrashley/issue-2-video-page", "files_name": ["4cfa1f20f3ed9d5c2168cf3ce27426109f003207 - Mon Jan 20 17:26:59 2020 +0000 : move script to end of HTML page", "templates/video.html"]}, {"commit_id": "16e6c8e2cd1059ae84773ca9dd3f3e54aa66ed19", "commit_date": "Mon Jan 20 17:25:18 2020 +0000", "commit_message": "views: add LAURL to the DRM dictionary", "files_name": ["src/views.py"]}, {"commit_id": "644c3218c2edce28470da94abc9c9e885ad109c8", "commit_date": "Mon Jan 20 17:22:56 2020 +0000", "commit_message": "models: add pure keyword option to toJSON()", "files_name": ["src/models.py", "src/segment.py", "tests/views_test.py"]}, {"commit_id": "26c6b74e5a9227a13dbc3e7911753c54eee17495", "commit_date": "Mon Jan 20 17:53:32 2020 +0000", "commit_message": "fixup typos causing undefined name errors", "files_name": ["src/drm.py", "src/views.py", "tests/dash.py"]}, {"commit_id": "7d567900941281cc9d407dd259b621c29d9b722d", "commit_date": "Mon Jan 20 17:27:16 2020 +0000", "commit_message": "bump up mock version number", "files_name": ["requirements.txt"]}, {"commit_id": "f221975b2d6014a2e04436e3295b40bd6a3bb466", "commit_date": "Fri Dec 20 11:02:24 2019 +0000", "commit_message": "add kids to LA_URL template", "files_name": ["src/drm.py"]}, {"commit_id": "4b09eadf66733c7a28035c1c6d432b6a5d25a382", "commit_date": "Tue Dec 10 14:26:39 2019 +0000", "commit_message": "build styles before starting test server", "files_name": ["runserver.sh"]}, {"commit_id": "bc4ad1e47759c69caec745140731cd76c18b9315", "commit_date": "Tue Dec 10 14:24:08 2019 +0000", "commit_message": "fix manifest errors detected by the manifest test refactoring", "files_name": ["templates/drm/marlin.xml", "templates/drm/playready.xml", "templates/hand_made.mpd", "templates/manifest_a.mpd", "templates/manifest_e.mpd", "templates/manifest_ef.mpd", "templates/manifest_h.mpd", "templates/manifest_i.mpd", "templates/manifest_vod_aiv.mpd", "templates/vod_manifest_b.mpd"]}, {"commit_id": "5814428b1c0ed602a5409a0396530857fda82b3b", "commit_date": "Tue Dec 10 14:21:30 2019 +0000", "commit_message": "fix availabilityStartTime calculation near midnight", "files_name": ["src/views.py"]}, {"commit_id": "173ee4ecb6394ae6c81820ca3a058c6e3200f6ac", "commit_date": "Tue Dec 10 14:19:45 2019 +0000", "commit_message": "dont create SegmentTemplate element inside generateSegmentTimeline", "files_name": ["src/views.py"]}, {"commit_id": "e1a301aef48d5d98a61e6a048b5190d004e77970", "commit_date": "Tue Dec 10 14:16:51 2019 +0000", "commit_message": "refactor dash validation into its own file part 2", "files_name": ["requirements.txt", "runtests.py", "tests/dash.py", "tests/fixtures/bbb_a2.mp4", "tests/mixins.py", "tests/views_test.py"]}, {"commit_id": "7e411e0ce95999e3240236d27b51473b58f61af7", "commit_date": "Tue Dec 10 14:06:50 2019 +0000", "commit_message": "add support for sidx box", "files_name": ["src/mp4.py"]}, {"commit_id": "63e4b8d0861d8608706eb0849477e4261e03eb1d", "commit_date": "Tue Dec 10 14:04:10 2019 +0000", "commit_message": "move mode setting into the path rather than as a CGI parameter", "files_name": ["src/manifests.py", "src/routes.py", "src/views.py", "static/js/main.js", "templates/index.html"]}, {"commit_id": "2668bee35d8b31a482f44e73ed309798793bbaf4", "commit_date": "Tue Dec 10 13:55:30 2019 +0000", "commit_message": "add JSON output format to mp4 parser", "files_name": ["src/mp4.py", "src/utils.py", "tests/mp4_test.py"]}, {"commit_id": "d5f765b84cdcb964ab4daf506ae6726ad972f974", "commit_date": "Wed Nov 20 16:21:16 2019 +0000", "commit_message": "fix incorrect MPD@mediaPresentationDuration for VOD streams", "files_name": ["src/views.py", "templates/manifest_ef.mpd", "tests/views_test.py"]}, {"commit_id": "efb058037b500bb741efdfd46089a0e001b85509", "commit_date": "Wed Nov 20 14:29:24 2019 +0000", "commit_message": "refactor dash validation into its own file", "files_name": ["src/segment.py", "src/utils.py", "tests/dash.py", "tests/mixins.py", "tests/views_test.py"]}, {"commit_id": "82e569c935c1104528bd705217b3ef1d5e9fa506", "commit_date": "Fri Nov 1 11:12:56 2019 +0000", "commit_message": "work around limitation of lesscpy", "files_name": ["static/css/video.less"]}, {"commit_id": "1c8c9d9d13961592da63b3c86ba78b45505c737b", "commit_date": "Wed Oct 30 12:11:31 2019 +0000", "commit_message": "Merge pull request #1 from asrashley/populate-db", "files_name": ["cf0c4a742d7e494914e93dc18e91687799d1016a - Wed Oct 30 12:04:59 2019 +0000 : ignore generated CSS files", ".gitignore"]}, {"commit_id": "d6fb3b3135f59259ac3ba1f6acb78f608619bc1d", "commit_date": "Wed Oct 30 12:04:24 2019 +0000", "commit_message": "fix library requirements for populate-db", "files_name": ["populate-db.py", "requirements.txt"]}, {"commit_id": "4dbf44042b2e3d068e3a3a67fdb36a9cacd6f5c9", "commit_date": "Wed Oct 30 11:25:32 2019 +0000", "commit_message": "use a Python based less CSS compiler", "files_name": ["README.md", "requirements.txt", "sdk-dockerfile", "static/css/Makefile"]}, {"commit_id": "9750e8def9462a0d4367f20d62c02c80869e39ec", "commit_date": "Tue Oct 29 15:11:38 2019 +0000", "commit_message": "remove use of peek to parse MP4 box and descriptor headers", "files_name": ["src/mp4.py"]}, {"commit_id": "08cc38fd51ca8679bacda055f5817f01325a28b3", "commit_date": "Mon Oct 28 13:37:34 2019 +0000", "commit_message": "allow multiple JSON files to be provided", "files_name": ["README.md", "populate-db.py"]}, {"commit_id": "22f93a10c87942540aed6c3019ff6bc830fec4e3", "commit_date": "Fri Oct 25 16:29:01 2019 +0100", "commit_message": "store Marlin and PlayReady license URLs in the streams table", "files_name": ["README.md", "populate-db.py", "src/drm.py", "src/models.py", "src/utils.py", "src/views.py", "static/css/main.less", "static/js/media.js", "templates/media.html", "tests/views_test.py"]}, {"commit_id": "9875bc4a137e3187d15426804efcc93a04926307", "commit_date": "Thu Oct 24 18:28:31 2019 +0100", "commit_message": "fix display of senc box", "files_name": ["src/mp4.py"]}, {"commit_id": "5efe810cae74cd437b3cbe7b567ebab1fe4560fa", "commit_date": "Thu Oct 24 18:21:55 2019 +0100", "commit_message": "add command line option to provide IV size", "files_name": ["src/mp4.py"]}, {"commit_id": "240d5ad3810110ae460a27b63b8c3de7d7b793a1", "commit_date": "Thu Oct 24 18:17:06 2019 +0100", "commit_message": "add method to auto-populate development server", "files_name": ["README.md", "media/create_media.py", "populate-db.py", "src/models.py", "src/views.py", "static/js/media.js", "tests/views_test.py"]}, {"commit_id": "60da6d57c6a416204e045fee72a3abec3a4d23e5", "commit_date": "Tue Oct 1 18:18:25 2019 +0100", "commit_message": "update to current gcloud requirements", "files_name": ["app.yaml"]}, {"commit_id": "a83436d741e667004890c93f50b82e0a7b3c1005", "commit_date": "Tue Oct 1 18:17:35 2019 +0100", "commit_message": "rename prod shaka player to form that import_script expects", "files_name": ["static/js/prod/shaka-player.2.5.4.min.js"]}, {"commit_id": "5b897713a21acffddf625f2aa0d9a3e7a79c4453", "commit_date": "Thu Sep 26 12:27:40 2019 +0100", "commit_message": "remove hard-coded initialization URL", "files_name": ["templates/manifest_i.mpd"]}, {"commit_id": "4544b758e37cb7c08ff407f18fee0f72e093d79e", "commit_date": "Thu Sep 26 12:14:35 2019 +0100", "commit_message": "set correct duration for VOD streams", "files_name": ["src/views.py", "tests/views_test.py"]}, {"commit_id": "22b259b55ab5cbbc8b30661c87811b35ed84ecf2", "commit_date": "Thu Sep 26 10:40:43 2019 +0100", "commit_message": "select reference representation from the current stream", "files_name": ["src/routes.py", "src/views.py", "templates/hand_made.mpd", "templates/index.html", "tests/views_test.py"]}, {"commit_id": "abb4f7655e01fe7d034dd1502fff7e8acdb85016", "commit_date": "Wed Sep 25 17:53:04 2019 +0100", "commit_message": "add test for media segments of a live stream", "files_name": ["tests/views_test.py"]}], "windows_after": [{"commit_id": "c6754609af167dd875b24ecd60764e316e1a4171", "commit_date": "Tue Mar 1 13:40:10 2022 +0000", "commit_message": "move i variable to top level of function to match scope", "files_name": ["static/js/media.js"]}, {"commit_id": "f526338366c5a450732ee52c6b8b0a2196da5d2f", "commit_date": "Tue Mar 1 14:03:46 2022 +0000", "commit_message": "Merge pull request #7 from asrashley/codeql-analysis", "files_name": ["0ddc340931a18dee57e886a6ea8a0aac04439636 - Tue Mar 1 16:03:56 2022 +0000 : refactor drm.py into separate files", "sdk-dockerfile", "src/drm/__init__.py", "src/drm/__main__.py", "src/drm/clearkey.py", "src/drm/keymaterial.py", "src/drm/playready.py", "src/models.py", "src/views.py", "tests/dash.py", "tests/drm_test.py", "tests/views_test.py"]}, {"commit_id": "10fd56b0175b5ea66bcdc982aca2271f8fbe2050", "commit_date": "Thu Mar 3 10:55:30 2022 +0000", "commit_message": "add playready_version parameter and v1 PlayReady UUID", "files_name": ["src/drm/base.py", "src/drm/clearkey.py", "src/drm/marlin.py", "src/drm/playready.py", "src/models.py", "src/mp4.py", "src/utils.py", "src/views.py", "templates/drm/clearkey.xml", "templates/drm/playready.xml", "templates/drm/wrmheader43.xml", "templates/index.html", "tests/dash.py", "tests/drm_test.py", "tests/mixins.py", "tests/views_test.py"]}, {"commit_id": "b573c1f6d4fdf3f32e905fae592617754975c87d", "commit_date": "Mon Mar 7 09:37:33 2022 +0000", "commit_message": "Merge pull request #8 from asrashley/playready-v10", "files_name": ["39503c40e8ee970c4e24535197c991449f731918 - Mon Jan 20 17:35:05 2020 +0000 : Create github workflow to test each branch", ".github/workflows/pythonapp.yml", "README.md"]}, {"commit_id": "0b523b6f11041daabca33a8d63341f812cb90c73", "commit_date": "Wed Jun 22 22:38:12 2022 +0100", "commit_message": "fix lint errors", "files_name": ["src/drm/__main__.py", "src/drm/base.py", "src/drm/clearkey.py", "src/drm/keymaterial.py", "src/drm/marlin.py", "src/drm/playready.py", "src/manifests.py", "src/models.py", "src/mp4.py", "src/nal.py", "src/routes.py", "src/segment.py", "src/utils.py", "src/views.py", "tests/dash.py", "tests/drm_test.py", "tests/mixins.py", "tests/mp4_test.py", "tests/segment_test.py", "tests/utils_test.py", "tests/views_test.py"]}, {"commit_id": "567ec306e87d7fe35ba01ff31fe66d7b72de0cc7", "commit_date": "Thu Jun 23 07:57:17 2022 +0100", "commit_message": "Merge pull request #4 from asrashley/github-workflow", "files_name": ["cb41107d2292bf9f3eac23bdba0a5c868e3f5d76 - Mon Jun 20 11:19:41 2022 +0100 : add support for parsing and creating DASH event boxes", "src/mp4.py", "tests/fixtures/emsg.mp4", "tests/mp4_test.py"]}, {"commit_id": "34c45cbc18cdf6c530be3ff50104f8cc3960af58", "commit_date": "Wed Jun 22 18:46:51 2022 +0100", "commit_message": "allow CORS domains to be configured from settings.py", "files_name": ["README.md", "gen-settings.py", "src/views.py"]}, {"commit_id": "99a821f408f6e7c3b077229702e9b7f792fb8cbe", "commit_date": "Thu Jun 23 20:25:47 2022 +0100", "commit_message": "Merge pull request #9 from asrashley/emsg_box_support", "files_name": ["87f8fa13e0ea7d6f1de571da073cab850082d871 - Thu Jun 23 20:37:52 2022 +0100 : Merge pull request #10 from asrashley/cors-header", "5eeca92790cfddd29d80da7b72a9682a5ec74d19 - Thu Aug 18 15:04:26 2022 +0100 : fix aux_info_type parsing in SampleAuxiliaryInformationSizesBox", "src/mp4.py"]}, {"commit_id": "2a8bbbe14de64ab007ced76f8575f53b5e6238f5", "commit_date": "Fri Aug 19 16:31:41 2022 +0100", "commit_message": "add tests for generating emsg boxes from constructor", "files_name": ["tests/mp4_test.py"]}, {"commit_id": "ca79804893da781918152784335a8ad4934603f6", "commit_date": "Tue Aug 23 16:53:15 2022 +0100", "commit_message": "add inband and inline DASH event support to views", "files_name": ["src/events.py", "src/mp4.py", "src/options.py", "src/views.py", "templates/events/adaptationset.xml", "templates/events/event_stream.xml", "templates/events/inband_event_stream.xml", "templates/events/period.xml", "templates/events/representation.xml", "templates/hand_made.mpd", "tests/dash.py", "tests/mp4_test.py", "tests/views_test.py"]}, {"commit_id": "8934174cebd769e157b1174585dc39ebe99a8fd0", "commit_date": "Wed Aug 24 14:31:02 2022 +0100", "commit_message": "add another manifest example - manifest_n.mpd", "files_name": ["README.md", "src/manifests.py", "templates/manifest_n.mpd"]}, {"commit_id": "ded1aeeee398355be63bbbfba928611f32a13351", "commit_date": "Tue Aug 30 18:00:12 2022 +0100", "commit_message": "add support for xsd:dateTime that includes days, months and years", "files_name": ["src/utils.py", "tests/utils_test.py"]}, {"commit_id": "6ff4979811ba2edf35ae5a3c831406d8918ab208", "commit_date": "Thu Sep 1 13:40:11 2022 +0100", "commit_message": "remove API tests from views_test", "files_name": ["src/bitio.py", "src/events.py", "src/mp4.py", "src/mpeg.py", "src/objects.py", "src/views.py", "tests/api_test.py", "tests/dash.py", "tests/gae_base.py", "tests/mixins.py", "tests/mp4_test.py", "tests/views_test.py"]}, {"commit_id": "f3c5a82dba3b288a0a55f076adb32564c2164226", "commit_date": "Thu Sep 1 13:46:06 2022 +0100", "commit_message": "add support for scte35 events", "files_name": ["requirements.txt", "src/events.py", "src/options.py", "src/scte35/__init__.py", "src/scte35/binarysignal.py", "src/scte35/break_duration.py", "src/scte35/descriptors.py", "src/scte35/splice_insert.py", "src/scte35/splice_schedule.py", "src/scte35/splice_time.py", "templates/events/event_stream.xml", "tests/dash.py", "tests/scte35_test.py", "tests/views_test.py"]}, {"commit_id": "f371a7552c6a909bd6c71f39cee0c2dc08f6cb4a", "commit_date": "Fri Sep 2 15:14:50 2022 +0100", "commit_message": "only test options used by a manifest in exhaustive tests", "files_name": ["src/events.py", "src/manifests.py", "src/options.py", "src/scte35/__init__.py", "src/scte35/binarysignal.py", "src/scte35/descriptors.py", "src/scte35/splice_insert.py", "src/views.py", "templates/events/scte35_xml_bin_event.xml", "templates/index.html", "tests/dash.py", "tests/events_test.py", "tests/gae_base.py", "tests/hand_made_manifest_test.py", "tests/html_test.py", "tests/manifest_a_test.py", "tests/manifest_aiv_test.py", "tests/manifest_b_test.py", "tests/manifest_e_test.py", "tests/manifest_ef_test.py", "tests/manifest_h_test.py", "tests/manifest_i_test.py", "tests/manifest_n_test.py", "tests/mixins/__init__.py", "tests/mixins/check_manifest.py", "tests/mixins/testcase.py", "tests/mp4_test.py", "tests/scte35_test.py", "tests/views_test.py"]}, {"commit_id": "a6b6fe71b32b95fbc8edf3c55cf9da4d038f6629", "commit_date": "Mon Sep 5 11:20:35 2022 +0100", "commit_message": "split views.py in to multiple separate files", "files_name": ["src/manifests.py", "src/options.py", "src/requesthandler/__init__.py", "src/requesthandler/base.py", "src/requesthandler/clearkey.py", "src/requesthandler/exceptions.py", "src/requesthandler/htmlpage.py", "src/requesthandler/keypairs.py", "src/requesthandler/manifest_requests.py", "src/requesthandler/media_management.py", "src/requesthandler/media_requests.py", "src/requesthandler/streams.py", "src/requesthandler/templates.py", "src/requesthandler/utctime.py", "src/routes.py", "src/views.py", "tests/gae_base.py", "tests/html_test.py"]}, {"commit_id": "4e913ec34557a9574f2b69793840159a1211d834", "commit_date": "Mon Sep 5 12:05:46 2022 +0100", "commit_message": "provide a pure python fallback for CRC32 calculation", "files_name": ["src/mpeg.py", "src/purecrc.py", "tests/crc32_test.py", "tests/scte35_test.py"]}, {"commit_id": "6310ed2cd562bbc0ba403f9ce95e75b644735448", "commit_date": "Mon Sep 5 18:00:15 2022 +0100", "commit_message": "start adding support for multi-period DASH streams", "files_name": ["src/manifests.py", "src/options.py", "src/requesthandler/base.py"]}], "parents": [{"commit_id_before": "678b46f9f1369ccd4a8e0ba3393c5209e24bc9ed", "url_before": "https://api.github.com/repos/asrashley/dash-live/commits/678b46f9f1369ccd4a8e0ba3393c5209e24bc9ed", "html_url_before": "https://github.com/asrashley/dash-live/commit/678b46f9f1369ccd4a8e0ba3393c5209e24bc9ed"}], "details": [{"raw_url": "https://github.com/asrashley/dash-live/raw/24d01757a5319cc14c4aa1d8b53d1ab24d48e451/static%2Fjs%2Fmedia.js", "code": "$(document).ready(function(){\n    'use strict';\n    function addKey(ev) {\n        var kid, key, csrf;\n        var $row = $(ev.target).parents('tr');\n        kid = $row.find('input[name=\"kid\"]').val();\n        key = $row.find('input[name=\"key\"]').val();\n        csrf = $('#keys').data('csrf');\n        console.log('add key', kid, key, csrf);\n        $row.find('.btn').attr(\"disabled\", true);\n        $('#keys .error').text('');\n        $.ajax({\n            url: '/key',\n            method: 'PUT',\n            data: {\n                \"kid\":kid,\n                \"key\": key,\n                \"csrf_token\": csrf\n            },\n            dataType: 'json',\n        }).done(function(result) {\n            var newRow;\n            if(result.error) {\n                $('#keys .error').text(result.error);\n                return;\n            }\n            newRow = $('#keys .placeholder').clone();\n            newRow.removeClass('placeholder');\n            newRow.find('.kid').text(result.kid);\n            newRow.find('.key').text(result.key);\n            if (result.computed===true) {\n                newRow.find('.computed').html('<span class=\"bool-yes\">&check;</span>');\n            } else {\n                newRow.find('.computed').html('<span class=\"bool-no\">&cross;</span>');\n            }\n            $('#keys tbody').append(newRow);\n            newRow.find('.add-key').click(addKey);\n            newRow.find('.delete-key').click(deleteKey);\n            newRow.find('.btn-index').click(indexFile);\n            $row.find('input[name=\"kid\"]').val('');\n            $row.find('input[name=\"key\"]').val('');\n            if (result.csrf) {\n                $('#keys').data('csrf', result.csrf);\n            }\n        }).always(function() {\n            $row.find('.btn').removeAttr(\"disabled\");\n        });\n    }\n    \n    function deleteKey(ev) {\n        var kid, key, csrf;\n        var $row = $(ev.target).parents('tr');\n        kid = $row.find('.kid').text();\n        csrf = $('#keys').data('csrf');\n        console.log('delete key',kid, csrf);\n        if (!kid) {\n            return;\n        }\n        $('#keys .error').text('');\n        $.ajax({\n            url: '/key/'+kid+\"?csrf_token=\"+csrf,\n            method: 'DELETE',\n            dataType: 'json',\n        }).done(function(result) {\n            if(result.error) {\n                $('#keys .error').text(result.error);\n            } else {\n                $row.remove();\n            }\n            if (result.csrf) {\n                $('#keys').data('csrf', result.csrf);\n            }\n        }).fail(function(jqXhr, status) {\n            $('#keys .error').text(status);\n        });\n    }\n\n    function addStream(ev) {\n        var data;\n        var $row = $(ev.target).parents('tr');\n        data = {\n            'title': $row.find('input[name=\"title\"]').val(),\n            'prefix': $row.find('input[name=\"prefix\"]').val(),\n            'marlin_la_url': $row.find('input[name=\"marlin_la_url\"]').val(),\n            'playready_la_url': $row.find('input[name=\"playready_la_url\"]').val(),\n            'csrf_token': $('#streams').data('csrf')\n        };\n        $row.find('.btn').attr(\"disabled\", true);\n        $('#streams .error').text('');\n        $.ajax({\n            url: '/stream',\n            method: 'PUT',\n            data: data,\n            dataType: 'json'\n        }).done(function(result) {\n            var newRow;\n            if(result.error) {\n                $('#streams .error').text(result.error);\n                return;\n            }\n            newRow = $('#streams .placeholder').clone();\n            newRow.removeClass('placeholder');\n            newRow.find('.title').text(result.title);\n            newRow.find('.prefix').text(result.prefix);\n            newRow.find('.marlin_la_url').text(result.marlin_la_url);\n            newRow.find('.playready_la_url').text(result.playready_la_url);\n            newRow.find('.delete-stream').data(\"id\", result.id);\n            $('#streams tbody').append(newRow);\n            newRow.find('.delete-stream').click(deleteStream);\n            $row.find('input[name=\"title\"]').val('');\n            $row.find('input[name=\"prefix\"]').val('');\n            if (result.csrf) {\n                $('#streams').data('csrf', result.csrf);\n            }\n        }).always(function() {\n            $row.find('.btn').removeAttr(\"disabled\");\n        });\n    }\n    \n    function deleteStream(ev) {\n        var id, csrf;\n        var $row = $(ev.target).parents('tr');\n        id = $(ev.target).data(\"id\");\n        csrf = $('#streams').data('csrf');\n        console.log('delete stream',id,csrf);\n        if (!id) {\n            return;\n        }\n        $('#streams .error').text('');\n        $.ajax({\n            url: '/stream/'+id+'?csrf_token='+csrf,\n            method: 'DELETE',\n            dataType: 'json',\n        }).done(function(result) {\n            if(result.error) {\n                $('#streams .error').text(result.error);\n            } else {\n                $row.remove();\n            }\n            if (result.csrf) {\n                $('#streams').data('csrf', result.csrf);\n            }\n        }).fail(function(jqXhr, status) {\n            $('#streams .error').text(status);\n        });\n    }\n\n    function indexFile(ev) {\n        var dialog, blobId, filename, csrf;\n        var $row = $(ev.target).parents('tr');\n        var $btn = $(ev.target);\n        blobId = $btn.data('key');\n        filename = $row.find('.filename').text()\n        if (!blobId) {\n            return;\n        }\n        csrf = $('#media-files').data('csrf');\n        console.log('index blob',blobId, csrf);\n        dialog = $('#dialog-box')\n        dialog.find(\".modal-body\").html('<p>Indexing ' + encodeURIComponent(filename) +\n                                        '</p><div class=\"error\"></div>');\n        showDialog();\n        $.ajax({\n            url: '/media/'+blobId+'?index=1&csrf_token='+csrf,\n            method: 'GET',\n            dataType: 'json',\n        }).done(function(result) {\n            if(result.error) {\n              var i;\n              dialog.find('.modal-body .error').text(result.error);\n            } else {\n                dialog.find(\".modal-body\").html('<p>Indexing ' +\n                                                encodeURIComponent(filename) +\n                                                ' complete</p>');\n                if (result.representation) {\n                    $row.find('td.codec').text(result.representation.codecs);\n                    if(result.representation.encrypted) {\n                        $row.find('td.encrypted').html('<span class=\"bool-yes \">&check;</span>');\n                        $row.find('td.kid').html(\"\");\n                        for(i=0; i < result.representation.kids.length; ++i) {\n                            $row.find('td.kid').append(\n                                '<p>' +\n                                encodeURIComponent(result.representation.kids[i]) +\n                                '</p>');\n                        }\n                    } else {\n                        $row.find('td.encrypted').html('<span class=\"bool-no \">&cross;</span>');\n                    }\n                    $row.find('.btn-index').addClass('btn-info').removeClass('btn-warning').text('Re-index');\n                    window.setTimeout(closeDialog, 500);\n                }\n            }\n            if (result.csrf) {\n                $('#media-files').data('csrf', result.csrf);\n            }\n        }).fail(function(e) {\n            var err = dialog.find('.modal-body .error');\n            if (e.statusText) {\n                err.text(e.status + ' ' + e.statusText);\n            } else if (e.responseText) {\n                err.text(e.responseText);\n            } else {\n                err.text(JSON.stringify(e));\n            }\n        });\n    }\n\n    function deleteFile(ev) {\n        var blobId, csrf;\n        var $row = $(ev.target).parents('tr');\n        var $btn = $(ev.target);\n        blobId = $btn.data('key');\n        csrf = $('#media-files').data('csrf');\n        if (!blobId) {\n            return;\n        }\n        console.log('delete blob',blobId);\n        $('#media .error').text('');\n        $.ajax({\n            url: '/media/'+blobId+'?csrf_token='+csrf,\n            method: 'DELETE',\n            dataType: 'json',\n        }).done(function(result) {\n            if(result.error) {\n                $('#media .error').text(result.error);\n            } else {\n                $row.remove();\n            }\n            if (result.csrf) {\n                $('#media-files').data('csrf', result.csrf);\n            }\n        }).fail(function(jqXhr, status) {\n            $('#media .error').text(status);\n        });\n    }\n    function uploadFile(ev) {\n        var form, data, dialog, filename;\n        ev.preventDefault();\n        form = $(\"#upload-form\");\n        filename = form.find('input[name=\"file\"]').val();\n        console.log(\"Filename: \"+filename);\n        if (filename === \"\") {\n            alert(\"No file selected\");\n            return;\n        }\n        form.find('input[name=\"ajax\"]').val(\"1\");\n        data = new FormData(form[0]);\n        $(\"#upload-form .submit\").prop(\"disabled\", true);\n        dialog = $('#dialog-box')\n        dialog.find(\".modal-body\").html('<p>Uploading ' +\n                                        encodeURIComponent(filename) +\n                                        '</p><div class=\"error\"></div>');\n        showDialog();\n        $.ajax({\n            url: form.attr(\"action\"),\n            data: data,\n            type: \"POST\",\n            enctype: 'multipart/form-data',\n            processData: false,\n            contentType: false,\n            timeout: 600000,\n            cache: false\n        }).done(function (data) {\n            var err, htm;\n\n            $(\"#btnSubmit\").prop(\"disabled\", false);\n            if(data.error) {\n                err = dialog.find('.modal-body .error');\n                err.text(data.error);\n                return;\n            }\n            dialog.find(\".modal-body\").html('<p>Finished uploading ' +\n                                            encodeURIComponent(filename) +\n                                            '<span class=\"bool-yes \">&check;</span>');\n            if(data.upload_url) {\n                $('#upload-form').attr('action', data.upload_url);\n            }\n            if(data.csrf_token) {\n                $('#upload-form input[name=\"csrf_token\"]').val(data.csrf);\n            }\n            if(data.file_html){\n                $('#'+data.name).remove();\n                htm = $(data.file_html);\n                htm.insertBefore('#media-files .error-row');\n                htm.find('.delete-file').click(deleteFile);\n                htm.find('.btn-index').click(indexFile);\n                window.setTimeout(closeDialog, 500);\n            }\n        }).fail(function (e) {\n            var err = dialog.find('.modal-body .error');\n            if (e.responseJSON) {\n                err.text(e.responseJSON.error);\n            }\n            else if (e.statusText) {\n                err.text(e.status + ' ' + e.statusText);\n            } else if (e.responseText) {\n                err.text(e.responseText);\n            } else {\n                err.text(JSON.stringify(e));\n            }\n            console.error(e);\n        }).always(function() {\n            $(\"#upload-form .submit\").prop(\"disabled\", false);\n        });\n        return false;\n    }\n     \n    function showDialog() {\n        var dialog = $('#dialog-box');\n        dialog.addClass(\"dialog-active show\");\n        dialog.css({display: \"block\"});\n        $('.modal-backdrop').addClass('show');\n        $('.modal-backdrop').removeClass('hidden');\n        $('body').addClass('modal-open');\n    }\n\n    function closeDialog() {\n        var dialog = $('#dialog-box')\n        dialog.removeClass(\"dialog-active\").removeClass(\"show\");\n        dialog.css(\"display\", \"\");\n        $(document.body).removeClass(\"modal-open\");\n        $('.modal-backdrop').addClass('hidden');\n        $('.modal-backdrop').removeClass(\"show\");\n    }\n\n    $('#keys .add-key').click(addKey); \n    $('#keys .delete-key').click(deleteKey);\n    $('#streams .add-stream').click(addStream);\n    $('#streams .delete-stream').click(deleteStream);\n    $('#media-files .delete-file').click(deleteFile);\n    $('#media-files .btn-index').click(indexFile);\n    $(\"#upload-form .submit\").click(uploadFile);\n    $('#dialog-box .btn-close').click(closeDialog);\n});\n", "code_before": "$(document).ready(function(){\n    'use strict';\n    function addKey(ev) {\n        var kid, key, csrf;\n        var $row = $(ev.target).parents('tr');\n        kid = $row.find('input[name=\"kid\"]').val();\n        key = $row.find('input[name=\"key\"]').val();\n        csrf = $('#keys').data('csrf');\n        console.log('add key', kid, key, csrf);\n        $row.find('.btn').attr(\"disabled\", true);\n        $('#keys .error').text('');\n        $.ajax({\n            url: '/key',\n            method: 'PUT',\n            data: {\n                \"kid\":kid,\n                \"key\": key,\n                \"csrf_token\": csrf\n            },\n            dataType: 'json',\n        }).done(function(result) {\n            var newRow;\n            if(result.error) {\n                $('#keys .error').text(result.error);\n                return;\n            }\n            newRow = $('#keys .placeholder').clone();\n            newRow.removeClass('placeholder');\n            newRow.find('.kid').text(result.kid);\n            newRow.find('.key').text(result.key);\n            if (result.computed===true) {\n                newRow.find('.computed').html('<span class=\"bool-yes\">&check;</span>');\n            } else {\n                newRow.find('.computed').html('<span class=\"bool-no\">&cross;</span>');\n            }\n            $('#keys tbody').append(newRow);\n            newRow.find('.add-key').click(addKey);\n            newRow.find('.delete-key').click(deleteKey);\n            newRow.find('.btn-index').click(indexFile);\n            $row.find('input[name=\"kid\"]').val('');\n            $row.find('input[name=\"key\"]').val('');\n            if (result.csrf) {\n                $('#keys').data('csrf', result.csrf);\n            }\n        }).always(function() {\n            $row.find('.btn').removeAttr(\"disabled\");\n        });\n    }\n    \n    function deleteKey(ev) {\n        var kid, key, csrf;\n        var $row = $(ev.target).parents('tr');\n        kid = $row.find('.kid').text();\n        csrf = $('#keys').data('csrf');\n        console.log('delete key',kid, csrf);\n        if (!kid) {\n            return;\n        }\n        $('#keys .error').text('');\n        $.ajax({\n            url: '/key/'+kid+\"?csrf_token=\"+csrf,\n            method: 'DELETE',\n            dataType: 'json',\n        }).done(function(result) {\n            if(result.error) {\n                $('#keys .error').text(result.error);\n            } else {\n                $row.remove();\n            }\n            if (result.csrf) {\n                $('#keys').data('csrf', result.csrf);\n            }\n        }).fail(function(jqXhr, status) {\n            $('#keys .error').text(status);\n        });\n    }\n\n    function addStream(ev) {\n        var data;\n        var $row = $(ev.target).parents('tr');\n        data = {\n            'title': $row.find('input[name=\"title\"]').val(),\n            'prefix': $row.find('input[name=\"prefix\"]').val(),\n            'marlin_la_url': $row.find('input[name=\"marlin_la_url\"]').val(),\n            'playready_la_url': $row.find('input[name=\"playready_la_url\"]').val(),\n            'csrf_token': $('#streams').data('csrf')\n        };\n        $row.find('.btn').attr(\"disabled\", true);\n        $('#streams .error').text('');\n        $.ajax({\n            url: '/stream',\n            method: 'PUT',\n            data: data,\n            dataType: 'json'\n        }).done(function(result) {\n            var newRow;\n            if(result.error) {\n                $('#streams .error').text(result.error);\n                return;\n            }\n            newRow = $('#streams .placeholder').clone();\n            newRow.removeClass('placeholder');\n            newRow.find('.title').text(result.title);\n            newRow.find('.prefix').text(result.prefix);\n            newRow.find('.marlin_la_url').text(result.marlin_la_url);\n            newRow.find('.playready_la_url').text(result.playready_la_url);\n            newRow.find('.delete-stream').data(\"id\", result.id);\n            $('#streams tbody').append(newRow);\n            newRow.find('.delete-stream').click(deleteStream);\n            $row.find('input[name=\"title\"]').val('');\n            $row.find('input[name=\"prefix\"]').val('');\n            if (result.csrf) {\n                $('#streams').data('csrf', result.csrf);\n            }\n        }).always(function() {\n            $row.find('.btn').removeAttr(\"disabled\");\n        });\n    }\n    \n    function deleteStream(ev) {\n        var id, csrf;\n        var $row = $(ev.target).parents('tr');\n        id = $(ev.target).data(\"id\");\n        csrf = $('#streams').data('csrf');\n        console.log('delete stream',id,csrf);\n        if (!id) {\n            return;\n        }\n        $('#streams .error').text('');\n        $.ajax({\n            url: '/stream/'+id+'?csrf_token='+csrf,\n            method: 'DELETE',\n            dataType: 'json',\n        }).done(function(result) {\n            if(result.error) {\n                $('#streams .error').text(result.error);\n            } else {\n                $row.remove();\n            }\n            if (result.csrf) {\n                $('#streams').data('csrf', result.csrf);\n            }\n        }).fail(function(jqXhr, status) {\n            $('#streams .error').text(status);\n        });\n    }\n\n    function indexFile(ev) {\n        var dialog, blobId, filename, csrf;\n        var $row = $(ev.target).parents('tr');\n        var $btn = $(ev.target);\n        blobId = $btn.data('key');\n        filename = $row.find('.filename').text()\n        if (!blobId) {\n            return;\n        }\n        csrf = $('#media-files').data('csrf');\n        console.log('index blob',blobId, csrf);\n        dialog = $('#dialog-box')\n        dialog.find(\".modal-body\").html('<p>Indexing ' + filename + '</p><div class=\"error\"></div>');\n        showDialog();\n        $.ajax({\n            url: '/media/'+blobId+'?index=1&csrf_token='+csrf,\n            method: 'GET',\n            dataType: 'json',\n        }).done(function(result) {\n            if(result.error) {\n              var i;\n              dialog.find('.modal-body .error').text(result.error);\n            } else {\n                dialog.find(\".modal-body\").html('<p>Indexing ' + filename + ' complete</p>');\n                if (result.representation) {\n                    $row.find('td.codec').text(result.representation.codecs);\n                    if(result.representation.encrypted) {\n                        $row.find('td.encrypted').html('<span class=\"bool-yes \">&check;</span>');\n                        $row.find('td.kid').html(\"\");\n                        for(i=0; i < result.representation.kids.length; ++i) {\n                          $row.find('td.kid').append('<p>'+result.representation.kids[i]+'</p>');\n                        }\n                    } else {\n                        $row.find('td.encrypted').html('<span class=\"bool-no \">&cross;</span>');\n                    }\n                    $row.find('.btn-index').addClass('btn-info').removeClass('btn-warning').text('Re-index');\n                    window.setTimeout(closeDialog, 500);\n                }\n            }\n            if (result.csrf) {\n                $('#media-files').data('csrf', result.csrf);\n            }\n        }).fail(function(e) {\n            var err = dialog.find('.modal-body .error');\n            if (e.statusText) {\n                err.text(e.status + ' ' + e.statusText);\n            } else if (e.responseText) {\n                err.text(e.responseText);\n            } else {\n                err.text(JSON.stringify(e));\n            }\n        });\n    }\n\n    function deleteFile(ev) {\n        var blobId, csrf;\n        var $row = $(ev.target).parents('tr');\n        var $btn = $(ev.target);\n        blobId = $btn.data('key');\n        csrf = $('#media-files').data('csrf');\n        if (!blobId) {\n            return;\n        }\n        console.log('delete blob',blobId);\n        $('#media .error').text('');\n        $.ajax({\n            url: '/media/'+blobId+'?csrf_token='+csrf,\n            method: 'DELETE',\n            dataType: 'json',\n        }).done(function(result) {\n            if(result.error) {\n                $('#media .error').text(result.error);\n            } else {\n                $row.remove();\n            }\n            if (result.csrf) {\n                $('#media-files').data('csrf', result.csrf);\n            }\n        }).fail(function(jqXhr, status) {\n            $('#media .error').text(status);\n        });\n    }\n    function uploadFile(ev) {\n        var form, data, dialog, filename;\n        ev.preventDefault();\n        form = $(\"#upload-form\");\n        filename = form.find('input[name=\"file\"]').val();\n        console.log(\"Filename: \"+filename);\n        if (filename === \"\") {\n            alert(\"No file selected\");\n            return;\n        }\n        form.find('input[name=\"ajax\"]').val(\"1\");\n        data = new FormData(form[0]);\n        $(\"#upload-form .submit\").prop(\"disabled\", true);\n        dialog = $('#dialog-box')\n        dialog.find(\".modal-body\").html('<p>Uploading ' + filename + '</p><div class=\"error\"></div>');\n        showDialog();\n        $.ajax({\n            url: form.attr(\"action\"),\n            data: data,\n            type: \"POST\",\n            enctype: 'multipart/form-data',\n            processData: false,\n            contentType: false,\n            timeout: 600000,\n            cache: false\n        }).done(function (data) {\n            var err, htm;\n\n            $(\"#btnSubmit\").prop(\"disabled\", false);\n            if(data.error) {\n                err = dialog.find('.modal-body .error');\n                err.text(data.error);\n                return;\n            }\n            dialog.find(\".modal-body\").html('<p>Finished uploading ' + filename+ '<span class=\"bool-yes \">&check;</span>');\n            if(data.upload_url) {\n                $('#upload-form').attr('action', data.upload_url);\n            }\n            if(data.csrf_token) {\n                $('#upload-form input[name=\"csrf_token\"]').val(data.csrf);\n            }\n            if(data.file_html){\n                $('#'+data.name).remove();\n                htm = $(data.file_html);\n                htm.insertBefore('#media-files .error-row');\n                htm.find('.delete-file').click(deleteFile);\n                htm.find('.btn-index').click(indexFile);\n                window.setTimeout(closeDialog, 500);\n            }\n        }).fail(function (e) {\n            var err = dialog.find('.modal-body .error');\n            if (e.responseJSON) {\n                err.text(e.responseJSON.error);\n            }\n            else if (e.statusText) {\n                err.text(e.status + ' ' + e.statusText);\n            } else if (e.responseText) {\n                err.text(e.responseText);\n            } else {\n                err.text(JSON.stringify(e));\n            }\n            console.error(e);\n        }).always(function() {\n            $(\"#upload-form .submit\").prop(\"disabled\", false);\n        });\n        return false;\n    }\n     \n    function showDialog() {\n        var dialog = $('#dialog-box');\n        dialog.addClass(\"dialog-active show\");\n        dialog.css({display: \"block\"});\n        $('.modal-backdrop').addClass('show');\n        $('.modal-backdrop').removeClass('hidden');\n        $('body').addClass('modal-open');\n    }\n\n    function closeDialog() {\n        var dialog = $('#dialog-box')\n        dialog.removeClass(\"dialog-active\").removeClass(\"show\");\n        dialog.css(\"display\", \"\");\n        $(document.body).removeClass(\"modal-open\");\n        $('.modal-backdrop').addClass('hidden');\n        $('.modal-backdrop').removeClass(\"show\");\n    }\n\n    $('#keys .add-key').click(addKey); \n    $('#keys .delete-key').click(deleteKey);\n    $('#streams .add-stream').click(addStream);\n    $('#streams .delete-stream').click(deleteStream);\n    $('#media-files .delete-file').click(deleteFile);\n    $('#media-files .btn-index').click(indexFile);\n    $(\"#upload-form .submit\").click(uploadFile);\n    $('#dialog-box .btn-close').click(closeDialog);\n});\n", "patch": "@@ -157,7 +157,8 @@ $(document).ready(function(){\n         csrf = $('#media-files').data('csrf');\n         console.log('index blob',blobId, csrf);\n         dialog = $('#dialog-box')\n-        dialog.find(\".modal-body\").html('<p>Indexing ' + filename + '</p><div class=\"error\"></div>');\n+        dialog.find(\".modal-body\").html('<p>Indexing ' + encodeURIComponent(filename) +\n+                                        '</p><div class=\"error\"></div>');\n         showDialog();\n         $.ajax({\n             url: '/media/'+blobId+'?index=1&csrf_token='+csrf,\n@@ -168,14 +169,19 @@ $(document).ready(function(){\n               var i;\n               dialog.find('.modal-body .error').text(result.error);\n             } else {\n-                dialog.find(\".modal-body\").html('<p>Indexing ' + filename + ' complete</p>');\n+                dialog.find(\".modal-body\").html('<p>Indexing ' +\n+                                                encodeURIComponent(filename) +\n+                                                ' complete</p>');\n                 if (result.representation) {\n                     $row.find('td.codec').text(result.representation.codecs);\n                     if(result.representation.encrypted) {\n                         $row.find('td.encrypted').html('<span class=\"bool-yes \">&check;</span>');\n                         $row.find('td.kid').html(\"\");\n                         for(i=0; i < result.representation.kids.length; ++i) {\n-                          $row.find('td.kid').append('<p>'+result.representation.kids[i]+'</p>');\n+                            $row.find('td.kid').append(\n+                                '<p>' +\n+                                encodeURIComponent(result.representation.kids[i]) +\n+                                '</p>');\n                         }\n                     } else {\n                         $row.find('td.encrypted').html('<span class=\"bool-no \">&cross;</span>');\n@@ -241,7 +247,9 @@ $(document).ready(function(){\n         data = new FormData(form[0]);\n         $(\"#upload-form .submit\").prop(\"disabled\", true);\n         dialog = $('#dialog-box')\n-        dialog.find(\".modal-body\").html('<p>Uploading ' + filename + '</p><div class=\"error\"></div>');\n+        dialog.find(\".modal-body\").html('<p>Uploading ' +\n+                                        encodeURIComponent(filename) +\n+                                        '</p><div class=\"error\"></div>');\n         showDialog();\n         $.ajax({\n             url: form.attr(\"action\"),\n@@ -261,7 +269,9 @@ $(document).ready(function(){\n                 err.text(data.error);\n                 return;\n             }\n-            dialog.find(\".modal-body\").html('<p>Finished uploading ' + filename+ '<span class=\"bool-yes \">&check;</span>');\n+            dialog.find(\".modal-body\").html('<p>Finished uploading ' +\n+                                            encodeURIComponent(filename) +\n+                                            '<span class=\"bool-yes \">&check;</span>');\n             if(data.upload_url) {\n                 $('#upload-form').attr('action', data.upload_url);\n             }", "file_path": "files/2022_12/741", "file_language": "js", "file_name": "static/js/media.js", "outdated_file_modify": 0, "outdated_file_before": 1, "outdated_file_after": 1}], "outdated": 0, "cwe_descripiton": "", "cwe_consequence": "", "cwe_method": "", "cwe_solution": ""}
