{"index": 12497, "cve_id": "CVE-2023-46127", "cwe_id": ["CWE-79"], "cve_language": "Python", "cve_description": "Frappe is a full-stack web application framework that uses Python and MariaDB on the server side and an integrated client side library. A malicious Frappe user with desk access could create documents containing HTML payloads allowing HTML Injection. This vulnerability has been patched in version 14.49.0.", "cvss": "5.4", "publish_date": "October 23, 2023", "AV": "NETWORK", "AC": "NETWORK", "PR": "LOW", "UI": "NONE", "S": "UNCHANGED", "C": "LOW", "I": "LOW", "A": "NONE", "commit_id": "3dc5d2fcc7561dde181ba953009fe6e39d64e900", "commit_message": "refactor: escape instead of sanitizing HTML (#22339) (#22340)\n\nTraceback if it contains HTML can be useful, better to escape and show\ninstead of modifying it.\n\n(cherry picked from commit 4a5e584ad0f9b93c321b44e9ab04ebb9e6b74b3f)\n\nCo-authored-by: Ankush Menat <ankush@frappe.io>", "commit_date": "2023-09-10T11:12:37Z", "project": "frappe/frappe", "url": "https://api.github.com/repos/frappe/frappe/commits/3dc5d2fcc7561dde181ba953009fe6e39d64e900", "html_url": "https://github.com/frappe/frappe/commit/3dc5d2fcc7561dde181ba953009fe6e39d64e900", "windows_before": [{"commit_id": "4a5e584ad0f9b93c321b44e9ab04ebb9e6b74b3f", "commit_date": "Sun Sep 10 15:13:47 2023 +0530", "commit_message": "refactor: escape instead of sanitizing HTML (#22339)", "files_name": ["frappe/app.py"]}, {"commit_id": "2efdead485c669a31922f79583a0b0081c123a97", "commit_date": "Sun Sep 10 09:30:50 2023 +0200", "commit_message": "fix: Defer module deletion IO post DB commit (#22336)", "files_name": ["frappe/core/doctype/module_def/module_def.py"]}, {"commit_id": "650fe1598c6ef475fcca1851a1b3f96dd25e8d92", "commit_date": "Sun Sep 10 06:57:59 2023 +0200", "commit_message": "chore(translations): prisoner exchange with erpnext (#22338)", "files_name": ["frappe/translations/af.csv", "frappe/translations/am.csv", "frappe/translations/ar.csv", "frappe/translations/bg.csv", "frappe/translations/bn.csv", "frappe/translations/bo.csv", "frappe/translations/bs.csv", "frappe/translations/ca.csv", "frappe/translations/cs.csv", "frappe/translations/da.csv", "frappe/translations/de.csv", "frappe/translations/el.csv", "frappe/translations/en.csv", "frappe/translations/es-CL.csv", "frappe/translations/es-CO.csv", "frappe/translations/es-GT.csv", "frappe/translations/es-PE.csv", "frappe/translations/es.csv", "frappe/translations/et.csv", "frappe/translations/fa.csv", "frappe/translations/fi.csv", "frappe/translations/fr.csv", "frappe/translations/gu.csv", "frappe/translations/he.csv", "frappe/translations/hi.csv", "frappe/translations/hr.csv", "frappe/translations/hu.csv", "frappe/translations/id.csv", "frappe/translations/is.csv", "frappe/translations/it.csv", "frappe/translations/ja.csv", "frappe/translations/km.csv", "frappe/translations/kn.csv", "frappe/translations/ko.csv", "frappe/translations/ku.csv", "frappe/translations/lo.csv", "frappe/translations/lt.csv", "frappe/translations/lv.csv", "frappe/translations/mk.csv", "frappe/translations/ml.csv", "frappe/translations/mr.csv", "frappe/translations/ms.csv", "frappe/translations/my.csv", "frappe/translations/nl.csv", "frappe/translations/no.csv", "frappe/translations/pl.csv", "frappe/translations/ps.csv", "frappe/translations/pt-BR.csv", "frappe/translations/pt.csv", "frappe/translations/ro.csv", "frappe/translations/ru.csv", "frappe/translations/rw.csv", "frappe/translations/si.csv", "frappe/translations/sk.csv", "frappe/translations/sl.csv", "frappe/translations/sq.csv", "frappe/translations/sr-BA.csv", "frappe/translations/sr-SP.csv", "frappe/translations/sr.csv", "frappe/translations/sv.csv", "frappe/translations/sw.csv", "frappe/translations/ta.csv", "frappe/translations/te.csv", "frappe/translations/th.csv", "frappe/translations/tr.csv", "frappe/translations/uk.csv", "frappe/translations/ur.csv", "frappe/translations/uz.csv", "frappe/translations/vi.csv", "frappe/translations/zh-TW.csv", "frappe/translations/zh.csv"]}, {"commit_id": "3d10073dfc127cf703309c55f6a7c822a66647cf", "commit_date": "Sun Sep 10 00:00:44 2023 +0200", "commit_message": "Merge pull request #22083 from git-avc/translate_side_filters", "files_name": ["def4ad7a06290a28ac9955fd5e4bb1ba1aa45e43 - Sat Sep 9 23:41:18 2023 +0200 : fix: translate values of sidebar filters", "frappe/public/js/frappe/list/list_sidebar_group_by.js"]}, {"commit_id": "2a51b1e71ec0fe3986f89589ff169a82a8c59665", "commit_date": "Sat Sep 9 23:33:39 2023 +0200", "commit_message": "Merge pull request #22337 from barredterra/expand-assignees", "files_name": ["d16ada6c315d55d50329fb4d9f65e1f4d5ca5eee - Sat Sep 9 23:13:46 2023 +0200 : feat: expand assignees on hover", "frappe/public/scss/desk/avatar.scss"]}, {"commit_id": "1a563164d7ed85f46c26a685eabd326b101456e6", "commit_date": "Thu Sep 7 11:32:07 2023 +0530", "commit_message": "chore: bump gitpython again", "files_name": ["pyproject.toml"]}, {"commit_id": "9309f9743f2da00a772cbfe9bb5d34bdd99d7fb1", "commit_date": "Thu Sep 7 06:01:20 2023 +0000", "commit_message": "Merge pull request #22309 from blaggacao/cleanup/do-not-hack-popimaplib-anymore-necessary", "files_name": ["87684e2647d5de77bf1452fd38ab75798681cbc4 - Thu Sep 7 01:29:36 2023 +0200 : feat: add werkzeug proxyfix to development server", "frappe/app.py", "frappe/commands/utils.py"]}, {"commit_id": "734fb891c2969502593735cb866f22b72e8d214a", "commit_date": "Mon Sep 4 20:38:12 2023 +0200", "commit_message": "chore: monkey patching {imap,pop}lib is no more necessary since 4 years", "files_name": ["frappe/email/doctype/email_domain/email_domain.py", "frappe/email/receive.py"]}, {"commit_id": "7b7a574c5ab8246da10297e7106c068015b942aa", "commit_date": "Wed Sep 6 16:47:30 2023 +0530", "commit_message": "Merge pull request #22326 from resilient-tech/long-single-value", "files_name": ["7e9b08a040b0adc758214ac1ab86d38be0f53ed6 - Wed Sep 6 16:23:01 2023 +0530 : fix: convert value column to `longtext` for Singles", "frappe/database/mariadb/framework_mariadb.sql", "frappe/patches.txt", "frappe/patches/v14_0/modify_value_column_size_for_singles.py"]}, {"commit_id": "1b3b214beab87375aab27a756c82a9600d9e2796", "commit_date": "Wed Sep 6 14:11:18 2023 +0530", "commit_message": "Merge pull request #22321 from ruthra-kumar/custom_report_error", "files_name": ["9cdb56ee5ef2ed43945981939740c644e69dd191 - Wed Sep 6 13:47:59 2023 +0530 : fix: key error on link_field", "frappe/desk/query_report.py"]}, {"commit_id": "1dc7a3705b46330c1d7f55bb5214affe8ee03ed6", "commit_date": "Tue Sep 5 21:41:43 2023 +0530", "commit_message": "fix: separate internal_and_external_links from internal_links", "files_name": ["frappe/desk/notifications.py", "frappe/public/js/frappe/form/dashboard.js", "frappe/tests/test_dashboard_connections.py"]}, {"commit_id": "a4a3af5859be89e7f41987a3e882b99ce35ee081", "commit_date": "Tue Sep 5 13:46:34 2023 +0200", "commit_message": "refactor(email): Ensure that subject is a string", "files_name": ["frappe/email/receive.py"]}, {"commit_id": "e5dd924cbef2c8fa28404ac8669d94a4a344e6a6", "commit_date": "Tue Sep 5 12:20:31 2023 +0200", "commit_message": "fix(email): Add missing byte-decoding in set_subject", "files_name": ["frappe/email/receive.py"]}, {"commit_id": "ec20739feef2acc57c11dfa03812468d2d0d8022", "commit_date": "Tue Sep 5 12:20:01 2023 +0200", "commit_message": "test(email): Add test for accents in subject header", "files_name": ["frappe/email/doctype/email_account/test_email_account.py"]}, {"commit_id": "26b4d58c802da88e22956d243568647341cb6e4a", "commit_date": "Tue Sep 5 17:04:19 2023 +0530", "commit_message": "fix: workspace title and onboarding widget typography", "files_name": ["frappe/public/scss/desk/desktop.scss"]}, {"commit_id": "9d0f72d98d934c9332c7282d90fdca021f0ad4b7", "commit_date": "Tue Sep 5 16:19:54 2023 +0530", "commit_message": "Merge branch 'develop' into feat-desk-refresh", "files_name": ["fbbdef1e9cbbec0d9730fed5476e719b4cad27e0 - Tue Sep 5 11:15:27 2023 +0530 : feat: Dynamically generate license text (#22299)", "frappe/tests/test_boilerplate.py", "frappe/utils/boilerplate.py"]}, {"commit_id": "78d481760c35837a451df6ca4a9856a2bfa31e21", "commit_date": "Tue Sep 5 10:41:55 2023 +0530", "commit_message": "chore(deps): bump actions/checkout from 3 to 4 (#22310)", "files_name": [".github/workflows/backport.yml", ".github/workflows/create-release.yml", ".github/workflows/linters.yml", ".github/workflows/on_release.yml", ".github/workflows/patch-mariadb-tests.yml", ".github/workflows/publish-assets-develop.yml", ".github/workflows/server-tests.yml", ".github/workflows/ui-tests.yml"]}, {"commit_id": "c3efddd380e2f4e24aa13aeb6dbd5525264603b0", "commit_date": "Tue Sep 5 10:38:14 2023 +0530", "commit_message": "fix: Allow DB Callback Managers in Safe Exec (#22302)", "files_name": ["frappe/utils/safe_exec.py"]}, {"commit_id": "bcc7cc9a3d329ea56145151e7b98232fa8774002", "commit_date": "Mon Sep 4 11:20:25 2023 +0000", "commit_message": "style: use `functools.cached_property` (#22304)", "files_name": ["frappe/model/base_document.py"]}, {"commit_id": "399ce7eb3b64f69c3744c576308c86c5e456d03e", "commit_date": "Mon Sep 4 16:03:40 2023 +0530", "commit_message": "fix: typography added letter-spacing", "files_name": ["frappe/printing/page/print_format_builder/print_format_builder.css", "frappe/public/scss/common/awesomeplete.scss", "frappe/public/scss/common/buttons.scss", "frappe/public/scss/common/controls.scss", "frappe/public/scss/common/form.scss", "frappe/public/scss/common/global.scss", "frappe/public/scss/common/grid.scss", "frappe/public/scss/common/indicator.scss", "frappe/public/scss/common/quill.scss", "frappe/public/scss/desk/avatar.scss", "frappe/public/scss/desk/breadcrumb.scss", "frappe/public/scss/desk/desktop.scss", "frappe/public/scss/desk/driver.scss", "frappe/public/scss/desk/filters.scss", "frappe/public/scss/desk/form.scss", "frappe/public/scss/desk/frappe_datatable.scss", "frappe/public/scss/desk/frappe_gantt.scss", "frappe/public/scss/desk/global.scss", "frappe/public/scss/desk/global_search.scss", "frappe/public/scss/desk/kanban.scss", "frappe/public/scss/desk/link_preview.scss", "frappe/public/scss/desk/list.scss", "frappe/public/scss/desk/mobile.scss", "frappe/public/scss/desk/navbar.scss", "frappe/public/scss/desk/notification.scss", "frappe/public/scss/desk/page.scss", "frappe/public/scss/desk/report.scss", "frappe/public/scss/desk/sidebar.scss", "frappe/public/scss/desk/timeline.scss", "frappe/public/scss/desk/toast.scss", "frappe/public/scss/desk/user_profile.scss", "frappe/public/scss/espresso/_typography.scss", "frappe/public/scss/login.bundle.scss", "frappe/public/scss/print.bundle.scss", "frappe/public/scss/website/error-state.scss", "frappe/public/scss/website/footer.scss", "frappe/public/scss/website/my_account.scss", "frappe/public/scss/website/page_builder.scss", "frappe/public/scss/website/web_form.scss", "frappe/templates/styles/card_style.css", "frappe/templates/styles/discussion_style.css"]}, {"commit_id": "b29272c092a0a172b4fe222476c730d2d630eea5", "commit_date": "Sun Sep 3 19:59:07 2023 +0530", "commit_message": "fix: ipython console", "files_name": ["frappe/commands/utils.py"]}, {"commit_id": "2d73b8f314f5d4c40d5cd54aecbdf61cfc16edac", "commit_date": "Sun Sep 3 14:23:05 2023 +0200", "commit_message": "fix: align base template to socketio port default 9000 (#22298)", "files_name": ["frappe/templates/base.html"]}, {"commit_id": "191044a2c3752b757cb61a6a303b6af0a7e3b7c1", "commit_date": "Sun Sep 3 14:14:54 2023 +0530", "commit_message": "style: changed primary arrow color", "files_name": ["frappe/public/js/workflow_builder/components/TransitionEdge.vue"]}, {"commit_id": "447d29396e838a9239f5dc19bba6fe1b90e3ecfc", "commit_date": "Sun Sep 3 12:38:11 2023 +0530", "commit_message": "style: cosmetic changes in form builder", "files_name": []}], "windows_after": [{"commit_id": "1f810c14a81ca66e10c7b63006705f378fd664a1", "commit_date": "Sun Sep 10 17:08:29 2023 +0530", "commit_message": "fix: convert category tojson (#22342) (#22343)", "files_name": ["frappe/website/doctype/blog_post/templates/blog_post_list.html"]}, {"commit_id": "177955a12f18d0ded4234dc5c7d41f7c3dd2b842", "commit_date": "Mon Sep 11 11:06:01 2023 +0530", "commit_message": "fix: check label for fields", "files_name": ["frappe/core/doctype/document_comparator/document_comparator.py", "frappe/model/meta.py"]}, {"commit_id": "0b722906dbcfa4d8c47ae846a8c988720931e458", "commit_date": "Mon Sep 11 11:10:06 2023 +0530", "commit_message": "fix: fetch prev docs from last amended doc", "files_name": ["frappe/core/doctype/document_comparator/document_comparator.py"]}, {"commit_id": "4add076285081acd50c02764fdb1448fbb968b24", "commit_date": "Mon Sep 11 11:15:24 2023 +0530", "commit_message": "refactor: use old value instead of fetching parent doc", "files_name": ["frappe/core/doctype/version/version.py"]}, {"commit_id": "a7a6f438beef92fb1884131ea06ab718f37aa8d5", "commit_date": "Mon Sep 11 11:49:40 2023 +0530", "commit_message": "fix: use latest doc name for test", "files_name": ["frappe/core/doctype/document_comparator/test_document_comparator.py"]}, {"commit_id": "c135e3d07ab76aea02272b92d3bc40a37a2471ac", "commit_date": "Mon Sep 11 13:15:08 2023 +0530", "commit_message": "build(deps): Bump frappe-datatable to 1.17.3", "files_name": ["yarn.lock"]}, {"commit_id": "1ec87615fecf82ca4076de06c8c59dcc98957a3c", "commit_date": "Mon Sep 11 13:16:25 2023 +0530", "commit_message": "Merge pull request #22347 from surajshetty3416/update-datatable", "files_name": ["2001bc278f34e7bb905ed0296978daf86a97ad4c - Mon Sep 11 11:39:05 2023 +0200 : refactor!: merge get_site_url into get_url (#22308)", "frappe/__init__.py", "frappe/commands/site.py", "frappe/commands/utils.py", "frappe/core/doctype/access_log/test_access_log.py", "frappe/core/doctype/server_script/test_server_script.py", "frappe/patches/v13_0/set_unique_for_page_view.py", "frappe/tests/test_api.py", "frappe/tests/test_auth.py", "frappe/tests/test_client.py", "frappe/tests/test_perf.py", "frappe/utils/__init__.py"]}, {"commit_id": "35000c2e4ffc44738d227476859188c516fb22b8", "commit_date": "Mon Sep 11 15:51:28 2023 +0530", "commit_message": "fix: + btn not appearing for connections with both internal and external links (#22320)", "files_name": ["3e8a1928281fef36a6dc17f16f0ec12ce659d92d - Mon Sep 11 18:01:09 2023 +0530 : chore: escape instead of sanitizing", "frappe/templates/includes/navbar/navbar_search.html", "frappe/templates/includes/search_template.html"]}, {"commit_id": "8882679357927e2008d22af98695372feee7eead", "commit_date": "Mon Sep 11 14:34:22 2023 +0200", "commit_message": "fix: Ensure Google Calendar scopes is a List (#22333)", "files_name": ["frappe/integrations/doctype/google_calendar/google_calendar.py"]}, {"commit_id": "ebfdfa283b8757ea52528d0d54992502f354ccc4", "commit_date": "Mon Sep 11 19:02:34 2023 +0530", "commit_message": "chore: move function to correct file", "files_name": ["frappe/__init__.py", "frappe/utils/__init__.py"]}, {"commit_id": "045d35b89e8d776632f9a38c9710aaecf1ab52fa", "commit_date": "Mon Sep 11 22:01:01 2023 +0530", "commit_message": "fix: escape awesomeplete label titles", "files_name": ["frappe/public/js/frappe/form/controls/link.js"]}, {"commit_id": "c3db5fca23f83b5ca5ea876cf7ec24d6c1b70df5", "commit_date": "Tue Sep 12 09:43:17 2023 +0530", "commit_message": "fix: typo in jinja2 templates (#22353)", "files_name": ["frappe/templates/discussions/search.html", "frappe/templates/emails/auto_email_report.html", "frappe/templates/emails/delete_data_confirmation.html", "frappe/templates/includes/avatar_macro.html", "frappe/templates/includes/breadcrumbs.html", "frappe/templates/includes/meta_block.html", "frappe/templates/includes/print_table.html", "frappe/templates/print_formats/standard_macros.html"]}, {"commit_id": "bda868b0c29b152c0dbf2d56b0ef82d64afee7b9", "commit_date": "Tue Sep 12 12:56:48 2023 +0530", "commit_message": "fix: rename doctype", "files_name": ["frappe/core/doctype/audit_trail/__init__.py", "frappe/core/doctype/audit_trail/audit_trail.html", "frappe/core/doctype/audit_trail/audit_trail.js", "frappe/core/doctype/audit_trail/audit_trail.json", "frappe/core/doctype/audit_trail/audit_trail.py", "frappe/core/doctype/audit_trail/audit_trail_rows_added_removed.html", "frappe/core/doctype/audit_trail/test_audit_trail.py"]}, {"commit_id": "99df38a26492ed37fd352e996bf39fc1cd094677", "commit_date": "Tue Sep 12 12:57:33 2023 +0530", "commit_message": "refactor: avoid fetch for amended field again", "files_name": ["frappe/core/doctype/version/version.py"]}, {"commit_id": "aa18c4f751ed2883e8f1cc092a701b7e1bee09cc", "commit_date": "Tue Sep 12 13:56:23 2023 +0530", "commit_message": "fix: rename imports", "files_name": ["frappe/core/doctype/audit_trail/audit_trail.js", "frappe/core/doctype/audit_trail/test_audit_trail.py"]}, {"commit_id": "cbb80ed0eea10b18b13bd6862e0b7df2e0ddb829", "commit_date": "Tue Sep 12 18:10:41 2023 +0530", "commit_message": "fix: getting workspace roles from doc instead from Has Role doctype", "files_name": ["frappe/desk/desktop.py"]}, {"commit_id": "b36a64ad474332f96f8eed2c4e9ff5cdff56d1d1", "commit_date": "Tue Sep 12 16:14:04 2023 +0200", "commit_message": "fix: disabiguate address labels", "files_name": ["frappe/public/js/frappe/form/templates/address_list.html"]}, {"commit_id": "c6222ca7611f944631618132118e03f10a313eb5", "commit_date": "Tue Sep 12 16:14:32 2023 +0200", "commit_message": "fix: add contact label \"Billing Contact\"", "files_name": ["frappe/public/js/frappe/form/templates/contact_list.html"]}, {"commit_id": "ab579c86cf458d40cbfb50e43b16d725a6c522d8", "commit_date": "Tue Sep 12 16:16:08 2023 +0200", "commit_message": "Merge remote-tracking branch 'upstream/develop' into responsive-address-contact-list", "files_name": ["f94f3ad0a9528d9b48929531f9d444077b82b02a - Tue Sep 12 16:22:11 2023 +0200 : fix: german translations", "frappe/translations/de.csv"]}, {"commit_id": "ac0e2a29c224aa1fb27e123c5fce559e9c014943", "commit_date": "Tue Sep 12 20:08:38 2023 +0530", "commit_message": "fix: nested custom reports filter not rendering", "files_name": ["frappe/desk/query_report.py", "frappe/public/js/frappe/views/reports/query_report.js"]}, {"commit_id": "cfb6e36441213eb5a377ee5b6134449e5d79dd56", "commit_date": "Wed Sep 13 11:29:44 2023 +0530", "commit_message": "Merge pull request #22378 from shariquerik/workspace-has-role-fix", "files_name": ["4b336b47a1d73f3c552eb0cff3cddf1b03ad0a7f - Wed Sep 13 11:33:31 2023 +0530 : fix: broken link preview", "frappe/public/js/frappe/form/form.js", "frappe/public/js/frappe/ui/link_preview.js"]}, {"commit_id": "b0bb9a55d5e4071f45a2d8058f3d433f7598a6eb", "commit_date": "Wed Sep 13 12:13:31 2023 +0530", "commit_message": "fix: error while export a doctype report in excel (#22376)", "files_name": ["frappe/utils/response.py"]}, {"commit_id": "64dd4b876bd84099b61f656cedede3724539121b", "commit_date": "Wed Sep 13 12:33:49 2023 +0530", "commit_message": "fix: UI test dont start without init", "files_name": ["frappe/commands/utils.py"]}, {"commit_id": "0eb509aac3e794bab41e07a71583946ba90a60de", "commit_date": "Wed Sep 13 12:57:14 2023 +0530", "commit_message": "refactor: Correct Content-Disposition headers (#22383)", "files_name": ["frappe/utils/response.py"]}, {"commit_id": "c55dcc439e962123ac4c5140808cb5308955e37e", "commit_date": "Wed Sep 13 13:33:36 2023 +0530", "commit_message": "feat: max_file_size configurable from system settings (#22384)", "files_name": ["frappe/core/api/file.py", "frappe/core/doctype/file/file.py", "frappe/core/doctype/system_settings/system_settings.json", "frappe/core/doctype/system_settings/system_settings.py"]}, {"commit_id": "b445c20e22ba9a6f6ef4f3f3eb121cac0a6e38d9", "commit_date": "Wed Sep 13 13:48:56 2023 +0530", "commit_message": "test: ignore whitespace changes while comparing HTML (#22386)", "files_name": ["frappe/tests/utils.py", "frappe/website/doctype/web_form/test_web_form.py", "frappe/website/doctype/website_route_meta/test_website_route_meta.py"]}, {"commit_id": "b3742b45a862d24125f2088f0446ab2ce69c126b", "commit_date": "Wed Sep 13 14:04:15 2023 +0530", "commit_message": "Merge pull request #22104 from GursheenK/doc-comparator", "files_name": ["39c06cffcd0e4906fde560b27587a781b1a2588d - Wed Sep 13 02:58:52 2023 -0600 : fix: pass console to import file (#22385)", "frappe/core/doctype/data_import/importer.py"]}, {"commit_id": "970a740164b7017c9212a622597707bdbc5b6348", "commit_date": "Wed Sep 13 14:34:52 2023 +0530", "commit_message": "revert: #22308 (#22389)", "files_name": ["frappe/__init__.py", "frappe/commands/site.py", "frappe/commands/utils.py", "frappe/core/doctype/access_log/test_access_log.py", "frappe/core/doctype/server_script/test_server_script.py", "frappe/patches/v13_0/set_unique_for_page_view.py", "frappe/tests/test_api.py", "frappe/tests/test_auth.py", "frappe/tests/test_client.py", "frappe/tests/test_perf.py", "frappe/utils/__init__.py"]}, {"commit_id": "9d8c6012a251ae7796d2df77609fb9273d55c353", "commit_date": "Wed Sep 13 12:10:29 2023 +0300", "commit_message": "fix: Check if user has no associated email accounts. (#22355)", "files_name": ["frappe/core/doctype/user/user.js"]}, {"commit_id": "aa7ee1c6b92b099dfd6ae27bd7e844e3fd447f21", "commit_date": "Wed Sep 13 13:53:23 2023 +0300", "commit_message": "refactor: force ipv4 localhost (#22394)", "files_name": ["frappe/app.py", "frappe/commands/site.py", "frappe/email/doctype/email_account/email_account.py", "frappe/email/test_smtp.py", "frappe/printing/doctype/network_printer_settings/network_printer_settings.py", "frappe/tests/test_db.py", "frappe/utils/backups.py", "frappe/utils/connections.py", "frappe/utils/data.py"]}, {"commit_id": "88896f8f41e3d8d87b6e9e4afdcac47d4922bfc4", "commit_date": "Wed Sep 13 17:06:28 2023 +0530", "commit_message": "fix: keep localhost for smtp checks", "files_name": ["frappe/email/doctype/email_account/email_account.py"]}, {"commit_id": "9244140816b44bb481af5b5627047244d33b9d4b", "commit_date": "Wed Sep 13 17:26:19 2023 +0530", "commit_message": "fix!: Bind development server only to localhost (#22397)", "files_name": ["frappe/app.py", "frappe/commands/utils.py"]}, {"commit_id": "909457de3d97b05588370a2feffd033d8e6e42fa", "commit_date": "Wed Sep 13 22:12:49 2023 +0530", "commit_message": "fix: PDF and raw response (#22402)", "files_name": ["frappe/tests/test_api.py", "frappe/utils/response.py"]}, {"commit_id": "985b9a4ac4580da2195783f0a78e861c843d5901", "commit_date": "Thu Sep 14 11:32:31 2023 +0530", "commit_message": "fix: fixed the conflict between fieldname in General Ledger Report", "files_name": ["frappe/desk/query_report.py", "frappe/public/js/frappe/views/reports/query_report.js"]}, {"commit_id": "d3178527b3b5e56d2abf59e4d87e2bd41bca7c6e", "commit_date": "Thu Sep 14 13:23:00 2023 +0530", "commit_message": "fix: works for multiple rows now after saving", "files_name": ["frappe/desk/query_report.py", "frappe/public/js/frappe/views/reports/query_report.js"]}, {"commit_id": "2587d3e2e04059e519ff5eee8d945371c95e4de0", "commit_date": "Thu Sep 14 14:58:19 2023 +0530", "commit_message": "perf: Enqueue \"removing of index\" on web page save (#22409)", "files_name": ["frappe/website/website_generator.py"]}, {"commit_id": "530c47ffe570a019f276ba437689dd9cb3cfaee4", "commit_date": "Thu Sep 14 16:26:08 2023 +0530", "commit_message": "feat: `after_response` callback manager (#22398)", "files_name": ["frappe/app.py", "frappe/core/doctype/communication/email.py", "frappe/hooks.py", "frappe/rate_limiter.py"]}, {"commit_id": "d43212792d251abeb06a7ba86b0c16cacd52cd16", "commit_date": "Fri Sep 15 08:07:27 2023 +0200", "commit_message": "fix: update help links (#22413)", "files_name": ["frappe/public/js/frappe/utils/help_links.js"]}, {"commit_id": "87c1a9d7d72b828b23e4184fa663ac8121efaa1f", "commit_date": "Fri Sep 15 09:10:10 2023 +0300", "commit_message": "refactor: Ensure admin receives a valid backup encryption key (#22411)", "files_name": ["frappe/utils/backups.py"]}, {"commit_id": "6590d24151c556321489b7c362d78bb224107c5b", "commit_date": "Fri Sep 15 12:04:17 2023 +0530", "commit_message": "fix: dark mode, timeline, logo colors", "files_name": ["frappe/printing/page/print_format_builder/print_format_builder.css", "frappe/public/css/bootstrap.css", "frappe/public/images/frappe-favicon.svg", "frappe/public/images/frappe-framework-logo.png", "frappe/public/images/frappe-framework-logo.svg", "frappe/public/images/frappe-logo.png", "frappe/public/js/form_builder/components/FieldTypes.vue", "frappe/public/js/frappe/file_uploader/FileUploader.vue", "frappe/public/js/frappe/form/footer/form_timeline.js", "frappe/public/js/frappe/list/list_sidebar.js", "frappe/public/js/frappe/ui/toolbar/navbar.html", "frappe/public/scss/common/buttons.scss", "frappe/public/scss/common/controls.scss", "frappe/public/scss/common/css_variables.scss", "frappe/public/scss/common/flex.scss", "frappe/public/scss/common/global.scss", "frappe/public/scss/common/grid.scss", "frappe/public/scss/common/icons.scss"]}], "parents": [{"commit_id_before": "e6dabc77760c8a783922f1a67bd35870d6420606", "url_before": "https://api.github.com/repos/frappe/frappe/commits/e6dabc77760c8a783922f1a67bd35870d6420606", "html_url_before": "https://github.com/frappe/frappe/commit/e6dabc77760c8a783922f1a67bd35870d6420606"}], "details": [{"raw_url": "https://github.com/frappe/frappe/raw/3dc5d2fcc7561dde181ba953009fe6e39d64e900/frappe%2Fapp.py", "code": "# -*- coding: utf-8 -*-\n# Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n# MIT License. See license.txt\nfrom __future__ import unicode_literals\n\nimport logging\nimport os\n\nfrom six import iteritems\nfrom werkzeug.exceptions import HTTPException, NotFound\nfrom werkzeug.local import LocalManager\nfrom werkzeug.middleware.profiler import ProfilerMiddleware\nfrom werkzeug.middleware.shared_data import SharedDataMiddleware\nfrom werkzeug.wrappers import Request, Response\n\nimport frappe\nimport frappe.api\nimport frappe.auth\nimport frappe.handler\nimport frappe.monitor\nimport frappe.rate_limiter\nimport frappe.recorder\nimport frappe.utils.response\nimport frappe.website.render\nfrom frappe import _\nfrom frappe.core.doctype.comment.comment import update_comments_in_parent_after_request\nfrom frappe.middlewares import StaticDataMiddleware\nfrom frappe.utils import escape_html, get_site_name\nfrom frappe.utils.error import make_error_snapshot\n\nlocal_manager = LocalManager([frappe.local])\n\n_site = None\n_sites_path = os.environ.get(\"SITES_PATH\", \".\")\n\n\nclass RequestContext(object):\n\tdef __init__(self, environ):\n\t\tself.request = Request(environ)\n\n\tdef __enter__(self):\n\t\tinit_request(self.request)\n\n\tdef __exit__(self, type, value, traceback):\n\t\tfrappe.destroy()\n\n\n@Request.application\ndef application(request):\n\tresponse = None\n\n\ttry:\n\t\trollback = True\n\n\t\tinit_request(request)\n\n\t\tfrappe.api.validate_auth()\n\n\t\tif request.method == \"OPTIONS\":\n\t\t\tresponse = Response()\n\n\t\telif frappe.form_dict.cmd:\n\t\t\tresponse = frappe.handler.handle()\n\n\t\telif request.path.startswith(\"/api/\"):\n\t\t\tresponse = frappe.api.handle()\n\n\t\telif request.path.startswith(\"/backups\"):\n\t\t\tresponse = frappe.utils.response.download_backup(request.path)\n\n\t\telif request.path.startswith(\"/private/files/\"):\n\t\t\tresponse = frappe.utils.response.download_private_file(request.path)\n\n\t\telif request.method in (\"GET\", \"HEAD\", \"POST\"):\n\t\t\tresponse = frappe.website.render.render()\n\n\t\telse:\n\t\t\traise NotFound\n\n\texcept HTTPException as e:\n\t\treturn e\n\n\texcept frappe.SessionStopped as e:\n\t\tresponse = frappe.utils.response.handle_session_stopped()\n\n\texcept Exception as e:\n\t\tresponse = handle_exception(e)\n\n\telse:\n\t\trollback = after_request(rollback)\n\n\tfinally:\n\t\t# Important note:\n\t\t# this function *must* always return a response, hence any exception thrown outside of\n\t\t# try..catch block like this finally block needs to be handled appropriately.\n\n\t\tif request.method in (\"POST\", \"PUT\") and frappe.db and rollback:\n\t\t\tfrappe.db.rollback()\n\n\t\ttry:\n\t\t\trun_after_request_hooks(request, response)\n\t\texcept Exception as e:\n\t\t\t# We can not handle exceptions safely here.\n\t\t\tfrappe.logger().error(\"Failed to run after request hook\", exc_info=True)\n\n\t\tlog_request(request, response)\n\t\tprocess_response(response)\n\t\tfrappe.destroy()\n\n\treturn response\n\n\ndef run_after_request_hooks(request, response):\n\tif not getattr(frappe.local, \"initialised\", False):\n\t\treturn\n\n\tfor after_request_task in frappe.get_hooks(\"after_request\"):\n\t\tfrappe.call(after_request_task, response=response, request=request)\n\n\ndef init_request(request):\n\tfrappe.local.request = request\n\tfrappe.local.is_ajax = frappe.get_request_header(\"X-Requested-With\") == \"XMLHttpRequest\"\n\n\tsite = _site or request.headers.get(\"X-Frappe-Site-Name\") or get_site_name(request.host)\n\tfrappe.init(site=site, sites_path=_sites_path, force=True)\n\n\tif not (frappe.local.conf and frappe.local.conf.db_name):\n\t\t# site does not exist\n\t\traise NotFound\n\n\tif frappe.local.conf.get(\"maintenance_mode\"):\n\t\tfrappe.connect()\n\t\traise frappe.SessionStopped(\"Session Stopped\")\n\telse:\n\t\tfrappe.connect(set_admin_as_user=False)\n\n\tmake_form_dict(request)\n\n\tif request.method != \"OPTIONS\":\n\t\tfrappe.local.http_request = frappe.auth.HTTPRequest()\n\n\tfor before_request_task in frappe.get_hooks(\"before_request\"):\n\t\tfrappe.call(before_request_task)\n\n\ndef log_request(request, response):\n\tif hasattr(frappe.local, \"conf\") and frappe.local.conf.enable_frappe_logger:\n\t\tfrappe.logger(\"frappe.web\", allow_site=frappe.local.site).info(\n\t\t\t{\n\t\t\t\t\"site\": get_site_name(request.host),\n\t\t\t\t\"remote_addr\": getattr(request, \"remote_addr\", \"NOTFOUND\"),\n\t\t\t\t\"base_url\": getattr(request, \"base_url\", \"NOTFOUND\"),\n\t\t\t\t\"full_path\": getattr(request, \"full_path\", \"NOTFOUND\"),\n\t\t\t\t\"method\": getattr(request, \"method\", \"NOTFOUND\"),\n\t\t\t\t\"scheme\": getattr(request, \"scheme\", \"NOTFOUND\"),\n\t\t\t\t\"http_status_code\": getattr(response, \"status_code\", \"NOTFOUND\"),\n\t\t\t}\n\t\t)\n\n\ndef process_response(response):\n\tif not response:\n\t\treturn\n\n\t# set cookies\n\tif hasattr(frappe.local, \"cookie_manager\"):\n\t\tfrappe.local.cookie_manager.flush_cookies(response=response)\n\n\t# rate limiter headers\n\tif hasattr(frappe.local, \"rate_limiter\"):\n\t\tresponse.headers.extend(frappe.local.rate_limiter.headers())\n\n\t# CORS headers\n\tif hasattr(frappe.local, \"conf\") and frappe.conf.allow_cors:\n\t\tset_cors_headers(response)\n\n\ndef set_cors_headers(response):\n\torigin = frappe.request.headers.get(\"Origin\")\n\tallow_cors = frappe.conf.allow_cors\n\tif not (origin and allow_cors):\n\t\treturn\n\n\tif allow_cors != \"*\":\n\t\tif not isinstance(allow_cors, list):\n\t\t\tallow_cors = [allow_cors]\n\n\t\tif origin not in allow_cors:\n\t\t\treturn\n\n\tresponse.headers.extend(\n\t\t{\n\t\t\t\"Access-Control-Allow-Origin\": origin,\n\t\t\t\"Access-Control-Allow-Credentials\": \"true\",\n\t\t\t\"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS\",\n\t\t\t\"Access-Control-Allow-Headers\": (\n\t\t\t\t\"Authorization,DNT,X-Mx-ReqToken,\"\n\t\t\t\t\"Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,\"\n\t\t\t\t\"Cache-Control,Content-Type\"\n\t\t\t),\n\t\t}\n\t)\n\n\ndef make_form_dict(request):\n\timport json\n\n\trequest_data = request.get_data(as_text=True)\n\tif \"application/json\" in (request.content_type or \"\") and request_data:\n\t\targs = json.loads(request_data)\n\telse:\n\t\targs = {}\n\t\targs.update(request.args or {})\n\t\targs.update(request.form or {})\n\n\tif not isinstance(args, dict):\n\t\tfrappe.throw(\"Invalid request arguments\")\n\n\ttry:\n\t\tfrappe.local.form_dict = frappe._dict(\n\t\t\t{k: v[0] if isinstance(v, (list, tuple)) else v for k, v in iteritems(args)}\n\t\t)\n\texcept IndexError:\n\t\tfrappe.local.form_dict = frappe._dict(args)\n\n\tif \"_\" in frappe.local.form_dict:\n\t\t# _ is passed by $.ajax so that the request is not cached by the browser. So, remove _ from form_dict\n\t\tfrappe.local.form_dict.pop(\"_\")\n\n\ndef handle_exception(e):\n\tresponse = None\n\thttp_status_code = getattr(e, \"http_status_code\", 500)\n\treturn_as_message = False\n\taccept_header = frappe.get_request_header(\"Accept\") or \"\"\n\trespond_as_json = (\n\t\tfrappe.get_request_header(\"Accept\")\n\t\tand (frappe.local.is_ajax or \"application/json\" in accept_header)\n\t\tor (frappe.local.request.path.startswith(\"/api/\") and not accept_header.startswith(\"text\"))\n\t)\n\n\tif respond_as_json:\n\t\t# handle ajax responses first\n\t\t# if the request is ajax, send back the trace or error message\n\t\tresponse = frappe.utils.response.report_error(http_status_code)\n\n\telif (\n\t\thttp_status_code == 500\n\t\tand (frappe.db and isinstance(e, frappe.db.InternalError))\n\t\tand (frappe.db and (frappe.db.is_deadlocked(e) or frappe.db.is_timedout(e)))\n\t):\n\t\thttp_status_code = 508\n\n\telif http_status_code == 401:\n\t\tfrappe.respond_as_web_page(\n\t\t\t_(\"Session Expired\"),\n\t\t\t_(\"Your session has expired, please login again to continue.\"),\n\t\t\thttp_status_code=http_status_code,\n\t\t\tindicator_color=\"red\",\n\t\t)\n\t\treturn_as_message = True\n\n\telif http_status_code == 403:\n\t\tfrappe.respond_as_web_page(\n\t\t\t_(\"Not Permitted\"),\n\t\t\t_(\"You do not have enough permissions to complete the action\"),\n\t\t\thttp_status_code=http_status_code,\n\t\t\tindicator_color=\"red\",\n\t\t)\n\t\treturn_as_message = True\n\n\telif http_status_code == 404:\n\t\tfrappe.respond_as_web_page(\n\t\t\t_(\"Not Found\"),\n\t\t\t_(\"The resource you are looking for is not available\"),\n\t\t\thttp_status_code=http_status_code,\n\t\t\tindicator_color=\"red\",\n\t\t)\n\t\treturn_as_message = True\n\n\telif http_status_code == 429:\n\t\tresponse = frappe.rate_limiter.respond()\n\n\telse:\n\t\ttraceback = \"<pre>\" + escape_html(frappe.get_traceback()) + \"</pre>\"\n\t\t# disable traceback in production if flag is set\n\t\tif frappe.local.flags.disable_traceback and not frappe.local.dev_server:\n\t\t\ttraceback = \"\"\n\n\t\tfrappe.respond_as_web_page(\n\t\t\t\"Server Error\", traceback, http_status_code=http_status_code, indicator_color=\"red\", width=640\n\t\t)\n\t\treturn_as_message = True\n\n\tif e.__class__ == frappe.AuthenticationError:\n\t\tif hasattr(frappe.local, \"login_manager\"):\n\t\t\tfrappe.local.login_manager.clear_cookies()\n\n\tif http_status_code >= 500:\n\t\tmake_error_snapshot(e)\n\n\tif return_as_message:\n\t\tresponse = frappe.website.render.render(\"message\", http_status_code=http_status_code)\n\n\tif frappe.conf.get(\"developer_mode\") and not respond_as_json:\n\t\t# don't fail silently for non-json response errors\n\t\tprint(frappe.get_traceback())\n\n\treturn response\n\n\ndef after_request(rollback):\n\tif (frappe.local.request.method in (\"POST\", \"PUT\") or frappe.local.flags.commit) and frappe.db:\n\t\tif frappe.db.transaction_writes:\n\t\t\tfrappe.db.commit()\n\t\t\trollback = False\n\n\t# update session\n\tif getattr(frappe.local, \"session_obj\", None):\n\t\tupdated_in_db = frappe.local.session_obj.update()\n\t\tif updated_in_db:\n\t\t\tfrappe.db.commit()\n\t\t\trollback = False\n\n\tupdate_comments_in_parent_after_request()\n\n\treturn rollback\n\n\napplication = local_manager.make_middleware(application)\n\n\ndef serve(\n\tport=8000, profile=False, no_reload=False, no_threading=False, site=None, sites_path=\".\"\n):\n\tglobal application, _site, _sites_path\n\t_site = site\n\t_sites_path = sites_path\n\n\tfrom werkzeug.serving import run_simple\n\n\tpatch_werkzeug_reloader()\n\n\tif profile:\n\t\tapplication = ProfilerMiddleware(application, sort_by=(\"cumtime\", \"calls\"))\n\n\tif not os.environ.get(\"NO_STATICS\"):\n\t\tapplication = SharedDataMiddleware(\n\t\t\tapplication, {str(\"/assets\"): str(os.path.join(sites_path, \"assets\"))}\n\t\t)\n\n\t\tapplication = StaticDataMiddleware(\n\t\t\tapplication, {str(\"/files\"): str(os.path.abspath(sites_path))}\n\t\t)\n\n\tapplication.debug = True\n\tapplication.config = {\"SERVER_NAME\": \"localhost:8000\"}\n\n\tlog = logging.getLogger(\"werkzeug\")\n\tlog.propagate = False\n\n\tin_test_env = os.environ.get(\"CI\")\n\tif in_test_env:\n\t\tlog.setLevel(logging.ERROR)\n\n\trun_simple(\n\t\t\"0.0.0.0\",\n\t\tint(port),\n\t\tapplication,\n\t\tuse_reloader=False if in_test_env else not no_reload,\n\t\tuse_debugger=not in_test_env,\n\t\tuse_evalex=not in_test_env,\n\t\tthreaded=not no_threading,\n\t)\n\n\ndef patch_werkzeug_reloader():\n\t\"\"\"\n\tThis function monkey patches Werkzeug reloader to ignore reloading files in\n\tthe __pycache__ directory.\n\n\tTo be deprecated when upgrading to Werkzeug 2.\n\t\"\"\"\n\n\tfrom werkzeug._reloader import WatchdogReloaderLoop\n\n\ttrigger_reload = WatchdogReloaderLoop.trigger_reload\n\n\tdef custom_trigger_reload(self, filename):\n\t\tif os.path.basename(os.path.dirname(filename)) == \"__pycache__\":\n\t\t\treturn\n\n\t\treturn trigger_reload(self, filename)\n\n\tWatchdogReloaderLoop.trigger_reload = custom_trigger_reload\n", "code_before": "# -*- coding: utf-8 -*-\n# Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n# MIT License. See license.txt\nfrom __future__ import unicode_literals\n\nimport logging\nimport os\n\nfrom six import iteritems\nfrom werkzeug.exceptions import HTTPException, NotFound\nfrom werkzeug.local import LocalManager\nfrom werkzeug.middleware.profiler import ProfilerMiddleware\nfrom werkzeug.middleware.shared_data import SharedDataMiddleware\nfrom werkzeug.wrappers import Request, Response\n\nimport frappe\nimport frappe.api\nimport frappe.auth\nimport frappe.handler\nimport frappe.monitor\nimport frappe.rate_limiter\nimport frappe.recorder\nimport frappe.utils.response\nimport frappe.website.render\nfrom frappe import _\nfrom frappe.core.doctype.comment.comment import update_comments_in_parent_after_request\nfrom frappe.middlewares import StaticDataMiddleware\nfrom frappe.utils import get_site_name, sanitize_html\nfrom frappe.utils.error import make_error_snapshot\n\nlocal_manager = LocalManager([frappe.local])\n\n_site = None\n_sites_path = os.environ.get(\"SITES_PATH\", \".\")\n\n\nclass RequestContext(object):\n\tdef __init__(self, environ):\n\t\tself.request = Request(environ)\n\n\tdef __enter__(self):\n\t\tinit_request(self.request)\n\n\tdef __exit__(self, type, value, traceback):\n\t\tfrappe.destroy()\n\n\n@Request.application\ndef application(request):\n\tresponse = None\n\n\ttry:\n\t\trollback = True\n\n\t\tinit_request(request)\n\n\t\tfrappe.api.validate_auth()\n\n\t\tif request.method == \"OPTIONS\":\n\t\t\tresponse = Response()\n\n\t\telif frappe.form_dict.cmd:\n\t\t\tresponse = frappe.handler.handle()\n\n\t\telif request.path.startswith(\"/api/\"):\n\t\t\tresponse = frappe.api.handle()\n\n\t\telif request.path.startswith(\"/backups\"):\n\t\t\tresponse = frappe.utils.response.download_backup(request.path)\n\n\t\telif request.path.startswith(\"/private/files/\"):\n\t\t\tresponse = frappe.utils.response.download_private_file(request.path)\n\n\t\telif request.method in (\"GET\", \"HEAD\", \"POST\"):\n\t\t\tresponse = frappe.website.render.render()\n\n\t\telse:\n\t\t\traise NotFound\n\n\texcept HTTPException as e:\n\t\treturn e\n\n\texcept frappe.SessionStopped as e:\n\t\tresponse = frappe.utils.response.handle_session_stopped()\n\n\texcept Exception as e:\n\t\tresponse = handle_exception(e)\n\n\telse:\n\t\trollback = after_request(rollback)\n\n\tfinally:\n\t\t# Important note:\n\t\t# this function *must* always return a response, hence any exception thrown outside of\n\t\t# try..catch block like this finally block needs to be handled appropriately.\n\n\t\tif request.method in (\"POST\", \"PUT\") and frappe.db and rollback:\n\t\t\tfrappe.db.rollback()\n\n\t\ttry:\n\t\t\trun_after_request_hooks(request, response)\n\t\texcept Exception as e:\n\t\t\t# We can not handle exceptions safely here.\n\t\t\tfrappe.logger().error(\"Failed to run after request hook\", exc_info=True)\n\n\t\tlog_request(request, response)\n\t\tprocess_response(response)\n\t\tfrappe.destroy()\n\n\treturn response\n\n\ndef run_after_request_hooks(request, response):\n\tif not getattr(frappe.local, \"initialised\", False):\n\t\treturn\n\n\tfor after_request_task in frappe.get_hooks(\"after_request\"):\n\t\tfrappe.call(after_request_task, response=response, request=request)\n\n\ndef init_request(request):\n\tfrappe.local.request = request\n\tfrappe.local.is_ajax = frappe.get_request_header(\"X-Requested-With\") == \"XMLHttpRequest\"\n\n\tsite = _site or request.headers.get(\"X-Frappe-Site-Name\") or get_site_name(request.host)\n\tfrappe.init(site=site, sites_path=_sites_path, force=True)\n\n\tif not (frappe.local.conf and frappe.local.conf.db_name):\n\t\t# site does not exist\n\t\traise NotFound\n\n\tif frappe.local.conf.get(\"maintenance_mode\"):\n\t\tfrappe.connect()\n\t\traise frappe.SessionStopped(\"Session Stopped\")\n\telse:\n\t\tfrappe.connect(set_admin_as_user=False)\n\n\tmake_form_dict(request)\n\n\tif request.method != \"OPTIONS\":\n\t\tfrappe.local.http_request = frappe.auth.HTTPRequest()\n\n\tfor before_request_task in frappe.get_hooks(\"before_request\"):\n\t\tfrappe.call(before_request_task)\n\n\ndef log_request(request, response):\n\tif hasattr(frappe.local, \"conf\") and frappe.local.conf.enable_frappe_logger:\n\t\tfrappe.logger(\"frappe.web\", allow_site=frappe.local.site).info(\n\t\t\t{\n\t\t\t\t\"site\": get_site_name(request.host),\n\t\t\t\t\"remote_addr\": getattr(request, \"remote_addr\", \"NOTFOUND\"),\n\t\t\t\t\"base_url\": getattr(request, \"base_url\", \"NOTFOUND\"),\n\t\t\t\t\"full_path\": getattr(request, \"full_path\", \"NOTFOUND\"),\n\t\t\t\t\"method\": getattr(request, \"method\", \"NOTFOUND\"),\n\t\t\t\t\"scheme\": getattr(request, \"scheme\", \"NOTFOUND\"),\n\t\t\t\t\"http_status_code\": getattr(response, \"status_code\", \"NOTFOUND\"),\n\t\t\t}\n\t\t)\n\n\ndef process_response(response):\n\tif not response:\n\t\treturn\n\n\t# set cookies\n\tif hasattr(frappe.local, \"cookie_manager\"):\n\t\tfrappe.local.cookie_manager.flush_cookies(response=response)\n\n\t# rate limiter headers\n\tif hasattr(frappe.local, \"rate_limiter\"):\n\t\tresponse.headers.extend(frappe.local.rate_limiter.headers())\n\n\t# CORS headers\n\tif hasattr(frappe.local, \"conf\") and frappe.conf.allow_cors:\n\t\tset_cors_headers(response)\n\n\ndef set_cors_headers(response):\n\torigin = frappe.request.headers.get(\"Origin\")\n\tallow_cors = frappe.conf.allow_cors\n\tif not (origin and allow_cors):\n\t\treturn\n\n\tif allow_cors != \"*\":\n\t\tif not isinstance(allow_cors, list):\n\t\t\tallow_cors = [allow_cors]\n\n\t\tif origin not in allow_cors:\n\t\t\treturn\n\n\tresponse.headers.extend(\n\t\t{\n\t\t\t\"Access-Control-Allow-Origin\": origin,\n\t\t\t\"Access-Control-Allow-Credentials\": \"true\",\n\t\t\t\"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS\",\n\t\t\t\"Access-Control-Allow-Headers\": (\n\t\t\t\t\"Authorization,DNT,X-Mx-ReqToken,\"\n\t\t\t\t\"Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,\"\n\t\t\t\t\"Cache-Control,Content-Type\"\n\t\t\t),\n\t\t}\n\t)\n\n\ndef make_form_dict(request):\n\timport json\n\n\trequest_data = request.get_data(as_text=True)\n\tif \"application/json\" in (request.content_type or \"\") and request_data:\n\t\targs = json.loads(request_data)\n\telse:\n\t\targs = {}\n\t\targs.update(request.args or {})\n\t\targs.update(request.form or {})\n\n\tif not isinstance(args, dict):\n\t\tfrappe.throw(\"Invalid request arguments\")\n\n\ttry:\n\t\tfrappe.local.form_dict = frappe._dict(\n\t\t\t{k: v[0] if isinstance(v, (list, tuple)) else v for k, v in iteritems(args)}\n\t\t)\n\texcept IndexError:\n\t\tfrappe.local.form_dict = frappe._dict(args)\n\n\tif \"_\" in frappe.local.form_dict:\n\t\t# _ is passed by $.ajax so that the request is not cached by the browser. So, remove _ from form_dict\n\t\tfrappe.local.form_dict.pop(\"_\")\n\n\ndef handle_exception(e):\n\tresponse = None\n\thttp_status_code = getattr(e, \"http_status_code\", 500)\n\treturn_as_message = False\n\taccept_header = frappe.get_request_header(\"Accept\") or \"\"\n\trespond_as_json = (\n\t\tfrappe.get_request_header(\"Accept\")\n\t\tand (frappe.local.is_ajax or \"application/json\" in accept_header)\n\t\tor (frappe.local.request.path.startswith(\"/api/\") and not accept_header.startswith(\"text\"))\n\t)\n\n\tif respond_as_json:\n\t\t# handle ajax responses first\n\t\t# if the request is ajax, send back the trace or error message\n\t\tresponse = frappe.utils.response.report_error(http_status_code)\n\n\telif (\n\t\thttp_status_code == 500\n\t\tand (frappe.db and isinstance(e, frappe.db.InternalError))\n\t\tand (frappe.db and (frappe.db.is_deadlocked(e) or frappe.db.is_timedout(e)))\n\t):\n\t\thttp_status_code = 508\n\n\telif http_status_code == 401:\n\t\tfrappe.respond_as_web_page(\n\t\t\t_(\"Session Expired\"),\n\t\t\t_(\"Your session has expired, please login again to continue.\"),\n\t\t\thttp_status_code=http_status_code,\n\t\t\tindicator_color=\"red\",\n\t\t)\n\t\treturn_as_message = True\n\n\telif http_status_code == 403:\n\t\tfrappe.respond_as_web_page(\n\t\t\t_(\"Not Permitted\"),\n\t\t\t_(\"You do not have enough permissions to complete the action\"),\n\t\t\thttp_status_code=http_status_code,\n\t\t\tindicator_color=\"red\",\n\t\t)\n\t\treturn_as_message = True\n\n\telif http_status_code == 404:\n\t\tfrappe.respond_as_web_page(\n\t\t\t_(\"Not Found\"),\n\t\t\t_(\"The resource you are looking for is not available\"),\n\t\t\thttp_status_code=http_status_code,\n\t\t\tindicator_color=\"red\",\n\t\t)\n\t\treturn_as_message = True\n\n\telif http_status_code == 429:\n\t\tresponse = frappe.rate_limiter.respond()\n\n\telse:\n\t\ttraceback = \"<pre>\" + sanitize_html(frappe.get_traceback()) + \"</pre>\"\n\t\t# disable traceback in production if flag is set\n\t\tif frappe.local.flags.disable_traceback and not frappe.local.dev_server:\n\t\t\ttraceback = \"\"\n\n\t\tfrappe.respond_as_web_page(\n\t\t\t\"Server Error\", traceback, http_status_code=http_status_code, indicator_color=\"red\", width=640\n\t\t)\n\t\treturn_as_message = True\n\n\tif e.__class__ == frappe.AuthenticationError:\n\t\tif hasattr(frappe.local, \"login_manager\"):\n\t\t\tfrappe.local.login_manager.clear_cookies()\n\n\tif http_status_code >= 500:\n\t\tmake_error_snapshot(e)\n\n\tif return_as_message:\n\t\tresponse = frappe.website.render.render(\"message\", http_status_code=http_status_code)\n\n\tif frappe.conf.get(\"developer_mode\") and not respond_as_json:\n\t\t# don't fail silently for non-json response errors\n\t\tprint(frappe.get_traceback())\n\n\treturn response\n\n\ndef after_request(rollback):\n\tif (frappe.local.request.method in (\"POST\", \"PUT\") or frappe.local.flags.commit) and frappe.db:\n\t\tif frappe.db.transaction_writes:\n\t\t\tfrappe.db.commit()\n\t\t\trollback = False\n\n\t# update session\n\tif getattr(frappe.local, \"session_obj\", None):\n\t\tupdated_in_db = frappe.local.session_obj.update()\n\t\tif updated_in_db:\n\t\t\tfrappe.db.commit()\n\t\t\trollback = False\n\n\tupdate_comments_in_parent_after_request()\n\n\treturn rollback\n\n\napplication = local_manager.make_middleware(application)\n\n\ndef serve(\n\tport=8000, profile=False, no_reload=False, no_threading=False, site=None, sites_path=\".\"\n):\n\tglobal application, _site, _sites_path\n\t_site = site\n\t_sites_path = sites_path\n\n\tfrom werkzeug.serving import run_simple\n\n\tpatch_werkzeug_reloader()\n\n\tif profile:\n\t\tapplication = ProfilerMiddleware(application, sort_by=(\"cumtime\", \"calls\"))\n\n\tif not os.environ.get(\"NO_STATICS\"):\n\t\tapplication = SharedDataMiddleware(\n\t\t\tapplication, {str(\"/assets\"): str(os.path.join(sites_path, \"assets\"))}\n\t\t)\n\n\t\tapplication = StaticDataMiddleware(\n\t\t\tapplication, {str(\"/files\"): str(os.path.abspath(sites_path))}\n\t\t)\n\n\tapplication.debug = True\n\tapplication.config = {\"SERVER_NAME\": \"localhost:8000\"}\n\n\tlog = logging.getLogger(\"werkzeug\")\n\tlog.propagate = False\n\n\tin_test_env = os.environ.get(\"CI\")\n\tif in_test_env:\n\t\tlog.setLevel(logging.ERROR)\n\n\trun_simple(\n\t\t\"0.0.0.0\",\n\t\tint(port),\n\t\tapplication,\n\t\tuse_reloader=False if in_test_env else not no_reload,\n\t\tuse_debugger=not in_test_env,\n\t\tuse_evalex=not in_test_env,\n\t\tthreaded=not no_threading,\n\t)\n\n\ndef patch_werkzeug_reloader():\n\t\"\"\"\n\tThis function monkey patches Werkzeug reloader to ignore reloading files in\n\tthe __pycache__ directory.\n\n\tTo be deprecated when upgrading to Werkzeug 2.\n\t\"\"\"\n\n\tfrom werkzeug._reloader import WatchdogReloaderLoop\n\n\ttrigger_reload = WatchdogReloaderLoop.trigger_reload\n\n\tdef custom_trigger_reload(self, filename):\n\t\tif os.path.basename(os.path.dirname(filename)) == \"__pycache__\":\n\t\t\treturn\n\n\t\treturn trigger_reload(self, filename)\n\n\tWatchdogReloaderLoop.trigger_reload = custom_trigger_reload\n", "patch": "@@ -25,7 +25,7 @@\n from frappe import _\n from frappe.core.doctype.comment.comment import update_comments_in_parent_after_request\n from frappe.middlewares import StaticDataMiddleware\n-from frappe.utils import get_site_name, sanitize_html\n+from frappe.utils import escape_html, get_site_name\n from frappe.utils.error import make_error_snapshot\n \n local_manager = LocalManager([frappe.local])\n@@ -283,7 +283,7 @@ def handle_exception(e):\n \t\tresponse = frappe.rate_limiter.respond()\n \n \telse:\n-\t\ttraceback = \"<pre>\" + sanitize_html(frappe.get_traceback()) + \"</pre>\"\n+\t\ttraceback = \"<pre>\" + escape_html(frappe.get_traceback()) + \"</pre>\"\n \t\t# disable traceback in production if flag is set\n \t\tif frappe.local.flags.disable_traceback and not frappe.local.dev_server:\n \t\t\ttraceback = \"\"", "file_path": "files/2023_10/593", "file_language": "py", "file_name": "frappe/app.py", "outdated_file_modify": 0, "outdated_file_before": 1, "outdated_file_after": 0, "llm_check": 1, "static_check": 0, "static": {"rats": [false, []], "semgrep": [false, []]}, "target": -1, "function_before": [], "function_after": []}], "outdated": 0, "cwe_descripiton": "", "cwe_consequence": "", "cwe_method": "", "cwe_solution": ""}
