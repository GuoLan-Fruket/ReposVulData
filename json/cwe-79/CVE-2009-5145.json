{"index": 2235, "cve_id": "CVE-2009-5145", "cwe_id": ["CWE-79"], "cve_language": "Python", "cve_description": "Cross-site scripting (XSS) vulnerability in ZMI pages that use the manage_tabs_message in Zope 2.11.4, 2.11.2, 2.10.9, 2.10.7, 2.10.6, 2.10.5, 2.10.4, 2.10.2, 2.10.1, 2.12.", "cvss": "6.1", "publish_date": "August 7, 2017", "AV": "NETWORK", "AC": "NETWORK", "PR": "NONE", "UI": "REQUIRED", "S": "CHANGED", "C": "LOW", "I": "LOW", "A": "NONE", "commit_id": "2abdf14620f146857dc8e3ffd2b6a754884c331d", "commit_message": "LP #490514:  preserve tainting when calling into DTML from ZPT.", "commit_date": "2009-12-02T15:43:39Z", "project": "zopefoundation/zope", "url": "https://api.github.com/repos/zopefoundation/Zope/commits/2abdf14620f146857dc8e3ffd2b6a754884c331d", "html_url": "https://github.com/zopefoundation/Zope/commit/2abdf14620f146857dc8e3ffd2b6a754884c331d", "windows_before": [{"commit_id": "7396bf1489764eeb1e6d2d667fee7903d812b6ca", "commit_date": "Mon Nov 30 23:21:51 2009 +0000", "commit_message": "LP #490514:  preserve tainting when calling into DTML from ZPT.", "files_name": ["doc/CHANGES.rst", "src/Products/PageTemplates/ZRPythonExpr.py", "src/Products/PageTemplates/tests/testZRPythonExpr.py"]}, {"commit_id": "334d59021bcee7e07c2b983448f559f735f759e3", "commit_date": "Sun Nov 29 19:59:46 2009 +0000", "commit_message": "Merged r106105:106106 from 2.12 branch", "files_name": ["src/App/dtml/manage_page_header.dtml", "src/Products/PageTemplates/tests/testZopePageTemplate.py"]}, {"commit_id": "815f006f900a8fe17aed9bbf9e4e388e662d7d3d", "commit_date": "Sun Nov 29 19:57:01 2009 +0000", "commit_message": "Updated the default value for ``management_page_charset`` from iso-8859-1 to the nowadays more standard utf-8.", "files_name": ["doc/CHANGES.rst", "src/App/dtml/manage_page_header.dtml"]}, {"commit_id": "ed47b9fda325011ae4a0058d57482b0fcaf37f8b", "commit_date": "Sun Nov 29 19:53:35 2009 +0000", "commit_message": "de-tabbify", "files_name": ["src/Products/PageTemplates/tests/testZopePageTemplate.py"]}, {"commit_id": "ac7b3965fd8850be38167ca0d1dfb07c5a94236e", "commit_date": "Tue Nov 17 07:52:00 2009 +0000", "commit_message": "- updated comments ('SOFTWARE_URL' was removed 10 years ago) - removed unused import", "files_name": ["src/OFS/SimpleItem.py", "src/OFS/interfaces.py"]}, {"commit_id": "2bf02b7034e434542b8d7bfcc80bd7ea7a2a1993", "commit_date": "Fri Nov 13 06:42:23 2009 +0000", "commit_message": "Be a bit more forceful about aborting the transaction", "files_name": ["src/ZPublisher/Publish.py"]}, {"commit_id": "127049ad561a4f6d1b9f6300da25331b6128cfa9", "commit_date": "Fri Nov 13 05:59:41 2009 +0000", "commit_message": "Added IPubBeforeAbort event to mirror IPubBeforeCommit in failure scenarios. This event is fired just before IPubFailure, but, crucially, while the transaction is still open.", "files_name": ["doc/CHANGES.rst", "src/ZPublisher/Publish.py", "src/ZPublisher/interfaces.py", "src/ZPublisher/pubevents.py", "src/ZPublisher/tests/testpubevents.py"]}, {"commit_id": "35d407e2c41f47e388c2d2c3902c0344ed4b3b06", "commit_date": "Sun Nov 8 11:26:18 2009 +0000", "commit_message": "- requires Python 2.6 - keeping inofficial support for Python 2.5 - dropping any support for Python 2.4", "files_name": ["doc/CHANGES.rst", "doc/INSTALL.rst"]}, {"commit_id": "749975f35759793b9c11002974a70b61079fb25e", "commit_date": "Sun Nov 8 11:22:57 2009 +0000", "commit_message": "Official support for one Python version (2.6 only)", "files_name": ["doc/CHANGES.rst", "doc/INSTALL.rst"]}, {"commit_id": "9ee51d6f9cf0fb267f6351678da43fb1e560ea14", "commit_date": "Sun Nov 8 01:08:10 2009 +0000", "commit_message": "Merged c105511 from 2.12 branch", "files_name": ["src/App/CacheManager.py", "src/App/dtml/cacheParameters.dtml"]}, {"commit_id": "f60aa9ac142231c71ab03f59331c294aeb7e969d", "commit_date": "Sun Nov 8 01:06:06 2009 +0000", "commit_message": "Include bytes limited cache size in the cache parameters ZMI screen", "files_name": ["doc/CHANGES.rst", "src/App/CacheManager.py", "src/App/dtml/cacheParameters.dtml"]}, {"commit_id": "638f9fef3f2a07047d970d2fc146a81294957189", "commit_date": "Fri Nov 6 08:21:09 2009 +0000", "commit_message": "Avoid possible errors on test tear-down in Products.Five.fiveconfigure's cleanUp() function if Products.meta_types has not been set", "files_name": ["doc/CHANGES.rst", "src/Products/Five/fiveconfigure.py"]}, {"commit_id": "63982e3c12f20df99e05e7282eb3fd9b28b94410", "commit_date": "Mon Nov 2 14:16:48 2009 +0000", "commit_message": "- fix search range identifier (\"min:max\" instead of \"minmax\")", "files_name": ["zope2book/SearchingZCatalog.rst"]}, {"commit_id": "86fcf435faaa0babb96905629a16f0e2a830cb60", "commit_date": "Mon Nov 2 05:34:39 2009 +0000", "commit_message": "open for Zope 2.12.2-dev", "files_name": ["doc/CHANGES.rst", "setup.py"]}, {"commit_id": "ab052868adbd6b1a5cd806aab63159ade3883a0a", "commit_date": "Mon Nov 2 05:33:42 2009 +0000", "commit_message": "Zope 2.12.1", "files_name": ["110a9cd50bee18471686a0d54a92a2ef65a7ec30 - Sun Nov 1 12:45:14 2009 +0000 : updated", "setup.py"]}, {"commit_id": "75e6bcd916c18b0dfcec63d9d9ee8114741fbd97", "commit_date": "Sun Nov 1 12:38:46 2009 +0000", "commit_message": "2.12.1", "files_name": ["doc/CHANGES.rst", "inst/WinBuilders/mk/zope.mk", "inst/versions.py"]}, {"commit_id": "360fd83e6e7c0e6371789d61e5c1437c65bd0bab", "commit_date": "Sat Oct 31 11:04:38 2009 +0000", "commit_message": "Merged c105405 from 2.12 branch", "files_name": ["src/App/class_init.py"]}, {"commit_id": "324f0e9cbf6918d6131570265896a7183d855351", "commit_date": "Sat Oct 31 11:03:24 2009 +0000", "commit_message": "LP #411732: Silence security declaration warnings for context and request on views protected by an interface.", "files_name": ["doc/CHANGES.rst", "src/App/class_init.py"]}, {"commit_id": "e6ef611a866d91c00f72c57a3e2ae308b35d3091", "commit_date": "Sat Oct 31 10:54:24 2009 +0000", "commit_message": "Update to setuptools = 0.6c11", "files_name": ["doc/CHANGES.rst", "versions.cfg"]}, {"commit_id": "8960ead60c82ead9b956a899dc32153139df8cbe", "commit_date": "Fri Oct 30 18:35:26 2009 +0000", "commit_message": "merge changes from Zope 2.12 branch: - fix LP #461446: zopectl in interactive mode exited when the start/stop/etc commands were used - zopectl status now works on Windows - zopectl fg doesn't bomb if you hit Ctrl-C in Windows anymore.", "files_name": ["src/Zope2/Startup/zopectl.py"]}, {"commit_id": "606aafb40ddeb20b4251181c0e8651362d9735d0", "commit_date": "Fri Oct 30 18:29:22 2009 +0000", "commit_message": "Don't whine and barf when someone hits Ctrl-C during zopectl fg on Windows.", "files_name": ["src/Zope2/Startup/zopectl.py"]}, {"commit_id": "8ec4a9fc043e884f20e050400e4f81aa602c4a51", "commit_date": "Fri Oct 30 18:26:59 2009 +0000", "commit_message": "Fix zopectl status on Windows by borrowing from: http://svn.plone.org/svn/collective/buildout/plone.recipe.zope2instance/trunk/src/plone/recipe/zope2instance/ctl.py", "files_name": ["src/Zope2/Startup/zopectl.py"]}, {"commit_id": "07b89a02e6216c735247661f8a09175f5e597e2e", "commit_date": "Fri Oct 30 17:30:18 2009 +0000", "commit_message": "Fix for LP #61446: running zopectl in interactive mode on Windows exited after start/stop/install/remove commands were issued.", "files_name": ["src/Zope2/Startup/zopectl.py"]}, {"commit_id": "0253cdccd9063d1066e396da3fa5d2c1437c5689", "commit_date": "Thu Oct 29 10:26:07 2009 +0000", "commit_message": "Merged c105358 from 2.12 branch", "files_name": ["versions.cfg"]}, {"commit_id": "022292abac18418a350ffa178b8b4e7afedce20b", "commit_date": "Thu Oct 29 10:22:19 2009 +0000", "commit_message": "Update to Acquisition = 2.12.4", "files_name": ["doc/CHANGES.rst", "versions.cfg"]}, {"commit_id": "26dfa965cbc39fdd0bd8dd985cd725eb71e89e00", "commit_date": "Fri Oct 23 16:37:09 2009 +0000", "commit_message": "ZODB 3.9.3", "files_name": ["doc/CHANGES.rst", "versions.cfg"]}, {"commit_id": "6a51e06b2d54ef5d9026bc8ee705b9f21932e01d", "commit_date": "Sat Oct 17 06:41:06 2009 +0000", "commit_message": "make zopectl start work again, refs LP #453723", "files_name": ["doc/CHANGES.rst", "src/Zope2/Startup/zopectl.py"]}, {"commit_id": "554fe7542c87528406bb3d5d58e87d7ed8fb1285", "commit_date": "Thu Oct 15 20:03:56 2009 +0000", "commit_message": "Forward port 105096 to trunk. Missed Globals removal.", "files_name": ["src/Shared/DC/ZRDB/Connection.py"]}, {"commit_id": "432a4621342f4845a010fd52d37d271ac38f30c2", "commit_date": "Thu Oct 15 20:00:37 2009 +0000", "commit_message": "Tres, you missed a spot", "files_name": ["src/Shared/DC/ZRDB/Connection.py"]}, {"commit_id": "11a971c1a1a54a2a944cd357b7e981bbb46ecef1", "commit_date": "Thu Oct 15 19:45:21 2009 +0000", "commit_message": "- fix link to Zope2 book", "files_name": ["src/App/dtml/zope_quick_start.dtml"]}, {"commit_id": "c066a1a833c4ef10d339c442a7a1540585c1ca7b", "commit_date": "Thu Oct 15 19:42:07 2009 +0000", "commit_message": "- correct link to the Zope2 Book", "files_name": ["src/App/dtml/zope_quick_start.dtml"]}, {"commit_id": "6a6fe9ad1d75021f9e5ef740cb438f844b6c2687", "commit_date": "Thu Oct 15 11:08:20 2009 +0000", "commit_message": "forward-port r105078 to trunk", "files_name": ["src/ZPublisher/BaseRequest.py"]}, {"commit_id": "8ee8a127f827aabc958ffa9f1b30bc6d38a34d0c", "commit_date": "Thu Oct 15 11:03:28 2009 +0000", "commit_message": "update for r104360/104361: event subscribers might still need the zodb, so `clear` must not be called before `notify` as otherwise `self._held=None` might close the connection (refs LP #414757)", "files_name": ["src/ZPublisher/BaseRequest.py"]}, {"commit_id": "fda339741d83b4f6d8ff68957fe51de62a5430a8", "commit_date": "Wed Oct 14 08:57:25 2009 +0000", "commit_message": "Merge 105060 from branch 2.12: Fix HelpSys to work with zope.interface.Interface as it did before the deprecated methods of scarecrow Interface.Interface were removed.", "files_name": ["src/HelpSys/APIHelpTopic.py"]}, {"commit_id": "ea0174f03f229e2033c6f9d50e0c6ca4699c7273", "commit_date": "Wed Oct 14 08:54:25 2009 +0000", "commit_message": "Fix HelpSys to work with zope.interface.Interface as it did before the deprecated methods of scarecrow Interface.Interface were removed.", "files_name": ["src/HelpSys/APIHelpTopic.py"]}, {"commit_id": "060f14576902778e42a314a780fd59872969f8ae", "commit_date": "Tue Oct 13 16:28:22 2009 +0000", "commit_message": "Merged Zope/branches/tyam-unicodeSplitterPatch 104723:104761", "files_name": ["src/Products/ZCTextIndex/Lexicon.py", "src/Products/ZCTextIndex/tests/testLexicon.py"]}, {"commit_id": "fa090d93851649303efacedd4e27d41d9f4f3978", "commit_date": "Tue Oct 13 09:23:58 2009 +0000", "commit_message": "Merged Zope/branches/tyam-unicodeSplitterPatch 104723:104761", "files_name": ["src/Products/ZCTextIndex/Lexicon.py", "src/Products/ZCTextIndex/tests/testLexicon.py"]}, {"commit_id": "a5596551168caceec987d1942b800206817285a0", "commit_date": "Tue Oct 13 09:01:15 2009 +0000", "commit_message": "pkg_resources should be always available (setuptools is a hard-dependency for Zope 2)", "files_name": ["src/Products/__init__.py"]}, {"commit_id": "6ca4a3b9c6c212bfd33b961453862c2cc0f7e224", "commit_date": "Tue Oct 13 08:53:46 2009 +0000", "commit_message": "Use latest bootstrap.py available (Now support --version option to choose a  particular version of zc.buildout)", "files_name": ["bootstrap.py"]}, {"commit_id": "b1ecc601682ca43a72099ee5cf7ced0f3753ba5f", "commit_date": "Sun Oct 11 18:07:25 2009 +0000", "commit_message": "Dead decoy - go away", "files_name": ["alltests.cfg"]}, {"commit_id": "0b7c433b5215ba4ea7e98e88081a7f96dcc420e1", "commit_date": "Sun Oct 11 18:01:28 2009 +0000", "commit_message": "The nightlies don't use this file anymore", "files_name": ["alltests.cfg"]}, {"commit_id": "182377185a1c6203c295f1a9523a0c98284844c6", "commit_date": "Sat Oct 10 12:41:10 2009 +0000", "commit_message": "Re-align with 2.12 branch version", "files_name": ["buildout.cfg"]}, {"commit_id": "545f6ab42d824ad31eddd60639ed611163914e94", "commit_date": "Sat Oct 10 12:39:30 2009 +0000", "commit_message": "Include allpy as done in trunk", "files_name": ["buildout.cfg"]}, {"commit_id": "6b19d914e083a38714eb5991bb6db28e5ebcc21f", "commit_date": "Sat Oct 10 12:37:00 2009 +0000", "commit_message": "Merged alltests into the main buildout.cfg", "files_name": ["alltests.cfg", "buildout.cfg"]}, {"commit_id": "8020d1af143eb388f04e34a893864684c07c6955", "commit_date": "Sat Oct 10 06:23:59 2009 +0000", "commit_message": "numbered chapters", "files_name": ["zope2book/index.rst"]}, {"commit_id": "b6537344cce00f6afd1e486206726cab5f6e3678", "commit_date": "Sat Oct 10 06:20:10 2009 +0000", "commit_message": "merge re-organize branch", "files_name": ["Makefile", "buildout.cfg", "index.rst", "zdgbook/Acquisition.rst", "zdgbook/AppendixA.rst", "zdgbook/ComponentsAndInterfaces.rst", "zdgbook/Credits.txt", "zdgbook/GettingStarted.rst", "zdgbook/Gotchas.txt", "zdgbook/Introduction.rst", "zdgbook/Makefile", "zdgbook/ObjectPublishing.rst", "zdgbook/Outline.txt", "zdgbook/Products.rst", "zdgbook/Security.rst", "zdgbook/TestingAndDebugging.rst", "zdgbook/ZODBPersistentComponents.rst", "zdgbook/bootstrap.py", "zdgbook/buildout.cfg", "zdgbook/index.rst", "zdgbook/source/conf.py", "zope2book/Acquisition.rst", "zope2book/AdvDTML.rst", "zope2book/AdvZPT.rst", "zope2book/AppendixA.rst", "zope2book/AppendixB.rst", "zope2book/AppendixC.rst", "zope2book/AppendixD.rst", "zope2book/AppendixE.rst", "zope2book/BasicObject.rst", "zope2book/BasicScripting.rst", "zope2book/Contributions.rst"]}], "windows_after": [{"commit_id": "03905b428719b36a20092be8b74c4a0337205fc1", "commit_date": "Wed Dec 2 15:46:46 2009 +0000", "commit_message": "LP #491249:  fix tabindex on ZRDB connection test form.", "files_name": ["doc/CHANGES.rst", "src/Shared/DC/ZRDB/dtml/connectionTestForm.dtml"]}, {"commit_id": "b02d9cf430804440d67a26e2cb911c98a3aea429", "commit_date": "Wed Dec 2 15:46:59 2009 +0000", "commit_message": "LP #491249:  fix tabindex on ZRDB connection test form.", "files_name": ["doc/CHANGES.rst", "src/Shared/DC/ZRDB/dtml/connectionTestForm.dtml"]}, {"commit_id": "31d14b29dfaf6f57f4b491025dac41bf7c87689a", "commit_date": "Sun Dec 13 09:28:23 2009 +0000", "commit_message": "Fix regression in treatment of trusted code in view page templates.", "files_name": ["doc/CHANGES.rst", "src/Products/Five/browser/tests/test_pagetemplatefile.py", "src/Products/PageTemplates/Expressions.py"]}, {"commit_id": "187c84fbad08397506749e04b66c04e077a42ec6", "commit_date": "Sun Dec 13 09:44:17 2009 +0000", "commit_message": "Merge r106436 from 2.12 branch, fixing a regression in the ZPT engine for trusted code", "files_name": ["src/Products/Five/browser/tests/test_pagetemplatefile.py", "src/Products/PageTemplates/Expressions.py"]}, {"commit_id": "4e8d6b521134617589f531658a399e5a072b8dd9", "commit_date": "Mon Dec 14 23:05:24 2009 +0000", "commit_message": "Restore docs for ExternalMethods.", "files_name": ["zope2book/BasicObject.rst", "zope2book/ScriptingZope.rst"]}, {"commit_id": "aa8b47af0e4401fddd91fb97b11d56ff2e34929e", "commit_date": "Tue Dec 15 14:41:53 2009 +0000", "commit_message": "The quest for no zope.app dependencies continues on trunk", "files_name": ["ZOPE_APP_DEPENDENCIES.rst"]}, {"commit_id": "388650e79100a4e52d7e186af1e2e95582f8ac42", "commit_date": "Tue Dec 15 14:43:43 2009 +0000", "commit_message": "Updated bootstrap to latest version", "files_name": ["bootstrap.py"]}, {"commit_id": "0c91be2afe656d563ec95d07e30a27b8703e4533", "commit_date": "Tue Dec 15 14:44:22 2009 +0000", "commit_message": "Updated bootstrap to latest version", "files_name": ["bootstrap.py"]}, {"commit_id": "8bc9075e1f7251c5fc69ae92f2f6eca05c0b7e0c", "commit_date": "Tue Dec 15 15:30:22 2009 +0000", "commit_message": "Updated a bunch of packages to new bug fix releases", "files_name": ["doc/CHANGES.rst", "versions.cfg"]}, {"commit_id": "1351879866d27af8af0ef6880c27777206ab95d5", "commit_date": "Tue Dec 15 16:02:04 2009 +0000", "commit_message": "PEP8, remove unused imports, normalize docstrings.", "files_name": ["src/OFS/DTMLDocument.py"]}, {"commit_id": "839aeb97bf8ad5b7d4d8d43da79f787a2cb1892b", "commit_date": "Tue Dec 15 16:22:15 2009 +0000", "commit_message": "PEP8, remove unused imports, normalize docstrings.", "files_name": ["src/OFS/DTMLMethod.py"]}, {"commit_id": "1e8f96f1b8ba9be4d72d950241327e22c752b554", "commit_date": "Tue Dec 15 16:48:41 2009 +0000", "commit_message": "LP #496941:  Remove all mention of ``standard_html_header`` and ``standard_html_footer`` from default DTML content.", "files_name": ["doc/CHANGES.rst", "src/HelpSys/HelpTopic.py", "src/OFS/DTMLDocument.py", "src/OFS/DTMLMethod.py", "src/OFS/tests/test_DTMLDocument.py", "src/OFS/tests/test_DTMLMethod.py", "src/Shared/DC/ZRDB/Search.py", "src/Zope2/utilities/load_site.py"]}, {"commit_id": "731bdd24e01a2dc85852057e9fbc6f7e69482e1d", "commit_date": "Tue Dec 15 16:56:06 2009 +0000", "commit_message": "LP #496941:  Remove all mention of ``standard_html_header`` and ``standard_html_footer`` from default DTML content.", "files_name": ["doc/CHANGES.rst", "src/HelpSys/HelpTopic.py", "src/OFS/DTMLDocument.py", "src/OFS/DTMLMethod.py", "src/OFS/tests/test_DTMLDocument.py", "src/OFS/tests/test_DTMLMethod.py", "src/Shared/DC/ZRDB/Search.py", "src/Zope2/utilities/load_site.py"]}, {"commit_id": "ac30d65fff42a4d73c1152185d66b5315791dc4d", "commit_date": "Tue Dec 15 18:33:56 2009 +0000", "commit_message": "Catch up with all of the ZTK, now that zope.site's tests are fixed", "files_name": ["versions.cfg"]}, {"commit_id": "a60cb07563a242ca8dbe66d966881a30c8bf9614", "commit_date": "Tue Dec 15 20:09:29 2009 +0000", "commit_message": "Another one bites the dust - Removed the dependency on zope.app.publication in favor of new versions of zope.publisher and zope.traversing.", "files_name": ["ZOPE_APP_DEPENDENCIES.rst", "buildout.cfg", "doc/CHANGES.rst", "setup.py", "src/Products/Five/component/__init__.py", "src/Products/Five/component/configure.zcml", "src/ZPublisher/BaseRequest.py"]}, {"commit_id": "3525d96f9521c43f2f548f33b731e5d3b3c2b238", "commit_date": "Tue Dec 15 20:14:27 2009 +0000", "commit_message": "The dependency on zope.app.schema had already been removed, but was still declared.", "files_name": ["setup.py"]}, {"commit_id": "f9400ec4a11b0588fe11c9ef437f679b1dc9edf3", "commit_date": "Tue Dec 15 20:25:53 2009 +0000", "commit_message": "Clean up the alltests list and note the real zope.browser dependency", "files_name": ["buildout.cfg", "setup.py"]}, {"commit_id": "fda1cde40fb83339e22150532288c800143e8972", "commit_date": "Tue Dec 15 20:36:48 2009 +0000", "commit_message": "Fewer undeclared test dependencies", "files_name": ["buildout.cfg"]}, {"commit_id": "c0a600ca7f3f0b9fe995711a6e3ba34456620efb", "commit_date": "Tue Dec 15 20:45:36 2009 +0000", "commit_message": "Status update on zope.app removal work", "files_name": ["ZOPE_APP_DEPENDENCIES.rst", "buildout.cfg"]}, {"commit_id": "459cf21a6b860f4447b792a025fa6c650f3c49c0", "commit_date": "Tue Dec 15 20:58:15 2009 +0000", "commit_message": "Openly blame packages with test dependencies from the zope.app realm", "files_name": ["buildout.cfg"]}, {"commit_id": "7076af790543a28376a05daba7e3bb19ad2cc381", "commit_date": "Tue Dec 15 21:57:36 2009 +0000", "commit_message": "We made more progress", "files_name": ["ZOPE_APP_DEPENDENCIES.rst"]}, {"commit_id": "c2e55d536c5608a199e8d3e875c5fc61d0a1115a", "commit_date": "Tue Dec 15 23:29:58 2009 +0000", "commit_message": "Follow my idiosyncratic spelling for completed punchlist sub-items.", "files_name": ["ZOPE_APP_DEPENDENCIES.rst"]}, {"commit_id": "cee9b5ec3368186582fe8516ad8c3a9de0bc1904", "commit_date": "Wed Dec 16 04:29:07 2009 +0000", "commit_message": "There's been more progress", "files_name": ["ZOPE_APP_DEPENDENCIES.rst"]}, {"commit_id": "f28e5a409fd6d5397dd92fbf98c01b3466745541", "commit_date": "Wed Dec 16 05:14:06 2009 +0000", "commit_message": "fix bug number typo", "files_name": ["doc/CHANGES.rst"]}, {"commit_id": "cc43a699cdadc10813d770a49f90290a0efaca32", "commit_date": "Wed Dec 16 05:18:04 2009 +0000", "commit_message": "fix bug number typo", "files_name": ["doc/CHANGES.rst"]}, {"commit_id": "7e711322ba00f053663c3225186bca2e18881e67", "commit_date": "Wed Dec 16 22:30:11 2009 +0000", "commit_message": "Note status of zope.app.pagetemplate", "files_name": ["ZOPE_APP_DEPENDENCIES.rst"]}, {"commit_id": "99c3fa066850683fbe2b90638fd36949e26d6138", "commit_date": "Wed Dec 16 23:02:16 2009 +0000", "commit_message": "Note that basicskin isn't quite as evil anymore", "files_name": ["ZOPE_APP_DEPENDENCIES.rst"]}, {"commit_id": "5a7e9e6142518937652944f79ed1c805bbb3a70e", "commit_date": "Wed Dec 16 23:11:17 2009 +0000", "commit_message": "Let's not bother with the transitive dependencies of zope.app.testing, there's actually many more horrors... the real deal is to remove zope.app.testing from the zope.* packages", "files_name": ["ZOPE_APP_DEPENDENCIES.rst"]}, {"commit_id": "fe1606b36c6a73f1f89a8c69f40b6d5c82b3480a", "commit_date": "Wed Dec 16 23:40:45 2009 +0000", "commit_message": "We are almost there - formlib and functional testbrowser tests are the two last items", "files_name": ["ZOPE_APP_DEPENDENCIES.rst"]}, {"commit_id": "47d1644eba6fe52f1024bffc910a51f24c553e9c", "commit_date": "Thu Dec 17 20:03:34 2009 +0000", "commit_message": "We no longer depend on the ``zope-functional-testing`` extra of zope.testbrowser.", "files_name": ["doc/CHANGES.rst", "setup.py"]}, {"commit_id": "c38005d7c73f9909971604f5d44081c08a457ae6", "commit_date": "Thu Dec 17 20:05:16 2009 +0000", "commit_message": "For the most part zope.testbrowser is fine now. It's test depend on way too much stuff, but that is hard to fix.", "files_name": ["ZOPE_APP_DEPENDENCIES.rst", "buildout.cfg"]}, {"commit_id": "9bdd77ee3c85651a9c5030da250d8b3ca4c9c65e", "commit_date": "Thu Dec 17 20:31:13 2009 +0000", "commit_message": "zope.app.basicskin is gone, it was too easy to get rid of", "files_name": ["ZOPE_APP_DEPENDENCIES.rst"]}, {"commit_id": "46e3c0477d9400116ab055cf21ab2af9b0695968", "commit_date": "Fri Dec 18 01:40:41 2009 +0000", "commit_message": "We made more progress on the zope.app front", "files_name": ["ZOPE_APP_DEPENDENCIES.rst", "buildout.cfg"]}, {"commit_id": "96e44cde32a844205dd12faf71a316274ee2d333", "commit_date": "Fri Dec 18 13:01:48 2009 +0000", "commit_message": "remove prameter dict unpacking", "files_name": ["setup.py"]}, {"commit_id": "1cd36a0c0b218fe5c2b59549d6564a8f0b5a68b4", "commit_date": "Sat Dec 19 18:48:45 2009 +0000", "commit_message": "Enhanced the internals of the DateRangeIndex based on an idea from experimental.daterangeindexoptimisations, thanks to Matt Hamilton.", "files_name": ["doc/CHANGES.rst", "src/Products/PluginIndexes/DateRangeIndex/DateRangeIndex.py"]}, {"commit_id": "5c1f5c858f095eda40bdcc10245335368536cade", "commit_date": "Sat Dec 19 18:49:49 2009 +0000", "commit_message": "Merged c106786 from 2.12 branch", "files_name": ["src/Products/PluginIndexes/DateRangeIndex/DateRangeIndex.py"]}, {"commit_id": "8c94f84ec9cb5c5bd5f1d372dd262a8fc183481c", "commit_date": "Tue Dec 22 06:11:17 2009 +0000", "commit_message": "Zope 2.12.2", "files_name": ["configure", "doc/CHANGES.rst", "inst/WinBuilders/mk/zope.mk", "inst/versions.py", "setup.py"]}, {"commit_id": "2484b0646f91d9f8ca2f7defe1486f09ae82862e", "commit_date": "Tue Dec 22 06:35:09 2009 +0000", "commit_message": "updated", "files_name": ["928ff2dd7a1c7a9d9a3cca2661b3bd6fb9d3eeb7 - Tue Dec 22 19:56:33 2009 +0000 : Update zope.app info", "ZOPE_APP_DEPENDENCIES.rst"]}, {"commit_id": "58811975fdcf6d721c14208da60e18d61ff73802", "commit_date": "Tue Dec 22 22:28:19 2009 +0000", "commit_message": "zope.app.pagetemplate is goooone :)", "files_name": ["ZOPE_APP_DEPENDENCIES.rst", "buildout.cfg"]}, {"commit_id": "312e179d4f7a3c97bd745fd161a4df110d48673a", "commit_date": "Wed Dec 23 00:21:19 2009 +0000", "commit_message": "Fixed a SyntaxError in utilities/load_site.py script.", "files_name": ["doc/CHANGES.rst", "src/Zope2/utilities/load_site.py"]}, {"commit_id": "06d2d0b0d43521fd0a5eaf79ebca37aa935ac48f", "commit_date": "Wed Dec 23 00:22:46 2009 +0000", "commit_message": "Merged c106985 from 2.12 branch", "files_name": ["src/Zope2/utilities/load_site.py"]}, {"commit_id": "32ffa2b5c81e9d95fbcf4224f845e0f7b51f9031", "commit_date": "Sat Dec 26 15:59:01 2009 +0000", "commit_message": "The ZTK doesn't include zope.app packages anymore. We still need two of them.", "files_name": ["versions.cfg"]}, {"commit_id": "ec3f35e6593300240288034daccc3bdf3783518d", "commit_date": "Sat Dec 26 23:10:42 2009 +0000", "commit_message": "Moved zope.formlib / zope.app.form integration into a separate package called five.formlib.", "files_name": ["ZOPE_APP_DEPENDENCIES.rst", "buildout.cfg", "doc/CHANGES.rst", "setup.py", "src/Products/Five/TODO.txt", "src/Products/Five/browser/tests/pages.txt", "src/Products/Five/browser/tests/pages.zcml", "src/Products/Five/browser/tests/pages_ftest.txt", "src/Products/Five/doc/formlib.txt", "src/Products/Five/form/__init__.py", "src/Products/Five/form/add.pt", "src/Products/Five/form/configure.zcml", "src/Products/Five/form/edit.pt", "src/Products/Five/form/macros.py", "src/Products/Five/form/meta.zcml", "src/Products/Five/form/metaconfigure.py", "src/Products/Five/form/objectwidget.pt", "src/Products/Five/form/objectwidget.py", "src/Products/Five/form/tests/__init__.py", "src/Products/Five/form/tests/configure.zcml", "src/Products/Five/form/tests/forms.txt", "src/Products/Five/form/tests/locales/de/LC_MESSAGES/formtest.mo", "src/Products/Five/form/tests/locales/de/LC_MESSAGES/formtest.po", "src/Products/Five/form/tests/locales/formtest.pot", "src/Products/Five/form/tests/schemacontent.py", "src/Products/Five/form/tests/test_forms.py", "src/Products/Five/formlib/__init__.py", "src/Products/Five/formlib/configure.zcml"]}], "parents": [{"commit_id_before": "334d59021bcee7e07c2b983448f559f735f759e3", "url_before": "https://api.github.com/repos/zopefoundation/Zope/commits/334d59021bcee7e07c2b983448f559f735f759e3", "html_url_before": "https://github.com/zopefoundation/Zope/commit/334d59021bcee7e07c2b983448f559f735f759e3"}], "details": [{"raw_url": "https://github.com/zopefoundation/Zope/raw/2abdf14620f146857dc8e3ffd2b6a754884c331d/doc%2FCHANGES.rst", "code": "Changelog\n=========\n\nThis file contains change information for the current Zope release.\nChange information for previous versions of Zope can be found at\nhttp://docs.zope.org/zope2/releases/.\n\nTrunk (unreleased)\n------------------\n\nRestructuring\n+++++++++++++\n\n- Requiring Python 2.6 officially\n\n- Changed startup server tests in Zope2 to use a randomized port number, to\n  allow the nightly buildbot to run the tests at the same time for multiple\n  configurations without the port being already in use.\n\n- Cloned ``ZopeVocabularyRegistry`` from ``zope.app.schema``, and added\n  sane registration of it during initialization of Five.\n\n- Removed experimental support for configuring the Twisted HTTP server\n  as an alternative to ``ZServer``.\n\n- Moved ``Products/Five/security.py`` into the AccessControl package.\n\n- Moved ``Products/Five/traversing.zcml`` directly into the configure.zcml.\n\n- Moved zope.security-style permission registrations from Products.Five into\n  the AccessControl package.\n\n- Moved ``Products/Five/i18n.zcml`` into the ZPublisher package.\n\n- Moved ``Products/Five/publisher.zcml`` into the ZPublisher package.\n\n- Moved ``Products/Five/event.zcml`` into the OFS package.\n\n- Removed no longer maintained ``configure, make, make install`` related\n  installation files. Zope2 can only be installed via its setup.py.\n\n- Centralize interfaces defined in Products.ZCTextIndex, leaving BBB\n  imports behind in old locations.\n\n- Integrated zLOG package back into this package.\n\n- Updated documentation to new version number.\n\nFeatures Added\n++++++++++++++\n\n- The send method of MailHost now supports unicode messages and\n  email.Message.Message objects.  It also now accepts charset and\n  msg_type parameters to help with character, header and body\n  encoding.\n\n- We know depend on the official Zope Toolkit and its known-good-set of\n  packages.\n\nBugs Fixed\n++++++++++\n\n- LP #490514:  preserve tainting when calling into DTML from ZPT.\n\n- LP #414757: Don't send a request closed event from a cloned request.\n\n- LP #418454: FTP server did not work with Python 2.6.X\n\n- Fixed issue with sending text containing ':' from MailHost.\n\n- MailHost will now ensure the headers it sets are 7bit.\n\n- MailHost no longer generates garbage when given unicode input.\n\n- MailHost manage form no longer interprets the value None as a string\n  in user and password fields.\n\n- Made C extensions work for 64-bit Python 2.5.x / 2.6.x.\n\n- Unfutzed test failures due to use of naive timezones with ``datetime``\n  instances.\n\n- LP #397861: exporting $PYTHON in generated 'zopectl' for fixing import issue\n  with \"bin/zopectl adduser\"\n\n- LP #399633: fixed interpreter paths\n", "code_before": "Changelog\n=========\n\nThis file contains change information for the current Zope release.\nChange information for previous versions of Zope can be found at\nhttp://docs.zope.org/zope2/releases/.\n\nTrunk (unreleased)\n------------------\n\nRestructuring\n+++++++++++++\n\n- Requiring Python 2.6 officially\n\n- Changed startup server tests in Zope2 to use a randomized port number, to\n  allow the nightly buildbot to run the tests at the same time for multiple\n  configurations without the port being already in use.\n\n- Cloned ``ZopeVocabularyRegistry`` from ``zope.app.schema``, and added\n  sane registration of it during initialization of Five.\n\n- Removed experimental support for configuring the Twisted HTTP server\n  as an alternative to ``ZServer``.\n\n- Moved ``Products/Five/security.py`` into the AccessControl package.\n\n- Moved ``Products/Five/traversing.zcml`` directly into the configure.zcml.\n\n- Moved zope.security-style permission registrations from Products.Five into\n  the AccessControl package.\n\n- Moved ``Products/Five/i18n.zcml`` into the ZPublisher package.\n\n- Moved ``Products/Five/publisher.zcml`` into the ZPublisher package.\n\n- Moved ``Products/Five/event.zcml`` into the OFS package.\n\n- Removed no longer maintained ``configure, make, make install`` related\n  installation files. Zope2 can only be installed via its setup.py.\n\n- Centralize interfaces defined in Products.ZCTextIndex, leaving BBB\n  imports behind in old locations.\n\n- Integrated zLOG package back into this package.\n\n- Updated documentation to new version number.\n\nFeatures Added\n++++++++++++++\n\n- The send method of MailHost now supports unicode messages and\n  email.Message.Message objects.  It also now accepts charset and\n  msg_type parameters to help with character, header and body\n  encoding.\n\n- We know depend on the official Zope Toolkit and its known-good-set of\n  packages.\n\nBugs Fixed\n++++++++++\n\n- LP #414757: Don't send a request closed event from a cloned request.\n\n- LP #418454: FTP server did not work with Python 2.6.X\n\n- Fixed issue with sending text containing ':' from MailHost.\n\n- MailHost will now ensure the headers it sets are 7bit.\n\n- MailHost no longer generates garbage when given unicode input.\n\n- MailHost manage form no longer interprets the value None as a string\n  in user and password fields.\n\n- Made C extensions work for 64-bit Python 2.5.x / 2.6.x.\n\n- Unfutzed test failures due to use of naive timezones with ``datetime``\n  instances.\n\n- LP #397861: exporting $PYTHON in generated 'zopectl' for fixing import issue\n  with \"bin/zopectl adduser\"\n\n- LP #399633: fixed interpreter paths\n", "patch": "@@ -60,6 +60,8 @@ Features Added\n Bugs Fixed\n ++++++++++\n \n+- LP #490514:  preserve tainting when calling into DTML from ZPT.\n+\n - LP #414757: Don't send a request closed event from a cloned request.\n \n - LP #418454: FTP server did not work with Python 2.6.X", "file_path": "files/2017_8/122", "file_language": "rst", "file_name": "doc/CHANGES.rst", "outdated_file_modify": 0, "outdated_file_before": 1, "outdated_file_after": 1}, {"raw_url": "https://github.com/zopefoundation/Zope/raw/2abdf14620f146857dc8e3ffd2b6a754884c331d/src%2FProducts%2FPageTemplates%2FZRPythonExpr.py", "code": "##############################################################################\n#\n# Copyright (c) 2002 Zope Corporation and Contributors. All Rights Reserved.\n#\n# This software is subject to the provisions of the Zope Public License,\n# Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.\n# THIS SOFTWARE IS PROVIDED \"AS IS\" AND ANY AND ALL EXPRESS OR IMPLIED\n# WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n# WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS\n# FOR A PARTICULAR PURPOSE\n#\n##############################################################################\n\"\"\"Zope-specific Python Expression Handler\n\nHandler for Python expressions that uses the RestrictedPython package.\n\n$Id$\n\"\"\"\nfrom AccessControl import safe_builtins\nfrom AccessControl.ZopeGuards import guarded_getattr, get_safe_globals\nfrom RestrictedPython import compile_restricted_eval\nfrom zope.tales.tales import CompilerError\nfrom zope.tales.pythonexpr import PythonExpr\n\nclass PythonExpr(PythonExpr):\n    _globals = get_safe_globals()\n    _globals['_getattr_'] = guarded_getattr\n    _globals['__debug__' ] = __debug__\n\n    def __init__(self, name, expr, engine):\n        self.text = self.expr = text = expr.strip().replace('\\n', ' ')\n\n        # Unicode expression are not handled properly by RestrictedPython\n        # We convert the expression to UTF-8 (ajung)\n        if isinstance(text, unicode):\n            text = text.encode('utf-8')\n        code, err, warn, use = compile_restricted_eval(text, \n                                                       self.__class__.__name__)\n        if err:\n            raise engine.getCompilerError()('Python expression error:\\n%s' %\n                                            '\\n'.join(err))            \n        self._varnames = use.keys()\n        self._code = code\n\n    def __call__(self, econtext):\n        __traceback_info__ = self.text\n        vars = self._bind_used_names(econtext, {})\n        vars.update(self._globals)\n        return eval(self._code, vars, {})\n\nclass _SecureModuleImporter:\n    __allow_access_to_unprotected_subobjects__ = True\n\n    def __getitem__(self, module):\n        mod = safe_builtins['__import__'](module)\n        path = module.split('.')\n        for name in path[1:]:\n            mod = getattr(mod, name)\n        return mod\n\nfrom DocumentTemplate.DT_Util import TemplateDict, InstanceDict\nfrom AccessControl.DTML import RestrictedDTML\nclass Rtd(RestrictedDTML, TemplateDict):\n    this = None\n\ndef call_with_ns(f, ns, arg=1):\n    td = Rtd()\n    # prefer 'context' to 'here';  fall back to 'None'\n    this = ns.get('context', ns.get('here'))\n    td.this = this\n    request = ns.get('request', {})\n    if hasattr(request, 'taintWrapper'):\n        request = request.taintWrapper()\n    td._push(request)\n    td._push(InstanceDict(td.this, td))\n    td._push(ns)\n    try:\n        if arg==2:\n            return f(None, td)\n        else:\n            return f(td)\n    finally:\n        td._pop(3)\n", "code_before": "##############################################################################\n#\n# Copyright (c) 2002 Zope Corporation and Contributors. All Rights Reserved.\n#\n# This software is subject to the provisions of the Zope Public License,\n# Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.\n# THIS SOFTWARE IS PROVIDED \"AS IS\" AND ANY AND ALL EXPRESS OR IMPLIED\n# WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n# WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS\n# FOR A PARTICULAR PURPOSE\n#\n##############################################################################\n\"\"\"Zope-specific Python Expression Handler\n\nHandler for Python expressions that uses the RestrictedPython package.\n\n$Id$\n\"\"\"\nfrom AccessControl import safe_builtins\nfrom AccessControl.ZopeGuards import guarded_getattr, get_safe_globals\nfrom RestrictedPython import compile_restricted_eval\nfrom zope.tales.tales import CompilerError\nfrom zope.tales.pythonexpr import PythonExpr\n\nclass PythonExpr(PythonExpr):\n    _globals = get_safe_globals()\n    _globals['_getattr_'] = guarded_getattr\n    _globals['__debug__' ] = __debug__\n\n    def __init__(self, name, expr, engine):\n        self.text = self.expr = text = expr.strip().replace('\\n', ' ')\n\n        # Unicode expression are not handled properly by RestrictedPython\n        # We convert the expression to UTF-8 (ajung)\n        if isinstance(text, unicode):\n            text = text.encode('utf-8')\n        code, err, warn, use = compile_restricted_eval(text, \n                                                       self.__class__.__name__)\n        if err:\n            raise engine.getCompilerError()('Python expression error:\\n%s' %\n                                            '\\n'.join(err))            \n        self._varnames = use.keys()\n        self._code = code\n\n    def __call__(self, econtext):\n        __traceback_info__ = self.text\n        vars = self._bind_used_names(econtext, {})\n        vars.update(self._globals)\n        return eval(self._code, vars, {})\n\nclass _SecureModuleImporter:\n    __allow_access_to_unprotected_subobjects__ = True\n\n    def __getitem__(self, module):\n        mod = safe_builtins['__import__'](module)\n        path = module.split('.')\n        for name in path[1:]:\n            mod = getattr(mod, name)\n        return mod\n\nfrom DocumentTemplate.DT_Util import TemplateDict, InstanceDict\nfrom AccessControl.DTML import RestrictedDTML\nclass Rtd(RestrictedDTML, TemplateDict):\n    this = None\n\ndef call_with_ns(f, ns, arg=1):\n    td = Rtd()\n    # prefer 'context' to 'here';  fall back to 'None'\n    this = ns.get('context', ns.get('here'))\n    td.this = this\n    request = ns.get('request', {})\n    td._push(request)\n    td._push(InstanceDict(td.this, td))\n    td._push(ns)\n    try:\n        if arg==2:\n            return f(None, td)\n        else:\n            return f(td)\n    finally:\n        td._pop(3)\n", "patch": "@@ -69,6 +69,8 @@ def call_with_ns(f, ns, arg=1):\n     this = ns.get('context', ns.get('here'))\n     td.this = this\n     request = ns.get('request', {})\n+    if hasattr(request, 'taintWrapper'):\n+        request = request.taintWrapper()\n     td._push(request)\n     td._push(InstanceDict(td.this, td))\n     td._push(ns)", "file_path": "files/2017_8/123", "file_language": "py", "file_name": "src/Products/PageTemplates/ZRPythonExpr.py", "outdated_file_modify": 0, "outdated_file_before": 1, "outdated_file_after": 0, "llm_check": 0, "static_check": 0, "static": {"rats": [false, []], "semgrep": [false, []]}, "target": 0, "function_before": [{"function": "class PythonExpr(PythonExpr):\n    _globals = get_safe_globals()\n    _globals['_getattr_'] = guarded_getattr\n    _globals['__debug__' ] = __debug__\n\n    def __init__(self, name, expr, engine):\n        self.text = self.expr = text = expr.strip().replace('\\n', ' ')\n\n        # Unicode expression are not handled properly by RestrictedPython\n        # We convert the expression to UTF-8 (ajung)\n        if isinstance(text, unicode):\n            text = text.encode('utf-8')\n        code, err, warn, use = compile_restricted_eval(text, \n                                                       self.__class__.__name__)\n        if err:\n            raise engine.getCompilerError()('Python expression error:\\n%s' %\n                                            '\\n'.join(err))            \n        self._varnames = use.keys()\n        self._code = code\n\n    def __call__(self, econtext):\n        __traceback_info__ = self.text\n        vars = self._bind_used_names(econtext, {})\n        vars.update(self._globals)\n        return eval(self._code, vars, {})", "target": 0}, {"function": "class _SecureModuleImporter:\n    __allow_access_to_unprotected_subobjects__ = True\n\n    def __getitem__(self, module):\n        mod = safe_builtins['__import__'](module)\n        path = module.split('.')\n        for name in path[1:]:\n            mod = getattr(mod, name)\n        return mod", "target": 0}, {"function": "class Rtd(RestrictedDTML, TemplateDict):\n    this = None", "target": 0}, {"function": "def call_with_ns(f, ns, arg=1):\n    td = Rtd()\n    # prefer 'context' to 'here';  fall back to 'None'\n    this = ns.get('context', ns.get('here'))\n    td.this = this\n    request = ns.get('request', {})\n    td._push(request)\n    td._push(InstanceDict(td.this, td))\n    td._push(ns)\n    try:\n        if arg==2:\n            return f(None, td)\n        else:\n            return f(td)\n    finally:\n        td._pop(3)", "target": 0}], "function_after": [{"function": "class PythonExpr(PythonExpr):\n    _globals = get_safe_globals()\n    _globals['_getattr_'] = guarded_getattr\n    _globals['__debug__' ] = __debug__\n\n    def __init__(self, name, expr, engine):\n        self.text = self.expr = text = expr.strip().replace('\\n', ' ')\n\n        # Unicode expression are not handled properly by RestrictedPython\n        # We convert the expression to UTF-8 (ajung)\n        if isinstance(text, unicode):\n            text = text.encode('utf-8')\n        code, err, warn, use = compile_restricted_eval(text, \n                                                       self.__class__.__name__)\n        if err:\n            raise engine.getCompilerError()('Python expression error:\\n%s' %\n                                            '\\n'.join(err))            \n        self._varnames = use.keys()\n        self._code = code\n\n    def __call__(self, econtext):\n        __traceback_info__ = self.text\n        vars = self._bind_used_names(econtext, {})\n        vars.update(self._globals)\n        return eval(self._code, vars, {})", "target": 0}, {"function": "class _SecureModuleImporter:\n    __allow_access_to_unprotected_subobjects__ = True\n\n    def __getitem__(self, module):\n        mod = safe_builtins['__import__'](module)\n        path = module.split('.')\n        for name in path[1:]:\n            mod = getattr(mod, name)\n        return mod", "target": 0}, {"function": "class Rtd(RestrictedDTML, TemplateDict):\n    this = None", "target": 0}, {"function": "def call_with_ns(f, ns, arg=1):\n    td = Rtd()\n    # prefer 'context' to 'here';  fall back to 'None'\n    this = ns.get('context', ns.get('here'))\n    td.this = this\n    request = ns.get('request', {})\n    if hasattr(request, 'taintWrapper'):\n        request = request.taintWrapper()\n    td._push(request)\n    td._push(InstanceDict(td.this, td))\n    td._push(ns)\n    try:\n        if arg==2:\n            return f(None, td)\n        else:\n            return f(td)\n    finally:\n        td._pop(3)", "target": 0}]}, {"raw_url": "https://github.com/zopefoundation/Zope/raw/2abdf14620f146857dc8e3ffd2b6a754884c331d/src%2FProducts%2FPageTemplates%2Ftests%2FtestZRPythonExpr.py", "code": "\"\"\" Unit tests for Products.PageTemplates.ZRPythonExpr\n\n$Id\n\"\"\"\nimport unittest\n\nclass MiscTests(unittest.TestCase):\n\n    def test_call_with_ns_prefer_context_to_here(self):\n        from Products.PageTemplates.ZRPythonExpr import call_with_ns\n        context = ['context']\n        here = ['here']\n        request = {'request': 1}\n        names = {'context' : context, 'here': here, 'request' : request}\n        result = call_with_ns(lambda td: td.this, names)\n        self.failUnless(result is context, result)\n\n    def test_call_with_ns_no_context_or_here(self):\n        from Products.PageTemplates.ZRPythonExpr import call_with_ns\n        request = {'request': 1}\n        names = {'request' : request}\n        result = call_with_ns(lambda td: td.this, names)\n        self.failUnless(result is None, result)\n\n    def test_call_with_ns_no_request(self):\n        from Products.PageTemplates.ZRPythonExpr import call_with_ns\n        context = ['context']\n        here = ['here']\n        names = {'context' : context, 'here': here}\n\n        def _find_request(td):\n            ns = td._pop()              # peel off 'ns'\n            instance_dict = td._pop()   # peel off InstanceDict\n            request = td._pop()\n            td._push(request)\n            td._push(instance_dict)\n            td._push(ns)\n            return request\n\n        result = call_with_ns(_find_request, names)\n        self.assertEqual(result, {})\n\n    def test_call_with_request_preserves_tainting(self):\n        from Products.PageTemplates.ZRPythonExpr import call_with_ns\n        class Request(dict):\n            def taintWrapper(self):\n                return {'tainted': 'found'}\n        context = ['context']\n        here = ['here']\n        names = {'context' : context, 'here': here, 'request' : Request()}\n\n        found = call_with_ns(lambda td: td['tainted'], names)\n        self.assertEqual(found, 'found')\n \ndef test_suite():\n    return unittest.makeSuite(MiscTests)\n\nif __name__ == '__main__':\n    unittest.main(defaultTest='test_suite')\n\n", "code_before": "\"\"\" Unit tests for Products.PageTemplates.ZRPythonExpr\n\n$Id\n\"\"\"\nimport unittest\n\nclass MiscTests(unittest.TestCase):\n\n    def test_call_with_ns_prefer_context_to_here(self):\n        from Products.PageTemplates.ZRPythonExpr import call_with_ns\n        context = ['context']\n        here = ['here']\n        request = {'request': 1}\n        names = {'context' : context, 'here': here, 'request' : request}\n        result = call_with_ns(lambda td: td.this, names)\n        self.failUnless(result is context, result)\n\n    def test_call_with_ns_no_context_or_here(self):\n        from Products.PageTemplates.ZRPythonExpr import call_with_ns\n        request = {'request': 1}\n        names = {'request' : request}\n        result = call_with_ns(lambda td: td.this, names)\n        self.failUnless(result is None, result)\n\n    def test_call_with_ns_no_request(self):\n        from Products.PageTemplates.ZRPythonExpr import call_with_ns\n        context = ['context']\n        here = ['here']\n        names = {'context' : context, 'here': here}\n\n        def _find_request(td):\n            ns = td._pop()              # peel off 'ns'\n            instance_dict = td._pop()   # peel off InstanceDict\n            request = td._pop()\n            td._push(request)\n            td._push(instance_dict)\n            td._push(ns)\n            return request\n\n        result = call_with_ns(_find_request, names)\n        self.assertEqual(result, {})\n \ndef test_suite():\n    return unittest.makeSuite(MiscTests)\n\nif __name__ == '__main__':\n    unittest.main(defaultTest='test_suite')\n\n", "patch": "@@ -39,6 +39,18 @@ def _find_request(td):\n \n         result = call_with_ns(_find_request, names)\n         self.assertEqual(result, {})\n+\n+    def test_call_with_request_preserves_tainting(self):\n+        from Products.PageTemplates.ZRPythonExpr import call_with_ns\n+        class Request(dict):\n+            def taintWrapper(self):\n+                return {'tainted': 'found'}\n+        context = ['context']\n+        here = ['here']\n+        names = {'context' : context, 'here': here, 'request' : Request()}\n+\n+        found = call_with_ns(lambda td: td['tainted'], names)\n+        self.assertEqual(found, 'found')\n  \n def test_suite():\n     return unittest.makeSuite(MiscTests)", "file_path": "files/2017_8/124", "file_language": "py", "file_name": "src/Products/PageTemplates/tests/testZRPythonExpr.py", "outdated_file_modify": 0, "outdated_file_before": 1, "outdated_file_after": 0, "llm_check": 0, "static_check": 0, "static": {"rats": [false, []], "semgrep": [false, []]}, "target": 0, "function_before": [{"function": "class MiscTests(unittest.TestCase):\n\n    def test_call_with_ns_prefer_context_to_here(self):\n        from Products.PageTemplates.ZRPythonExpr import call_with_ns\n        context = ['context']\n        here = ['here']\n        request = {'request': 1}\n        names = {'context' : context, 'here': here, 'request' : request}\n        result = call_with_ns(lambda td: td.this, names)\n        self.failUnless(result is context, result)\n\n    def test_call_with_ns_no_context_or_here(self):\n        from Products.PageTemplates.ZRPythonExpr import call_with_ns\n        request = {'request': 1}\n        names = {'request' : request}\n        result = call_with_ns(lambda td: td.this, names)\n        self.failUnless(result is None, result)\n\n    def test_call_with_ns_no_request(self):\n        from Products.PageTemplates.ZRPythonExpr import call_with_ns\n        context = ['context']\n        here = ['here']\n        names = {'context' : context, 'here': here}\n\n        def _find_request(td):\n            ns = td._pop()              # peel off 'ns'\n            instance_dict = td._pop()   # peel off InstanceDict\n            request = td._pop()\n            td._push(request)\n            td._push(instance_dict)\n            td._push(ns)\n            return request\n\n        result = call_with_ns(_find_request, names)\n        self.assertEqual(result, {})", "target": 0}, {"function": "def test_suite():\n    return unittest.makeSuite(MiscTests)", "target": 0}], "function_after": [{"function": "class MiscTests(unittest.TestCase):\n\n    def test_call_with_ns_prefer_context_to_here(self):\n        from Products.PageTemplates.ZRPythonExpr import call_with_ns\n        context = ['context']\n        here = ['here']\n        request = {'request': 1}\n        names = {'context' : context, 'here': here, 'request' : request}\n        result = call_with_ns(lambda td: td.this, names)\n        self.failUnless(result is context, result)\n\n    def test_call_with_ns_no_context_or_here(self):\n        from Products.PageTemplates.ZRPythonExpr import call_with_ns\n        request = {'request': 1}\n        names = {'request' : request}\n        result = call_with_ns(lambda td: td.this, names)\n        self.failUnless(result is None, result)\n\n    def test_call_with_ns_no_request(self):\n        from Products.PageTemplates.ZRPythonExpr import call_with_ns\n        context = ['context']\n        here = ['here']\n        names = {'context' : context, 'here': here}\n\n        def _find_request(td):\n            ns = td._pop()              # peel off 'ns'\n            instance_dict = td._pop()   # peel off InstanceDict\n            request = td._pop()\n            td._push(request)\n            td._push(instance_dict)\n            td._push(ns)\n            return request\n\n        result = call_with_ns(_find_request, names)\n        self.assertEqual(result, {})\n\n    def test_call_with_request_preserves_tainting(self):\n        from Products.PageTemplates.ZRPythonExpr import call_with_ns\n        class Request(dict):\n            def taintWrapper(self):\n                return {'tainted': 'found'}\n        context = ['context']\n        here = ['here']\n        names = {'context' : context, 'here': here, 'request' : Request()}\n\n        found = call_with_ns(lambda td: td['tainted'], names)\n        self.assertEqual(found, 'found')", "target": 0}, {"function": "def test_suite():\n    return unittest.makeSuite(MiscTests)", "target": 0}]}], "outdated": 0, "cwe_descripiton": "", "cwe_consequence": "", "cwe_method": "", "cwe_solution": ""}
