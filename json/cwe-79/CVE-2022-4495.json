{"index": 10069, "cve_id": "CVE-2022-4495", "cwe_id": ["CWE-79"], "cve_language": "Python", "cve_description": "A vulnerability, which was classified as problematic, has been found in collective.dms.basecontent up to 1.6. This issue affects the function renderCell of the file src/collective/dms/basecontent/browser/column.py. The manipulation leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 1.7 is able to address this issue. The name of the patch is 6c4d616fcc771822a14ebae5e23f3f6d96d134bd. It is recommended to upgrade the affected component. The identifier VDB-215813 was assigned to this vulnerability.", "cvss": "6.1", "publish_date": "December 14, 2022", "AV": "NETWORK", "AC": "NETWORK", "PR": "NONE", "UI": "REQUIRED", "S": "CHANGED", "C": "LOW", "I": "LOW", "A": "NONE", "commit_id": "6c4d616fcc771822a14ebae5e23f3f6d96d134bd", "commit_message": "Updated columns to work with z3c.table 2.2. Escaped rendering special caracters to avoid xss", "commit_date": "2022-06-09T09:04:34Z", "project": "collective/collective.dms.basecontent", "url": "https://api.github.com/repos/collective/collective.dms.basecontent/commits/6c4d616fcc771822a14ebae5e23f3f6d96d134bd", "html_url": "https://github.com/collective/collective.dms.basecontent/commit/6c4d616fcc771822a14ebae5e23f3f6d96d134bd", "windows_before": [{"commit_id": "0d9387a89a4c156e4ee8b0aec15bc77341123ecb", "commit_date": "Tue Apr 20 13:48:12 2021 +0200", "commit_message": "Back to development: 1.7", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "752ccbad4b6f9a67ac572d2ec19fdf2c5043aba4", "commit_date": "Tue Apr 20 13:47:59 2021 +0200", "commit_message": "Preparing release 1.6", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "28b309bc851f326696999ee3a2f651b48693bea9", "commit_date": "Tue Nov 17 09:22:41 2020 +0100", "commit_message": "RelatedDocs field can handle object_provides criteria", "files_name": ["CHANGES.rst", "src/collective/dms/basecontent/relateddocs.py"]}, {"commit_id": "0a59093411ccfd6712f354df5fe970342933fa1a", "commit_date": "Mon Nov 25 11:44:07 2019 +0100", "commit_message": "Back to development: 1.6", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "dc1a71e8dff201306d2343cd65d6eea96ce5c642", "commit_date": "Mon Nov 25 11:43:50 2019 +0100", "commit_message": "Preparing release 1.5", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "19f2302e6041fa475af4da1194a01592d608c93e", "commit_date": "Mon Nov 25 11:43:24 2019 +0100", "commit_message": "Added keywords", "files_name": ["setup.py"]}, {"commit_id": "1ecc527a7c5739f06498e2954255785999ae6305", "commit_date": "Mon Nov 25 11:41:42 2019 +0100", "commit_message": "Updated setup.py", "files_name": ["setup.py"]}, {"commit_id": "269371d77c1b032b7bc01ba00e4b19c0598fc492", "commit_date": "Fri Nov 15 13:16:21 2019 +0100", "commit_message": "Pep8", "files_name": ["src/collective/dms/basecontent/browser/column.py"]}, {"commit_id": "828028d1a50f45f884caa3464487d2e4eaef0a96", "commit_date": "Wed Nov 13 12:54:36 2019 +0100", "commit_message": "Added css on some columns", "files_name": ["CHANGES.rst", "src/collective/dms/basecontent/browser/listing.py"]}, {"commit_id": "1accedce2c8af21d0063eda9b7d7297f99e33b73", "commit_date": "Fri Sep 20 13:22:23 2019 +0200", "commit_message": "Back to development: 1.5", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "58aadd7e4eba974eb69214190363b47f63f18cc2", "commit_date": "Fri Sep 20 13:21:58 2019 +0200", "commit_message": "Preparing release 1.4", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "02e7875cbe31ca09e4abf6192b69429761a1d703", "commit_date": "Fri May 10 09:35:38 2019 +0200", "commit_message": "Merge branch 'master' of github.com:collective/collective.dms.basecontent", "files_name": ["d687e5890142744bcae5b9f28e459e354965b827 - Fri May 10 09:34:22 2019 +0200 : Fixed maximal version for plone 4.3", "versions.cfg"]}, {"commit_id": "40cb06b9e56b265015210f31b0170ec20f7565e6", "commit_date": "Thu May 9 15:57:00 2019 +0200", "commit_message": "Trying to correct rst to display correctly on pypi", "files_name": ["CHANGES.rst", "README.rst"]}, {"commit_id": "2cd921dcef1b39ab952fe3d6ac161a1611c0c810", "commit_date": "Thu Mar 28 14:08:51 2019 +0100", "commit_message": "Improved readme", "files_name": ["README.rst"]}, {"commit_id": "0e41cb39001a00252878df10a92616f0d39023e6", "commit_date": "Tue Sep 25 13:21:16 2018 +0200", "commit_message": "Made class inheritance clearer", "files_name": ["CHANGES.rst", "src/collective/dms/basecontent/browser/column.py"]}, {"commit_id": "f007393dbc6af0d49f36701a0c8fe06818f5f968", "commit_date": "Mon Sep 24 13:05:13 2018 +0200", "commit_message": "Back to development: 1.4", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "a43bce36a972af555ddb53152ad33951e9c9d051", "commit_date": "Mon Sep 24 13:04:29 2018 +0200", "commit_message": "Preparing release 1.3", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "1b5222896520be932e8e1479f1262da6bd7ad458", "commit_date": "Mon Sep 24 10:36:53 2018 +0200", "commit_message": "Use a fade edit pencil to dissuade user click on it.", "files_name": ["CHANGES.rst", "src/collective/dms/basecontent/browser/column.py", "src/collective/dms/basecontent/browser/configure.zcml", "src/collective/dms/basecontent/browser/static/img/fade_edit.png"]}, {"commit_id": "9987ff50e6040c7498881c99cd13bcfecda8b68e", "commit_date": "Wed Sep 5 08:26:36 2018 +0200", "commit_message": "Back to development: 1.3", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "8cfd08cc083407219db169229b365e8abeb30bbc", "commit_date": "Wed Sep 5 08:25:53 2018 +0200", "commit_message": "Preparing release 1.2", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "0f8a5bd050ee07ef1a5e2cc687d2ac7dd8f08edc", "commit_date": "Thu Aug 30 14:48:06 2018 +0200", "commit_message": "Merge pull request #1 from collective/fix_document_viewer_with_multiple_tables", "files_name": ["3f5990b5bab05a6db300126ce3e517fea5f57d75 - Thu Jul 26 10:34:24 2018 +0200 : Changed french translation to avoid confusion", "CHANGES.rst", "src/collective/dms/basecontent/locales/fr/LC_MESSAGES/plone.po"]}, {"commit_id": "9a401769cdb5224f1a3609b215e70d06fae961a3", "commit_date": "Mon Jul 23 15:29:53 2018 +0200", "commit_message": "Back to development: 1.2", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "6f146e88f2a2b58158b1e9d472f20d13da96a7df", "commit_date": "Mon Jul 23 15:29:30 2018 +0200", "commit_message": "Preparing release 1.1", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "bc6eb3f8b95da19486e64e45cad7c1cc25a1022e", "commit_date": "Mon Jul 9 11:39:18 2018 +0200", "commit_message": "Display related docs with list", "files_name": ["CHANGES.rst", "src/collective/dms/basecontent/related-docs-display.pt"]}, {"commit_id": "1ee33266009ff9c43dd1694650211bd13cd45019", "commit_date": "Tue Jun 19 13:11:05 2018 +0200", "commit_message": "Fix document viewer with documents on different tables", "files_name": ["src/collective/dms/basecontent/browser/listing.py", "src/collective/dms/basecontent/browser/templates/versionsviewlet.pt"]}, {"commit_id": "119d01fa66f4effdfa7b05c5b8d2cb553112ef1a", "commit_date": "Wed May 16 14:31:01 2018 +0200", "commit_message": "Replace restrictedTraverse by getMultiAdapter", "files_name": ["CHANGES.rst", "src/collective/dms/basecontent/browser/column.py"]}, {"commit_id": "e6fe1562e55c672ba97d702a4f5f78f0ea42e7ca", "commit_date": "Fri Oct 13 17:39:59 2017 +0200", "commit_message": "Remove filerepresentation adapters.", "files_name": ["CHANGES.rst", "src/collective/dms/basecontent/configure.zcml", "src/collective/dms/basecontent/dmsfile.py"]}, {"commit_id": "4ff8146e1e60f9877508522d550fc0b50138f5a7", "commit_date": "Fri Jun 2 12:25:30 2017 +0200", "commit_message": "Back to development: 1.1", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "f243b6211e1fdbab3e2def1d8ae938c40781f16c", "commit_date": "Fri Jun 2 12:25:11 2017 +0200", "commit_message": "Preparing release 1.0", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "65779600a051b27e31756f41c2fab2d5702c4a0c", "commit_date": "Fri Jun 2 11:16:02 2017 +0200", "commit_message": "Replace collective.z3cform.rolefield by dexterity.localrolesfield. Manual configuration needed. See readme...", "files_name": ["CHANGES.rst", "README.rst", "setup.py", "src/collective/dms/basecontent/configure.zcml", "src/collective/dms/basecontent/dmsdocument.py", "src/collective/dms/basecontent/profiles/default/metadata.xml", "src/collective/dms/basecontent/upgrades/__init__.py", "src/collective/dms/basecontent/upgrades/configure.zcml", "src/collective/dms/basecontent/upgrades/upgrades.py", "versions.cfg"]}, {"commit_id": "361afc53ad139a39d2f8f2bb93d7daa5633f3c5e", "commit_date": "Wed May 31 08:59:01 2017 +0200", "commit_message": "Removed some pinned version", "files_name": ["versions.cfg"]}, {"commit_id": "ae6c1e9a8edf2a8c0906ffa44c1eb9d33364e6d4", "commit_date": "Tue May 30 14:19:28 2017 +0200", "commit_message": "Back to development: 0.8", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "e6d7a866432e37cd94fabd4f1d0a65fe648c2838", "commit_date": "Tue May 30 14:19:09 2017 +0200", "commit_message": "Preparing release 0.7", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "f95ca1805e718f0141e664d43b2a68292b85c94b", "commit_date": "Tue May 30 14:18:28 2017 +0200", "commit_message": "Added changes", "files_name": ["CHANGES.rst"]}, {"commit_id": "d6b85f68816a983ca8dcbfe54ee2be9611bddd60", "commit_date": "Wed Aug 3 10:05:42 2016 +0200", "commit_message": "Move the signed attribute to collective.dms.scanbehavior", "files_name": ["src/collective/dms/basecontent/dmsfile.py"]}, {"commit_id": "07eb329d6959aa6ff487c65fea0eb59f4ec6a7b6", "commit_date": "Fri Jun 17 13:59:15 2016 +0200", "commit_message": "Added comment", "files_name": ["src/collective/dms/basecontent/dmsdocument.py"]}, {"commit_id": "85d540822d5e8a70e17348515c9a2a94ccfa8223", "commit_date": "Tue Nov 24 11:00:47 2015 +0100", "commit_message": "Use unittest", "files_name": ["src/collective/dms/basecontent/tests/test_dmsdocument.py"]}, {"commit_id": "4872ac4bfea4164fa7d2ff9c793bc98d9a8b3f5b", "commit_date": "Tue Nov 24 10:38:00 2015 +0100", "commit_message": "Back to development: 0.7", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "461e8d5c1b86c787cac9b895019e647c3999341d", "commit_date": "Tue Nov 24 10:37:29 2015 +0100", "commit_message": "Preparing release 0.6", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "cb26ca3d036d319c24139a9b640912fbd85bbe73", "commit_date": "Tue Nov 24 10:35:40 2015 +0100", "commit_message": "Pep8 correction", "files_name": ["src/collective/dms/basecontent/indexers.py"]}, {"commit_id": "4d04698dd3c841aceeeab7c9f6276f8f81b1bb47", "commit_date": "Thu Sep 3 16:11:05 2015 +0200", "commit_message": "Updated bootstrap and buildout. Added pinned versions", "files_name": ["base.cfg", "bootstrap.py", "versions.cfg"]}, {"commit_id": "65db994c4e145a372ce42778effbf0b085b5a12f", "commit_date": "Thu Sep 3 15:39:39 2015 +0200", "commit_message": "Added dependency", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "7ca693eb2943f8a54f78376f6a65f201f0e2c5a1", "commit_date": "Thu Sep 3 15:37:54 2015 +0200", "commit_message": "Changed email notifications", "files_name": [".travis.yml"]}, {"commit_id": "88e69e8964ef129a02195e850a646222637609ba", "commit_date": "Thu Sep 3 15:36:46 2015 +0200", "commit_message": "Removed sort attribute no more existing", "files_name": ["src/collective/dms/basecontent/browser/viewlets.py"]}, {"commit_id": "a8645c992ef7eb10e38020c23b62913dccadcd10", "commit_date": "Thu Sep 3 15:13:53 2015 +0200", "commit_message": "Added comment", "files_name": ["src/collective/dms/basecontent/indexers.py"]}, {"commit_id": "b209a63404575687e10823d904ee61f59ba791a2", "commit_date": "Tue Jun 2 13:58:38 2015 +0200", "commit_message": "Back to development: 0.6", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "72bbf4246602d23d3554395bc2b10e8c88dc45b3", "commit_date": "Tue Jun 2 13:58:13 2015 +0200", "commit_message": "Preparing release 0.5", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "471234229d6ffee8b84c7e77c84d5a3bf8a5fd50", "commit_date": "Tue May 19 11:23:26 2015 +0200", "commit_message": "Added in edit view a div to wrap fields when there is no fieldset (only basic metadata). This is useful to add css and define correct display.", "files_name": ["CHANGES.rst", "src/collective/dms/basecontent/browser/templates/dmsdocument_edit.pt"]}, {"commit_id": "111dd1eb6b4c760ab70c277c77b025b65f1530bb", "commit_date": "Thu May 7 12:12:36 2015 +0200", "commit_message": "Added treating_groups and recipient_groups in p.a.collection columns", "files_name": ["CHANGES.rst", "src/collective/dms/basecontent/locales/en/LC_MESSAGES/plone.po"]}], "windows_after": [{"commit_id": "f2d7ed0f078a327794ce25413f2dbb4745ac4a2c", "commit_date": "Thu Jun 9 13:56:32 2022 +0200", "commit_message": "Get user fullname more rapidly", "files_name": ["src/collective/dms/basecontent/browser/column.py"]}, {"commit_id": "a92c56e36d93e2b58d2b2e70e9525ac1d8b8b824", "commit_date": "Tue Jun 21 08:26:42 2022 +0200", "commit_message": "Preparing release 1.7", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "c4d8645c89a2fb3405723b9e78099770b6f6a5be", "commit_date": "Tue Jun 21 08:26:57 2022 +0200", "commit_message": "Back to development: 1.8", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "f9ef99458ad3d68af3e392a582d828dee5abee0c", "commit_date": "Wed Jun 29 08:44:13 2022 +0200", "commit_message": "Corrected UnicodeEncodeError", "files_name": ["CHANGES.rst", "src/collective/dms/basecontent/browser/column.py"]}, {"commit_id": "ce69f4381caef7c8ae59450ceb69a2d8543c942f", "commit_date": "Fri Jul 1 11:38:41 2022 +0200", "commit_message": "Preparing release 1.8", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "7c5e7d04a069aa65cb352d00a69f4d85816f3a22", "commit_date": "Fri Jul 1 11:38:53 2022 +0200", "commit_message": "Back to development: 1.9", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "9a039119062bde65a1c5042aa8fa3555a4adc99e", "commit_date": "Thu Oct 20 12:03:03 2022 +0200", "commit_message": "Made buildout running again", "files_name": ["CHANGES.rst", "checkouts.cfg", "versions.cfg"]}, {"commit_id": "113b1ce4a6be4e389e7941c1a684658c9ed7c304", "commit_date": "Thu Oct 20 12:04:59 2022 +0200", "commit_message": "Forgotten file in previous commit", "files_name": ["requirements.txt"]}, {"commit_id": "9f4f40142965e6756f06e2a2e3c7399f5c3ba639", "commit_date": "Thu Oct 20 13:47:24 2022 +0200", "commit_message": "Added `DmsDocument.get_mainfiles` to get dmsmainfiles", "files_name": ["CHANGES.rst", "setup.py", "src/collective/dms/basecontent/dmsdocument.py", "src/collective/dms/basecontent/profiles/testing/metadata.xml", "src/collective/dms/basecontent/tests/test_dmsdocument.py", "versions.cfg"]}, {"commit_id": "12df5bcb733ca8d88fccb8ef16b1f8d69b44b4b6", "commit_date": "Fri Oct 28 13:31:27 2022 +0200", "commit_message": "Preparing release 1.9", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "f67b8c9f310668169834498b0d7d8000f49a2222", "commit_date": "Fri Oct 28 13:31:39 2022 +0200", "commit_message": "Back to development: 1.10", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "af433d3ac030dbb2b1a52e271287358f5f5a214d", "commit_date": "Fri Oct 28 14:10:14 2022 +0200", "commit_message": "Removed pdbpp as dependency", "files_name": ["CHANGES.rst", "buildout.cfg", "setup.py"]}, {"commit_id": "d06a9e079f6e2879fcc8ee0b3192b90b09a3b4f0", "commit_date": "Fri Oct 28 14:11:17 2022 +0200", "commit_message": "Preparing release 1.10", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "7a7e9bb1c6742e8a456d35e2f73fcfa97afb2f5d", "commit_date": "Fri Oct 28 23:02:50 2022 +0200", "commit_message": "Back to development: 1.11", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "b3b8d0c6cd613dd897346a0bd86e8c00c50623dc", "commit_date": "Mon Dec 19 13:53:11 2022 +0100", "commit_message": "Replaced subscriber grok declaration by zcml.", "files_name": ["CHANGES.rst", "src/collective/dms/basecontent/configure.zcml", "src/collective/dms/basecontent/dmsfile.py"]}, {"commit_id": "487021b1b59908280d7b96ca854930186cc9c85b", "commit_date": "Tue Feb 7 15:59:18 2023 +0100", "commit_message": "Replaced collective.z3cform.chosen widget by collective.z3cform.select2", "files_name": ["CHANGES.rst", "base.cfg", "setup.py", "src/collective/dms/basecontent/configure.zcml", "src/collective/dms/basecontent/dmsdocument.py", "src/collective/dms/basecontent/profiles/default/metadata.xml", "src/collective/dms/basecontent/upgrades/configure.zcml", "src/collective/dms/basecontent/upgrades/upgrades.py", "src/collective/dms/basecontent/widget.py", "versions.cfg"]}, {"commit_id": "7a7f9e6803c01e87cd393d8f25e975d411b0e8e6", "commit_date": "Wed Feb 8 10:04:46 2023 +0100", "commit_message": "Uninstalled correctly chosen products", "files_name": ["src/collective/dms/basecontent/upgrades/upgrades.py"]}, {"commit_id": "7c259f585e81d8407a387bd240e3ae2980c30f67", "commit_date": "Tue Feb 14 12:04:56 2023 +0200", "commit_message": "add Plone Addon classifier", "files_name": ["setup.py"]}, {"commit_id": "135471a77df4e5095ad596b188e529f21379bb46", "commit_date": "Tue Feb 14 11:05:12 2023 +0100", "commit_message": "Merge pull request #3 from collective/add-Plone-Addon-classifier", "files_name": ["3ca96e124813056195b4452eb35cb982d500ff3b - Wed Mar 29 10:46:57 2023 +0200 : Merge pull request #4 from collective/select2", "88c2ad13973a7c91cd45af8758ce89c2454b1b9c - Wed Mar 29 10:49:28 2023 +0200 : Preparing release 1.11", "CHANGES.rst", "setup.py"]}, {"commit_id": "5af5087221707395ef88215a529701d086316f05", "commit_date": "Wed Mar 29 10:49:47 2023 +0200", "commit_message": "Back to development: 1.12", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "7e6d517a77dfacd735fb94ef6f797eaccf5df008", "commit_date": "Fri Apr 7 10:38:01 2023 +0200", "commit_message": "Customised dmsdocument view template so the description is inside a span", "files_name": ["CHANGES.rst", "src/collective/dms/basecontent/browser/templates/dmsdocument_view.pt"]}, {"commit_id": "52422a41eb8511607f47fd701dff14ec13bd9e1d", "commit_date": "Fri May 12 11:51:22 2023 +0200", "commit_message": "Preparing release 1.12", "files_name": ["CHANGES.rst", "setup.py"]}, {"commit_id": "6cba28ffefdf25689caa24791a5fac5ccf6cf6eb", "commit_date": "Fri May 12 11:52:10 2023 +0200", "commit_message": "Back to development: 1.13", "files_name": ["CHANGES.rst", "setup.py"]}], "parents": [{"commit_id_before": "0d9387a89a4c156e4ee8b0aec15bc77341123ecb", "url_before": "https://api.github.com/repos/collective/collective.dms.basecontent/commits/0d9387a89a4c156e4ee8b0aec15bc77341123ecb", "html_url_before": "https://github.com/collective/collective.dms.basecontent/commit/0d9387a89a4c156e4ee8b0aec15bc77341123ecb"}], "details": [{"raw_url": "https://github.com/collective/collective.dms.basecontent/raw/6c4d616fcc771822a14ebae5e23f3f6d96d134bd/CHANGES.rst", "code": "Changelog\n=========\n\n1.7 (unreleased)\n----------------\n\n- Updated columns to work with z3c.table 2.2. Escaped rendering special caracters to avoid xss.\n  [sgeulette]\n\n1.6 (2021-04-20)\n----------------\n\n- RelatedDocs field can handle object_provides criteria.\n  [sgeulette]\n\n1.5 (2019-11-25)\n----------------\n\n- Added css on some columns.\n  [sgeulette]\n\n1.4 (2019-09-20)\n----------------\n\n- Made class inheritance clearer.\n  [sgeulette]\n\n1.3 (2018-09-24)\n----------------\n\n- Use a fade edit pencil to dissuade user click on it.\n  [sgeulette]\n\n1.2 (2018-09-05)\n----------------\n\n- Changed french translation to avoid confusion.\n  [sgeulette]\n\n1.1 (2018-07-23)\n----------------\n\n- Remove filerepresentation adapters.\n  They are not needed for collective.zopeedit > 1.0.0\n  [gotcha]\n- Replace restrictedTraverse by getMultiAdapter\n  [sgeulette]\n- Display related docs with list\n  [sgeulette]\n\n1.0 (2017-06-02)\n----------------\n\n- Replace collective.z3cform.rolefield by dexterity.localrolesfield. Manual configuration needed. See readme...\n  [sgeulette]\n\n0.7 (2017-05-30)\n----------------\n\n- Move the signed attribute to collective.dms.scanbehavior.\n  [mpeeters]\n\n0.6 (2015-11-24)\n----------------\n\n- Removed old sorting attribute. Added dependency. Changed travis config.\n  [sgeulette]\n\n0.5 (2015-06-02)\n----------------\n\n- Added div with id to fix fields display in edit mode\n  [sgeulette]\n- Added treating_groups and recipient_groups catalog index.\n  [sgeulette]\n- Added treating_groups and recipient_groups in p.a.collection columns\n  [sgeulette]\n- Cleaning on task old stuff\n  [cmessiant]\n- Don't use AjaxChosenMultiFieldWidget for treating_groups field\n  [cmessiant]\n\n0.4 (2015-03-13)\n----------------\n\n- Fix fields width to 50% to keep fields on the left of the scan preview\n  [sgeulette]\n- Test attribute existence to resolve a recatalog problem\n  [sgeulette]\n\n0.3 (2014-10-24)\n----------------\n\n- Correct wrong metadata name in column\n  [sgeulette]\n- Add a dmsdocument edit view including documentviewer to complete attributes after batch import.\n  [sgeulette]\n\n0.2 (2014-02-26)\n----------------\n\n- Update the LocalRolesToPrincipals fields to use zope.schemaevent\n  [mpeeters]\n- Integrated documentviewer\n  [vincentfretin]\n- Add signed version\n  [vincentfretin, cedricmessiant]\n- New default view for all documents\n  [vincentfretin, cedricmessiant]\n- Allow tasks to be added to document\n  [fpeters, vincentfretin, cedricmessiant]\n\n0.1.1 (2013-03-08)\n------------------\n\n- Corrected MANIFEST.in\n\n0.1 (2013-03-06)\n----------------\n\n- Package created using templer\n  [cedricmessiant]\n- Added portal types\n  [sgeulette]\n- Related field\n  [davidconvent]\n- LocalRolesToPrincipals field\n  [gauthierbastien]\n", "code_before": "Changelog\n=========\n\n1.7 (unreleased)\n----------------\n\n- Nothing changed yet.\n\n\n1.6 (2021-04-20)\n----------------\n\n- RelatedDocs field can handle object_provides criteria.\n  [sgeulette]\n\n1.5 (2019-11-25)\n----------------\n\n- Added css on some columns.\n  [sgeulette]\n\n1.4 (2019-09-20)\n----------------\n\n- Made class inheritance clearer.\n  [sgeulette]\n\n1.3 (2018-09-24)\n----------------\n\n- Use a fade edit pencil to dissuade user click on it.\n  [sgeulette]\n\n1.2 (2018-09-05)\n----------------\n\n- Changed french translation to avoid confusion.\n  [sgeulette]\n\n1.1 (2018-07-23)\n----------------\n\n- Remove filerepresentation adapters.\n  They are not needed for collective.zopeedit > 1.0.0\n  [gotcha]\n- Replace restrictedTraverse by getMultiAdapter\n  [sgeulette]\n- Display related docs with list\n  [sgeulette]\n\n1.0 (2017-06-02)\n----------------\n\n- Replace collective.z3cform.rolefield by dexterity.localrolesfield. Manual configuration needed. See readme...\n  [sgeulette]\n\n0.7 (2017-05-30)\n----------------\n\n- Move the signed attribute to collective.dms.scanbehavior.\n  [mpeeters]\n\n0.6 (2015-11-24)\n----------------\n\n- Removed old sorting attribute. Added dependency. Changed travis config.\n  [sgeulette]\n\n0.5 (2015-06-02)\n----------------\n\n- Added div with id to fix fields display in edit mode\n  [sgeulette]\n- Added treating_groups and recipient_groups catalog index.\n  [sgeulette]\n- Added treating_groups and recipient_groups in p.a.collection columns\n  [sgeulette]\n- Cleaning on task old stuff\n  [cmessiant]\n- Don't use AjaxChosenMultiFieldWidget for treating_groups field\n  [cmessiant]\n\n0.4 (2015-03-13)\n----------------\n\n- Fix fields width to 50% to keep fields on the left of the scan preview\n  [sgeulette]\n- Test attribute existence to resolve a recatalog problem\n  [sgeulette]\n\n0.3 (2014-10-24)\n----------------\n\n- Correct wrong metadata name in column\n  [sgeulette]\n- Add a dmsdocument edit view including documentviewer to complete attributes after batch import.\n  [sgeulette]\n\n0.2 (2014-02-26)\n----------------\n\n- Update the LocalRolesToPrincipals fields to use zope.schemaevent\n  [mpeeters]\n- Integrated documentviewer\n  [vincentfretin]\n- Add signed version\n  [vincentfretin, cedricmessiant]\n- New default view for all documents\n  [vincentfretin, cedricmessiant]\n- Allow tasks to be added to document\n  [fpeters, vincentfretin, cedricmessiant]\n\n0.1.1 (2013-03-08)\n------------------\n\n- Corrected MANIFEST.in\n\n0.1 (2013-03-06)\n----------------\n\n- Package created using templer\n  [cedricmessiant]\n- Added portal types\n  [sgeulette]\n- Related field\n  [davidconvent]\n- LocalRolesToPrincipals field\n  [gauthierbastien]\n", "patch": "@@ -4,8 +4,8 @@ Changelog\n 1.7 (unreleased)\n ----------------\n \n-- Nothing changed yet.\n-\n+- Updated columns to work with z3c.table 2.2. Escaped rendering special caracters to avoid xss.\n+  [sgeulette]\n \n 1.6 (2021-04-20)\n ----------------", "file_path": "files/2022_12/1404", "file_language": "rst", "file_name": "CHANGES.rst", "outdated_file_modify": 1, "outdated_file_before": 1, "outdated_file_after": 0}, {"raw_url": "https://github.com/collective/collective.dms.basecontent/raw/6c4d616fcc771822a14ebae5e23f3f6d96d134bd/setup.py", "code": "#! -*- coding: utf8 -*-\nfrom setuptools import setup, find_packages\n\nversion = '1.7.dev0'\n\nlong_description = (\n    open('README.rst').read()\n    + '\\n' +\n    'Contributors\\n'\n    '============\\n'\n    + '\\n' +\n    open('CONTRIBUTORS.rst').read()\n    + '\\n' +\n    open('CHANGES.rst').read()\n    + '\\n')\n\nsetup(\n    name='collective.dms.basecontent',\n    version=version,\n    description=\"Base content types for document management system\",\n    long_description=long_description,\n    # Get more strings from\n    # http://pypi.python.org/pypi?%3Aaction=list_classifiers\n    classifiers=[\n        \"Development Status :: 5 - Production/Stable\",\n        \"Environment :: Web Environment\",\n        \"Framework :: Plone\",\n        \"Framework :: Plone :: 4.2\",\n        \"Framework :: Plone :: 4.3\",\n        \"License :: OSI Approved :: GNU General Public License v2 (GPLv2)\",\n        \"Operating System :: OS Independent\",\n        \"Programming Language :: Python\",\n        \"Programming Language :: Python :: 2.7\",\n        \"Topic :: Software Development :: Libraries :: Python Modules\",\n    ],\n    keywords='document management system dms viewer',\n    author='Ecreall, Entrouvert, IMIO',\n    author_email='cedricmessiant@ecreall.com',\n    url='https://github.com/collective/collective.dms.basecontent',\n    download_url='https://pypi.org/project/collective.dms.basecontent',\n    license='gpl',\n    packages=find_packages('src'),\n    package_dir={'': 'src'},\n    namespace_packages=['collective', 'collective.dms'],\n    include_package_data=True,\n    zip_safe=False,\n    install_requires=[\n        'setuptools',\n        'five.grok',\n        'collective.documentviewer',\n        'dexterity.localrolesfield',\n        'future',\n        'plone.api',\n        'plone.app.dexterity',\n        'plone.directives.form',\n        'plone.namedfile',\n        'z3c.blobfile',\n        'plone.app.contenttypes',\n        'plone.app.relationfield',\n        'plone.formwidget.contenttree',\n        'plone.principalsource',\n        'collective.z3cform.chosen',\n        'z3c.table>=2.2',\n    ],\n    extras_require={\n        'test': ['plone.app.testing',\n                 'ecreall.helpers.testing',\n                 'plone.app.vocabularies'\n                 ],\n    },\n    entry_points=\"\"\"\n    # -*- Entry points: -*-\n    [z3c.autoinclude.plugin]\n    target = plone\n    \"\"\",\n)\n", "code_before": "#! -*- coding: utf8 -*-\nfrom setuptools import setup, find_packages\n\nversion = '1.7.dev0'\n\nlong_description = (\n    open('README.rst').read()\n    + '\\n' +\n    'Contributors\\n'\n    '============\\n'\n    + '\\n' +\n    open('CONTRIBUTORS.rst').read()\n    + '\\n' +\n    open('CHANGES.rst').read()\n    + '\\n')\n\nsetup(\n    name='collective.dms.basecontent',\n    version=version,\n    description=\"Base content types for document management system\",\n    long_description=long_description,\n    # Get more strings from\n    # http://pypi.python.org/pypi?%3Aaction=list_classifiers\n    classifiers=[\n        \"Development Status :: 5 - Production/Stable\",\n        \"Environment :: Web Environment\",\n        \"Framework :: Plone\",\n        \"Framework :: Plone :: 4.2\",\n        \"Framework :: Plone :: 4.3\",\n        \"License :: OSI Approved :: GNU General Public License v2 (GPLv2)\",\n        \"Operating System :: OS Independent\",\n        \"Programming Language :: Python\",\n        \"Programming Language :: Python :: 2.7\",\n        \"Topic :: Software Development :: Libraries :: Python Modules\",\n    ],\n    keywords='document management system dms viewer',\n    author='Ecreall, Entrouvert, IMIO',\n    author_email='cedricmessiant@ecreall.com',\n    url='https://github.com/collective/collective.dms.basecontent',\n    download_url='https://pypi.org/project/collective.dms.basecontent',\n    license='gpl',\n    packages=find_packages('src'),\n    package_dir={'': 'src'},\n    namespace_packages=['collective', 'collective.dms'],\n    include_package_data=True,\n    zip_safe=False,\n    install_requires=[\n        'setuptools',\n        'five.grok',\n        'collective.documentviewer',\n        'dexterity.localrolesfield',\n        'plone.api',\n        'plone.app.dexterity',\n        'plone.directives.form',\n        'plone.namedfile',\n        'z3c.blobfile',\n        'plone.app.contenttypes',\n        'plone.app.relationfield',\n        'plone.formwidget.contenttree',\n        'plone.principalsource',\n        'collective.z3cform.chosen',\n        'z3c.table',\n    ],\n    extras_require={\n        'test': ['plone.app.testing',\n                 'ecreall.helpers.testing',\n                 'plone.app.vocabularies'\n                 ],\n    },\n    entry_points=\"\"\"\n    # -*- Entry points: -*-\n    [z3c.autoinclude.plugin]\n    target = plone\n    \"\"\",\n)\n", "patch": "@@ -49,6 +49,7 @@\n         'five.grok',\n         'collective.documentviewer',\n         'dexterity.localrolesfield',\n+        'future',\n         'plone.api',\n         'plone.app.dexterity',\n         'plone.directives.form',\n@@ -59,7 +60,7 @@\n         'plone.formwidget.contenttree',\n         'plone.principalsource',\n         'collective.z3cform.chosen',\n-        'z3c.table',\n+        'z3c.table>=2.2',\n     ],\n     extras_require={\n         'test': ['plone.app.testing',", "file_path": "files/2022_12/1405", "file_language": "py", "file_name": "setup.py", "outdated_file_modify": 1, "outdated_file_before": 1, "outdated_file_after": 0, "llm_check": 0, "static_check": 0, "static": {"rats": [false, []], "semgrep": [false, []]}, "target": 0, "function_before": [], "function_after": []}, {"raw_url": "https://github.com/collective/collective.dms.basecontent/raw/6c4d616fcc771822a14ebae5e23f3f6d96d134bd/src%2Fcollective%2Fdms%2Fbasecontent%2Fbrowser%2Fcolumn.py", "code": "from AccessControl import getSecurityManager\nfrom Acquisition import aq_base\nfrom collective.dms.basecontent import _\nfrom five import grok\nfrom html import escape\nfrom Products.CMFCore.utils import getToolByName\nfrom Products.CMFCore.WorkflowCore import WorkflowException\nfrom Products.CMFPlone.utils import safe_unicode\nfrom z3c.table import interfaces\nfrom zope.component import getMultiAdapter\nfrom zope.i18n import translate\nfrom zope.i18nmessageid import MessageFactory\n\nimport Missing\nimport os.path\nimport plone.api\nimport z3c.table.column\nimport z3c.table.table\n\n\nPMF = MessageFactory('plone')\n\ngrok.templatedir('templates')\n\n\nclass Column(z3c.table.column.Column, grok.MultiAdapter):\n    grok.baseclass()\n    grok.provides(interfaces.IColumn)\n\n\ndef get_value(item, attribute, default=None):\n    try:\n        value = getattr(aq_base(item), attribute)\n        if value is Missing.Value:\n            return default\n    except AttributeError:\n        obj = item.getObject()\n        value = getattr(obj, attribute, default)\n\n    if callable(value):\n        value = value()\n\n    return value\n\n\nclass DateColumn(Column):\n    grok.baseclass()\n    attribute = NotImplemented\n\n    def renderCell(self, item):\n        value = get_value(item, self.attribute)\n        return self.table.format_date(value)\n\n\nclass DateTimeColumn(Column):\n    grok.baseclass()\n    attribute = NotImplemented\n\n    def renderCell(self, item):\n        value = get_value(item, self.attribute)\n        return self.table.format_date(value, long_format=True)\n\n\nclass PrincipalColumn(Column):\n    grok.baseclass()\n    attribute = NotImplemented\n\n    def renderCell(self, item):\n        value = get_value(item, self.attribute, default=())\n\n        if not isinstance(value, (list, tuple)):\n            value = (value,)\n\n        gtool = getToolByName(plone.api.portal.get(), 'portal_groups')\n        mtool = getToolByName(plone.api.portal.get(), 'portal_membership')\n        principals = []\n        for principal_id in value:\n            user = mtool.getMemberById(principal_id)\n            if user is not None:\n                principals.append(escape(user.getProperty('fullname', None)) or user.getId())\n            else:\n                group = gtool.getGroupById(principal_id)\n                if group is not None:\n                    principals.append(escape(group.getProperty('title', None)) or group.getId())\n\n        return ', '.join(principals).decode('utf-8')\n\n\nclass LinkColumn(z3c.table.column.LinkColumn, Column):\n    grok.baseclass()\n\n    def getLinkURL(self, item):\n        \"\"\"Setup link url.\"\"\"\n        if self.linkName is not None:\n            return '%s/%s' % (item.getURL(), self.linkName)\n        return item.getURL()\n\n    def renderCell(self, item):\n        # setup a tag\n        return '<a href=\"%s\"%s%s%s>%s</a>' % (\n            self.getLinkURL(item),  # originally escaped\n            self.getLinkTarget(item),\n            self.getLinkCSS(item),\n            self.getLinkTitle(item),\n            self.getLinkContent(item),  # originally escaped\n        )\n\n\nclass TitleColumn(LinkColumn):\n    grok.baseclass()\n    header = PMF(\"Title\")\n    weight = 10\n\n    def getLinkContent(self, item):\n        title = get_value(item, 'Title')\n        return escape(safe_unicode(title))\n\n\nclass IconColumn(LinkColumn):\n    grok.baseclass()\n\n    def getLinkContent(self, item):\n        content = super(IconColumn, self).getLinkContent(item)  # escaped\n        return u\"\"\"<img title=\"%s\" src=\"%s\" />\"\"\" % (\n            content,\n            '%s/%s' % (self.table.portal_url, self.iconName))\n\n\nclass DeleteColumn(IconColumn):\n    grok.baseclass()\n    header = u\"\"\n    weight = 9\n    linkName = \"delete_confirmation\"\n    linkContent = PMF('Delete')\n    linkCSS = 'edm-delete-popup'\n    iconName = \"delete_icon.png\"\n    linkContent = PMF(u\"Delete\")\n\n    def actionAvailable(self, item):\n        obj = item.getObject()\n        sm = getSecurityManager()\n        return sm.checkPermission('Delete objects', obj)\n\n    def renderCell(self, item):\n        if not self.actionAvailable(item):\n            return u\"\"\n\n        return super(DeleteColumn, self).renderCell(item)\n\n\nclass DownloadColumn(IconColumn):\n    grok.baseclass()\n    header = u\"\"\n    weight = 1\n    linkName = \"@@download\"\n    iconName = \"download_icon.png\"\n    linkContent = _(u\"Download file\")\n\n\nclass ExternalEditColumn(IconColumn):\n    grok.baseclass()\n    header = u\"\"\n    weight = 3\n    linkName = \"@@external_edit\"\n    iconName = \"extedit_icon.png\"\n    linkContent = PMF(u\"Edit with external application\")\n\n    def actionAvailable(self, item):\n        obj = item.getObject()\n        sm = getSecurityManager()\n        if not sm.checkPermission('Modify portal content', obj):\n            return False\n\n        if obj.file is None:\n            return False\n\n        ext = os.path.splitext(obj.file.filename)[-1].lower()\n        if ext in (u'.pdf', u'.jpg', '.jpeg'):\n            return False\n\n        view = getMultiAdapter((obj, self.request), name='externalEditorEnabled')\n        if not view.available():\n            return False\n\n        return True\n\n    def renderCell(self, item):\n        if not self.actionAvailable(item):\n            return u\"\"\n\n        return super(ExternalEditColumn, self).renderCell(item)\n\n\nclass EditColumn(IconColumn):\n    grok.baseclass()\n    header = u\"\"\n    weight = 2\n    linkName = \"edit\"\n    iconName = \"++resource++fade_edit.png\"\n    linkContent = PMF(u\"Edit\")\n    linkCSS = 'overlay-form-reload'\n\n    def actionAvailable(self, item):\n        obj = item.getObject()\n        sm = getSecurityManager()\n        return sm.checkPermission('Modify portal content', obj)\n\n    def renderCell(self, item):\n        if not self.actionAvailable(item):\n            return u\"\"\n\n        return super(EditColumn, self).renderCell(item)\n\n\nclass StateColumn(Column):\n    grok.baseclass()\n    header = PMF(u\"State\")\n    weight = 50\n\n    def renderCell(self, item):\n        try:\n            wtool = self.table.wtool\n            portal_type = get_value(item, 'portal_type')\n            review_state = get_value(item, 'review_state')\n            if not review_state:\n                return u\"\"\n            state_title = wtool.getTitleForStateOnType(review_state,\n                                                       portal_type)\n            return translate(PMF(state_title), context=self.request)\n        except WorkflowException:\n            return u\"\"\n\n\nclass LabelColumn(Column):\n    grok.baseclass()\n    attribute = NotImplemented\n\n    def renderCell(self, item):\n        value = get_value(item, self.attribute)\n        if value is None:\n            value = ''\n        return value\n", "code_before": "import os.path\nimport Missing\nfrom Acquisition import aq_base\nfrom AccessControl import getSecurityManager\nfrom Products.CMFCore.utils import getToolByName\nfrom five import grok\nfrom z3c.table import interfaces\nfrom zope.component import getMultiAdapter\nfrom zope.i18nmessageid import MessageFactory\nfrom zope.i18n import translate\nimport z3c.table.table\nimport z3c.table.column\nfrom Products.CMFCore.WorkflowCore import WorkflowException\nimport plone.api\n\nfrom collective.dms.basecontent import _\n\nPMF = MessageFactory('plone')\n\ngrok.templatedir('templates')\n\n\nclass Column(z3c.table.column.Column, grok.MultiAdapter):\n    grok.baseclass()\n    grok.provides(interfaces.IColumn)\n\n\ndef get_value(item, attribute, default=None):\n    try:\n        value = getattr(aq_base(item), attribute)\n        if value is Missing.Value:\n            return default\n    except AttributeError:\n        obj = item.getObject()\n        value = getattr(obj, attribute, default)\n\n    if callable(value):\n        value = value()\n\n    return value\n\n\nclass DateColumn(Column):\n    grok.baseclass()\n    attribute = NotImplemented\n\n    def renderCell(self, item):\n        value = get_value(item, self.attribute)\n        return self.table.format_date(value)\n\n\nclass DateTimeColumn(Column):\n    grok.baseclass()\n    attribute = NotImplemented\n\n    def renderCell(self, item):\n        value = get_value(item, self.attribute)\n        return self.table.format_date(value, long_format=True)\n\n\nclass PrincipalColumn(Column):\n    grok.baseclass()\n    attribute = NotImplemented\n\n    def renderCell(self, item):\n        value = get_value(item, self.attribute, default=())\n\n        if not isinstance(value, (list, tuple)):\n            value = (value,)\n\n        gtool = getToolByName(plone.api.portal.get(), 'portal_groups')\n        mtool = getToolByName(plone.api.portal.get(), 'portal_membership')\n        principals = []\n        for principal_id in value:\n            user = mtool.getMemberById(principal_id)\n            if user is not None:\n                principals.append(user.getProperty('fullname', None) or user.getId())\n            else:\n                group = gtool.getGroupById(principal_id)\n                if group is not None:\n                    principals.append(group.getProperty('title', None) or group.getId())\n\n        return ', '.join(principals).decode('utf-8')\n\n\nclass LinkColumn(z3c.table.column.LinkColumn, Column):\n    grok.baseclass()\n\n    def getLinkURL(self, item):\n        \"\"\"Setup link url.\"\"\"\n        if self.linkName is not None:\n            return '%s/%s' % (item.getURL(), self.linkName)\n        return item.getURL()\n\n\nclass TitleColumn(LinkColumn):\n    grok.baseclass()\n    header = PMF(\"Title\")\n    weight = 10\n\n    def getLinkContent(self, item):\n        title = get_value(item, 'Title')\n        if isinstance(title, unicode):\n            return title\n        else:\n            return unicode(title, 'utf-8', 'ignore')\n\n\nclass IconColumn(LinkColumn):\n    grok.baseclass()\n\n    def getLinkContent(self, item):\n        content = super(IconColumn, self).getLinkContent(item)\n        return u\"\"\"<img title=\"%s\" src=\"%s\" />\"\"\" % (\n            content,\n            '%s/%s' % (self.table.portal_url, self.iconName))\n\n\nclass DeleteColumn(IconColumn):\n    grok.baseclass()\n    header = u\"\"\n    weight = 9\n    linkName = \"delete_confirmation\"\n    linkContent = PMF('Delete')\n    linkCSS = 'edm-delete-popup'\n    iconName = \"delete_icon.png\"\n    linkContent = PMF(u\"Delete\")\n\n    def actionAvailable(self, item):\n        obj = item.getObject()\n        sm = getSecurityManager()\n        return sm.checkPermission('Delete objects', obj)\n\n    def renderCell(self, item):\n        if not self.actionAvailable(item):\n            return u\"\"\n\n        return super(DeleteColumn, self).renderCell(item)\n\n\nclass DownloadColumn(IconColumn):\n    grok.baseclass()\n    header = u\"\"\n    weight = 1\n    linkName = \"@@download\"\n    iconName = \"download_icon.png\"\n    linkContent = _(u\"Download file\")\n\n\nclass ExternalEditColumn(IconColumn):\n    grok.baseclass()\n    header = u\"\"\n    weight = 3\n    linkName = \"@@external_edit\"\n    iconName = \"extedit_icon.png\"\n    linkContent = PMF(u\"Edit with external application\")\n\n    def actionAvailable(self, item):\n        obj = item.getObject()\n        sm = getSecurityManager()\n        if not sm.checkPermission('Modify portal content', obj):\n            return False\n\n        if obj.file is None:\n            return False\n\n        ext = os.path.splitext(obj.file.filename)[-1].lower()\n        if ext in (u'.pdf', u'.jpg', '.jpeg'):\n            return False\n\n        view = getMultiAdapter((obj, self.request), name='externalEditorEnabled')\n        if not view.available():\n            return False\n\n        return True\n\n    def renderCell(self, item):\n        if not self.actionAvailable(item):\n            return u\"\"\n\n        return super(ExternalEditColumn, self).renderCell(item)\n\n\nclass EditColumn(IconColumn):\n    grok.baseclass()\n    header = u\"\"\n    weight = 2\n    linkName = \"edit\"\n    iconName = \"++resource++fade_edit.png\"\n    linkContent = PMF(u\"Edit\")\n    linkCSS = 'overlay-form-reload'\n\n    def actionAvailable(self, item):\n        obj = item.getObject()\n        sm = getSecurityManager()\n        return sm.checkPermission('Modify portal content', obj)\n\n    def renderCell(self, item):\n        if not self.actionAvailable(item):\n            return u\"\"\n\n        return super(EditColumn, self).renderCell(item)\n\n\nclass StateColumn(Column):\n    grok.baseclass()\n    header = PMF(u\"State\")\n    weight = 50\n\n    def renderCell(self, item):\n        try:\n            wtool = self.table.wtool\n            portal_type = get_value(item, 'portal_type')\n            review_state = get_value(item, 'review_state')\n            if not review_state:\n                return u\"\"\n            state_title = wtool.getTitleForStateOnType(review_state,\n                                                       portal_type)\n            return translate(PMF(state_title), context=self.request)\n        except WorkflowException:\n            return u\"\"\n\n\nclass LabelColumn(Column):\n    grok.baseclass()\n    attribute = NotImplemented\n\n    def renderCell(self, item):\n        value = get_value(item, self.attribute)\n        if value is None:\n            value = ''\n        return value\n", "patch": "@@ -1,19 +1,22 @@\n-import os.path\n-import Missing\n-from Acquisition import aq_base\n from AccessControl import getSecurityManager\n-from Products.CMFCore.utils import getToolByName\n+from Acquisition import aq_base\n+from collective.dms.basecontent import _\n from five import grok\n+from html import escape\n+from Products.CMFCore.utils import getToolByName\n+from Products.CMFCore.WorkflowCore import WorkflowException\n+from Products.CMFPlone.utils import safe_unicode\n from z3c.table import interfaces\n from zope.component import getMultiAdapter\n-from zope.i18nmessageid import MessageFactory\n from zope.i18n import translate\n-import z3c.table.table\n-import z3c.table.column\n-from Products.CMFCore.WorkflowCore import WorkflowException\n+from zope.i18nmessageid import MessageFactory\n+\n+import Missing\n+import os.path\n import plone.api\n+import z3c.table.column\n+import z3c.table.table\n \n-from collective.dms.basecontent import _\n \n PMF = MessageFactory('plone')\n \n@@ -74,11 +77,11 @@ def renderCell(self, item):\n         for principal_id in value:\n             user = mtool.getMemberById(principal_id)\n             if user is not None:\n-                principals.append(user.getProperty('fullname', None) or user.getId())\n+                principals.append(escape(user.getProperty('fullname', None)) or user.getId())\n             else:\n                 group = gtool.getGroupById(principal_id)\n                 if group is not None:\n-                    principals.append(group.getProperty('title', None) or group.getId())\n+                    principals.append(escape(group.getProperty('title', None)) or group.getId())\n \n         return ', '.join(principals).decode('utf-8')\n \n@@ -92,6 +95,16 @@ def getLinkURL(self, item):\n             return '%s/%s' % (item.getURL(), self.linkName)\n         return item.getURL()\n \n+    def renderCell(self, item):\n+        # setup a tag\n+        return '<a href=\"%s\"%s%s%s>%s</a>' % (\n+            self.getLinkURL(item),  # originally escaped\n+            self.getLinkTarget(item),\n+            self.getLinkCSS(item),\n+            self.getLinkTitle(item),\n+            self.getLinkContent(item),  # originally escaped\n+        )\n+\n \n class TitleColumn(LinkColumn):\n     grok.baseclass()\n@@ -100,17 +113,14 @@ class TitleColumn(LinkColumn):\n \n     def getLinkContent(self, item):\n         title = get_value(item, 'Title')\n-        if isinstance(title, unicode):\n-            return title\n-        else:\n-            return unicode(title, 'utf-8', 'ignore')\n+        return escape(safe_unicode(title))\n \n \n class IconColumn(LinkColumn):\n     grok.baseclass()\n \n     def getLinkContent(self, item):\n-        content = super(IconColumn, self).getLinkContent(item)\n+        content = super(IconColumn, self).getLinkContent(item)  # escaped\n         return u\"\"\"<img title=\"%s\" src=\"%s\" />\"\"\" % (\n             content,\n             '%s/%s' % (self.table.portal_url, self.iconName))", "file_path": "files/2022_12/1406", "file_language": "py", "file_name": "src/collective/dms/basecontent/browser/column.py", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 1, "llm_check": 1, "static_check": 0, "static": {"rats": [false, []], "semgrep": [false, []]}, "target": -1, "function_before": [], "function_after": []}], "outdated": 1, "cwe_descripiton": "", "cwe_consequence": "", "cwe_method": "", "cwe_solution": ""}
