{"index": 8524, "cve_id": "CVE-2022-2523", "cwe_id": ["CWE-79"], "cve_language": "Python", "cve_description": "Cross-site Scripting (XSS) - Reflected in GitHub repository beancount/fava prior to 1.22.2.", "cvss": "6.1", "publish_date": "July 25, 2022", "AV": "NETWORK", "AC": "NETWORK", "PR": "NONE", "UI": "REQUIRED", "S": "CHANGED", "C": "LOW", "I": "LOW", "A": "NONE", "commit_id": "dccfb6a2f4567f35ce2e9a78e24f92ebf946bc9b", "commit_message": "fix xss issue in query filter", "commit_date": "2022-07-23T19:06:44Z", "project": "beancount/fava", "url": "https://api.github.com/repos/beancount/fava/commits/dccfb6a2f4567f35ce2e9a78e24f92ebf946bc9b", "html_url": "https://github.com/beancount/fava/commit/dccfb6a2f4567f35ce2e9a78e24f92ebf946bc9b", "windows_before": [{"commit_id": "11e0ed360ac4b4a40eda35f6822b7e0ff128535e", "commit_date": "Fri Jul 22 19:36:44 2022 +0200", "commit_message": "fix #1453", "files_name": ["src/fava/templates/_charts.html"]}, {"commit_id": "d2ce787e2c8d1776dbfac742492a986c19a1cd2b", "commit_date": "Tue Jul 12 21:54:55 2022 +0200", "commit_message": "deps", "files_name": [".pre-commit-config.yaml", "frontend/package-lock.json", "frontend/package.json", "frontend/tsconfig.json"]}, {"commit_id": "2cfe7232f9958caad9fbb9c45947c1f223556dcf", "commit_date": "Tue Jul 12 21:49:38 2022 +0200", "commit_message": "[pre-commit.ci] pre-commit autoupdate (#1450)", "files_name": [".pre-commit-config.yaml"]}, {"commit_id": "239061c02b0df8e1ed47d34c4a361dc84447452f", "commit_date": "Tue Jul 12 21:48:31 2022 +0200", "commit_message": "update translations", "files_name": ["src/fava/translations/bg/LC_MESSAGES/messages.po", "src/fava/translations/zh/LC_MESSAGES/messages.po", "src/fava/translations/zh_Hant_TW/LC_MESSAGES/messages.po"]}, {"commit_id": "9bb6366423f81dfb3ad997c75630807376a9a58c", "commit_date": "Wed Jul 6 21:36:31 2022 +0200", "commit_message": "fix: precision may be integer 0 (#1445)", "files_name": ["src/fava/core/commodities.py", "tests/__snapshots__/test_json_api.py-test_api_context", "tests/__snapshots__/test_json_api.py-test_api_context-2", "tests/data/long-example.beancount", "tests/test_core_commodities.py"]}, {"commit_id": "39cce56a301be3fed9455fdca6bd20e0dd5bd13d", "commit_date": "Mon Jul 4 20:21:26 2022 +0000", "commit_message": "[pre-commit.ci] pre-commit autoupdate", "files_name": [".pre-commit-config.yaml"]}, {"commit_id": "51c504a4c01ede41cf896324955bb3bf756767f0", "commit_date": "Mon Jul 4 18:07:39 2022 +0200", "commit_message": "context: allow all types of entries", "files_name": ["frontend/src/api.ts", "frontend/src/entries.ts", "frontend/src/helpers.ts", "frontend/src/lib/validation.ts", "frontend/src/modals/EntryContext.svelte"]}, {"commit_id": "6956476f0662664d88dd25c9d04ed7650fe90404", "commit_date": "Mon Jul 4 17:58:57 2022 +0530", "commit_message": "Bugfix: Mark extension generated content as safe", "files_name": ["src/fava/application.py"]}, {"commit_id": "b100959cacbefbfbd180f3c1ee6ed4440311fdb5", "commit_date": "Sun Jul 3 18:04:39 2022 +0200", "commit_message": "changes", "files_name": ["CHANGES"]}, {"commit_id": "9d2d2ab4db4debb01a5b6b1a6d9591f14d71c581", "commit_date": "Sun Jul 3 11:39:31 2022 +0200", "commit_message": "translations", "files_name": ["src/fava/translations/bg/LC_MESSAGES/messages.po", "src/fava/translations/ca/LC_MESSAGES/messages.po", "src/fava/translations/de/LC_MESSAGES/messages.po", "src/fava/translations/es/LC_MESSAGES/messages.po", "src/fava/translations/fa/LC_MESSAGES/messages.po", "src/fava/translations/fr/LC_MESSAGES/messages.po", "src/fava/translations/nl/LC_MESSAGES/messages.po", "src/fava/translations/pt/LC_MESSAGES/messages.po", "src/fava/translations/ru/LC_MESSAGES/messages.po", "src/fava/translations/sk/LC_MESSAGES/messages.po", "src/fava/translations/sv/LC_MESSAGES/messages.po", "src/fava/translations/uk/LC_MESSAGES/messages.po", "src/fava/translations/zh/LC_MESSAGES/messages.po", "src/fava/translations/zh_Hant_TW/LC_MESSAGES/messages.po"]}, {"commit_id": "96c56e2ff25deea4c1681649ca316ed7dfdf3294", "commit_date": "Sun Jul 3 11:27:49 2022 +0200", "commit_message": "more direct imports and some typing", "files_name": ["contrib/scripts.py", "src/fava/application.py", "src/fava/context.py"]}, {"commit_id": "ca9e3882c7b5fbf5273ba52340b9fea6a99f3711", "commit_date": "Thu Jun 30 17:43:08 2022 +0200", "commit_message": "avoid use of |safe filter in templates", "files_name": ["src/fava/application.py", "src/fava/core/file.py", "src/fava/template_filters.py", "src/fava/templates/_layout.html", "src/fava/templates/errors.html", "src/fava/templates/help.html"]}, {"commit_id": "c9f3ee8cd35fb336a8c170187448d64b8f7aae92", "commit_date": "Sat Jul 2 14:31:33 2022 +0200", "commit_message": "fix: fava.core.commodities - remove unused func", "files_name": ["src/fava/core/commodities.py", "tests/test_core_commodities.py"]}, {"commit_id": "72580a65a05963b3460e51fdaf6aded5bd76b423", "commit_date": "Sat Jul 2 14:11:06 2022 +0200", "commit_message": "help: document commodity metadata", "files_name": ["src/fava/help/beancount_syntax.md"]}, {"commit_id": "051305b7e74bb3d31a8799b0586e37e68f58f0d3", "commit_date": "Sat Jul 2 14:06:39 2022 +0200", "commit_message": "frontend: also render numbers according to specified precision", "files_name": ["frontend/src/charts/Sunburst.svelte", "frontend/src/charts/Treemap.svelte", "frontend/src/charts/bar.ts", "frontend/src/charts/line.ts", "frontend/src/format.ts", "frontend/src/stores/index.ts", "src/fava/templates/_layout.html"]}, {"commit_id": "856ec68035b492e3325fb251e8c85a93dd0b711f", "commit_date": "Sat Jul 2 13:35:56 2022 +0200", "commit_message": "commodities: expose precisions on formatter", "files_name": ["src/fava/core/commodities.py", "src/fava/core/number.py", "tests/data/long-example.beancount", "tests/test_core_commodities.py", "tests/test_core_number.py"]}, {"commit_id": "7564872b283e9b832d75229518c002badafceae7", "commit_date": "Sat Jul 2 13:17:35 2022 +0200", "commit_message": "commodities: allow for precision to be specified explicitly", "files_name": ["src/fava/core/commodities.py", "src/fava/core/number.py", "tests/__snapshots__/test_json_api.py-test_api_context", "tests/__snapshots__/test_json_api.py-test_api_context-2", "tests/data/long-example.beancount", "tests/test_core_commodities.py", "tests/test_json_api.py"]}, {"commit_id": "f3b76022ca8389a222679d5b2989285b56aeb61c", "commit_date": "Sat Jul 2 13:03:58 2022 +0200", "commit_message": "fava.core: add module for commodities", "files_name": ["src/fava/core/__init__.py", "src/fava/core/commodities.py", "src/fava/templates/macros/_commodity_macros.html", "tests/test_core.py"]}, {"commit_id": "6ec42909454a882c70fec8097e72ff7071edd10c", "commit_date": "Sun Apr 10 12:19:26 2022 +1000", "commit_message": "Skip price entries in journal table", "files_name": ["src/fava/templates/_journal_table.html"]}, {"commit_id": "307ba72604e1a9c0a81b380657c252cc6cd4f876", "commit_date": "Sat Jul 2 11:39:41 2022 +0200", "commit_message": "tests: bump coverage requirement", "files_name": ["tox.ini"]}, {"commit_id": "6f4bcd5db8603a8baa4cdd190f22d62b0520db46", "commit_date": "Sat May 7 13:39:11 2022 +0200", "commit_message": "explicit filtered ledger", "files_name": ["src/fava/application.py", "src/fava/context.py", "src/fava/core/__init__.py", "src/fava/core/charts.py", "src/fava/core/query_shell.py", "src/fava/ext/portfolio_list/__init__.py", "src/fava/json_api.py", "src/fava/template_filters.py", "src/fava/templates/_charts.html", "src/fava/templates/_tree_table.html", "src/fava/templates/account.html", "src/fava/templates/balance_sheet.html", "src/fava/templates/beancount_file", "src/fava/templates/commodities.html", "src/fava/templates/documents.html", "src/fava/templates/events.html", "src/fava/templates/holdings.html", "src/fava/templates/income_statement.html", "src/fava/templates/journal.html", "src/fava/templates/statistics.html", "src/fava/templates/trial_balance.html", "tests/conftest.py", "tests/test_core.py", "tests/test_core_charts.py", "tests/test_core_query_shell.py", "tests/test_template_filters.py"]}, {"commit_id": "150d75d34958abc5f1d12e01c766ab5888d86346", "commit_date": "Tue Jun 28 18:47:49 2022 +0200", "commit_message": "deps", "files_name": [".pre-commit-config.yaml", "frontend/package-lock.json", "frontend/package.json"]}, {"commit_id": "f2526b4748db2498eafd85eaec92e96a012fc688", "commit_date": "Sat Jul 2 10:05:10 2022 +0200", "commit_message": "charts: strictly type chart modes", "files_name": ["frontend/src/charts/LineChart.svelte", "frontend/src/stores/chart.ts"]}, {"commit_id": "2fcd6057619bb8fa100358a9085ec0a33039be2d", "commit_date": "Sat Jul 2 09:55:05 2022 +0200", "commit_message": "fix: localStorage name clash", "files_name": ["frontend/src/charts/Chart.svelte", "frontend/src/stores/chart.ts"]}, {"commit_id": "ca3af133ddbe748379f37fe517c1ac32dece7e25", "commit_date": "Sat Jul 2 09:49:32 2022 +0200", "commit_message": "charts: always generate interval_totals with sub-accounts", "files_name": ["src/fava/core/charts.py", "src/fava/templates/_charts.html", "src/fava/templates/account.html", "src/fava/templates/income_statement.html", "tests/__snapshots__/test_core_charts.py-test_interval_totals", "tests/__snapshots__/test_core_charts.py-test_interval_totals-2", "tests/__snapshots__/test_core_charts.py-test_interval_totals_inverted", "tests/__snapshots__/test_core_charts.py-test_interval_totals_inverted-2", "tests/test_core_charts.py"]}, {"commit_id": "456d71988d1d62d0f0a4e29b74d641ff9c027a38", "commit_date": "Fri Jul 1 22:36:37 2022 +0200", "commit_message": "charts: refactors; move more logic to bar.ts", "files_name": ["frontend/src/charts/BarChart.svelte", "frontend/src/charts/bar.ts", "frontend/test/charts.test.ts"]}, {"commit_id": "a7301e49c9c66d9a652aa8296938d9c87b274a13", "commit_date": "Fri Jul 1 18:46:14 2022 +0200", "commit_message": "charts: minor refactors for stacked bar charts", "files_name": ["frontend/src/charts/BarChart.svelte", "frontend/src/charts/Chart.svelte", "frontend/src/charts/bar.ts", "frontend/test/charts.test.ts"]}, {"commit_id": "3cb83400d0377e7b4c6ec84c4cdd4755f8d35d29", "commit_date": "Fri Apr 15 16:40:55 2022 -0700", "commit_message": "Remove bucketing functionality.  Add tests", "files_name": ["frontend/src/charts/BarChart.svelte", "frontend/src/charts/bar.ts", "frontend/test/charts.test.ts", "src/fava/core/charts.py", "src/fava/core/fava_options.py", "src/fava/templates/_charts.html", "src/fava/templates/account.html", "src/fava/templates/income_statement.html", "tests/__snapshots__/test_core_charts.py-test_interval_totals_children", "tests/__snapshots__/test_core_charts.py-test_interval_totals_children-2", "tests/test_core_charts.py"]}, {"commit_id": "7f3b5b2e0a1c23291adc02a22154d2de681f786b", "commit_date": "Fri Apr 8 14:35:03 2022 -0700", "commit_message": "Initial stacked barchart implementation", "files_name": ["frontend/src/charts/BarChart.svelte", "frontend/src/charts/Chart.svelte", "frontend/src/charts/bar.ts", "frontend/src/charts/helpers.ts", "frontend/src/stores/chart.ts", "src/fava/core/charts.py"]}], "windows_after": [{"commit_id": "dc8e5e94f07f4ffac3c19f1d563815085dea140f", "commit_date": "Mon Jul 4 15:39:17 2022 +1000", "commit_message": "add conversion_currencies option", "files_name": ["frontend/src/stores/chart.ts", "frontend/src/stores/index.ts", "src/fava/core/fava_options.py", "src/fava/help/options.md", "tests/test_core_fava_options.py"]}, {"commit_id": "b8e87dedd7cf8fd75c58fb65551037d1347aa187", "commit_date": "Sun Jul 24 09:41:48 2022 +0200", "commit_message": "make some more strings translateable", "files_name": ["frontend/src/charts/HierarchyContainer.svelte", "frontend/src/journal/JournalFilters.svelte", "src/fava/templates/_charts.html", "src/fava/translations/babel.conf"]}, {"commit_id": "fcb437273676089de935160507c0198a88df43f3", "commit_date": "Sun Jul 24 09:59:45 2022 +0200", "commit_message": "update translations", "files_name": ["src/fava/translations/bg/LC_MESSAGES/messages.po", "src/fava/translations/ca/LC_MESSAGES/messages.po", "src/fava/translations/de/LC_MESSAGES/messages.po", "src/fava/translations/es/LC_MESSAGES/messages.po", "src/fava/translations/fa/LC_MESSAGES/messages.po", "src/fava/translations/fr/LC_MESSAGES/messages.po", "src/fava/translations/nl/LC_MESSAGES/messages.po", "src/fava/translations/pt/LC_MESSAGES/messages.po", "src/fava/translations/ru/LC_MESSAGES/messages.po", "src/fava/translations/sk/LC_MESSAGES/messages.po", "src/fava/translations/sv/LC_MESSAGES/messages.po", "src/fava/translations/uk/LC_MESSAGES/messages.po", "src/fava/translations/zh/LC_MESSAGES/messages.po", "src/fava/translations/zh_Hant_TW/LC_MESSAGES/messages.po"]}, {"commit_id": "971ae3757daeae8b8b407c8a28072adcc40055cd", "commit_date": "Sun Jul 24 11:15:16 2022 +0200", "commit_message": "add unrealized profit and loss column in Holdings", "files_name": ["src/fava/templates/holdings.html"]}, {"commit_id": "472f3f9ee70e9ece24581fa2a27caf3eae5ac87f", "commit_date": "Sun Jul 24 11:19:29 2022 +0200", "commit_message": "deps", "files_name": ["frontend/package-lock.json"]}, {"commit_id": "6a1a27716b3d3c4f2840dd4bf1b12c62318ec6fd", "commit_date": "Sun Jul 24 11:27:04 2022 +0200", "commit_message": "editor: indent with tab", "files_name": ["frontend/src/codemirror/setup.ts", "src/fava/help/features.md"]}, {"commit_id": "25631ce7e0b817e19f89313066d083cb7c301027", "commit_date": "Sun Jul 24 11:39:44 2022 +0200", "commit_message": "docs: add note that one should use recent deps", "files_name": ["docs/development.rst"]}, {"commit_id": "545f91cc3c74fc79fe5454c113419744667d511f", "commit_date": "Sun Jul 24 11:51:58 2022 +0200", "commit_message": "help: add query chart example", "files_name": ["src/fava/help/features.md"]}, {"commit_id": "e0eaf228561c569a57a9ae1b22ed57e371e7d019", "commit_date": "Mon Jul 25 20:15:18 2022 +0000", "commit_message": "[pre-commit.ci] pre-commit autoupdate", "files_name": [".pre-commit-config.yaml"]}, {"commit_id": "ac8b4ea86ef4bb8d3672099f595aa99cb343da47", "commit_date": "Wed Jul 27 22:19:26 2022 +0200", "commit_message": "manifest: remove some excludes", "files_name": ["MANIFEST.in"]}, {"commit_id": "793cefabb88a95e6ead427ac3fa389b616034941", "commit_date": "Tue Jul 26 17:31:46 2022 +0200", "commit_message": "deps", "files_name": ["frontend/package-lock.json"]}, {"commit_id": "5e185f5e6c452c394182dd7951a26cd77a118e08", "commit_date": "Sat Jul 30 09:21:16 2022 +0200", "commit_message": "temporarily disable sourcehut Arch build", "files_name": [".builds/archlinux.yml"]}, {"commit_id": "6aba5e77e1ee924c22a4271ea8d5368ddf33672f", "commit_date": "Sat Jul 30 09:48:24 2022 +0200", "commit_message": "lazily create tooltip and notification div", "files_name": ["frontend/src/charts/tooltip.ts", "frontend/src/notifications.ts"]}, {"commit_id": "68bbb6e39319deb35ab9f18d0b6aa9fa70472539", "commit_date": "Sat Jul 30 09:18:04 2022 +0200", "commit_message": "create tooltip contents in a xss-safe way", "files_name": ["frontend/src/charts/ScatterPlot.svelte", "frontend/src/charts/Treemap.svelte", "frontend/src/charts/bar.ts", "frontend/src/charts/context.ts", "frontend/src/charts/line.ts", "frontend/src/charts/tooltip.ts", "frontend/src/keyboard-shortcuts.ts", "frontend/src/sidebar/index.ts"]}, {"commit_id": "d6afda1a7f597ed255b4001b725ef0304b2028b6", "commit_date": "Mon Aug 1 20:55:02 2022 +0000", "commit_message": "[pre-commit.ci] pre-commit autoupdate", "files_name": [".pre-commit-config.yaml"]}, {"commit_id": "421b4c23c7f0b7d75a7f589f6c53891c1f7d954b", "commit_date": "Tue Aug 2 18:12:10 2022 +0200", "commit_message": "lint", "files_name": ["src/fava/application.py", "tests/test_application.py"]}, {"commit_id": "5585ecaa6db58ae2b34358a4ed7cf3d2f9649db6", "commit_date": "Thu Aug 4 18:18:13 2022 +0200", "commit_message": "Revert \"temporarily disable sourcehut Arch build\"", "files_name": [".builds/archlinux.yml"]}, {"commit_id": "dbd6fcb465ba06ed2adb65b20662ec0d46af95dd", "commit_date": "Wed Jul 27 17:46:59 2022 +0200", "commit_message": "simpler serialisation for tags and links", "files_name": ["frontend/src/entries.ts", "frontend/src/entry-forms/Transaction.svelte", "src/fava/serialisation.py", "tests/__snapshots__/test_json_api.py-test_api_context", "tests/test_json_api.py", "tests/test_serialisation.py"]}, {"commit_id": "7e3971195ccbb7978edb7d3df9c4ee09b5b68846", "commit_date": "Fri Aug 5 17:27:18 2022 +0200", "commit_message": "deps", "files_name": [".pre-commit-config.yaml", "frontend/package-lock.json"]}, {"commit_id": "1bfa6cccf2cce6e0402b4e78bd52af247cde5539", "commit_date": "Fri Aug 5 16:29:19 2022 +0200", "commit_message": "fix Flask deprecation warnings; more direct imports", "files_name": ["pyproject.toml", "src/fava/application.py", "src/fava/core/__init__.py", "src/fava/core/_compat.py", "src/fava/core/charts.py", "src/fava/core/documents.py", "src/fava/core/extensions.py", "src/fava/core/ingest.py", "src/fava/core/tree.py", "src/fava/core/watcher.py", "src/fava/ext/auto_commit.py", "src/fava/json_api.py", "src/fava/serialisation.py", "src/fava/template_filters.py", "src/fava/util/__init__.py", "src/fava/util/typing.py", "tests/test_application.py", "tests/test_json_api.py"]}, {"commit_id": "bcf9fb115b300e510e2f09a17166bd29002a7780", "commit_date": "Fri Aug 5 17:14:05 2022 +0200", "commit_message": "remove deprecated FavaLedger attributes", "files_name": ["src/fava/core/__init__.py", "tests/test_core.py"]}, {"commit_id": "6f37698a597f2a54539312b1c18e8e5313877c57", "commit_date": "Fri Aug 5 17:16:29 2022 +0200", "commit_message": "ci: run old_deps in ci; increase min Beancount version", "files_name": [".github/workflows/test.yml", "setup.cfg", "tox.ini"]}, {"commit_id": "da9230b59d46fd4b4bfddf930ee128ae84d1bbaf", "commit_date": "Fri Aug 5 17:52:29 2022 +0200", "commit_message": "tests: add test for Pattern jsonification", "files_name": ["tests/test_core_fava_options.py"]}, {"commit_id": "c3ffeaea3d435d0c57a16643bce7dcef263504cf", "commit_date": "Wed Aug 17 20:00:38 2022 +0200", "commit_message": "deps", "files_name": [".pre-commit-config.yaml", "contrib/scripts.py", "frontend/package-lock.json", "frontend/package.json"]}, {"commit_id": "7aac283c46bb2cec5a4e26c90eea9c25e3024c0a", "commit_date": "Sat Sep 3 08:59:46 2022 +0200", "commit_message": "query_shell: fix docstrings", "files_name": ["src/fava/core/query_shell.py"]}, {"commit_id": "ef471f37864c99b96555a384bfe9978dcaf349e1", "commit_date": "Sat Sep 3 10:04:22 2022 +0200", "commit_message": "account tree table: use time filter intervals", "files_name": ["src/fava/template_filters.py", "src/fava/templates/_tree_table.html", "src/fava/util/date.py", "tests/test_template_filters.py", "tests/test_util_date.py"]}, {"commit_id": "7b0a3040ca454a0da3a0eb2473b4aa710b35cb76", "commit_date": "Sat Sep 3 16:40:10 2022 +0200", "commit_message": "account tree table: use time filter intervals for table cells", "files_name": ["src/fava/templates/_tree_table.html"]}, {"commit_id": "507e0b41630130607abefcb891a725168ae84d1f", "commit_date": "Fri Sep 16 17:37:12 2022 +0200", "commit_message": "deps", "files_name": [".pre-commit-config.yaml", "frontend/package-lock.json"]}, {"commit_id": "590a1c6c0eb92fbaedb090e949885afb199c9540", "commit_date": "Tue Sep 27 09:51:41 2022 +0200", "commit_message": "lint", "files_name": ["tests/test_template_tree_table.py", "tox.ini"]}, {"commit_id": "37eb212002d18eb27e259ff590b00562fa9aa745", "commit_date": "Tue Sep 27 10:35:41 2022 +0200", "commit_message": "deps", "files_name": [".pre-commit-config.yaml", "frontend/package-lock.json"]}, {"commit_id": "e75d45f77f78603834621d8e414792bd081e559c", "commit_date": "Mon Sep 26 21:15:40 2022 +0000", "commit_message": "[pre-commit.ci] pre-commit autoupdate", "files_name": [".pre-commit-config.yaml"]}, {"commit_id": "c45f37bc6a4d83c9069db35086d18e5593435b4d", "commit_date": "Wed Sep 28 16:35:37 2022 +0200", "commit_message": "respect default_page in ledger links", "files_name": ["src/fava/templates/_layout.html"]}, {"commit_id": "5cd321decdbb5378adfedfc08b5bc9ba010e0fe6", "commit_date": "Wed Sep 28 17:09:15 2022 +0200", "commit_message": "close #1455", "files_name": ["src/fava/templates/_journal_table.html"]}, {"commit_id": "c699a750460f81d7cff9b7f8a792fc100692dd33", "commit_date": "Mon Oct 10 21:49:52 2022 +0000", "commit_message": "[pre-commit.ci] pre-commit autoupdate", "files_name": [".pre-commit-config.yaml"]}, {"commit_id": "5bdd8633ca02242950f4347f5a81d148d6fe7934", "commit_date": "Mon Oct 10 21:04:37 2022 +0200", "commit_message": "deps", "files_name": [".pre-commit-config.yaml", "frontend/package-lock.json"]}, {"commit_id": "eac1323c55fe1a8e251d10de5b3f42608a238188", "commit_date": "Mon Oct 10 22:04:22 2022 +0200", "commit_message": "remove sourcehut builds", "files_name": [".builds/archlinux.yml", ".builds/debian.yml", "MANIFEST.in"]}, {"commit_id": "ed4a427a190cbdbf7ab4ec411728b8c498763b48", "commit_date": "Mon Oct 10 22:09:19 2022 +0200", "commit_message": "a11y", "files_name": ["frontend/css/base.css", "frontend/src/charts/BarChart.svelte", "frontend/src/charts/ChartSwitcher.svelte", "frontend/src/charts/Sunburst.svelte", "frontend/src/charts/Treemap.svelte", "frontend/src/charts/helpers.ts", "frontend/src/documents/Accounts.svelte", "frontend/src/editor/EditorMenu.svelte", "frontend/src/import/FileList.svelte"]}, {"commit_id": "35e9e62e90a7b06c031cec383bb2a4b6ce489f59", "commit_date": "Tue Oct 11 17:59:14 2022 +0200", "commit_message": "charts: minor refactors", "files_name": ["frontend/src/charts/Chart.svelte", "frontend/src/charts/ChartSwitcher.svelte", "frontend/src/charts/HierarchyContainer.svelte", "frontend/src/charts/Sunburst.svelte"]}, {"commit_id": "72c56f9736c181b5a67b64a6ebc637aedfe81eb8", "commit_date": "Tue Oct 11 23:15:28 2022 +0200", "commit_message": "router: refactor; mark some functions private", "files_name": ["frontend/src/editor/SourceEditor.svelte"]}], "parents": [{"commit_id_before": "11e0ed360ac4b4a40eda35f6822b7e0ff128535e", "url_before": "https://api.github.com/repos/beancount/fava/commits/11e0ed360ac4b4a40eda35f6822b7e0ff128535e", "html_url_before": "https://github.com/beancount/fava/commit/11e0ed360ac4b4a40eda35f6822b7e0ff128535e"}], "details": [{"raw_url": "https://github.com/beancount/fava/raw/dccfb6a2f4567f35ce2e9a78e24f92ebf946bc9b/frontend%2Fsrc%2Fmodals%2FEntryContext.svelte", "code": "<script lang=\"ts\">\n  import type { EntryBaseAttributes } from \"../entries\";\n  import { urlForAccount, urlForSource } from \"../helpers\";\n  import { _ } from \"../i18n\";\n\n  type ContextBalance = Record<string, string[]>;\n  export let entry: EntryBaseAttributes;\n  export let balances_before: ContextBalance | null;\n  export let balances_after: ContextBalance | null;\n</script>\n\n<p>\n  {_(\"Location\")}:\n  <code>\n    <a href={urlForSource(entry)}>\n      {entry.meta.filename}:{entry.meta.lineno}\n    </a>\n  </code>\n</p>\n\n{#if balances_before && balances_after}\n  <details>\n    <summary>\n      <span>{_(\"Context\")}</span>\n    </summary>\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <th colspan=\"2\">{_(\"Balances before entry\")}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {#each Object.entries(balances_before) as [account, inventory]}\n            <tr>\n              <td><a href={urlForAccount(account)}>{account}</a></td>\n              <td>\n                {#each inventory as amount}\n                  {amount}\n                  <br />\n                {/each}\n              </td>\n            </tr>\n          {/each}\n        </tbody>\n      </table>\n      <table>\n        <thead>\n          <tr>\n            <th colspan=\"2\">{_(\"Balances after entry\")}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {#each Object.entries(balances_after) as [account, inventory]}\n            <tr>\n              <td><a href={urlForAccount(account)}>{account}</a></td>\n              <td>\n                {#each inventory as amount}\n                  {amount}\n                  <br />\n                {/each}\n              </td>\n            </tr>\n          {/each}\n        </tbody>\n      </table>\n    </div>\n  </details>\n{/if}\n", "code_before": "<script lang=\"ts\">\n  import type { EntryBaseAttributes } from \"../entries\";\n  import { urlForAccount, urlForSource } from \"../helpers\";\n  import { _ } from \"../i18n\";\n\n  type ContextBalance = Record<string, string[]>;\n  export let entry: EntryBaseAttributes;\n  export let balances_before: ContextBalance | null;\n  export let balances_after: ContextBalance | null;\n</script>\n\n<p>\n  {_(\"Location\")}:\n  <code>\n    <a href={urlForSource(entry)}>\n      {entry.meta.filename}:{entry.meta.lineno}\n    </a>\n  </code>\n</p>\n\n{#if balances_before && balances_after}\n  <details>\n    <summary>\n      <span>{_(\"Context\")}</span>\n    </summary>\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <th colspan=\"2\">{_(\"Balances before entry\")}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {#each Object.entries(balances_before) as [account, inventory]}\n            <tr>\n              <td><a href={urlForAccount(account)}>{account}</a></td>\n              <td>\n                {@html inventory.join(\"<br>\")}\n              </td>\n            </tr>\n          {/each}\n        </tbody>\n      </table>\n      <table>\n        <thead>\n          <tr>\n            <th colspan=\"2\">{_(\"Balances after entry\")}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {#each Object.entries(balances_after) as [account, inventory]}\n            <tr>\n              <td><a href={urlForAccount(account)}>{account}</a></td>\n              <td>\n                {@html inventory.join(\"<br>\")}\n              </td>\n            </tr>\n          {/each}\n        </tbody>\n      </table>\n    </div>\n  </details>\n{/if}\n", "patch": "@@ -35,7 +35,10 @@\n             <tr>\n               <td><a href={urlForAccount(account)}>{account}</a></td>\n               <td>\n-                {@html inventory.join(\"<br>\")}\n+                {#each inventory as amount}\n+                  {amount}\n+                  <br />\n+                {/each}\n               </td>\n             </tr>\n           {/each}\n@@ -52,7 +55,10 @@\n             <tr>\n               <td><a href={urlForAccount(account)}>{account}</a></td>\n               <td>\n-                {@html inventory.join(\"<br>\")}\n+                {#each inventory as amount}\n+                  {amount}\n+                  <br />\n+                {/each}\n               </td>\n             </tr>\n           {/each}", "file_path": "files/2022_7/28", "file_language": "svelte", "file_name": "frontend/src/modals/EntryContext.svelte", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 0}, {"raw_url": "https://github.com/beancount/fava/raw/dccfb6a2f4567f35ce2e9a78e24f92ebf946bc9b/frontend%2Fsrc%2Fquery%2FQuery.svelte", "code": "<script lang=\"ts\">\n  import { onMount, tick } from \"svelte\";\n\n  import { get } from \"../api\";\n  import type { ChartTypes } from \"../charts\";\n  import Chart from \"../charts/Chart.svelte\";\n  import { chartContext } from \"../charts/context\";\n  import { parseQueryChart } from \"../charts/query-charts\";\n  import { getFilterParams } from \"../stores/filters\";\n  import {\n    addToHistory,\n    clearHistory,\n    query_shell_history,\n  } from \"../stores/query\";\n\n  import QueryEditor from \"./QueryEditor.svelte\";\n  import QueryLinks from \"./QueryLinks.svelte\";\n  import ReadonlyQueryEditor from \"./ReadonlyQueryEditor.svelte\";\n\n  let query_string = \"\";\n\n  const resultElems: Record<string, HTMLElement> = {};\n\n  type ResultType = {\n    result?: { table: string; chart: ChartTypes | null };\n    error?: unknown;\n  };\n\n  const query_results: Record<string, ResultType> = {};\n\n  $: query_result_array = $query_shell_history.map(\n    (item): [string, ResultType] => [item, query_results[item] || {}]\n  );\n\n  async function setResult(query: string, res: ResultType) {\n    addToHistory(query);\n    query_results[query] = res;\n    await tick();\n    const url = new URL(window.location.href);\n    url.searchParams.set(\"query_string\", query);\n    window.history.replaceState(null, \"\", url.toString());\n    resultElems[query].setAttribute(\"open\", \"true\");\n  }\n\n  async function clearResults() {\n    clearHistory();\n    await tick();\n    const url = new URL(window.location.href);\n    query_string = \"\";\n    url.searchParams.set(\"query_string\", query_string);\n    window.history.replaceState(null, \"\", url.toString());\n  }\n\n  function submit() {\n    const query = query_string;\n    if (!query) {\n      return;\n    }\n    if (query.trim().toUpperCase() === \"CLEAR\") {\n      clearResults();\n      return;\n    }\n    get(\"query_result\", { query_string: query, ...getFilterParams() }).then(\n      (res) => {\n        const r = parseQueryChart(res.chart, $chartContext);\n        const chart = r.success ? r.value : null;\n        setResult(query, { result: { chart, table: res.table } });\n      },\n      (error) => {\n        setResult(query, { error });\n      }\n    );\n  }\n\n  function click(query: string) {\n    if (!query_results[query]) {\n      query_string = query;\n      submit();\n    }\n  }\n\n  onMount(() => {\n    const url = new URL(window.location.href);\n    query_string = url.searchParams.get(\"query_string\") || \"\";\n    if (query_string) {\n      submit();\n    }\n  });\n</script>\n\n<QueryEditor bind:value={query_string} {submit} />\n<div>\n  {#each query_result_array as [history_item, { result, error }] (history_item)}\n    <details class:error bind:this={resultElems[history_item]}>\n      <summary on:click={() => click(history_item)}>\n        <ReadonlyQueryEditor value={history_item} />\n        {#if result}\n          <span class=\"spacer\" />\n          <QueryLinks query={history_item} />\n        {/if}\n      </summary>\n      <div>\n        {#if result}\n          {#if result.chart}\n            <Chart chart={result.chart} />\n          {/if}\n          {@html result.table}\n        {:else if error}\n          {error}\n        {/if}\n      </div>\n    </details>\n  {/each}\n</div>\n\n<style>\n  details > div {\n    max-height: 80vh;\n    overflow: auto;\n  }\n\n  div :global(.query-error) {\n    font-family: var(--font-family-monospaced);\n    color: var(--background);\n    background: var(--error);\n  }\n</style>\n", "code_before": "<script lang=\"ts\">\n  import { onMount, tick } from \"svelte\";\n\n  import { get } from \"../api\";\n  import type { ChartTypes } from \"../charts\";\n  import Chart from \"../charts/Chart.svelte\";\n  import { chartContext } from \"../charts/context\";\n  import { parseQueryChart } from \"../charts/query-charts\";\n  import { getFilterParams } from \"../stores/filters\";\n  import {\n    addToHistory,\n    clearHistory,\n    query_shell_history,\n  } from \"../stores/query\";\n\n  import QueryEditor from \"./QueryEditor.svelte\";\n  import QueryLinks from \"./QueryLinks.svelte\";\n  import ReadonlyQueryEditor from \"./ReadonlyQueryEditor.svelte\";\n\n  let query_string = \"\";\n\n  const resultElems: Record<string, HTMLElement> = {};\n\n  type ResultType = {\n    result?: { table: string; chart: ChartTypes | null };\n    error?: unknown;\n  };\n\n  const query_results: Record<string, ResultType> = {};\n\n  $: query_result_array = $query_shell_history.map(\n    (item): [string, ResultType] => [item, query_results[item] || {}]\n  );\n\n  async function setResult(query: string, res: ResultType) {\n    addToHistory(query);\n    query_results[query] = res;\n    await tick();\n    const url = new URL(window.location.href);\n    url.searchParams.set(\"query_string\", query);\n    window.history.replaceState(null, \"\", url.toString());\n    resultElems[query].setAttribute(\"open\", \"true\");\n  }\n\n  async function clearResults() {\n    clearHistory();\n    await tick();\n    const url = new URL(window.location.href);\n    query_string = \"\";\n    url.searchParams.set(\"query_string\", query_string);\n    window.history.replaceState(null, \"\", url.toString());\n  }\n\n  function submit() {\n    const query = query_string;\n    if (!query) {\n      return;\n    }\n    if (query.trim().toUpperCase() === \"CLEAR\") {\n      clearResults();\n      return;\n    }\n    get(\"query_result\", { query_string: query, ...getFilterParams() }).then(\n      (res) => {\n        const r = parseQueryChart(res.chart, $chartContext);\n        const chart = r.success ? r.value : null;\n        setResult(query, { result: { chart, table: res.table } });\n      },\n      (error) => {\n        setResult(query, { error });\n      }\n    );\n  }\n\n  function click(query: string) {\n    if (!query_results[query]) {\n      query_string = query;\n      submit();\n    }\n  }\n\n  onMount(() => {\n    const url = new URL(window.location.href);\n    query_string = url.searchParams.get(\"query_string\") || \"\";\n    if (query_string) {\n      submit();\n    }\n  });\n</script>\n\n<QueryEditor bind:value={query_string} {submit} />\n<div>\n  {#each query_result_array as [history_item, { result, error }] (history_item)}\n    <details class:error bind:this={resultElems[history_item]}>\n      <summary on:click={() => click(history_item)}>\n        <ReadonlyQueryEditor value={history_item} />\n        {#if result}\n          <span class=\"spacer\" />\n          <QueryLinks query={history_item} />\n        {/if}\n      </summary>\n      <div>\n        {#if result}\n          {#if result.chart}\n            <Chart chart={result.chart} />\n          {/if}\n          {@html result.table}\n        {:else if error}\n          {@html error}\n        {/if}\n      </div>\n    </details>\n  {/each}\n</div>\n\n<style>\n  details > div {\n    max-height: 80vh;\n    overflow: auto;\n  }\n\n  div :global(.query-error) {\n    font-family: var(--font-family-monospaced);\n    color: var(--background);\n    background: var(--error);\n  }\n</style>\n", "patch": "@@ -106,7 +106,7 @@\n           {/if}\n           {@html result.table}\n         {:else if error}\n-          {@html error}\n+          {error}\n         {/if}\n       </div>\n     </details>", "file_path": "files/2022_7/29", "file_language": "svelte", "file_name": "frontend/src/query/Query.svelte", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 0}], "outdated": 0, "cwe_descripiton": "", "cwe_consequence": "", "cwe_method": "", "cwe_solution": ""}
