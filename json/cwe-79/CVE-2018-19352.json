{"index": 3174, "cve_id": "CVE-2018-19352", "cwe_id": ["CWE-79"], "cve_language": "Python", "cve_description": "Jupyter Notebook before 5.7.2 allows XSS via a crafted directory name because notebook/static/tree/js/notebooklist.js handles certain URLs unsafely.", "cvss": "6.1", "publish_date": "November 18, 2018", "AV": "NETWORK", "AC": "NETWORK", "PR": "NONE", "UI": "REQUIRED", "S": "CHANGED", "C": "LOW", "I": "LOW", "A": "NONE", "commit_id": "288b73e1edbf527740e273fcc69b889460871648", "commit_message": "Merge branch 'directory-xss'", "commit_date": "2018-11-18T13:46:53Z", "project": "jupyter/notebook", "url": "https://api.github.com/repos/jupyter/notebook/commits/288b73e1edbf527740e273fcc69b889460871648", "html_url": "https://github.com/jupyter/notebook/commit/288b73e1edbf527740e273fcc69b889460871648", "windows_before": [{"commit_id": "11a2e6d52e2e996c97511b17c63ee58a4b83431a", "commit_date": "Sun Nov 18 11:54:04 2018 +0100", "commit_message": "assemble breadcrumb html safely", "files_name": ["notebook/static/tree/js/notebooklist.js"]}, {"commit_id": "f03797bfc1dff7bd1477be0031948a7320c7de4a", "commit_date": "Sat Nov 17 19:39:39 2018 +0100", "commit_message": "Tweak upload button to give feedback", "files_name": ["notebook/static/tree/js/notebooklist.js"]}, {"commit_id": "588b1f8eb3e3ee6f5a653d8f22faf8d7d22ae775", "commit_date": "Fri Nov 16 17:00:27 2018 +0000", "commit_message": "Merge branch 'nbconvert-sandbox'", "files_name": ["0e63ebb1db0946bc667b7a910f9d2f6fccd45151 - Fri Nov 16 08:43:23 2018 -0800 : Update session_exists() to account for invalid sessions due to culling", "notebook/services/sessions/sessionmanager.py"]}, {"commit_id": "d60445e92666a0c5651a33e180c92051d94a7d44", "commit_date": "Wed Nov 14 16:04:24 2018 +0000", "commit_message": "Merge pull request #4212 from vuamitom/patch-1", "files_name": ["a3987d6e27097983763131dfb0d0bd23fa58aa45 - Wed Nov 14 18:07:47 2018 +0530 : Add padding bottom for symmetry of the Notebook", "notebook/static/notebook/less/notebook.less"]}, {"commit_id": "c2b292f3e6b1b087e933fa5e229bf861a3a0d66a", "commit_date": "Wed Nov 14 10:48:00 2018 +0700", "commit_message": "Add missing i18n parameter", "files_name": ["notebook/static/notebook/js/mathjaxutils.js"]}, {"commit_id": "4b2e7dc3e382889aa29d0b96a214ff7a94795abd", "commit_date": "Tue Nov 13 17:38:29 2018 +0000", "commit_message": "Merge pull request #4193 from askerry/selenium_buffering", "files_name": ["8b704d6628b973ffbdfa25cfd51bd748062c10b2 - Tue Nov 13 09:01:05 2018 -0800 : Address review feedback", "notebook/tests/selenium/test_buffering.py"]}, {"commit_id": "6d7b6af514a693509fd42a3cb87c7e15c31acdc5", "commit_date": "Tue Nov 13 15:11:16 2018 +0000", "commit_message": "Merge pull request #4182 from AndresSan6/merge_selected_cells", "files_name": ["2345350c7fc21517911310a9604bb9f91f240796 - Tue Nov 13 14:23:18 2018 +0000 : Merge pull request #4185 from askerry/fix_race", "b61cd92294fd2e2963cc999e0be284c954ba908b - Tue Nov 13 11:34:11 2018 +0000 : Merge pull request #4194 from hansnow/patch-1", "f995db42ee4ca2ba0562aba7bde599a1ba9fc7e8 - Mon Nov 12 10:20:34 2018 -0800 : Address review feedback", "notebook/tests/selenium/utils.py"]}, {"commit_id": "363926290e58b808ff3b0bacd50fbb40df6580c4", "commit_date": "Mon Nov 12 12:08:32 2018 +0800", "commit_message": "Fix type in nbjs.po", "files_name": ["notebook/i18n/zh_CN/LC_MESSAGES/nbjs.po"]}, {"commit_id": "39b3afc2e6d23cc480c92f9ae30a2e5baae10e52", "commit_date": "Sun Nov 11 19:58:38 2018 -0800", "commit_message": "Merge pull request #4085 from vgalisson/patch-1", "files_name": ["3faafc412241aeea7d1b5b2b4b9ac5b72184d131 - Fri Oct 26 12:24:46 2018 -0700 : Migrate buffering test to selenium", "notebook/tests/notebook/buffering.js", "notebook/tests/selenium/test_buffering.py"]}, {"commit_id": "6f73d7937689f6f75028da757459b79b4431fe24", "commit_date": "Sun Nov 11 09:33:44 2018 -0800", "commit_message": "Add custom expectation to wait for n elements", "files_name": ["notebook/tests/selenium/test_display_isolation.py", "notebook/tests/selenium/utils.py"]}, {"commit_id": "dea186d177c7ad279845d41951051e071e10588e", "commit_date": "Thu Nov 8 10:43:33 2018 -0800", "commit_message": "Add wait_for_tag to avoid race condition in display isolation test", "files_name": ["notebook/tests/selenium/test_display_isolation.py"]}, {"commit_id": "f27e87541da22126d37e93369c0f5492fa8401fb", "commit_date": "Thu Nov 8 08:00:51 2018 -0600", "commit_message": "Changed function name in utils.py and in test_merge_cells.py", "files_name": ["notebook/tests/selenium/test_merge_cells.py", "notebook/tests/selenium/utils.py"]}, {"commit_id": "c9378c71fe5c62b817cb8e341264edfde8dd0937", "commit_date": "Thu Nov 8 11:42:11 2018 +0000", "commit_message": "Merge pull request #4146 from askerry/selenium_display_isolation", "files_name": ["099383e012339cebed3a2d4ff6bbf44f4894ff5e - Thu Nov 8 11:40:26 2018 +0000 : Merge pull request #4141 from askerry/selenium_display_image", "a5a6e4ad089b5fdc479e377e268972cba8e658b1 - Wed Nov 7 20:35:26 2018 -0800 : Address review feedback - remove sleep hack cruft - consolidate/remove unncessary intermediate variables", "notebook/tests/selenium/test_display_image.py"]}, {"commit_id": "3ccc4ed2074422490d80c0cb1b0cb8acbffabb93", "commit_date": "Wed Nov 7 20:26:48 2018 -0800", "commit_message": "Address review feedback - use %r instead of %s to handle quoting more succintly - add a finally block to ensure browser state is transitioned from iframe back to default content", "files_name": ["notebook/tests/selenium/test_display_isolation.py"]}, {"commit_id": "fd6ea8e55650f561823355b59be0e5bea9594000", "commit_date": "Wed Nov 7 22:20:35 2018 -0600", "commit_message": "Removed unnecessary property attibute created in utils.py and added comments to test_merge_cells.py", "files_name": ["notebook/tests/selenium/test_merge_cells.py", "notebook/tests/selenium/utils.py"]}, {"commit_id": "1c87821dc17c84362c4de9821d8408b70e1f58b1", "commit_date": "Wed Nov 7 21:00:21 2018 -0600", "commit_message": "Modifications to test JS funcion  in test_merge_cells.py", "files_name": ["notebook/tests/selenium/test_merge_cells.py", "notebook/tests/selenium/utils.py"]}, {"commit_id": "2af744075f52f62ab18cf807ec009cb6ad6af2f1", "commit_date": "Wed Nov 7 15:13:57 2018 +0000", "commit_message": "Merge pull request #4103 from einon/einonm", "files_name": ["a036ba2cd84e72e27f82aedd9a635f646cae26dd - Wed Nov 7 12:37:43 2018 +0000 : Merge pull request #4142 from askerry/selenium_merge_cells", "a7033b8067f760f81331eeae6e64799d98c170be - Wed Nov 7 11:50:50 2018 +0000 : Merge pull request #4139 from daf/fix-allow-remote-access-with-all-ips", "760d4d35334bbdd789d2ec315a0b182f40e0eb55 - Fri Oct 26 14:17:48 2018 -0400 : fixed typo in example notebook", "docs/source/examples/Notebook/What is the Jupyter Notebook.ipynb"]}, {"commit_id": "de7be3a64f507dcf711b77f9c931c17f23bf588f", "commit_date": "Fri Oct 26 14:02:49 2018 -0400", "commit_message": "Updated the description of Heading cells, which are no longer used", "files_name": ["docs/source/examples/Notebook/What is the Jupyter Notebook.ipynb"]}, {"commit_id": "aa658d3d7929210b81c94afe272e8da1e815568e", "commit_date": "Fri Oct 26 07:36:02 2018 -0700", "commit_message": "Migrate display isolation test to selenium", "files_name": ["notebook/tests/notebook/isolated_svg.js", "notebook/tests/selenium/test_display_isolation.py", "notebook/tests/selenium/utils.py"]}, {"commit_id": "34cd3528d57fd646d7550ef8c063305460a070d7", "commit_date": "Thu Oct 25 22:21:28 2018 -0700", "commit_message": "Migrate test for merge cells api to selenium", "files_name": ["notebook/tests/notebook/merge_cells_api.js", "notebook/tests/selenium/test_merge_cells.py"]}, {"commit_id": "03478bee8719f2ddb16a326c6b122ceff1ed1423", "commit_date": "Thu Oct 25 21:05:52 2018 -0700", "commit_message": "Migrate image display test to selenium", "files_name": ["notebook/tests/notebook/display_image.js", "notebook/tests/selenium/test_display_image.py", "notebook/tests/selenium/utils.py"]}, {"commit_id": "1c40db244072a618e0fef5be061af31f3abd0f84", "commit_date": "Thu Oct 25 09:36:01 2018 -0400", "commit_message": "Fix default value method for `allow_remote_access` when ip is '*'", "files_name": ["notebook/notebookapp.py"]}, {"commit_id": "9c3ea1319a5792bb2be2119b99c3659d3a886810", "commit_date": "Mon Oct 22 11:35:48 2018 -0400", "commit_message": "Default to right table alignment but allow table local overrides", "files_name": ["notebook/static/notebook/js/outputarea.js", "notebook/static/notebook/js/textcell.js"]}, {"commit_id": "107a89fce5f413fb5728c1c5d2c7788e1fb17491", "commit_date": "Mon Oct 22 14:52:36 2018 +0100", "commit_message": "Apply CSP sandboxing for nbconvert responses", "files_name": ["notebook/nbconvert/handlers.py"]}, {"commit_id": "f140ba95c4c619cbe8fbe5f82ee38906c0580203", "commit_date": "Mon Oct 15 20:27:22 2018 +0100", "commit_message": "Present both possible URL options as separate copy/pastable options", "files_name": ["notebook/notebookapp.py"]}, {"commit_id": "643b992690c91b9bcfdfd7ce5f72ff7e3cf37b87", "commit_date": "Mon Oct 15 09:51:18 2018 +0100", "commit_message": "Fix copy/paste-ability of default URL presented on startup", "files_name": ["notebook/notebookapp.py"]}, {"commit_id": "04a686dbaf9dfe553324a03cb9e6f778cf1e3da1", "commit_date": "Sun Oct 21 12:10:01 2018 -0700", "commit_message": "Merge pull request #4074 from agatheliguori/master", "files_name": ["bbfa1cbe5af0ee58be2af0078d30a940a8793b2e - Fri Oct 19 14:43:48 2018 +0200 : Merge pull request #4122 from thomasaarholt/thomasaarholt-patch-1", "9182f84cf0d72b292b09e428906ebd44cb60f094 - Fri Oct 19 11:28:24 2018 +0200 : Corrected alt-text of \"replace in all cells\"", "notebook/static/notebook/js/searchandreplace.js"]}, {"commit_id": "4f9a6cbdd81ed26a7979d993766d7223e1c72e5c", "commit_date": "Thu Oct 18 13:45:35 2018 +0200", "commit_message": "Merge pull request #3664 from vit-tucek/unicode_home_dirs", "files_name": ["992810505261f2afd25629283217d7574fc9e091 - Thu Oct 18 10:25:24 2018 +0200 : Merge pull request #4099 from michalc/contents_manager_exists_can_return_futures", "815ed3ce561bbbe39e34fe09c1d0bda2a7077766 - Sat Oct 13 22:46:31 2018 +0100 : Allow more contents manager functions to return futures", "notebook/files/handlers.py", "notebook/services/contents/handlers.py"]}, {"commit_id": "f859abde690e60f778bfeb0f5ee08bfbfa9fef12", "commit_date": "Wed Oct 17 21:52:49 2018 +0300", "commit_message": "Enable login mode - to automatically source the /etc/profile script", "files_name": ["notebook/terminal/__init__.py"]}, {"commit_id": "d97275b91bfda4b6c187a5d0f448d8c48fb69172", "commit_date": "Thu Oct 11 00:19:19 2018 +0530", "commit_message": "removed bg darken for navbar", "files_name": ["notebook/static/notebook/less/variables.less"]}, {"commit_id": "b663bf1b14734d68518e8cdcb1d993d034ede0f9", "commit_date": "Wed Oct 10 15:18:32 2018 +0200", "commit_message": "Merge pull request #4034 from Carreau/adaptation-log", "files_name": ["dab6046ba6afd660b6681b397b770e1fc711a8c7 - Wed Oct 10 15:16:22 2018 +0200 : Merge pull request #4046 from Surya-06/master", "d2916c9a81be14d94da89c91baa4b16e4bfb5d7b - Wed Oct 10 11:23:27 2018 +0200 : Merge pull request #4073 from 1kastner/patch-1", "c588951c90f9d5cdd7771cb94a014349a53ba391 - Wed Oct 10 11:23:04 2018 +0200 : Update to nbjs.po", "notebook/i18n/fr_FR/LC_MESSAGES/nbjs.po"]}, {"commit_id": "4135e3ffe7df627cd9f264f600b2990145af17f6", "commit_date": "Wed Oct 10 11:19:27 2018 +0200", "commit_message": "Merge pull request #4063 from kevin-bates/log-status-type", "files_name": ["b71c05dc17e0671f81331cae9315ea97e77feaf4 - Tue Oct 9 08:17:08 2018 -0700 : Merge pull request #4061 from kara71/fix-fr-translations", "3ca5f16ff07b226f3e43872129ff366d40e56410 - Tue Oct 9 16:54:04 2018 +0530 : improved color contrast for file menus", "notebook/static/notebook/less/variables.less"]}, {"commit_id": "9c1309210c20eeb71757e71148ddf5ab285a899e", "commit_date": "Sun Oct 7 19:13:10 2018 +0200", "commit_message": "Fixed french translation mistakes and normalized capitalization", "files_name": ["notebook/i18n/fr_FR/LC_MESSAGES/nbui.po"]}, {"commit_id": "6126f783817d75d32ccc59e08a188f840cd22230", "commit_date": "Sun Oct 7 18:21:33 2018 +0200", "commit_message": "Fixed two remaining wrong translations", "files_name": ["notebook/i18n/fr_FR/LC_MESSAGES/nbjs.po"]}, {"commit_id": "9b7312d3306a5bfd8b8ef630310ca7fa110a83e0", "commit_date": "Sun Oct 7 17:57:57 2018 +0200", "commit_message": "Add info about messaging specs", "files_name": ["notebook/static/services/kernels/kernel.js"]}, {"commit_id": "23e74dcdfab838d2dfaa5f1df94ca11908875bed", "commit_date": "Thu Oct 4 08:35:42 2018 -0700", "commit_message": "Include status types when logging activity", "files_name": ["notebook/services/kernels/kernelmanager.py"]}, {"commit_id": "74f08b897c224ff21cc67f91ab3a49caa7c23629", "commit_date": "Thu Oct 4 01:17:11 2018 +0200", "commit_message": "Fixed some translations", "files_name": ["notebook/i18n/fr_FR/LC_MESSAGES/nbjs.po"]}, {"commit_id": "c2a2bcc4a7344652ae9229931fc2323ba67d7d4c", "commit_date": "Tue Oct 2 04:52:58 2018 -0400", "commit_message": "Merge pull request #4041 from arradha/fix/mathjax-codeblocks", "files_name": ["dfcea5b3f7d039bb66f580aa1f756a1fd2363db2 - Tue Oct 2 04:51:13 2018 -0400 : Merge pull request #4036 from Hyaxia/metrics_terminal", "fa7b40be27da8a6c5abf2c05625fa68b806e2968 - Tue Oct 2 04:49:38 2018 -0400 : Merge pull request #4039 from Carreau/try-fix-attr", "4c1d62f3b21af6f139d8396081578d0c1646a632 - Sun Sep 30 21:57:38 2018 +0300 : A temporary fix for appveyor tests problem that results in an error: `RequirementParseError(str(e)) pip._vendor.pkg_resources.RequirementParseError: Invalid requirement, parse error at \u201c\u2019; extra '`", "appveyor.yml"]}, {"commit_id": "c5d1a08951d4ee4fb4089dcc47beadfaf03d6adb", "commit_date": "Sat Sep 29 21:28:25 2018 +0530", "commit_message": "Updated .travis.yml for fixing attr", "files_name": [".travis.yml"]}, {"commit_id": "f2fdbf929e57475ad9d2342476651e8cb70611d8", "commit_date": "Sat Sep 29 16:56:40 2018 +0300", "commit_message": "Added metrics for number of kernels running labeled by type", "files_name": ["notebook/prometheus/metrics.py", "notebook/services/kernels/kernelmanager.py", "notebook/terminal/api_handlers.py"]}, {"commit_id": "23114ef44a426a54b5919fb0bad28f29dce7305d", "commit_date": "Thu Sep 27 21:25:24 2018 +0530", "commit_message": "Changed marked version to 0.5", "files_name": ["bower.json"]}, {"commit_id": "7eb6e29509fe97b8eaaf6f8baeb92e69d2999542", "commit_date": "Wed Sep 26 17:02:06 2018 -0700", "commit_message": "Fix spurious newline in expected result", "files_name": ["notebook/tests/notebook/markdown.js"]}, {"commit_id": "4395a838f68f0af8c9010ba27833529c52cbee57", "commit_date": "Wed Sep 26 16:41:25 2018 -0700", "commit_message": "From #4039:  Fix test by pinning attrs to 17.4+", "files_name": [".travis.yml"]}, {"commit_id": "e951fab0db264d5b561a027cedfc8a151484bd60", "commit_date": "Thu Sep 27 01:55:52 2018 +0300", "commit_message": "Added docs to the prometheus package and the terminal.api_handlers file.", "files_name": ["notebook/prometheus/__init__.py", "notebook/terminal/api_handlers.py"]}, {"commit_id": "6fd0a807788e53e5452fcb86ec08035edb8b1e70", "commit_date": "Wed Sep 26 15:42:59 2018 -0700", "commit_message": "Reformat long string", "files_name": ["notebook/tests/notebook/markdown.js"]}, {"commit_id": "c5bee3a29da17d04cba620e2acf6da4043e9fe0d", "commit_date": "Wed Sep 26 15:14:07 2018 -0700", "commit_message": "test and fix: disable math inside code blocks", "files_name": ["notebook/static/notebook/js/mathjaxutils.js", "notebook/tests/notebook/markdown.js"]}, {"commit_id": "96cb061e7b6000ae3d3d3d5da3c9050b80bf0d7a", "commit_date": "Wed Sep 26 11:46:14 2018 -0700", "commit_message": "More descriptive message.", "files_name": ["notebook/services/kernels/handlers.py"]}, {"commit_id": "02abe9e691ae79870d5c94363213dbb744adaa1d", "commit_date": "Wed Sep 26 10:34:57 2018 -0700", "commit_message": "Fix test by pinning attrs to 17.4+", "files_name": [".travis.yml"]}, {"commit_id": "7d211d431e5bea69347c19f64e5295df93dd5657", "commit_date": "Wed Sep 26 10:34:57 2018 -0700", "commit_message": "try to fix test", "files_name": [".travis.yml"]}, {"commit_id": "7bc7df472c8ff4b8de284c5c5b2178d52561c9a4", "commit_date": "Wed Sep 26 18:14:43 2018 +0300", "commit_message": "Fixed imports, from static to dynamic.", "files_name": ["notebook/prometheus/log_functions.py", "notebook/terminal/api_handlers.py"]}, {"commit_id": "03e5dc00e1639137d9ed5ce4caeb2639ca2650d6", "commit_date": "Wed Sep 26 17:15:40 2018 +0300", "commit_message": "Moved the 'metrics' file to a new package named 'promethues'. Then split the file into two files, one containing the metrics themselves, the other containing any function that have something to do with prometheus.", "files_name": ["notebook/log.py", "notebook/prometheus/__init__.py", "notebook/prometheus/log_functions.py", "notebook/prometheus/metrics.py"]}], "windows_after": [{"commit_id": "21b93eae432580b7f987a910484734dcefbabda6", "commit_date": "Mon Nov 19 15:42:11 2018 +0100", "commit_message": "Merge pull request #4219 from kevin-bates/tolerate-culled-kernels", "files_name": ["9d19aa3677a414341c5368622b01a2d229c2bad1 - Mon Nov 19 15:44:12 2018 +0100 : Merge pull request #4221 from betatim/uploading-ui-tweak", "64fa7cf6748c6ba2965aadd337b7edb7bb26b306 - Mon Nov 19 16:36:14 2018 -0800 : Merge pull request #4210 from SylvainCorlay/message-filtering", "91fb343c0ca6cd3e12fe40bb3b3c078240453af8 - Mon Nov 26 17:39:59 2018 -0500 : fixed ui-icons from blocking tooltip text", "notebook/static/notebook/less/tooltip.less"]}, {"commit_id": "069465bf951ba5c9ff397e422d338e3ae537ac06", "commit_date": "Thu Nov 29 17:01:41 2018 +0100", "commit_message": "Merge pull request #4236 from steaward/issue-4230", "files_name": ["82782a370e11cddf9bc92ef87ee2244b98c24ec7 - Mon Dec 3 13:26:06 2018 +0100 : Merge pull request #4084 from bhansa/issues-4000-accessibility", "7a42187ccd7cf0f500b94aae2e4b3867d80d88e1 - Mon Dec 3 19:03:27 2018 -0500 : Optimize Base64 encoding of large files to be uploaded to avoid GC pauses.", "notebook/static/tree/js/notebooklist.js"]}, {"commit_id": "daa80ad4ac7c27ccc8e8204283520184788b3ca3", "commit_date": "Mon Dec 3 19:04:12 2018 -0500", "commit_message": "Tune chunk size for large file uploads to be larger for perf gains.", "files_name": ["notebook/static/tree/js/notebooklist.js"]}, {"commit_id": "6f2946b9dc4fbbcc2059143c8e495af6245485f2", "commit_date": "Wed Dec 5 15:43:48 2018 -0600", "commit_message": "Respect parent template headaercontent in child pages", "files_name": ["notebook/templates/edit.html", "notebook/templates/notebook.html", "notebook/templates/terminal.html", "notebook/templates/tree.html"]}, {"commit_id": "49aad1bfbc862fd45fdf9e239dd99ccc147e7310", "commit_date": "Wed Dec 5 16:31:50 2018 -0600", "commit_message": "relocate super() content to other side of span", "files_name": ["notebook/templates/edit.html", "notebook/templates/notebook.html", "notebook/templates/terminal.html", "notebook/templates/tree.html"]}, {"commit_id": "f759e4d3beb9719e9deb4cde6691c2f135b6eae2", "commit_date": "Thu Dec 6 00:15:06 2018 +0100", "commit_message": "Merge pull request #4248 from christek91/optimize-large-file-uploads", "files_name": ["48042adaf9632e74bb939d2cbb8d78f55153a2bb - Sun Dec 9 18:42:30 2018 -0500 : Add Documentation regarding backslash escaping in Markdown File", "docs/source/examples/Notebook/Working With Markdown Cells.ipynb"]}, {"commit_id": "270c0f96d761ec3c81e0ef3dae6f39d88677d6b5", "commit_date": "Tue Dec 11 13:20:46 2018 +0000", "commit_message": "Launch the browser with a redirect file", "files_name": ["notebook/notebookapp.py", "notebook/templates/browser-open.html", "notebook/utils.py"]}, {"commit_id": "28e296fc9f47405c771df3c9af475a4d621a90dc", "commit_date": "Tue Dec 11 15:57:02 2018 +0000", "commit_message": "Use permanent token in redirect file", "files_name": ["notebook/notebookapp.py"]}, {"commit_id": "92362103e3719e58679916a55f883dd34562a875", "commit_date": "Tue Dec 11 16:05:16 2018 +0000", "commit_message": "Point to file in terminal message", "files_name": ["notebook/notebookapp.py"]}, {"commit_id": "56d7a2d3a6a547b02d0aec56748bd2fd703512e9", "commit_date": "Wed Dec 12 15:22:06 2018 +0000", "commit_message": "Remove one-time token code", "files_name": ["notebook/auth/login.py", "notebook/base/handlers.py", "notebook/notebookapp.py"]}, {"commit_id": "51dae23b593ce74c0c99a9f13f2282e5c4c77da3", "commit_date": "Thu Dec 13 10:31:11 2018 +0100", "commit_message": "Merge pull request #4260 from takluyver/browser-open-file", "files_name": ["68ec51d3db3fd4b1d0672b7d0c697a339df8e177 - Fri Dec 14 10:59:14 2018 +0100 : Merge pull request #4257 from ctrlaltdelete00/MarkdownDocumentationBackslashEscapes", "363d73d145a28c9443c538c6f7861176e7139972 - Fri Dec 14 11:58:52 2018 +0100 : bootstrap 3.4", "bower.json", "notebook/templates/page.html", "setupbase.py", "tools/build-main.js"]}, {"commit_id": "46a887f6e0ecf50f3af5ecadaa05a6ac34675fbb", "commit_date": "Fri Dec 14 17:10:51 2018 +0100", "commit_message": "Merge pull request #4271 from minrk/bs34", "files_name": ["0734e2c95088d6753a8708cbe78fa58fe9074e04 - Fri Dec 14 22:47:34 2018 -0500 : remove multiple download links for the .ipynb click", "notebook/static/notebook/js/menubar.js"]}, {"commit_id": "35aa99324a17cf0864d0725cf1864189a28fdb8e", "commit_date": "Sun Dec 16 09:50:27 2018 +0100", "commit_message": "Write release notes for 5.7.3", "files_name": ["docs/source/changelog.rst"]}, {"commit_id": "55d6f535701fb8d9a12a20a33b732887da121470", "commit_date": "Sun Dec 16 09:57:28 2018 +0100", "commit_message": "Merge pull request #4278 from takluyver/changelog-5.7.3", "files_name": ["6896aacdf6291799e97cb4875303b71d44cc37ca - Sun Dec 16 21:06:36 2018 +0100 : Add failing test for list_running_servers", "notebook/tests/test_notebookapp.py"]}, {"commit_id": "adcb7025cab9ddb73fb54b40be7d50dd67311983", "commit_date": "Sun Dec 16 21:06:55 2018 +0100", "commit_message": "Make filename check in list_running_servers more specific", "files_name": ["notebook/notebookapp.py"]}, {"commit_id": "cf1b7b36284dfff8ae55004d9e64789f79e842b5", "commit_date": "Sun Dec 16 22:33:46 2018 +0100", "commit_message": "Merge pull request #4284 from takluyver/i4283", "files_name": ["a4d663b5789957bc343fbd26340a79cb2947d206 - Sun Dec 16 22:52:01 2018 +0100 : Add release notes for 5.7.4", "docs/source/changelog.rst"]}, {"commit_id": "29f58de211c71b2979ef6684caf2fc1006bb2d67", "commit_date": "Sun Dec 16 18:43:38 2018 -0800", "commit_message": "updating file tree", "files_name": ["docs/source/examples/Notebook/Distributing Jupyter Extensions as Python Packages.ipynb"]}, {"commit_id": "f24fa85ef8f8df7ab5f6fd2d4ac7a4e14edaa852", "commit_date": "Mon Dec 17 10:22:56 2018 +0100", "commit_message": "Merge pull request #4286 from takluyver/changelog-5.7.4", "files_name": ["31c2184d011e2a6b78d02f6039f0da4273a2cfb5 - Mon Dec 17 14:47:10 2018 +0100 : Merge pull request #4287 from choldgraf/ntbkext", "9b3aa52b80769005800c8bf2447792ba520d5e7c - Sat Dec 29 17:28:15 2018 +0800 : make kill kernel configurable.", "notebook/static/notebook/js/notebook.js"]}, {"commit_id": "605dfb8b15bc07416d1c5b31b77981b126e2dc09", "commit_date": "Wed Jan 2 11:57:41 2019 +0000", "commit_message": "Convert multiselect test to Selenium", "files_name": [".gitignore", "notebook/tests/selenium/test_multiselect.py"]}, {"commit_id": "a5ad463427370b4f1811ce4fffee6664c55941b9", "commit_date": "Wed Jan 2 11:58:16 2019 +0000", "commit_message": "Remove multiselect Javascript test converted to Selenium", "files_name": ["notebook/tests/notebook/multiselect.js"]}, {"commit_id": "9035cb1bdd2fe6c8195912f67d232ed77da0f6c0", "commit_date": "Wed Jan 2 12:33:50 2019 +0000", "commit_message": "Limit to tornado <6 for now", "files_name": ["setup.py"]}, {"commit_id": "5f8a2040ffcd3efac067ae44baf02fd57abf258d", "commit_date": "Sat Jan 5 20:16:05 2019 +0000", "commit_message": "Fix typo in introduction", "files_name": ["docs/source/examples/Notebook/Running Code.ipynb"]}, {"commit_id": "18ca0330d8e859be2fa99e2d7d3ab95530e56c65", "commit_date": "Sun Jan 6 04:17:04 2019 +0300", "commit_message": "Update document.title to a more descriptive name", "files_name": ["notebook/static/edit/js/savewidget.js", "notebook/static/notebook/js/savewidget.js"]}, {"commit_id": "1566dd1712e53f9d6dcc171d32fe6634818fc7ca", "commit_date": "Tue Jan 8 13:42:26 2019 +0100", "commit_message": "List hidden files if allowed (#3812)", "files_name": ["notebook/services/contents/filemanager.py"]}, {"commit_id": "09b8c934b4bccc57ad7b226c02b935e4f9db461c", "commit_date": "Tue Jan 8 16:47:30 2019 +0000", "commit_message": "Merge pull request #4310 from takluyver/selenium-multiselect", "files_name": ["0227bc97ed2d2aff43ddb2704d37f186c81348b8 - Tue Jan 8 16:48:06 2019 +0000 : Merge pull request #4317 from wgcostello/patch-1", "fc532aac6f0a3788e8520582e0f8a75cb74c0871 - Tue Jan 8 17:10:34 2019 +0000 : Upgrade pytest on Travis", ".travis.yml"]}, {"commit_id": "e2ba8280c61e70859e79053764ce59fcc1081470", "commit_date": "Wed Jan 9 09:45:35 2019 +0000", "commit_message": "Upgrade pytest for docs build as well", "files_name": [".travis.yml"]}, {"commit_id": "7ded6383572b7bb4ae095c9bbeb3a6a0e0e060fd", "commit_date": "Wed Jan 9 10:03:29 2019 +0000", "commit_message": "Merge pull request #4329 from takluyver/travis-newer-pytest", "files_name": ["48915c0ad7715b1f4da21a39a94c0f2a92eeea17 - Wed Jan 9 14:18:34 2019 +0100 : Split logic", "notebook/services/contents/filemanager.py"]}, {"commit_id": "533e1984e28941ebf361327fe123968ef318a197", "commit_date": "Wed Jan 9 14:19:30 2019 +0100", "commit_message": "Merge branch 'master' of https://github.com/jupyter/notebook into list_hidden_files", "files_name": ["56d4f2c3fc4ed638aee3ce519fc3a0f82c3d414a - Sun Jan 20 13:35:13 2019 +0200 : changing file name to lower case before checking if file extension is ipynb", "notebook/files/handlers.py"]}, {"commit_id": "2c313e96f86888f384f1f8ff8ee9df16eb3aa128", "commit_date": "Fri Jan 25 22:47:59 2019 +0800", "commit_message": "fix incorrect Chinese translation", "files_name": ["notebook/i18n/zh_CN/LC_MESSAGES/nbjs.po"]}, {"commit_id": "c740397e4974ae3befc4e538507fa3993bc2085f", "commit_date": "Tue Jan 29 19:04:14 2019 -0500", "commit_message": "Improve comms.rst example", "files_name": ["docs/source/comms.rst"]}, {"commit_id": "e8163d57cc455a5648e372a749324fd5ab3d4bed", "commit_date": "Tue Jan 29 19:39:36 2019 -0500", "commit_message": "Update js for comms for copy/paste", "files_name": ["docs/source/comms.rst"]}, {"commit_id": "3bce5683c420c6944aa278099d5940299bd97957", "commit_date": "Wed Jan 30 16:56:14 2019 +0000", "commit_message": "Merge pull request #4374 from mlucool/patch-1", "files_name": ["c33130dcbb8cd47d2d4bfcb495e0e51f34e8af23 - Wed Jan 30 16:57:04 2019 +0000 : Merge pull request #4367 from nyanshell/master", "d3ce20738c92254e0dfb84b04e7db9d94847d5d0 - Wed Jan 30 20:42:46 2019 +0300 : Update text editor document.title", "notebook/static/edit/js/savewidget.js"]}, {"commit_id": "134c8b6c034dc09728bf383abc06c4f3e35c8ca5", "commit_date": "Wed Jan 30 12:50:48 2019 -0800", "commit_message": "surface config.d nbserver_extensions to the NotebookApp config object", "files_name": ["notebook/notebookapp.py", "notebook/tests/test_serverextensions.py"]}, {"commit_id": "df8a5480120866cd4ffe4749e9a8f18efce37637", "commit_date": "Thu Jan 31 11:47:45 2019 +0000", "commit_message": "Some improvements to promise handling when saving notebook", "files_name": ["notebook/static/notebook/js/notebook.js"]}, {"commit_id": "e00a86c4cb22f15ed4593ccf02bb92fe5e284b84", "commit_date": "Thu Jan 31 11:48:10 2019 +0000", "commit_message": "Throw clearer error if no new window handles found", "files_name": ["notebook/tests/selenium/utils.py"]}, {"commit_id": "bc3a8cbe797dd1181c51cd54aab4315ddc30c1be", "commit_date": "Thu Jan 31 11:49:06 2019 +0000", "commit_message": "Convert test for saving with complex name to Selenium", "files_name": ["notebook/tests/notebook/save.js", "notebook/tests/selenium/test_save.py"]}, {"commit_id": "8a4cbd0ad91371392b90672afea58560d37c847e", "commit_date": "Thu Jan 31 14:06:33 2019 +0000", "commit_message": "Merge pull request #4318 from RomanKornev/upd-document-title", "files_name": ["7c8db2d06355333cdc351478ed98db33f72d306b - Fri Feb 8 17:56:22 2019 +0000 : Call tornado WebSocketHandler.get() as a coroutine", "notebook/base/zmqhandlers.py"]}, {"commit_id": "060a2b9aea45e11404bce57fbd80017a2a34561c", "commit_date": "Fri Oct 19 16:08:46 2018 -0700", "commit_message": "Embed NB2KG into Notebook server", "files_name": ["docs/source/public_server.rst", "notebook/gateway/__init__.py", "notebook/gateway/handlers.py", "notebook/gateway/managers.py", "notebook/notebookapp.py", "notebook/tests/test_gateway.py"]}, {"commit_id": "f74ef2f69121acfe07f2200a88d4f2119b871551", "commit_date": "Tue Dec 4 14:19:56 2018 -0800", "commit_message": "Move environment variables to SingletonConfigurable", "files_name": ["docs/source/public_server.rst", "notebook/gateway/handlers.py", "notebook/gateway/managers.py", "notebook/notebookapp.py", "notebook/tests/launchnotebook.py", "notebook/tests/test_gateway.py"]}, {"commit_id": "acba19033b720902287eaed11f9ed656fd8f456d", "commit_date": "Thu Dec 6 14:18:28 2018 -0800", "commit_message": "Minimize handlers and manager methods", "files_name": ["docs/source/public_server.rst", "notebook/gateway/handlers.py", "notebook/gateway/managers.py", "notebook/notebookapp.py", "notebook/services/kernels/handlers.py", "notebook/services/kernelspecs/handlers.py", "notebook/services/sessions/sessionmanager.py", "notebook/services/sessions/tests/test_sessionmanager.py", "notebook/tests/test_gateway.py"]}, {"commit_id": "132f27306522b32fa667a6b208034cb7a04025c9", "commit_date": "Thu Feb 14 12:11:00 2019 +0000", "commit_message": "Merge pull request #4377 from takluyver/selenium-test-save", "files_name": ["2c526fb60b529ca84be7c4d12bcb5f344274a542 - Mon Feb 18 16:02:08 2019 -0800 : Enable restart_kernel for async usage", "notebook/services/kernels/kernelmanager.py"]}, {"commit_id": "906406aeb0fd11494f0738cbad93e29abb5b5118", "commit_date": "Mon Feb 25 10:15:56 2019 +0100", "commit_message": "Merge pull request #4161 from kevin-bates/embed-nb2kg", "files_name": ["46ee18b23f6add225459530be64ceded08e1e279 - Mon Feb 25 10:29:04 2019 +0100 : Merge pull request #4376 from mpacer/update_json_configd", "bba82ca3bdb90ff6382dccef5fb3a805facf623a - Mon Feb 25 10:29:50 2019 +0100 : Merge pull request #4412 from kevin-bates/async-startup", "0e28875a1c110660f902d932ffd004d9848f7fb8 - Mon Feb 25 10:30:18 2019 +0100 : Merge pull request #4392 from takluyver/tornado-6-ws-coroutine", "6d15e9cdabad5e33a82c6727079bbc99e565564a - Mon Feb 25 10:30:57 2019 +0100 : Merge pull request #4328 from maxmouchet/list_hidden_files", "b4328ea7ee89e9dcac521d415323c49593830d03 - Mon Feb 25 10:40:06 2019 +0100 : move rtl fixes to page.less from custom.css", "notebook/static/base/less/page.less", "notebook/static/custom/custom.css"]}, {"commit_id": "eea02c2c5f5e7ea344de7d8600eb041230ffba04", "commit_date": "Mon Feb 25 10:42:12 2019 +0100", "commit_message": "Merge pull request #4213 from aayusharyan/patch-1", "files_name": ["f4183bb6121d88f139fd92e1a0255b9f9e19ba22 - Mon Feb 25 10:42:52 2019 +0100 : Merge pull request #4275 from steaward/issue-4270", "497837317422c426b6aa607acfbc53191128d0e4 - Mon Feb 25 10:44:17 2019 +0100 : Merge pull request #4130 from SpencerPark/markdown-table-alignment", "6a96754208aa054a91781eabff06cf89e1b1e37c - Mon Feb 25 10:45:20 2019 +0100 : Merge pull request #4355 from EvgeniDubov/fix_notebook_file_extension_case", "d145301b5583366fc0c5e938ded80f07a0bc1bbf - Mon Feb 25 10:46:20 2019 +0100 : Merge pull request #4112 from dmikushin/master"]}], "parents": [{"commit_id_before": "588b1f8eb3e3ee6f5a653d8f22faf8d7d22ae775", "url_before": "https://api.github.com/repos/jupyter/notebook/commits/588b1f8eb3e3ee6f5a653d8f22faf8d7d22ae775", "html_url_before": "https://github.com/jupyter/notebook/commit/588b1f8eb3e3ee6f5a653d8f22faf8d7d22ae775"}, {"commit_id_before": "1ed04ffa8aeb407560ef5ed77fff0675d0a46b9e", "url_before": "https://api.github.com/repos/jupyter/notebook/commits/1ed04ffa8aeb407560ef5ed77fff0675d0a46b9e", "html_url_before": "https://github.com/jupyter/notebook/commit/1ed04ffa8aeb407560ef5ed77fff0675d0a46b9e"}], "details": [{"raw_url": "https://github.com/jupyter/notebook/raw/288b73e1edbf527740e273fcc69b889460871648/docs%2Fsource%2Fchangelog.rst", "code": ".. _changelog:\n\nChangelog\n=========\n\nA summary of changes in the Jupyter notebook.\nFor more detailed information, see\n`GitHub <https://github.com/jupyter/notebook>`__.\n\n.. tip::\n\n     Use ``pip install notebook --upgrade`` or ``conda upgrade notebook`` to\n     upgrade to the latest release.\n\n.. we push for pip 9+ or it will break for Python 2 users when IPython 6 is out.\n\nWe strongly recommend that you upgrade pip to version 9+ of pip before upgrading ``notebook``.\n\n.. tip::\n\n    Use ``pip install pip --upgrade`` to upgrade pip. Check pip version with\n    ``pip --version``.\n\n.. _release-5.7.2:\n\n5.7.2\n-----\n\n5.7.2 contains a security fix preventing malicious directory names\nfrom being able to execute javascript. CVE request pending.\n\n.. _release-5.7.1:\n\n5.7.1\n-----\n\n5.7.1 contains a security fix preventing nbconvert endpoints from executing javascript with access to the server API. CVE request pending.\n\n.. _release-5.7.0:\n\n5.7.0\n-----\n\nNew features:\n\n- Update to CodeMirror to 5.37, which includes f-string sytax for Python 3.6 (:ghpull:`3816`)\n- Update jquery-ui to 1.12 (:ghpull:`3836`)\n- Check Host header to more securely protect localhost deployments from DNS rebinding.\n  This is a pre-emptive measure, not fixing a known vulnerability (:ghpull:`3766`).\n  Use ``.NotebookApp.allow_remote_access`` and ``.NotebookApp.local_hostnames`` to configure\n  access.\n- Allow access-control-allow-headers to be overridden (:ghpull:`3886`)\n- Allow configuring max_body_size and max_buffer_size (:ghpull:`3829`)\n- Allow configuring get_secure_cookie keyword-args (:ghpull:`3778`)\n- Respect nbconvert entrypoints as sources for exporters (:ghpull:`3879`)\n- Include translation sources in source distributions (:ghpull:`3925`, :ghpull:`3931`)\n- Various improvements to documentation (:ghpull:`3799`, :ghpull:`3800`,\n  :ghpull:`3806`, :ghpull:`3883`, :ghpull:`3908`)\n\nFixing problems:\n\n- Fix breadcrumb link when running with a base url (:ghpull:`3905`)\n- Fix possible type error when closing activity stream (:ghpull:`3907`)\n- Disable metadata editing for non-editable cells (:ghpull:`3744`)\n- Fix some styling and alignment of prompts caused by regressions in 5.6.0.\n- Enter causing page reload in shortcuts editor (:ghpull:`3871`)\n- Fix uploading to the same file twice (:ghpull:`3712`)\n\nSee the 5.7 milestone on GitHub for a complete list of\n`pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.7>`__ involved in this release.\n\nThanks to the following contributors:\n\n* Aaron Hall\n* Benjamin Ragan-Kelley\n* Bill Major\n* bxy007\n* Dave Aitken\n* Denis Ledoux\n* F\u00e9lix-Antoine Fortin\n* Gabriel\n* Grant Nestor\n* Kevin Bates\n* Kristian Gregorius Hustad\n* M Pacer\n* Madicken Munk\n* Maitiu O Ciarain\n* Matthias Bussonnier\n* Michael Boyle\n* Michael Chirico\n* Mokkapati, Praneet(ES)\n* Peter Parente\n* Sally Wilsak\n* Steven Silvester\n* Thomas Kluyver\n* Walter Martin\n\n.. _release-5.6.0:\n\n5.6.0\n-----\n\nNew features:\n\n- Execute cells by clicking icon in input prompt (:ghpull:`3535`, :ghpull:`3687`)\n- New \"Save as\" menu option (:ghpull:`3289`)\n- When serving on a loopback interface, protect against DNS rebinding by\n  checking the ``Host`` header from the browser (:ghpull:`3714`).\n  This check can be disabled if necessary by setting\n  ``NotebookApp.allow_remote_access``.\n  (Disabled by default while we work out some Mac issues in :ghissue:`3754`).\n- Add kernel_info_timeout traitlet to enable restarting slow kernels (:ghpull:`3665`)\n- Add ``custom_display_host`` config option to override displayed URL (:ghpull:`3668`)\n- Add /metrics endpoint for Prometheus Metrics (:ghpull:`3490`)\n- Update to MathJax 2.7.4 (:ghpull:`3751`)\n- Update to jQuery 3.3 (:ghpull:`3655`)\n- Update marked to 0.4 (:ghpull:`3686`)\n\nFixing problems:\n\n- Don't duplicate token in displayed URL (:ghpull:`3656`)\n- Clarify displayed URL when listening on all interfaces (:ghpull:`3703`)\n- Don't trash non-empty directories on Windows (:ghpull:`3673`)\n- Include LICENSE file in wheels (:ghpull:`3671`)\n- Don't show \"0 active kernels\" when starting the notebook (:ghpull:`3696`)\n\nTesting:\n\n- Add find replace test (:ghpull:`3630`)\n- Selenium test for deleting all cells (:ghpull:`3601`)\n- Make creating a new notebook more robust (:ghpull:`3726`)\n\nThanks to the following contributors:\n\n- Arovit Narula (`arovit <https://github.com/arovit>`__)\n- lucasoshiro (`lucasoshiro <https://github.com/lucasoshiro>`__)\n- M Pacer (`mpacer <https://github.com/mpacer>`__)\n- Thomas Kluyver (`takluyver <https://github.com/takluyver>`__)\n- Todd (`toddrme2178 <https://github.com/toddrme2178>`__)\n- Yuvi Panda (`yuvipanda <https://github.com/yuvipanda>`__)\n\nSee the 5.6 milestone on GitHub for a complete list of\n`pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.6>`__ involved in this release.\n\n.. _release-5.5.0:\n\n5.5.0\n-----\n\nNew features:\n\n- The files list now shows file sizes (:ghpull:`3539`)\n- Add a quit button in the dashboard (:ghpull:`3004`)\n- Display hostname in the terminal when running remotely (:ghpull:`3356`, :ghpull:`3593`)\n- Add slides exportation/download to the menu (:ghpull:`3287`)\n- Add any extra installed nbconvert exporters to the \"Download as\" menu (:ghpull:`3323`)\n- Editor: warning when overwriting a file that is modified on disk (:ghpull:`2783`)\n- Display a warning message if cookies are not enabled (:ghpull:`3511`)\n- Basic ``__version__`` reporting for extensions (:ghpull:`3541`)\n- Add ``NotebookApp.terminals_enabled`` config option (:ghpull:`3478`)\n- Make buffer time between last modified on disk and last modified on last save configurable (:ghpull:`3273`)\n- Allow binding custom shortcuts for 'close and halt' (:ghpull:`3314`)\n- Add description for 'Trusted' notification (:ghpull:`3386`)\n- Add ``settings['activity_sources']`` (:ghpull:`3401`)\n- Add an ``output_updated.OutputArea`` event (:ghpull:`3560`)\n\n\nFixing problems:\n\n- Fixes to improve web accessibility (:ghpull:`3507`)\n\n  - There is more to do on this! See :ghissue:`1801`.\n\n- Fixed color contrast issue in tree.less (:ghpull:`3336`)\n- Allow cancelling upload of large files (:ghpull:`3373`)\n- Don't clear login cookie on requests without cookie (:ghpull:`3380`)\n- Don't trash files on different device to home dir on Linux (:ghpull:`3304`)\n- Clear waiting asterisks when restarting kernel (:ghpull:`3494`)\n- Fix output prompt when ``execution_count`` missing (:ghpull:`3236`)\n- Make the 'changed on disk' dialog work when displayed twice (:ghpull:`3589`)\n- Fix going back to root directory with history in notebook list (:ghpull:`3411`)\n- Allow defining keyboard shortcuts for missing actions (:ghpull:`3561`)\n- Prevent default on pageup/pagedown when completer is active (:ghpull:`3500`)\n- Prevent default event handling on new terminal (:ghpull:`3497`)\n- ConfigManager should not write out default values found in the .d directory (:ghpull:`3485`)\n- Fix leak of iopub object in activity monitoring (:ghpull:`3424`)\n- Javascript lint in notebooklist.js (:ghpull:`3409`)\n- Some Javascript syntax fixes (:ghpull:`3294`)\n- Convert native for loop to ``Array.forEach()`` (:ghpull:`3477`)\n- Disable cache when downloading nbconvert output (:ghpull:`3484`)\n- Add missing digestmod arg to HMAC (:ghpull:`3399`)\n- Log OSErrors failing to create less-critical files during startup (:ghpull:`3384`)\n- Use powershell on Windows (:ghpull:`3379`)\n- API spec improvements, API handler improvements (:ghpull:`3368`)\n- Set notebook to dirty state after change to kernel metadata (:ghpull:`3350`)\n- Use CSP header to treat served files as belonging to a separate origin (:ghpull:`3341`)\n- Don't install gettext into builtins (:ghpull:`3330`)\n- Add missing ``import _`` (:ghpull:`3316`, :ghpull:`3326`)\n- Write ``notebook.json`` file atomically (:ghpull:`3305`)\n- Fix clicking with modifiers, page title updates (:ghpull:`3282`)\n- Upgrade jQuery to version 2.2 (:ghpull:`3428`)\n- Upgrade xterm.js to 3.1.0 (:ghpull:`3189`)\n- Upgrade moment.js to 2.19.3 (:ghpull:`3562`)\n- Upgrade CodeMirror to 5.35 (:ghpull:`3372`)\n- \"Require\" pyzmq>=17 (:ghpull:`3586`)\n\nDocumentation:\n\n- Documentation updates and organisation (:ghpull:`3584`)\n- Add section in docs about privacy (:ghpull:`3571`)\n- Add explanation on how to change the type of a cell to Markdown (:ghpull:`3377`)\n- Update docs with confd implementation details (:ghpull:`3520`)\n- Add more information for where ``jupyter_notebook_config.py`` is located (:ghpull:`3346`)\n- Document options to enable nbextensions in specific sections (:ghpull:`3525`)\n- jQuery attribute selector value MUST be surrounded by quotes (:ghpull:`3527`)\n- Do not execute special notebooks with nbsphinx (:ghpull:`3360`)\n- Other minor fixes in :ghpull:`3288`, :ghpull:`3528`, :ghpull:`3293`, :ghpull:`3367`\n\nTesting:\n\n- Testing with Selenium & Sauce labs (:ghpull:`3321`)\n- Selenium utils + markdown rendering tests (:ghpull:`3458`)\n- Convert insert cell tests to Selenium (:ghpull:`3508`)\n- Convert prompt numbers tests to Selenium (:ghpull:`3554`)\n- Convert delete cells tests to Selenium (:ghpull:`3465`)\n- Convert undelete cell tests to Selenium (:ghpull:`3475`)\n- More selenium testing utilities (:ghpull:`3412`)\n- Only check links when build is trigger by Travis Cron job (:ghpull:`3493`)\n- Fix Appveyor build errors (:ghpull:`3430`)\n- Undo patches in teardown before attempting to delete files (:ghpull:`3459`)\n- Get tests running with tornado 5 (:ghpull:`3398`)\n- Unpin ipykernel version on Travis (:ghpull:`3223`)\n\nThanks to the following contributors:\n\n- Arovit Narula (`arovit <https://github.com/arovit>`__)\n- Ashley Teoh (`ashleytqy <https://github.com/ashleytqy>`__)\n- Nicholas Bollweg (`bollwyvl <https://github.com/bollwyvl>`__)\n- Alex Rothberg (`cancan101 <https://github.com/cancan101>`__)\n- Celina Kilcrease (`ckilcrease <https://github.com/ckilcrease>`__)\n- dabuside (`dabuside <https://github.com/dabuside>`__)\n- Damian Avila (`damianavila <https://github.com/damianavila>`__)\n- Dana Lee (`danagilliann <https://github.com/danagilliann>`__)\n- Dave Hirschfeld (`dhirschfeld <https://github.com/dhirschfeld>`__)\n- Heng GAO (`ehengao <https://github.com/ehengao>`__)\n- Leo Gallucci (`elgalu <https://github.com/elgalu>`__)\n- Evan Van Dam (`evandam <https://github.com/evandam>`__)\n- forbxy (`forbxy <https://github.com/forbxy>`__)\n- Grant Nestor (`gnestor <https://github.com/gnestor>`__)\n- Ethan T. Hendrix (`hendrixet <https://github.com/hendrixet>`__)\n- Miro Hron\u010dok (`hroncok <https://github.com/hroncok>`__)\n- Paul Ivanov (`ivanov <https://github.com/ivanov>`__)\n- Dar\u00edo Here\u00f1\u00fa (`kant <https://github.com/kant>`__)\n- Kevin Bates (`kevin-bates <https://github.com/kevin-bates>`__)\n- Maarten Breddels (`maartenbreddels <https://github.com/maartenbreddels>`__)\n- Michael Droettboom (`mdboom <https://github.com/mdboom>`__)\n- Min RK (`minrk <https://github.com/minrk>`__)\n- M Pacer (`mpacer <https://github.com/mpacer>`__)\n- Peter Parente (`parente <https://github.com/parente>`__)\n- Paul Masson (`paulmasson <https://github.com/paulmasson>`__)\n- Philipp Rudiger (`philippjfr <https://github.com/philippjfr>`__)\n- Mac Knight (`Shels1909 <https://github.com/Shels1909>`__)\n- Hisham Elsheshtawy (`Sheshtawy <https://github.com/Sheshtawy>`__)\n- Simon Biggs (`SimonBiggs <https://github.com/SimonBiggs>`__)\n- Sunil Hari (`sunilhari <https://github.com/sunilhari>`__)\n- Thomas Kluyver (`takluyver <https://github.com/takluyver>`__)\n- Tim Klever (`tklever <https://github.com/tklever>`__)\n- Gabriel Ruiz (`unnamedplay-r <https://github.com/unnamedplay-r>`__)\n- Vaibhav Sagar (`vaibhavsagar <https://github.com/vaibhavsagar>`__)\n- William Hosford (`whosford <https://github.com/whosford>`__)\n- Hong (`xuhdev <https://github.com/xuhdev>`__)\n\nSee the 5.5 milestone on GitHub for a complete list of\n`pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.5>`__ involved in this release.\n\n.. _release-5.4.1:\n\n5.4.1\n-----\n\nA security release to fix `CVE-2018-8768\n<http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8768>`_.\n\nThanks to `Alex <https://hackerone.com/pisarenko>`__ for identifying this bug,\nand Jonathan Kamens and Scott Sanderson at Quantopian for verifying it and\nbringing it to our attention.\n\n.. _release-5.4.0:\n\n5.4.0\n-----\n\n- Fix creating files and folders after navigating directories in the dashboard\n  (:ghpull:`3264`).\n- Enable printing notebooks in colour, removing the CSS that made everything\n  black and white (:ghpull:`3212`).\n- Limit the completion options displayed in the notebook to 1000, to avoid\n  performance issues with very long lists (:ghpull:`3195`).\n- Accessibility improvements in ``tree.html`` (:ghpull:`3271`).\n- Added alt-text to the kernel logo image in the notebook UI (:ghpull:`3228`).\n- Added a test on Travis CI to flag if symlinks are accidentally introduced\n  in the future. This should prevent the issue that necessitated\n  :ref:`release-5.3.1` (:ghpull:`3227`).\n- Use lowercase letters for random IDs generated in our Javascript\n  (:ghpull:`3264`).\n- Removed duplicate code setting ``TextCell.notebook`` (:ghpull:`3256`).\n\nThanks to the following contributors:\n\n- Alex Soderman (`asoderman <https://github.com/asoderman>`__)\n- Matthias Bussonnier (`Carreau <https://github.com/Carreau>`__)\n- Min RK (`minrk <https://github.com/minrk>`__)\n- Nitesh Sawant (`ns23 <https://github.com/ns23>`__)\n- Thomas Kluyver (`takluyver <https://github.com/takluyver>`__)\n- Yuvi Panda (`yuvipanda <https://github.com/yuvipanda>`__)\n\nSee the 5.4 milestone on GitHub for a complete list of\n`pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.4>`__ involved in this release.\n\n.. _release-5.3.1:\n\n5.3.1\n-----\n\nReplaced a symlink in the repository with a copy, to fix issues installing\non Windows (:ghpull:`3220`).\n\n.. _release-5.3.0:\n\n5.3.0\n-----\n\nThis release introduces a couple noteable improvements, such as terminal support for Windows and support for OS trash (files deleted from the notebook dashboard are moved to the OS trash vs. deleted permanently).\n\n- Add support for terminals on windows (:ghpull:`3087`). \n- Add a \"restart and run all\" button to the toolbar (:ghpull:`2965`). \n- Send files to os trash mechanism on delete (:ghpull:`1968`). \n- Allow programmatic copy to clipboard (:ghpull:`3088`). \n- Use DOM History API for navigating between directories in the file browser (:ghpull:`3115`).\n- Add translated files to folder(docs-translations) (:ghpull:`3065`). \n- Allow non empty dirs to be deleted (:ghpull:`3108`). \n- Set cookie on base_url (:ghpull:`2959`). \n- Allow token-authenticated requests cross-origin by default (:ghpull:`2920`). \n- Change cull_idle_timeout_minimum to 1 from 300 (:ghpull:`2910`). \n- Config option to shut down server after n seconds with no kernels (:ghpull:`2963`). \n- Display a \"close\" button on load notebook error (:ghpull:`3176`). \n- Add action to command pallette to run CodeMirror's \"indentAuto\" on selection (:ghpull:`3175`). \n- Add option to specify extra services (:ghpull:`3158`). \n- Warn_bad_name should not use global name (:ghpull:`3160`). \n- Avoid overflow of hidden form (:ghpull:`3148`). \n- Fix shutdown trans loss (:ghpull:`3147`). \n- Find available kernelspecs more efficiently (:ghpull:`3136`). \n- Don\\'t try to translate missing help strings (:ghpull:`3122`). \n- Frontend/extension-config: allow default json files in a .d directory (:ghpull:`3116`). \n- Use `requirejs` vs. `require` (:ghpull:`3097`). \n- Fixes some ui bugs in firefox #3044 (:ghpull:`3058`). \n- Compare non-specific language code when choosing to use arabic numerals (:ghpull:`3055`). \n- Fix save-script deprecation (:ghpull:`3053`). \n- Include moment locales in package_data (:ghpull:`3051`). \n- Fix moment locale loading in bidi support (:ghpull:`3048`). \n- Tornado 5: periodiccallback loop arg will be removed (:ghpull:`3034`). \n- Use `/files` prefix for pdf-like files (:ghpull:`3031`). \n- Add folder for document translation (:ghpull:`3022`). \n- When login-in via token, let a chance for user to set the password (:ghpull:`3008`). \n- Switch to jupyter_core implementation of ensure_dir_exists (:ghpull:`3002`). \n- Send http shutdown request on \\'stop\\' subcommand (:ghpull:`3000`). \n- Work on loading ui translations  (:ghpull:`2969`). \n- Fix ansi inverse (:ghpull:`2967`). \n- Add send2trash to requirements for building docs (:ghpull:`2964`). \n- I18n readme.md improvement (:ghpull:`2962`).  \n- Add \\'reason\\' field to json error responses (:ghpull:`2958`).\n- Add some padding for stream outputs (:ghpull:`3194`).\n- Always use setuptools in ``setup.py`` (:ghpull:`3206`).\n- Fix clearing cookies on logout when ``base_url`` is configured (:ghpull:`3207`).\n\nThanks to the following contributors:\n\n- bacboc (`bacboc <https://github.com/bacboc>`__)\n- Steven Silvester (`blink1073 <https://github.com/blink1073>`__)\n- Matthias Bussonnier (`Carreau <https://github.com/Carreau>`__)\n- ChungJooHo (`ChungJooHo <https://github.com/ChungJooHo>`__)\n- edida (`edida <https://github.com/edida>`__)\n- Francesco Franchina (``ferdas``)\n- forbxy (`forbxy <https://github.com/forbxy>`__)\n- Grant Nestor (`gnestor <https://github.com/gnestor>`__)\n- Josh Barnes (`jcb91 <https://github.com/jcb91>`__)\n- JocelynDelalande (`JocelynDelalande <https://github.com/JocelynDelalande>`__)\n- Karthik Balakrishnan (`karthikb351 <https://github.com/karthikb351>`__)\n- Kevin Bates (`kevin-bates <https://github.com/kevin-bates>`__)\n- Kirit Thadaka (`kirit93 <https://github.com/kirit93>`__)\n- Lilian Besson (`Naereen <https://github.com/Naereen>`__)\n- Maarten Breddels (`maartenbreddels <https://github.com/maartenbreddels>`__)\n- Madhu94 (`Madhu94 <https://github.com/Madhu94>`__)\n- Matthias Geier (`mgeier <https://github.com/mgeier>`__)\n- Michael Heilman (`mheilman <https://github.com/mheilman>`__)\n- Min RK (`minrk <https://github.com/minrk>`__)\n- PHaeJin (`PHaeJin <https://github.com/PHaeJin>`__)\n- Sukneet (`Sukneet <https://github.com/Sukneet>`__)\n- Thomas Kluyver (`takluyver <https://github.com/takluyver>`__)\n\nSee the 5.3 milestone on GitHub for a complete list of\n`pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.3>`__ involved in this release.\n\n.. _release-5.2.1:\n\n5.2.1\n-----\n\n- Fix invisible CodeMirror cursor at specific browser zoom levels (:ghpull:`2983`). \n- Fix nbconvert handler causing broken export to PDF (:ghpull:`2981`). \n- Fix the prompt_area argument of the output area constructor. (:ghpull:`2961`). \n- Handle a compound extension in new_untitled (:ghpull:`2949`). \n- Allow disabling offline message buffering (:ghpull:`2916`). \n\nThanks to the following contributors:\n\n- Steven Silvester (`blink1073 <https://github.com/blink1073>`__)\n- Grant Nestor (`gnestor <https://github.com/gnestor>`__)\n- Jason Grout (`jasongrout <https://github.com/jasongrout>`__)\n- Min RK (`minrk <https://github.com/minrk>`__)\n- M Pacer (`mpacer <https://github.com/mpacer>`__)\n\nSee the 5.2.1 milestone on GitHub for a complete list of\n`pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.2.1>`__ involved in this release.\n\n.. _release-5.2.0:\n\n5.2.0\n-----\n\n- Allow setting token via jupyter_token env (:ghpull:`2921`). \n- Fix some errors caused by raising 403 in get_current_user (:ghpull:`2919`). \n- Register contents_manager.files_handler_class directly (:ghpull:`2917`). \n- Update viewable_extensions (:ghpull:`2913`). \n- Show edit shortcuts modal after shortcuts modal is hidden (:ghpull:`2912`). \n- Improve edit/view behavior (:ghpull:`2911`). \n- The root directory of the notebook server should never be hidden (:ghpull:`2907`). \n- Fix notebook require config to match tools/build-main (:ghpull:`2888`). \n- Give page constructor default arguments (:ghpull:`2887`). \n- Fix codemirror.less to match codemirror\\'s expected padding layout (:ghpull:`2880`). \n- Add x-xsrftoken to access-control-allow-headers (:ghpull:`2876`). \n- Buffer messages when websocket connection is interrupted (:ghpull:`2871`). \n- Load locale dynamically only when not en-us (:ghpull:`2866`). \n- Changed key strength to 2048 bits (:ghpull:`2861`). \n- Resync jsversion with python version (:ghpull:`2860`). \n- Allow copy operation on modified, read-only notebook (:ghpull:`2854`). \n- Update error handling on apihandlers (:ghpull:`2853`). \n- Test python 3.6 on travis, drop 3.3 (:ghpull:`2852`). \n- Avoid base64-literals in image tests (:ghpull:`2851`). \n- Upgrade xterm.js to 2.9.2 (:ghpull:`2849`). \n- Changed all python variables named file to file_name to not override built_in file (:ghpull:`2830`). \n- Add more doc tests (:ghpull:`2823`). \n- Typos fix (:ghpull:`2815`). \n- Rename and update license [ci skip] (:ghpull:`2810`). \n- Travis builds doc  (:ghpull:`2808`). \n- Pull request i18n  (:ghpull:`2804`). \n- Factor out output_prompt_function, as is done with input prompt (:ghpull:`2774`). \n- Use rfc5987 encoding for filenames (:ghpull:`2767`). \n- Added path to the resources metadata, the same as in from_filename(...) in nbconvert.exporters.py (:ghpull:`2753`). \n- Make \"extrakeys\" consistent for notebook and editor (:ghpull:`2745`). \n- Bidi support (:ghpull:`2357`). \n\nSpecial thanks to `samarsultan <https://github.com/samarsultan>`__ and the Arabic Competence and Globalization Center Team at IBM Egypt for adding RTL (right-to-left) support to the notebook!\n\nSee the 5.2 milestone on GitHub for a complete list of\n`issues <https://github.com/jupyter/notebook/issues?utf8=%E2%9C%93&q=is%3Aissue%20milestone%3A5.2>`__\nand `pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.2>`__ involved in this release.\n\n.. _release-5.1.0:\n\n5.1.0\n-----\n\n- Preliminary i18n implementation (:ghpull:`2140`).\n- Expose URL with auth token in notebook UI (:ghpull:`2666`).\n- Fix search background style (:ghpull:`2387`).\n- List running notebooks without requiring ``--allow-root`` (:ghpull:`2421`).\n- Allow session of type other than notebook (:ghpull:`2559`).\n- Fix search background style (:ghpull:`2387`).\n- Fix some Markdown styling issues (:ghpull:`2571`), (:ghpull:`2691`) and (:ghpull:`2534`).\n- Remove keymaps that conflict with non-English keyboards (:ghpull:`2535`).\n- Add session-specific favicons (notebook, terminal, file) (:ghpull:`2452`).\n- Add /api/shutdown handler (:ghpull:`2507`).\n- Include metadata when copying a cell (:ghpull:`2349`).\n- Stop notebook server from command line (:ghpull:`2388`).\n- Improve \"View\" and \"Edit\" file handling in dashboard (:ghpull:`2449`) and (:ghpull:`2402`).\n- Provide a promise to replace use of the ``app_initialized.NotebookApp`` event (:ghpull:`2710`).\n- Fix disabled collapse/expand output button (:ghpull:`2681`).\n- Cull idle kernels using ``--MappingKernelManager.cull_idle_timeout`` (:ghpull:`2215`).\n- Allow read-only notebooks to be trusted (:ghpull:`2718`).\n\nSee the 5.1 milestone on GitHub for a complete list of\n`issues <https://github.com/jupyter/notebook/issues?utf8=%E2%9C%93&q=is%3Aissue%20milestone%3A5.1>`__\nand `pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.1>`__ involved in this release.\n\n.. _release-5.0.0:\n\n5.0.0\n-----\n\nThis is the first major release of the Jupyter Notebook since version 4.0 was\ncreated by the \"Big Split\" of IPython and Jupyter.\n\nWe encourage users to start trying JupyterLab in preparation for a future\ntransition.\n\nWe have merged more than 300 pull requests since 4.0. Some of the\nmajor user-facing changes are described here.\n\nFile sorting in the dashboard\n*****************************\n\nFiles in the dashboard may now be sorted by last modified date or name (:ghpull:`943`):\n\n.. image:: /_static/images/dashboard-sort.png\n   :align: center \n\nCell tags\n*********\n\nThere is a new cell toolbar for adding *cell tags* (:ghpull:`2048`):\n\n.. image:: /_static/images/cell-tags-toolbar.png\n   :align: center\n\nCell tags are a lightweight way to customise the behaviour of tools working with\nnotebooks; we're working on building support for them into tools like `nbconvert\n<https://nbconvert.readthedocs.io/en/latest/>`__ and `nbval\n<https://github.com/computationalmodelling/nbval>`__. To start using tags,\nselect ``Tags`` in the ``View > Cell Toolbar`` menu in a notebook.\n\nThe UI for editing cell tags is basic for now; we hope to improve it in future\nreleases.\n\nTable style\n***********\n\nThe default styling for tables in the notebook has been updated (:ghpull:`1776`).\n\nBefore:\n\n.. image:: /_static/images/table-style-before.png\n   :align: center\n   \nAfter:\n\n.. image:: /_static/images/table-style-after.png\n  :align: center\n\nCustomise keyboard shortcuts\n****************************\n\nYou can now edit keyboard shortcuts for *Command Mode* within the UI\n(:ghpull:`1347`):\n\n.. image:: /_static/images/shortcut-editor.png\n   :align: center\n\nSee the ``Help > Edit Keyboard Shortcuts`` menu item and follow the instructions.\n\nOther additions\n***************\n\n- You can copy and paste cells between notebooks, using :kbd:`Ctrl-C` and\n  :kbd:`Ctrl-V` (:kbd:`Cmd-C` and :kbd:`Cmd-V` on Mac).\n\n- It's easier to configure a password for the notebook with the new\n  ``jupyter notebook password`` command (:ghpull:`2007`).\n\n- The file list can now be ordered by *last modified* or by *name*\n  (:ghpull:`943`).\n\n- Markdown cells now support attachments. Simply drag and drop an image from\n  your desktop to a markdown cell to add it. Unlike relative links that you\n  enter manually, attachments are embedded in the notebook itself. An\n  unreferenced attachment will be automatically scrubbed from the notebook on\n  save (:ghpull:`621`).\n\n- Undoing cell deletion now supports undeleting multiple cells. Cells may not be\n  in the same order as before their deletion, depending on the actions you did\n  on the meantime, but this should should help reduce the impact of\n  accidentally deleting code.\n\n- The file browser now has *Edit* and *View* buttons.\n\n- The file browser now supports moving multiple files at once\n  (:ghpull:`1088`).\n\n- The Notebook will refuse to run as root unless the ``--allow-root`` flag is\n  given (:ghpull:`1115`).\n\n- Keyboard shortcuts are now declarative (:ghpull:`1234`).\n\n- Toggling line numbers can now affect all cells (:ghpull:`1312`).\n\n- Add more visible *Trusted* and *Untrusted* notifications (:ghpull:`1658`).\n\n- The favicon (browser shortcut icon) now changes to indicate when the kernel is busy\n  (:ghpull:`1837`).\n  \n- Header and toolbar visibility is now persisted in nbconfig and across sessions\n  (:ghpull:`1769`).\n\n- Load server extensions with ConfigManager so that merge happens recursively,\n  unlike normal config values, to make it load more consistently with frontend\n  extensions(:ghpull:`2108`).\n\n- The notebook server now supports the `bundler API\n  <https://jupyter-notebook.readthedocs.io/en/latest/extending/bundler_extensions.html>`__\n  from the `jupyter_cms incubator project\n  <https://github.com/jupyter-incubator/contentmanagement>`__ (:ghpull:`1579`).\n\n- The notebook server now provides information about kernel activity in\n  its kernel resource API (:ghpull:`1827`).\n\nRemember that upgrading ``notebook`` only affects the user\ninterface. Upgrading kernels and libraries may also provide new features,\nbetter stability and integration with the notebook interface.\n\n.. _release-4.4.0:\n\n4.4.0\n-----\n\n- Allow override of output callbacks to redirect output messages. This is used to implement the ipywidgets Output widget, for example.\n- Fix an async bug in message handling by allowing comm message handlers to return a promise which halts message processing until the promise resolves.\n\nSee the 4.4 milestone on GitHub for a complete list of\n`issues <https://github.com/jupyter/notebook/issues?utf8=%E2%9C%93&q=is%3Aissue%20milestone%3A4.4>`__\nand `pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A4.4>`__ involved in this release.\n\n.. _release-4.3.2:\n\n4.3.2\n-----\n\n4.3.2 is a patch release with a bug fix for CodeMirror and improved handling of the \"editable\" cell metadata field.\n\n- Monkey-patch for CodeMirror that resolves `#2037 <https://github.com/jupyter/notebook/issues/2037>`__ without breaking `#1967 <https://github.com/jupyter/notebook/issues/1967>`__\n- Read-only (``\"editable\": false``) cells can be executed but cannot be split, merged, or deleted\n\nSee the 4.3.2 milestone on GitHub for a complete list of\n`issues <https://github.com/jupyter/notebook/issues?utf8=%E2%9C%93&q=is%3Aissue%20milestone%3A4.3.2>`__\nand `pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A4.3.2>`__ involved in this release.\n\n.. _release-4.3.1:\n\n4.3.1\n-----\n\n4.3.1 is a patch release with a security patch, a couple bug fixes, and improvements to the newly-released token authentication.\n\n**Security fix**:\n\n- CVE-2016-9971. Fix CSRF vulnerability,\n  where malicious forms could create untitled files and start kernels\n  (no remote execution or modification of existing files)\n  for users of certain browsers (Firefox, Internet Explorer / Edge).\n  All previous notebook releases are affected.\n\nBug fixes:\n\n- Fix carriage return handling\n- Make the font size more robust against fickle browsers\n- Ignore resize events that bubbled up and didn't come from window\n- Add Authorization to allowed CORS headers\n- Downgrade CodeMirror to 5.16 while we figure out issues in Safari\n\nOther improvements:\n\n- Better docs for token-based authentication\n- Further highlight token info in log output when autogenerated\n\nSee the 4.3.1 milestone on GitHub for a complete list of\n`issues <https://github.com/jupyter/notebook/issues?utf8=%E2%9C%93&q=is%3Aissue%20milestone%3A4.3.1>`__\nand `pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A4.3.1>`__ involved in this release.\n\n.. _release-4.3:\n\n4.3.0\n-----\n\n4.3 is a minor release with many bug fixes and improvements.\nThe biggest user-facing change is the addition of token authentication,\nwhich is enabled by default.\nA token is generated and used when your browser is opened automatically,\nso you shouldn't have to enter anything in the default circumstances.\nIf you see a login page\n(e.g. by switching browsers, or launching on a new port with ``--no-browser``),\nyou get a login URL with the token from the command ``jupyter notebook list``,\nwhich you can paste into your browser.\n\n\nHighlights:\n\n- API for creating mime-type based renderer extensions using :code:`OutputArea.register_mime_type` and :code:`Notebook.render_cell_output` methods. See `mimerender-cookiecutter <https://github.com/jupyterlab/mimerender-cookiecutter>`__ for reference implementations and cookiecutter.\n- Enable token authentication by default. See :ref:`server_security` for more details.\n- Update security docs to reflect new signature system\n- Switched from term.js to xterm.js\n\nBug fixes:\n\n- Ensure variable is set if exc_info is falsey\n- Catch and log handler exceptions in :code:`events.trigger`\n- Add debug log for static file paths\n- Don't check origin on token-authenticated requests\n- Remove leftover print statement\n- Fix highlighting of Python code blocks\n- :code:`json_errors` should be outermost decorator on API handlers\n- Fix remove old nbserver info files\n- Fix notebook mime type on download links\n- Fix carriage symbol bahvior\n- Fix terminal styles\n- Update dead links in docs\n- If kernel is broken, start a new session\n- Include cross-origin check when allowing login URL redirects\n\nOther improvements:\n\n- Allow JSON output data with mime type ``application/*+json``\n- Allow kernelspecs to have spaces in them for backward compat\n- Allow websocket connections from scripts\n- Allow :code:`None` for post_save_hook\n- Upgrade CodeMirror to 5.21\n- Upgrade xterm to 2.1.0\n- Docs for using comms\n- Set :code:`dirty` flag when output arrives\n- Set :code:`ws-url` data attribute when accessing a notebook terminal\n- Add base aliases for nbextensions\n- Include :code:`@` operator in CodeMirror IPython mode\n- Extend mathjax_url docstring\n- Load nbextension in predictable order\n- Improve the error messages for nbextensions\n- Include cross-origin check when allowing login URL redirects\n\nSee the 4.3 milestone on GitHub for a complete list of\n`issues <https://github.com/jupyter/notebook/issues?utf8=%E2%9C%93&q=is%3Aissue%20milestone%3A4.3%20>`__\nand `pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A4.3%20>`__ involved in this release.\n\n\n.. _release-4.2.3:\n\n4.2.3\n-----\n\n4.2.3 is a small bugfix release on 4.2.\n\n Highlights:\n\n- Fix regression in 4.2.2 that delayed loading custom.js\n  until after ``notebook_loaded`` and ``app_initialized`` events have fired.\n- Fix some outdated docs and links.\n\n.. seealso::\n\n    4.2.3 `on GitHub <https://github.com/jupyter/notebook/milestones/4.2.3>`__.\n\n.. _release-4.2.2:\n\n4.2.2\n-----\n\n4.2.2 is a small bugfix release on 4.2, with an important security fix.\nAll users are strongly encouraged to upgrade to 4.2.2.\n\n Highlights:\n\n- **Security fix**: CVE-2016-6524, where untrusted latex output\n  could be added to the page in a way that could execute javascript.\n- Fix missing POST in OPTIONS responses.\n- Fix for downloading non-ascii filenames.\n- Avoid clobbering ssl_options, so that users can specify more detailed SSL\n  configuration.\n- Fix inverted load order in nbconfig, so user config has highest priority.\n- Improved error messages here and there.\n\n.. seealso::\n\n    4.2.2 `on GitHub <https://github.com/jupyter/notebook/milestones/4.2.2>`__.\n\n.. _release-4.2.1:\n\n4.2.1\n-----\n\n4.2.1 is a small bugfix release on 4.2. Highlights:\n\n- Compatibility fixes for some versions of ipywidgets\n- Fix for ignored CSS on Windows\n- Fix specifying destination when installing nbextensions\n\n.. seealso::\n\n    4.2.1 `on GitHub <https://github.com/jupyter/notebook/milestones/4.2.1>`__.\n\n.. _release-4.2.0:\n\n4.2.0\n-----\n\nRelease 4.2 adds a new API for enabling and installing extensions.\nExtensions can now be enabled at the system-level, rather than just per-user.\nAn API is defined for installing directly from a Python package, as well.\n\n.. seealso::\n\n    :doc:`./examples/Notebook/Distributing Jupyter Extensions as Python Packages`\n\n\nHighlighted changes:\n\n- Upgrade MathJax to 2.6 to fix vertical-bar appearing on some equations.\n- Restore ability for notebook directory to be root (4.1 regression)\n- Large outputs are now throttled, reducing the ability of output floods to\n  kill the browser.\n- Fix the notebook ignoring cell executions while a kernel is starting by\n  queueing the messages.\n- Fix handling of url prefixes (e.g. JupyterHub) in terminal and edit pages.\n- Support nested SVGs in output.\n\nAnd various other fixes and improvements.\n\n.. _release-4.1.0:\n\n4.1.0\n-----\n\nBug fixes:\n\n- Properly reap zombie subprocesses\n- Fix cross-origin problems\n- Fix double-escaping of the base URL prefix\n- Handle invalid unicode filenames more gracefully\n- Fix ANSI color-processing\n- Send keepalive messages for web terminals\n- Fix bugs in the notebook tour\n\nUI changes:\n\n- Moved the cell toolbar selector into the *View* menu. Added a button that\n  triggers a \"hint\" animation to the main toolbar so users can find the new\n  location. (Click here to see a `screencast <https://cloud.githubusercontent.com/assets/335567/10711889/59665a5a-7a3e-11e5-970f-86b89592880c.gif>`__ )\n\n    .. image:: /_static/images/cell-toolbar-41.png\n\n- Added *Restart & Run All* to the *Kernel* menu. Users can also bind it to a\n  keyboard shortcut on action ``restart-kernel-and-run-all-cells``.\n- Added multiple-cell selection. Users press ``Shift-Up/Down`` or ``Shift-K/J``\n  to extend selection in command mode. Various actions such as cut/copy/paste,\n  execute, and cell type conversions apply to all selected cells.\n\n  .. image:: /_static/images/multi-select-41.png\n\n- Added a command palette for executing Jupyter actions by name. Users press\n  ``Cmd/Ctrl-Shift-P`` or click the new command palette icon on the toolbar.\n\n  .. image:: /_static/images/command-palette-41.png\n\n- Added a *Find and Replace* dialog to the *Edit* menu. Users can also press\n  ``F`` in command mode to show the dialog.\n\n  .. image:: /_static/images/find-replace-41.png\n\nOther improvements:\n\n- Custom KernelManager methods can be Tornado coroutines, allowing async\n  operations.\n- Make clearing output optional when rewriting input with\n  ``set_next_input(replace=True)``.\n- Added support for TLS client authentication via ``--NotebookApp.client-ca``.\n- Added tags to ``jupyter/notebook`` releases on DockerHub. ``latest``\n  continues to track the master branch.\n\nSee the 4.1 milestone on GitHub for a complete list of\n`issues <https://github.com/jupyter/notebook/issues?page=3&q=milestone%3A4.1+is%3Aclosed+is%3Aissue&utf8=%E2%9C%93>`__\nand `pull requests <https://github.com/jupyter/notebook/pulls?q=milestone%3A4.1+is%3Aclosed+is%3Apr>`__ handled.\n\n4.0.x\n-----\n\n4.0.6\n*****\n\n- fix installation of mathjax support files\n- fix some double-escape regressions in 4.0.5\n- fix a couple of cases where errors could prevent opening a notebook\n\n4.0.5\n*****\n\nSecurity fixes for maliciously crafted files.\n\n- `CVE-2015-6938 <http://www.openwall.com/lists/oss-security/2015/09/02/3>`__: malicious filenames\n- `CVE-2015-7337 <http://www.openwall.com/lists/oss-security/2015/09/16/3>`__: malicious binary files in text editor.\n\nThanks to Jonathan Kamens at Quantopian and Juan Broull\u00f3n for the reports.\n\n\n4.0.4\n*****\n\n- Fix inclusion of mathjax-safe extension\n\n4.0.2\n*****\n\n- Fix launching the notebook on Windows\n- Fix the path searched for frontend config\n\n\n4.0.0\n*****\n\nFirst release of the notebook as a standalone package.\n", "code_before": ".. _changelog:\n\nChangelog\n=========\n\nA summary of changes in the Jupyter notebook.\nFor more detailed information, see\n`GitHub <https://github.com/jupyter/notebook>`__.\n\n.. tip::\n\n     Use ``pip install notebook --upgrade`` or ``conda upgrade notebook`` to\n     upgrade to the latest release.\n\n.. we push for pip 9+ or it will break for Python 2 users when IPython 6 is out.\n\nWe strongly recommend that you upgrade pip to version 9+ of pip before upgrading ``notebook``.\n\n.. tip::\n\n    Use ``pip install pip --upgrade`` to upgrade pip. Check pip version with\n    ``pip --version``.\n\n.. _release-5.7.2:\n\n5.7.2\n-----\n\n5.7.2 contains a security fix preventing malicious directory names\nfrom being able to execute javascript. CVE request pending.\n\n.. _release-5.7.1:\n\n5.7.1\n-----\n\n5.7.1 contains a security fix preventing nbconvert endpoints from executing javascript with access to the server API. CVE request pending.\n\n.. _release-5.7.0:\n\n5.7.0\n-----\n\nNew features:\n\n- Update to CodeMirror to 5.37, which includes f-string sytax for Python 3.6 (:ghpull:`3816`)\n- Update jquery-ui to 1.12 (:ghpull:`3836`)\n- Check Host header to more securely protect localhost deployments from DNS rebinding.\n  This is a pre-emptive measure, not fixing a known vulnerability (:ghpull:`3766`).\n  Use ``.NotebookApp.allow_remote_access`` and ``.NotebookApp.local_hostnames`` to configure\n  access.\n- Allow access-control-allow-headers to be overridden (:ghpull:`3886`)\n- Allow configuring max_body_size and max_buffer_size (:ghpull:`3829`)\n- Allow configuring get_secure_cookie keyword-args (:ghpull:`3778`)\n- Respect nbconvert entrypoints as sources for exporters (:ghpull:`3879`)\n- Include translation sources in source distributions (:ghpull:`3925`, :ghpull:`3931`)\n- Various improvements to documentation (:ghpull:`3799`, :ghpull:`3800`,\n  :ghpull:`3806`, :ghpull:`3883`, :ghpull:`3908`)\n\nFixing problems:\n\n- Fix breadcrumb link when running with a base url (:ghpull:`3905`)\n- Fix possible type error when closing activity stream (:ghpull:`3907`)\n- Disable metadata editing for non-editable cells (:ghpull:`3744`)\n- Fix some styling and alignment of prompts caused by regressions in 5.6.0.\n- Enter causing page reload in shortcuts editor (:ghpull:`3871`)\n- Fix uploading to the same file twice (:ghpull:`3712`)\n\nSee the 5.7 milestone on GitHub for a complete list of\n`pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.7>`__ involved in this release.\n\nThanks to the following contributors:\n\n* Aaron Hall\n* Benjamin Ragan-Kelley\n* Bill Major\n* bxy007\n* Dave Aitken\n* Denis Ledoux\n* F\u00e9lix-Antoine Fortin\n* Gabriel\n* Grant Nestor\n* Kevin Bates\n* Kristian Gregorius Hustad\n* M Pacer\n* Madicken Munk\n* Maitiu O Ciarain\n* Matthias Bussonnier\n* Michael Boyle\n* Michael Chirico\n* Mokkapati, Praneet(ES)\n* Peter Parente\n* Sally Wilsak\n* Steven Silvester\n* Thomas Kluyver\n* Walter Martin\n\n.. _release-5.6.0:\n\n5.6.0\n-----\n\nNew features:\n\n- Execute cells by clicking icon in input prompt (:ghpull:`3535`, :ghpull:`3687`)\n- New \"Save as\" menu option (:ghpull:`3289`)\n- When serving on a loopback interface, protect against DNS rebinding by\n  checking the ``Host`` header from the browser (:ghpull:`3714`).\n  This check can be disabled if necessary by setting\n  ``NotebookApp.allow_remote_access``.\n  (Disabled by default while we work out some Mac issues in :ghissue:`3754`).\n- Add kernel_info_timeout traitlet to enable restarting slow kernels (:ghpull:`3665`)\n- Add ``custom_display_host`` config option to override displayed URL (:ghpull:`3668`)\n- Add /metrics endpoint for Prometheus Metrics (:ghpull:`3490`)\n- Update to MathJax 2.7.4 (:ghpull:`3751`)\n- Update to jQuery 3.3 (:ghpull:`3655`)\n- Update marked to 0.4 (:ghpull:`3686`)\n\nFixing problems:\n\n- Don't duplicate token in displayed URL (:ghpull:`3656`)\n- Clarify displayed URL when listening on all interfaces (:ghpull:`3703`)\n- Don't trash non-empty directories on Windows (:ghpull:`3673`)\n- Include LICENSE file in wheels (:ghpull:`3671`)\n- Don't show \"0 active kernels\" when starting the notebook (:ghpull:`3696`)\n\nTesting:\n\n- Add find replace test (:ghpull:`3630`)\n- Selenium test for deleting all cells (:ghpull:`3601`)\n- Make creating a new notebook more robust (:ghpull:`3726`)\n\nThanks to the following contributors:\n\n- Arovit Narula (`arovit <https://github.com/arovit>`__)\n- lucasoshiro (`lucasoshiro <https://github.com/lucasoshiro>`__)\n- M Pacer (`mpacer <https://github.com/mpacer>`__)\n- Thomas Kluyver (`takluyver <https://github.com/takluyver>`__)\n- Todd (`toddrme2178 <https://github.com/toddrme2178>`__)\n- Yuvi Panda (`yuvipanda <https://github.com/yuvipanda>`__)\n\nSee the 5.6 milestone on GitHub for a complete list of\n`pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.6>`__ involved in this release.\n\n.. _release-5.5.0:\n\n5.5.0\n-----\n\nNew features:\n\n- The files list now shows file sizes (:ghpull:`3539`)\n- Add a quit button in the dashboard (:ghpull:`3004`)\n- Display hostname in the terminal when running remotely (:ghpull:`3356`, :ghpull:`3593`)\n- Add slides exportation/download to the menu (:ghpull:`3287`)\n- Add any extra installed nbconvert exporters to the \"Download as\" menu (:ghpull:`3323`)\n- Editor: warning when overwriting a file that is modified on disk (:ghpull:`2783`)\n- Display a warning message if cookies are not enabled (:ghpull:`3511`)\n- Basic ``__version__`` reporting for extensions (:ghpull:`3541`)\n- Add ``NotebookApp.terminals_enabled`` config option (:ghpull:`3478`)\n- Make buffer time between last modified on disk and last modified on last save configurable (:ghpull:`3273`)\n- Allow binding custom shortcuts for 'close and halt' (:ghpull:`3314`)\n- Add description for 'Trusted' notification (:ghpull:`3386`)\n- Add ``settings['activity_sources']`` (:ghpull:`3401`)\n- Add an ``output_updated.OutputArea`` event (:ghpull:`3560`)\n\n\nFixing problems:\n\n- Fixes to improve web accessibility (:ghpull:`3507`)\n\n  - There is more to do on this! See :ghissue:`1801`.\n\n- Fixed color contrast issue in tree.less (:ghpull:`3336`)\n- Allow cancelling upload of large files (:ghpull:`3373`)\n- Don't clear login cookie on requests without cookie (:ghpull:`3380`)\n- Don't trash files on different device to home dir on Linux (:ghpull:`3304`)\n- Clear waiting asterisks when restarting kernel (:ghpull:`3494`)\n- Fix output prompt when ``execution_count`` missing (:ghpull:`3236`)\n- Make the 'changed on disk' dialog work when displayed twice (:ghpull:`3589`)\n- Fix going back to root directory with history in notebook list (:ghpull:`3411`)\n- Allow defining keyboard shortcuts for missing actions (:ghpull:`3561`)\n- Prevent default on pageup/pagedown when completer is active (:ghpull:`3500`)\n- Prevent default event handling on new terminal (:ghpull:`3497`)\n- ConfigManager should not write out default values found in the .d directory (:ghpull:`3485`)\n- Fix leak of iopub object in activity monitoring (:ghpull:`3424`)\n- Javascript lint in notebooklist.js (:ghpull:`3409`)\n- Some Javascript syntax fixes (:ghpull:`3294`)\n- Convert native for loop to ``Array.forEach()`` (:ghpull:`3477`)\n- Disable cache when downloading nbconvert output (:ghpull:`3484`)\n- Add missing digestmod arg to HMAC (:ghpull:`3399`)\n- Log OSErrors failing to create less-critical files during startup (:ghpull:`3384`)\n- Use powershell on Windows (:ghpull:`3379`)\n- API spec improvements, API handler improvements (:ghpull:`3368`)\n- Set notebook to dirty state after change to kernel metadata (:ghpull:`3350`)\n- Use CSP header to treat served files as belonging to a separate origin (:ghpull:`3341`)\n- Don't install gettext into builtins (:ghpull:`3330`)\n- Add missing ``import _`` (:ghpull:`3316`, :ghpull:`3326`)\n- Write ``notebook.json`` file atomically (:ghpull:`3305`)\n- Fix clicking with modifiers, page title updates (:ghpull:`3282`)\n- Upgrade jQuery to version 2.2 (:ghpull:`3428`)\n- Upgrade xterm.js to 3.1.0 (:ghpull:`3189`)\n- Upgrade moment.js to 2.19.3 (:ghpull:`3562`)\n- Upgrade CodeMirror to 5.35 (:ghpull:`3372`)\n- \"Require\" pyzmq>=17 (:ghpull:`3586`)\n\nDocumentation:\n\n- Documentation updates and organisation (:ghpull:`3584`)\n- Add section in docs about privacy (:ghpull:`3571`)\n- Add explanation on how to change the type of a cell to Markdown (:ghpull:`3377`)\n- Update docs with confd implementation details (:ghpull:`3520`)\n- Add more information for where ``jupyter_notebook_config.py`` is located (:ghpull:`3346`)\n- Document options to enable nbextensions in specific sections (:ghpull:`3525`)\n- jQuery attribute selector value MUST be surrounded by quotes (:ghpull:`3527`)\n- Do not execute special notebooks with nbsphinx (:ghpull:`3360`)\n- Other minor fixes in :ghpull:`3288`, :ghpull:`3528`, :ghpull:`3293`, :ghpull:`3367`\n\nTesting:\n\n- Testing with Selenium & Sauce labs (:ghpull:`3321`)\n- Selenium utils + markdown rendering tests (:ghpull:`3458`)\n- Convert insert cell tests to Selenium (:ghpull:`3508`)\n- Convert prompt numbers tests to Selenium (:ghpull:`3554`)\n- Convert delete cells tests to Selenium (:ghpull:`3465`)\n- Convert undelete cell tests to Selenium (:ghpull:`3475`)\n- More selenium testing utilities (:ghpull:`3412`)\n- Only check links when build is trigger by Travis Cron job (:ghpull:`3493`)\n- Fix Appveyor build errors (:ghpull:`3430`)\n- Undo patches in teardown before attempting to delete files (:ghpull:`3459`)\n- Get tests running with tornado 5 (:ghpull:`3398`)\n- Unpin ipykernel version on Travis (:ghpull:`3223`)\n\nThanks to the following contributors:\n\n- Arovit Narula (`arovit <https://github.com/arovit>`__)\n- Ashley Teoh (`ashleytqy <https://github.com/ashleytqy>`__)\n- Nicholas Bollweg (`bollwyvl <https://github.com/bollwyvl>`__)\n- Alex Rothberg (`cancan101 <https://github.com/cancan101>`__)\n- Celina Kilcrease (`ckilcrease <https://github.com/ckilcrease>`__)\n- dabuside (`dabuside <https://github.com/dabuside>`__)\n- Damian Avila (`damianavila <https://github.com/damianavila>`__)\n- Dana Lee (`danagilliann <https://github.com/danagilliann>`__)\n- Dave Hirschfeld (`dhirschfeld <https://github.com/dhirschfeld>`__)\n- Heng GAO (`ehengao <https://github.com/ehengao>`__)\n- Leo Gallucci (`elgalu <https://github.com/elgalu>`__)\n- Evan Van Dam (`evandam <https://github.com/evandam>`__)\n- forbxy (`forbxy <https://github.com/forbxy>`__)\n- Grant Nestor (`gnestor <https://github.com/gnestor>`__)\n- Ethan T. Hendrix (`hendrixet <https://github.com/hendrixet>`__)\n- Miro Hron\u010dok (`hroncok <https://github.com/hroncok>`__)\n- Paul Ivanov (`ivanov <https://github.com/ivanov>`__)\n- Dar\u00edo Here\u00f1\u00fa (`kant <https://github.com/kant>`__)\n- Kevin Bates (`kevin-bates <https://github.com/kevin-bates>`__)\n- Maarten Breddels (`maartenbreddels <https://github.com/maartenbreddels>`__)\n- Michael Droettboom (`mdboom <https://github.com/mdboom>`__)\n- Min RK (`minrk <https://github.com/minrk>`__)\n- M Pacer (`mpacer <https://github.com/mpacer>`__)\n- Peter Parente (`parente <https://github.com/parente>`__)\n- Paul Masson (`paulmasson <https://github.com/paulmasson>`__)\n- Philipp Rudiger (`philippjfr <https://github.com/philippjfr>`__)\n- Mac Knight (`Shels1909 <https://github.com/Shels1909>`__)\n- Hisham Elsheshtawy (`Sheshtawy <https://github.com/Sheshtawy>`__)\n- Simon Biggs (`SimonBiggs <https://github.com/SimonBiggs>`__)\n- Sunil Hari (`sunilhari <https://github.com/sunilhari>`__)\n- Thomas Kluyver (`takluyver <https://github.com/takluyver>`__)\n- Tim Klever (`tklever <https://github.com/tklever>`__)\n- Gabriel Ruiz (`unnamedplay-r <https://github.com/unnamedplay-r>`__)\n- Vaibhav Sagar (`vaibhavsagar <https://github.com/vaibhavsagar>`__)\n- William Hosford (`whosford <https://github.com/whosford>`__)\n- Hong (`xuhdev <https://github.com/xuhdev>`__)\n\nSee the 5.5 milestone on GitHub for a complete list of\n`pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.5>`__ involved in this release.\n\n.. _release-5.4.1:\n\n5.4.1\n-----\n\nA security release to fix `CVE-2018-8768\n<http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8768>`_.\n\nThanks to `Alex <https://hackerone.com/pisarenko>`__ for identifying this bug,\nand Jonathan Kamens and Scott Sanderson at Quantopian for verifying it and\nbringing it to our attention.\n\n.. _release-5.4.0:\n\n5.4.0\n-----\n\n- Fix creating files and folders after navigating directories in the dashboard\n  (:ghpull:`3264`).\n- Enable printing notebooks in colour, removing the CSS that made everything\n  black and white (:ghpull:`3212`).\n- Limit the completion options displayed in the notebook to 1000, to avoid\n  performance issues with very long lists (:ghpull:`3195`).\n- Accessibility improvements in ``tree.html`` (:ghpull:`3271`).\n- Added alt-text to the kernel logo image in the notebook UI (:ghpull:`3228`).\n- Added a test on Travis CI to flag if symlinks are accidentally introduced\n  in the future. This should prevent the issue that necessitated\n  :ref:`release-5.3.1` (:ghpull:`3227`).\n- Use lowercase letters for random IDs generated in our Javascript\n  (:ghpull:`3264`).\n- Removed duplicate code setting ``TextCell.notebook`` (:ghpull:`3256`).\n\nThanks to the following contributors:\n\n- Alex Soderman (`asoderman <https://github.com/asoderman>`__)\n- Matthias Bussonnier (`Carreau <https://github.com/Carreau>`__)\n- Min RK (`minrk <https://github.com/minrk>`__)\n- Nitesh Sawant (`ns23 <https://github.com/ns23>`__)\n- Thomas Kluyver (`takluyver <https://github.com/takluyver>`__)\n- Yuvi Panda (`yuvipanda <https://github.com/yuvipanda>`__)\n\nSee the 5.4 milestone on GitHub for a complete list of\n`pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.4>`__ involved in this release.\n\n.. _release-5.3.1:\n\n5.3.1\n-----\n\nReplaced a symlink in the repository with a copy, to fix issues installing\non Windows (:ghpull:`3220`).\n\n.. _release-5.3.0:\n\n5.3.0\n-----\n\nThis release introduces a couple noteable improvements, such as terminal support for Windows and support for OS trash (files deleted from the notebook dashboard are moved to the OS trash vs. deleted permanently).\n\n- Add support for terminals on windows (:ghpull:`3087`). \n- Add a \"restart and run all\" button to the toolbar (:ghpull:`2965`). \n- Send files to os trash mechanism on delete (:ghpull:`1968`). \n- Allow programmatic copy to clipboard (:ghpull:`3088`). \n- Use DOM History API for navigating between directories in the file browser (:ghpull:`3115`).\n- Add translated files to folder(docs-translations) (:ghpull:`3065`). \n- Allow non empty dirs to be deleted (:ghpull:`3108`). \n- Set cookie on base_url (:ghpull:`2959`). \n- Allow token-authenticated requests cross-origin by default (:ghpull:`2920`). \n- Change cull_idle_timeout_minimum to 1 from 300 (:ghpull:`2910`). \n- Config option to shut down server after n seconds with no kernels (:ghpull:`2963`). \n- Display a \"close\" button on load notebook error (:ghpull:`3176`). \n- Add action to command pallette to run CodeMirror's \"indentAuto\" on selection (:ghpull:`3175`). \n- Add option to specify extra services (:ghpull:`3158`). \n- Warn_bad_name should not use global name (:ghpull:`3160`). \n- Avoid overflow of hidden form (:ghpull:`3148`). \n- Fix shutdown trans loss (:ghpull:`3147`). \n- Find available kernelspecs more efficiently (:ghpull:`3136`). \n- Don\\'t try to translate missing help strings (:ghpull:`3122`). \n- Frontend/extension-config: allow default json files in a .d directory (:ghpull:`3116`). \n- Use `requirejs` vs. `require` (:ghpull:`3097`). \n- Fixes some ui bugs in firefox #3044 (:ghpull:`3058`). \n- Compare non-specific language code when choosing to use arabic numerals (:ghpull:`3055`). \n- Fix save-script deprecation (:ghpull:`3053`). \n- Include moment locales in package_data (:ghpull:`3051`). \n- Fix moment locale loading in bidi support (:ghpull:`3048`). \n- Tornado 5: periodiccallback loop arg will be removed (:ghpull:`3034`). \n- Use `/files` prefix for pdf-like files (:ghpull:`3031`). \n- Add folder for document translation (:ghpull:`3022`). \n- When login-in via token, let a chance for user to set the password (:ghpull:`3008`). \n- Switch to jupyter_core implementation of ensure_dir_exists (:ghpull:`3002`). \n- Send http shutdown request on \\'stop\\' subcommand (:ghpull:`3000`). \n- Work on loading ui translations  (:ghpull:`2969`). \n- Fix ansi inverse (:ghpull:`2967`). \n- Add send2trash to requirements for building docs (:ghpull:`2964`). \n- I18n readme.md improvement (:ghpull:`2962`).  \n- Add \\'reason\\' field to json error responses (:ghpull:`2958`).\n- Add some padding for stream outputs (:ghpull:`3194`).\n- Always use setuptools in ``setup.py`` (:ghpull:`3206`).\n- Fix clearing cookies on logout when ``base_url`` is configured (:ghpull:`3207`).\n\nThanks to the following contributors:\n\n- bacboc (`bacboc <https://github.com/bacboc>`__)\n- Steven Silvester (`blink1073 <https://github.com/blink1073>`__)\n- Matthias Bussonnier (`Carreau <https://github.com/Carreau>`__)\n- ChungJooHo (`ChungJooHo <https://github.com/ChungJooHo>`__)\n- edida (`edida <https://github.com/edida>`__)\n- Francesco Franchina (``ferdas``)\n- forbxy (`forbxy <https://github.com/forbxy>`__)\n- Grant Nestor (`gnestor <https://github.com/gnestor>`__)\n- Josh Barnes (`jcb91 <https://github.com/jcb91>`__)\n- JocelynDelalande (`JocelynDelalande <https://github.com/JocelynDelalande>`__)\n- Karthik Balakrishnan (`karthikb351 <https://github.com/karthikb351>`__)\n- Kevin Bates (`kevin-bates <https://github.com/kevin-bates>`__)\n- Kirit Thadaka (`kirit93 <https://github.com/kirit93>`__)\n- Lilian Besson (`Naereen <https://github.com/Naereen>`__)\n- Maarten Breddels (`maartenbreddels <https://github.com/maartenbreddels>`__)\n- Madhu94 (`Madhu94 <https://github.com/Madhu94>`__)\n- Matthias Geier (`mgeier <https://github.com/mgeier>`__)\n- Michael Heilman (`mheilman <https://github.com/mheilman>`__)\n- Min RK (`minrk <https://github.com/minrk>`__)\n- PHaeJin (`PHaeJin <https://github.com/PHaeJin>`__)\n- Sukneet (`Sukneet <https://github.com/Sukneet>`__)\n- Thomas Kluyver (`takluyver <https://github.com/takluyver>`__)\n\nSee the 5.3 milestone on GitHub for a complete list of\n`pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.3>`__ involved in this release.\n\n.. _release-5.2.1:\n\n5.2.1\n-----\n\n- Fix invisible CodeMirror cursor at specific browser zoom levels (:ghpull:`2983`). \n- Fix nbconvert handler causing broken export to PDF (:ghpull:`2981`). \n- Fix the prompt_area argument of the output area constructor. (:ghpull:`2961`). \n- Handle a compound extension in new_untitled (:ghpull:`2949`). \n- Allow disabling offline message buffering (:ghpull:`2916`). \n\nThanks to the following contributors:\n\n- Steven Silvester (`blink1073 <https://github.com/blink1073>`__)\n- Grant Nestor (`gnestor <https://github.com/gnestor>`__)\n- Jason Grout (`jasongrout <https://github.com/jasongrout>`__)\n- Min RK (`minrk <https://github.com/minrk>`__)\n- M Pacer (`mpacer <https://github.com/mpacer>`__)\n\nSee the 5.2.1 milestone on GitHub for a complete list of\n`pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.2.1>`__ involved in this release.\n\n.. _release-5.2.0:\n\n5.2.0\n-----\n\n- Allow setting token via jupyter_token env (:ghpull:`2921`). \n- Fix some errors caused by raising 403 in get_current_user (:ghpull:`2919`). \n- Register contents_manager.files_handler_class directly (:ghpull:`2917`). \n- Update viewable_extensions (:ghpull:`2913`). \n- Show edit shortcuts modal after shortcuts modal is hidden (:ghpull:`2912`). \n- Improve edit/view behavior (:ghpull:`2911`). \n- The root directory of the notebook server should never be hidden (:ghpull:`2907`). \n- Fix notebook require config to match tools/build-main (:ghpull:`2888`). \n- Give page constructor default arguments (:ghpull:`2887`). \n- Fix codemirror.less to match codemirror\\'s expected padding layout (:ghpull:`2880`). \n- Add x-xsrftoken to access-control-allow-headers (:ghpull:`2876`). \n- Buffer messages when websocket connection is interrupted (:ghpull:`2871`). \n- Load locale dynamically only when not en-us (:ghpull:`2866`). \n- Changed key strength to 2048 bits (:ghpull:`2861`). \n- Resync jsversion with python version (:ghpull:`2860`). \n- Allow copy operation on modified, read-only notebook (:ghpull:`2854`). \n- Update error handling on apihandlers (:ghpull:`2853`). \n- Test python 3.6 on travis, drop 3.3 (:ghpull:`2852`). \n- Avoid base64-literals in image tests (:ghpull:`2851`). \n- Upgrade xterm.js to 2.9.2 (:ghpull:`2849`). \n- Changed all python variables named file to file_name to not override built_in file (:ghpull:`2830`). \n- Add more doc tests (:ghpull:`2823`). \n- Typos fix (:ghpull:`2815`). \n- Rename and update license [ci skip] (:ghpull:`2810`). \n- Travis builds doc  (:ghpull:`2808`). \n- Pull request i18n  (:ghpull:`2804`). \n- Factor out output_prompt_function, as is done with input prompt (:ghpull:`2774`). \n- Use rfc5987 encoding for filenames (:ghpull:`2767`). \n- Added path to the resources metadata, the same as in from_filename(...) in nbconvert.exporters.py (:ghpull:`2753`). \n- Make \"extrakeys\" consistent for notebook and editor (:ghpull:`2745`). \n- Bidi support (:ghpull:`2357`). \n\nSpecial thanks to `samarsultan <https://github.com/samarsultan>`__ and the Arabic Competence and Globalization Center Team at IBM Egypt for adding RTL (right-to-left) support to the notebook!\n\nSee the 5.2 milestone on GitHub for a complete list of\n`issues <https://github.com/jupyter/notebook/issues?utf8=%E2%9C%93&q=is%3Aissue%20milestone%3A5.2>`__\nand `pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.2>`__ involved in this release.\n\n.. _release-5.1.0:\n\n5.1.0\n-----\n\n- Preliminary i18n implementation (:ghpull:`2140`).\n- Expose URL with auth token in notebook UI (:ghpull:`2666`).\n- Fix search background style (:ghpull:`2387`).\n- List running notebooks without requiring ``--allow-root`` (:ghpull:`2421`).\n- Allow session of type other than notebook (:ghpull:`2559`).\n- Fix search background style (:ghpull:`2387`).\n- Fix some Markdown styling issues (:ghpull:`2571`), (:ghpull:`2691`) and (:ghpull:`2534`).\n- Remove keymaps that conflict with non-English keyboards (:ghpull:`2535`).\n- Add session-specific favicons (notebook, terminal, file) (:ghpull:`2452`).\n- Add /api/shutdown handler (:ghpull:`2507`).\n- Include metadata when copying a cell (:ghpull:`2349`).\n- Stop notebook server from command line (:ghpull:`2388`).\n- Improve \"View\" and \"Edit\" file handling in dashboard (:ghpull:`2449`) and (:ghpull:`2402`).\n- Provide a promise to replace use of the ``app_initialized.NotebookApp`` event (:ghpull:`2710`).\n- Fix disabled collapse/expand output button (:ghpull:`2681`).\n- Cull idle kernels using ``--MappingKernelManager.cull_idle_timeout`` (:ghpull:`2215`).\n- Allow read-only notebooks to be trusted (:ghpull:`2718`).\n\nSee the 5.1 milestone on GitHub for a complete list of\n`issues <https://github.com/jupyter/notebook/issues?utf8=%E2%9C%93&q=is%3Aissue%20milestone%3A5.1>`__\nand `pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.1>`__ involved in this release.\n\n.. _release-5.0.0:\n\n5.0.0\n-----\n\nThis is the first major release of the Jupyter Notebook since version 4.0 was\ncreated by the \"Big Split\" of IPython and Jupyter.\n\nWe encourage users to start trying JupyterLab in preparation for a future\ntransition.\n\nWe have merged more than 300 pull requests since 4.0. Some of the\nmajor user-facing changes are described here.\n\nFile sorting in the dashboard\n*****************************\n\nFiles in the dashboard may now be sorted by last modified date or name (:ghpull:`943`):\n\n.. image:: /_static/images/dashboard-sort.png\n   :align: center \n\nCell tags\n*********\n\nThere is a new cell toolbar for adding *cell tags* (:ghpull:`2048`):\n\n.. image:: /_static/images/cell-tags-toolbar.png\n   :align: center\n\nCell tags are a lightweight way to customise the behaviour of tools working with\nnotebooks; we're working on building support for them into tools like `nbconvert\n<https://nbconvert.readthedocs.io/en/latest/>`__ and `nbval\n<https://github.com/computationalmodelling/nbval>`__. To start using tags,\nselect ``Tags`` in the ``View > Cell Toolbar`` menu in a notebook.\n\nThe UI for editing cell tags is basic for now; we hope to improve it in future\nreleases.\n\nTable style\n***********\n\nThe default styling for tables in the notebook has been updated (:ghpull:`1776`).\n\nBefore:\n\n.. image:: /_static/images/table-style-before.png\n   :align: center\n   \nAfter:\n\n.. image:: /_static/images/table-style-after.png\n  :align: center\n\nCustomise keyboard shortcuts\n****************************\n\nYou can now edit keyboard shortcuts for *Command Mode* within the UI\n(:ghpull:`1347`):\n\n.. image:: /_static/images/shortcut-editor.png\n   :align: center\n\nSee the ``Help > Edit Keyboard Shortcuts`` menu item and follow the instructions.\n\nOther additions\n***************\n\n- You can copy and paste cells between notebooks, using :kbd:`Ctrl-C` and\n  :kbd:`Ctrl-V` (:kbd:`Cmd-C` and :kbd:`Cmd-V` on Mac).\n\n- It's easier to configure a password for the notebook with the new\n  ``jupyter notebook password`` command (:ghpull:`2007`).\n\n- The file list can now be ordered by *last modified* or by *name*\n  (:ghpull:`943`).\n\n- Markdown cells now support attachments. Simply drag and drop an image from\n  your desktop to a markdown cell to add it. Unlike relative links that you\n  enter manually, attachments are embedded in the notebook itself. An\n  unreferenced attachment will be automatically scrubbed from the notebook on\n  save (:ghpull:`621`).\n\n- Undoing cell deletion now supports undeleting multiple cells. Cells may not be\n  in the same order as before their deletion, depending on the actions you did\n  on the meantime, but this should should help reduce the impact of\n  accidentally deleting code.\n\n- The file browser now has *Edit* and *View* buttons.\n\n- The file browser now supports moving multiple files at once\n  (:ghpull:`1088`).\n\n- The Notebook will refuse to run as root unless the ``--allow-root`` flag is\n  given (:ghpull:`1115`).\n\n- Keyboard shortcuts are now declarative (:ghpull:`1234`).\n\n- Toggling line numbers can now affect all cells (:ghpull:`1312`).\n\n- Add more visible *Trusted* and *Untrusted* notifications (:ghpull:`1658`).\n\n- The favicon (browser shortcut icon) now changes to indicate when the kernel is busy\n  (:ghpull:`1837`).\n  \n- Header and toolbar visibility is now persisted in nbconfig and across sessions\n  (:ghpull:`1769`).\n\n- Load server extensions with ConfigManager so that merge happens recursively,\n  unlike normal config values, to make it load more consistently with frontend\n  extensions(:ghpull:`2108`).\n\n- The notebook server now supports the `bundler API\n  <https://jupyter-notebook.readthedocs.io/en/latest/extending/bundler_extensions.html>`__\n  from the `jupyter_cms incubator project\n  <https://github.com/jupyter-incubator/contentmanagement>`__ (:ghpull:`1579`).\n\n- The notebook server now provides information about kernel activity in\n  its kernel resource API (:ghpull:`1827`).\n\nRemember that upgrading ``notebook`` only affects the user\ninterface. Upgrading kernels and libraries may also provide new features,\nbetter stability and integration with the notebook interface.\n\n.. _release-4.4.0:\n\n4.4.0\n-----\n\n- Allow override of output callbacks to redirect output messages. This is used to implement the ipywidgets Output widget, for example.\n- Fix an async bug in message handling by allowing comm message handlers to return a promise which halts message processing until the promise resolves.\n\nSee the 4.4 milestone on GitHub for a complete list of\n`issues <https://github.com/jupyter/notebook/issues?utf8=%E2%9C%93&q=is%3Aissue%20milestone%3A4.4>`__\nand `pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A4.4>`__ involved in this release.\n\n.. _release-4.3.2:\n\n4.3.2\n-----\n\n4.3.2 is a patch release with a bug fix for CodeMirror and improved handling of the \"editable\" cell metadata field.\n\n- Monkey-patch for CodeMirror that resolves `#2037 <https://github.com/jupyter/notebook/issues/2037>`__ without breaking `#1967 <https://github.com/jupyter/notebook/issues/1967>`__\n- Read-only (``\"editable\": false``) cells can be executed but cannot be split, merged, or deleted\n\nSee the 4.3.2 milestone on GitHub for a complete list of\n`issues <https://github.com/jupyter/notebook/issues?utf8=%E2%9C%93&q=is%3Aissue%20milestone%3A4.3.2>`__\nand `pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A4.3.2>`__ involved in this release.\n\n.. _release-4.3.1:\n\n4.3.1\n-----\n\n4.3.1 is a patch release with a security patch, a couple bug fixes, and improvements to the newly-released token authentication.\n\n**Security fix**:\n\n- CVE-2016-9971. Fix CSRF vulnerability,\n  where malicious forms could create untitled files and start kernels\n  (no remote execution or modification of existing files)\n  for users of certain browsers (Firefox, Internet Explorer / Edge).\n  All previous notebook releases are affected.\n\nBug fixes:\n\n- Fix carriage return handling\n- Make the font size more robust against fickle browsers\n- Ignore resize events that bubbled up and didn't come from window\n- Add Authorization to allowed CORS headers\n- Downgrade CodeMirror to 5.16 while we figure out issues in Safari\n\nOther improvements:\n\n- Better docs for token-based authentication\n- Further highlight token info in log output when autogenerated\n\nSee the 4.3.1 milestone on GitHub for a complete list of\n`issues <https://github.com/jupyter/notebook/issues?utf8=%E2%9C%93&q=is%3Aissue%20milestone%3A4.3.1>`__\nand `pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A4.3.1>`__ involved in this release.\n\n.. _release-4.3:\n\n4.3.0\n-----\n\n4.3 is a minor release with many bug fixes and improvements.\nThe biggest user-facing change is the addition of token authentication,\nwhich is enabled by default.\nA token is generated and used when your browser is opened automatically,\nso you shouldn't have to enter anything in the default circumstances.\nIf you see a login page\n(e.g. by switching browsers, or launching on a new port with ``--no-browser``),\nyou get a login URL with the token from the command ``jupyter notebook list``,\nwhich you can paste into your browser.\n\n\nHighlights:\n\n- API for creating mime-type based renderer extensions using :code:`OutputArea.register_mime_type` and :code:`Notebook.render_cell_output` methods. See `mimerender-cookiecutter <https://github.com/jupyterlab/mimerender-cookiecutter>`__ for reference implementations and cookiecutter.\n- Enable token authentication by default. See :ref:`server_security` for more details.\n- Update security docs to reflect new signature system\n- Switched from term.js to xterm.js\n\nBug fixes:\n\n- Ensure variable is set if exc_info is falsey\n- Catch and log handler exceptions in :code:`events.trigger`\n- Add debug log for static file paths\n- Don't check origin on token-authenticated requests\n- Remove leftover print statement\n- Fix highlighting of Python code blocks\n- :code:`json_errors` should be outermost decorator on API handlers\n- Fix remove old nbserver info files\n- Fix notebook mime type on download links\n- Fix carriage symbol bahvior\n- Fix terminal styles\n- Update dead links in docs\n- If kernel is broken, start a new session\n- Include cross-origin check when allowing login URL redirects\n\nOther improvements:\n\n- Allow JSON output data with mime type ``application/*+json``\n- Allow kernelspecs to have spaces in them for backward compat\n- Allow websocket connections from scripts\n- Allow :code:`None` for post_save_hook\n- Upgrade CodeMirror to 5.21\n- Upgrade xterm to 2.1.0\n- Docs for using comms\n- Set :code:`dirty` flag when output arrives\n- Set :code:`ws-url` data attribute when accessing a notebook terminal\n- Add base aliases for nbextensions\n- Include :code:`@` operator in CodeMirror IPython mode\n- Extend mathjax_url docstring\n- Load nbextension in predictable order\n- Improve the error messages for nbextensions\n- Include cross-origin check when allowing login URL redirects\n\nSee the 4.3 milestone on GitHub for a complete list of\n`issues <https://github.com/jupyter/notebook/issues?utf8=%E2%9C%93&q=is%3Aissue%20milestone%3A4.3%20>`__\nand `pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A4.3%20>`__ involved in this release.\n\n\n.. _release-4.2.3:\n\n4.2.3\n-----\n\n4.2.3 is a small bugfix release on 4.2.\n\n Highlights:\n\n- Fix regression in 4.2.2 that delayed loading custom.js\n  until after ``notebook_loaded`` and ``app_initialized`` events have fired.\n- Fix some outdated docs and links.\n\n.. seealso::\n\n    4.2.3 `on GitHub <https://github.com/jupyter/notebook/milestones/4.2.3>`__.\n\n.. _release-4.2.2:\n\n4.2.2\n-----\n\n4.2.2 is a small bugfix release on 4.2, with an important security fix.\nAll users are strongly encouraged to upgrade to 4.2.2.\n\n Highlights:\n\n- **Security fix**: CVE-2016-6524, where untrusted latex output\n  could be added to the page in a way that could execute javascript.\n- Fix missing POST in OPTIONS responses.\n- Fix for downloading non-ascii filenames.\n- Avoid clobbering ssl_options, so that users can specify more detailed SSL\n  configuration.\n- Fix inverted load order in nbconfig, so user config has highest priority.\n- Improved error messages here and there.\n\n.. seealso::\n\n    4.2.2 `on GitHub <https://github.com/jupyter/notebook/milestones/4.2.2>`__.\n\n.. _release-4.2.1:\n\n4.2.1\n-----\n\n4.2.1 is a small bugfix release on 4.2. Highlights:\n\n- Compatibility fixes for some versions of ipywidgets\n- Fix for ignored CSS on Windows\n- Fix specifying destination when installing nbextensions\n\n.. seealso::\n\n    4.2.1 `on GitHub <https://github.com/jupyter/notebook/milestones/4.2.1>`__.\n\n.. _release-4.2.0:\n\n4.2.0\n-----\n\nRelease 4.2 adds a new API for enabling and installing extensions.\nExtensions can now be enabled at the system-level, rather than just per-user.\nAn API is defined for installing directly from a Python package, as well.\n\n.. seealso::\n\n    :doc:`./examples/Notebook/Distributing Jupyter Extensions as Python Packages`\n\n\nHighlighted changes:\n\n- Upgrade MathJax to 2.6 to fix vertical-bar appearing on some equations.\n- Restore ability for notebook directory to be root (4.1 regression)\n- Large outputs are now throttled, reducing the ability of output floods to\n  kill the browser.\n- Fix the notebook ignoring cell executions while a kernel is starting by\n  queueing the messages.\n- Fix handling of url prefixes (e.g. JupyterHub) in terminal and edit pages.\n- Support nested SVGs in output.\n\nAnd various other fixes and improvements.\n\n.. _release-4.1.0:\n\n4.1.0\n-----\n\nBug fixes:\n\n- Properly reap zombie subprocesses\n- Fix cross-origin problems\n- Fix double-escaping of the base URL prefix\n- Handle invalid unicode filenames more gracefully\n- Fix ANSI color-processing\n- Send keepalive messages for web terminals\n- Fix bugs in the notebook tour\n\nUI changes:\n\n- Moved the cell toolbar selector into the *View* menu. Added a button that\n  triggers a \"hint\" animation to the main toolbar so users can find the new\n  location. (Click here to see a `screencast <https://cloud.githubusercontent.com/assets/335567/10711889/59665a5a-7a3e-11e5-970f-86b89592880c.gif>`__ )\n\n    .. image:: /_static/images/cell-toolbar-41.png\n\n- Added *Restart & Run All* to the *Kernel* menu. Users can also bind it to a\n  keyboard shortcut on action ``restart-kernel-and-run-all-cells``.\n- Added multiple-cell selection. Users press ``Shift-Up/Down`` or ``Shift-K/J``\n  to extend selection in command mode. Various actions such as cut/copy/paste,\n  execute, and cell type conversions apply to all selected cells.\n\n  .. image:: /_static/images/multi-select-41.png\n\n- Added a command palette for executing Jupyter actions by name. Users press\n  ``Cmd/Ctrl-Shift-P`` or click the new command palette icon on the toolbar.\n\n  .. image:: /_static/images/command-palette-41.png\n\n- Added a *Find and Replace* dialog to the *Edit* menu. Users can also press\n  ``F`` in command mode to show the dialog.\n\n  .. image:: /_static/images/find-replace-41.png\n\nOther improvements:\n\n- Custom KernelManager methods can be Tornado coroutines, allowing async\n  operations.\n- Make clearing output optional when rewriting input with\n  ``set_next_input(replace=True)``.\n- Added support for TLS client authentication via ``--NotebookApp.client-ca``.\n- Added tags to ``jupyter/notebook`` releases on DockerHub. ``latest``\n  continues to track the master branch.\n\nSee the 4.1 milestone on GitHub for a complete list of\n`issues <https://github.com/jupyter/notebook/issues?page=3&q=milestone%3A4.1+is%3Aclosed+is%3Aissue&utf8=%E2%9C%93>`__\nand `pull requests <https://github.com/jupyter/notebook/pulls?q=milestone%3A4.1+is%3Aclosed+is%3Apr>`__ handled.\n\n4.0.x\n-----\n\n4.0.6\n*****\n\n- fix installation of mathjax support files\n- fix some double-escape regressions in 4.0.5\n- fix a couple of cases where errors could prevent opening a notebook\n\n4.0.5\n*****\n\nSecurity fixes for maliciously crafted files.\n\n- `CVE-2015-6938 <http://www.openwall.com/lists/oss-security/2015/09/02/3>`__: malicious filenames\n- `CVE-2015-7337 <http://www.openwall.com/lists/oss-security/2015/09/16/3>`__: malicious binary files in text editor.\n\nThanks to Jonathan Kamens at Quantopian and Juan Broull\u00f3n for the reports.\n\n\n4.0.4\n*****\n\n- Fix inclusion of mathjax-safe extension\n\n4.0.2\n*****\n\n- Fix launching the notebook on Windows\n- Fix the path searched for frontend config\n\n\n4.0.0\n*****\n\nFirst release of the notebook as a standalone package.\n", "patch": "@@ -21,6 +21,21 @@ We strongly recommend that you upgrade pip to version 9+ of pip before upgrading\n     Use ``pip install pip --upgrade`` to upgrade pip. Check pip version with\n     ``pip --version``.\n \n+.. _release-5.7.2:\n+\n+5.7.2\n+-----\n+\n+5.7.2 contains a security fix preventing malicious directory names\n+from being able to execute javascript. CVE request pending.\n+\n+.. _release-5.7.1:\n+\n+5.7.1\n+-----\n+\n+5.7.1 contains a security fix preventing nbconvert endpoints from executing javascript with access to the server API. CVE request pending.\n+\n .. _release-5.7.0:\n \n 5.7.0", "file_path": "files/2018_11\\2", "file_language": "rst", "file_name": "docs/source/changelog.rst", "outdated_file_modify": 1, "outdated_file_before": 0, "outdated_file_after": 0}, {"raw_url": "https://github.com/jupyter/notebook/raw/288b73e1edbf527740e273fcc69b889460871648/notebook%2Fstatic%2Ftree%2Fjs%2Fnotebooklist.js", "code": "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\ndefine([\n    'jquery',\n    'base/js/namespace',\n    'base/js/utils',\n    'base/js/i18n',\n    'base/js/dialog',\n    'base/js/events',\n    'base/js/keyboard',\n    'moment',\n    'bidi/bidi'\n], function($, IPython, utils, i18n, dialog, events, keyboard, moment, bidi) {\n    \"use strict\";\n\n    var extension = function(path){\n      /**\n       *  return the last pat after the dot in a filepath\n       *  or the filepath itself if no dots present.\n       *  Empty string if the filepath ends with a dot.\n       **/\n      var parts = path.split('.');\n      return parts[parts.length-1];\n    };\n\n    var item_in = function(item, list) {\n      // Normalize list and item to lowercase\n      var normalized_list = list.map(function(_item) {\n        return _item.toLowerCase();\n      });\n      return normalized_list.indexOf(item.toLowerCase()) !== -1;\n    };\n\n    var includes_extension = function(filepath, extensionslist) {\n      return item_in(extension(filepath), extensionslist);\n    };\n\n    function name_sorter(ascending) {\n        return (function(a, b) {\n            if (type_order[a['type']] < type_order[b['type']]) {\n                return -1;\n            }\n            if (type_order[a['type']] > type_order[b['type']]) {\n                return 1;\n            }\n            if (a['name'].toLowerCase() < b['name'].toLowerCase()) {\n                return (ascending) ? -1 : 1;\n            }\n            if (a['name'].toLowerCase() > b['name'].toLowerCase()) {\n                return (ascending) ? 1 : -1;\n            }\n            return 0;\n        });\n    }\n\n    function modified_sorter(ascending) {\n        var order = ascending ? 1 : 0;\n        return (function(a, b) {\n            return utils.datetime_sort_helper(a.last_modified, b.last_modified,\n                                              order)\n        });\n    }\n\n    function size_sorter(ascending) {\n        var order = ascending ? 1 : 0;\n        // directories have file size of undefined\n        return (function(a, b) {\n          if (a.size === undefined) {\n             return (ascending) ? -1 : 1;\n          }\n\n          if (b.size === undefined) {\n             return (ascending) ? 1 : -1;\n          }\n\n          if (a.size > b.size) {\n            return (ascending) ? -1 : 1;\n          }\n\n          if (b.size > a.size) {\n            return (ascending) ? 1 : -1;\n          }\n\n          return 0;\n        });\n    }\n\n    var sort_functions = {\n        'sort-name': name_sorter,\n        'last-modified': modified_sorter,\n        'file-size': size_sorter\n    };\n\n    var NotebookList = function (selector, options) {\n        /**\n         * Constructor\n         *\n         * Parameters:\n         *  selector: string\n         *  options: dictionary\n         *      Dictionary of keyword arguments.\n         *          session_list: SessionList instance\n         *          element_name: string\n         *          base_url: string\n         *          notebook_path: string\n         *          contents: Contents instance\n         */\n        var that = this;\n        this.session_list = options.session_list;\n        this.events = this.session_list.events;\n        // allow code re-use by just changing element_name in kernellist.js\n        this.element_name = options.element_name || 'notebook';\n        this.selector = selector;\n        if (this.selector !== undefined) {\n            this.element = $(selector);\n            this.style();\n            this.bind_events();\n        }\n        this.notebooks_list = [];\n        this.sessions = {};\n        this.base_url = options.base_url || utils.get_body_data(\"baseUrl\");\n        this.notebook_path = options.notebook_path || utils.get_body_data(\"notebookPath\");\n        this.initial_notebook_path = this.notebook_path;\n        this.contents = options.contents;\n        if (this.session_list && this.session_list.events) {\n            this.session_list.events.on('sessions_loaded.Dashboard',\n                function(e, d) { that.sessions_loaded(d); });\n        }\n        this.selected = [];\n        this.sort_function = name_sorter(1);\n        // 0 => descending, 1 => ascending\n        this.sort_id = 'sort-name';\n        this.sort_direction = 1;\n        this._max_upload_size_mb = 25;\n        this.EDIT_MIMETYPES = [\n          'application/javascript',\n          'application/x-sh',\n          'application/vnd.groove-tool-template'\n        ];\n    };\n\n    NotebookList.prototype.style = function () {\n        var prefix = '#' + this.element_name;\n        $(prefix + '_toolbar').addClass('list_toolbar');\n        $(prefix + '_list_info').addClass('toolbar_info');\n        $(prefix + '_buttons').addClass('toolbar_buttons');\n        $(prefix + '_list_header').addClass('list_header');\n        this.element.addClass(\"list_container\");\n    };\n\n    NotebookList.prototype.bind_events = function () {\n        var that = this;\n        $('#refresh_' + this.element_name + '_list').click(function () {\n            that.load_sessions();\n        });\n        this.element.bind('dragover', function () {\n            return false;\n        });\n        this.element.bind('drop', function(event){\n            that.handleFilesUpload(event,'drop');\n            return false;\n        });\n\n        // Bind events for singleton controls.\n        if (!NotebookList._bound_singletons) {\n            NotebookList._bound_singletons = true;\n            $('#new-file').click(function(e) {\n                var w = window.open('', IPython._target);\n                that.contents.new_untitled(that.notebook_path || '', {type: 'file', ext: '.txt'}).then(function(data) {\n                    w.location = utils.url_path_join(\n                        that.base_url, 'edit',\n                        utils.encode_uri_components(data.path)\n                    );\n                }).catch(function (e) {\n                    w.close();\n                    dialog.modal({\n                        title: i18n.msg._('Creating File Failed'),\n                        body: $('<div/>')\n                            .text(i18n.msg._(\"An error occurred while creating a new file.\"))\n                            .append($('<div/>')\n                                .addClass('alert alert-danger')\n                                .text(e.message || e)),\n                        buttons: {\n                            OK: {'class': 'btn-primary'}\n                        }\n                    });\n                    console.warn('Error during New file creation', e);\n                });\n                that.load_sessions();\n                e.preventDefault();\n            });\n            $('#new-folder').click(function(e) {\n                that.contents.new_untitled(that.notebook_path || '', {type: 'directory'})\n                .then(function(){\n                    that.load_list();\n                }).catch(function (e) {\n                    dialog.modal({\n                        title: i18n.msg._('Creating Folder Failed'),\n                        body: $('<div/>')\n                            .text(i18n.msg._(\"An error occurred while creating a new folder.\"))\n                            .append($('<div/>')\n                                .addClass('alert alert-danger')\n                                .text(e.message || e)),\n                        buttons: {\n                            OK: {'class': 'btn-primary'}\n                        }\n                    });\n                    console.warn('Error during New directory creation', e);\n                });\n                that.load_sessions();\n                e.preventDefault();\n            });\n\n            // Bind events for action buttons.\n            $('.rename-button').click($.proxy(this.rename_selected, this));\n            $('.move-button').click($.proxy(this.move_selected, this));\n            $('.download-button').click($.proxy(this.download_selected, this));\n            $('.shutdown-button').click($.proxy(this.shutdown_selected, this));\n            $('.duplicate-button').click($.proxy(this.duplicate_selected, this));\n            $('.view-button').click($.proxy(this.view_selected, this));\n            $('.edit-button').click($.proxy(this.edit_selected, this));\n            $('.delete-button').click($.proxy(this.delete_selected, this));\n\n            // Bind events for selection menu buttons.\n            $('#selector-menu').click(function (event) {\n                that.select($(event.target).attr('id'));\n            });\n            var select_all = $('#select-all');\n            select_all.change(function () {\n                if (!select_all.prop('checked') || select_all.data('indeterminate')) {\n                    that.select('select-none');\n                } else {\n                    that.select('select-all');\n                }\n            });\n            $('#button-select-all').click(function (e) {\n                // toggle checkbox if the click doesn't come from the checkbox already\n                if (!$(e.target).is('input[type=checkbox]')) {\n                    if (select_all.prop('checked') || select_all.data('indeterminate')) {\n                        that.select('select-none');\n                    } else {\n                        that.select('select-all');\n                    }\n                }\n            });\n\n            $('.sort-action').click(function(e) {\n                var sort_on = e.target.id;\n\n                // Clear sort indications in UI\n                $(\".sort-action i\").removeClass(\"fa-arrow-up\").removeClass(\"fa-arrow-down\");\n\n                if ((that.sort_id === sort_on) && (that.sort_direction === 1)) {\n                    that.sort_list(sort_on, 0);\n                    $(\"#\" + sort_on + \" i\").addClass(\"fa-arrow-up\");\n                    that.sort_direction = 0;\n                } else {\n                    that.sort_list(sort_on, 1);\n                    $(\"#\" + sort_on + \" i\").addClass(\"fa-arrow-down\");\n                    that.sort_direction = 1;\n                }\n                that.sort_id = sort_on;\n            });\n        }\n    };\n\n    NotebookList.prototype.sort_list = function(id, order) {\n        if (sort_functions.hasOwnProperty(id)) {\n            this.sort_function = sort_functions[id](order);\n            this.draw_notebook_list(this.model_list, this.error_msg);\n        } else {\n            console.error(\"No such sort id: '\" + id + \"'\")\n        }\n    };\n\n    NotebookList.prototype.handleFilesUpload =  function(event, dropOrForm) {\n        var that = this;\n        var files;\n        if(dropOrForm === 'drop'){\n            files = event.originalEvent.dataTransfer.files;\n        } else  {\n            files = event.originalEvent.target.files;\n        }\n\n        var reader_onload = function (event) {\n            var item = $(event.target).data('item');\n            that.add_file_data(event.target.result, item);\n            that.add_upload_button(item);\n        };\n        var reader_onerror = function (event) {\n            var item = $(event.target).data('item');\n            var name = item.data('name');\n            item.remove();\n            dialog.modal({\n                title : i18n.msg._('Failed to read file'),\n                body : i18n.msg.sprintf(i18n.msg._(\"Failed to read file %s\"),name),\n                buttons : {'OK' : { 'class' : 'btn-primary' }}\n            });\n        };\n\n        Array.from(files).forEach(function(f) {\n            var name_and_ext = utils.splitext(f.name);\n            var file_ext = name_and_ext[1];\n\n            if (f.size > that._max_upload_size_mb * 1024 * 1024) {\n            \tvar body_msg = i18n.msg.sprintf(i18n.msg._(\"The file size is %d MB. Do you still want to upload it?\"),\n            \t\t\tMath.round(f.size / (1024 * 1024)));\n                dialog.modal({\n                    title : i18n.msg._('Large file size warning'),\n                    body : body_msg,\n                    buttons : {\n                        Cancel: {},\n                        Ok: {\n                            class: \"btn-primary\",\n                            click: function() {\n                                that.add_large_file_upload_button(f);\n                            }\n                        }\n                    }\n                });\n            }\n            else{\n                var reader = new FileReader();\n                if (file_ext === '.ipynb') {\n                    reader.readAsText(f);\n                } else {\n                    // read non-notebook files as binary\n                    reader.readAsArrayBuffer(f);\n                }\n                var item = that.new_item(0, true);\n                item.addClass('new-file');\n                that.add_name_input(f.name, item, file_ext === '.ipynb' ? 'notebook' : 'file');\n                // Store the list item in the reader so we can use it later\n                // to know which item it belongs to.\n                $(reader).data('item', item);\n                reader.onload = reader_onload;\n                reader.onerror = reader_onerror;\n            }\n        });\n        // Clear fileinput value. This is required to\n        // reset the form. Otherwise, if you upload a file, delete it and try to\n        // upload it again, the changed event won't fire.\n        var form = $('input.fileinput');\n        form.val('');\n        return false;\n    };\n\n    NotebookList.prototype.clear_list = function (remove_uploads) {\n        /**\n         * Clears the navigation tree.\n         *\n         * Parameters\n         * remove_uploads: bool=False\n         *      Should upload prompts also be removed from the tree.\n         */\n        if (remove_uploads) {\n            this.element.children('.list_item').remove();\n        } else {\n            this.element.children('.list_item:not(.new-file)').remove();\n        }\n    };\n\n    NotebookList.prototype.load_sessions = function(){\n        this.session_list.load_sessions();\n    };\n\n\n    NotebookList.prototype.sessions_loaded = function(data){\n        this.sessions = data;\n        this.load_list();\n    };\n\n    NotebookList.prototype.load_list = function () {\n        var that = this;\n        // Add an event handler browser back and forward events\n        window.onpopstate = function(e) {\n            var path = (window.history.state && window.history.state.path) ?\n                    window.history.state.path : that.initial_notebook_path;\n            that.update_location(path);\n        };\n        var breadcrumb = $('.breadcrumb');\n        breadcrumb.empty();\n        var list_item = $('<li/>');\n        var root_url = utils.url_path_join(that.base_url, '/tree');\n        var root = $('<li/>').append(\n            $(\"<a/>\")\n            .attr('href', root_url)\n            .append(\n                $(\"<i/>\")\n                .addClass('fa fa-folder')\n            )\n            .click(function(e) {\n                // Allow the default browser action when the user holds a modifier (e.g., Ctrl-Click)\n                if(e.altKey || e.metaKey || e.shiftKey) {\n                    return true;\n                }\n                var path = '';\n                window.history.pushState(\n                    {path: path},\n                    'Home',\n                    utils.url_path_join(that.base_url, 'tree')\n                );\n                that.update_location(path);\n                return false;\n            })\n        );\n        breadcrumb.append(root);\n        var path_parts = [];\n        this.notebook_path.split('/').forEach(function(path_part) {\n            path_parts.push(path_part);\n            var path = path_parts.join('/');\n            var url = utils.url_path_join(\n                that.base_url,\n                '/tree',\n                utils.encode_uri_components(path)\n            );\n            var crumb = $('<li/>').append(\n                $('<a/>')\n                .attr('href', url)\n                .text(path_part)\n                .click(function(e) {\n                    // Allow the default browser action when the user holds a modifier (e.g., Ctrl-Click)\n                    if(e.altKey || e.metaKey || e.shiftKey) {\n                        return true;\n                    }\n                    window.history.pushState(\n                        {path: path},\n                        path,\n                        url\n                    );\n                    that.update_location(path);\n                    return false;\n                })\n            );\n            breadcrumb.append(crumb);\n        });\n        this.contents.list_contents(that.notebook_path).then(\n            $.proxy(this.draw_notebook_list, this),\n            function(error) {\n                that.draw_notebook_list({content: []}, i18n.msg._(\"Server error: \") + error.message);\n            }\n        );\n    };\n    \n    NotebookList.prototype.update_location = function (path) {\n        this.notebook_path = path;\n        $('body').attr('data-notebook-path', path);\n        // Update the file tree list without reloading the page\n        this.load_list();\n        // Update the page title so the browser tab reflects it\n        // Match how the title appears with a trailing slash or\n        // \"Home\" if the page loads from the server.\n        $('title').text(path ? path+'/' : i18n.msg._(\"Home\"));\n    };\n\n    /**\n     * Draw the list of notebooks\n     * @method draw_notebook_list\n     * @param {Array} list An array of dictionaries representing files or\n     *     directories.\n     * @param {String} error_msg An error message\n     */\n\n\n    var type_order = {'directory':0,'notebook':1,'file':2};\n\n    NotebookList.prototype.draw_notebook_list = function (list, error_msg) {\n        // Remember what was selected before the refresh.\n        var selected_before = this.selected;\n\n        // Store the data to be redrawn by sorting\n        this.model_list = list;\n        this.error_msg = error_msg;\n\n        list.content.sort(this.sort_function);\n        var message = error_msg || i18n.msg._('The notebook list is empty.');\n        var item = null;\n        var model = null;\n        var len = list.content.length;\n        this.clear_list();\n        var n_uploads = this.element.children('.list_item').length;\n        if (len === 0) {\n            item = this.new_item(0);\n            var span12 = item.children().first();\n            span12.empty();\n            span12.append($('<div style=\"margin:auto;text-align:center;color:grey\"/>').text(message));\n        }\n        var path = this.notebook_path;\n        var offset = n_uploads;\n        if (path !== '') {\n            item = this.new_item(offset, false);\n            model = {\n                type: 'directory',\n                name: '..',\n                path: utils.url_path_split(path)[0]\n            };\n            this.add_link(model, item);\n            offset += 1;\n        }\n        for (var i=0; i<len; i++) {\n            model = list.content[i];\n            item = this.new_item(i+offset, true);\n            try {\n                this.add_link(model, item);\n            } catch(err) {\n                console.log('Error adding link: ' + err);\n            }\n        }\n        // Trigger an event when we've finished drawing the notebook list.\n        events.trigger('draw_notebook_list.NotebookList');\n\n        // Reselect the items that were selected before.  Notify listeners\n        // that the selected items may have changed.  O(n^2) operation.\n        selected_before.forEach(function(item) {\n            var list_items = $('.list_item');\n            for (var i=0; i<list_items.length; i++) {\n                var $list_item = $(list_items[i]);\n                if ($list_item.data('path') === item.path) {\n                    $list_item.find('input[type=checkbox]').prop('checked', true);\n                    break;\n                }\n            }\n        });\n        this._selection_changed();\n    };\n\n\n    /**\n     * Creates a new item.\n     * @param  {integer} index\n     * @param  {boolean} [selectable] - tristate, undefined: don't draw checkbox,\n     *                                  false: don't draw checkbox but pad\n     *                                  where it should be, true: draw checkbox.\n     * @return {JQuery} row\n     */\n    NotebookList.prototype.new_item = function (index, selectable) {\n        var row = $('<div/>')\n            .addClass(\"list_item\")\n            .addClass(\"row\");\n\n        var item = $(\"<div/>\")\n            .addClass(\"col-md-12\")\n            .appendTo(row);\n        \n        var checkbox;\n        if (selectable !== undefined) {\n            checkbox = $('<input/>')\n                .attr('type', 'checkbox')\n                .attr('title', i18n.msg._('Click here to rename, delete, etc.'))\n                .appendTo(item);\n        }\n\n        $('<i/>')\n            .addClass('item_icon')\n            .appendTo(item);\n\n        var link = $(\"<a/>\")\n            .addClass(\"item_link\")\n            .appendTo(item);\n\n        $(\"<span/>\")\n            .addClass(\"item_name\")\n            .appendTo(link);\n\n        $(\"<span/>\")\n            .addClass(\"file_size\")\n            .addClass(\"pull-right\")\n            .appendTo(item);\n\n        $(\"<span/>\")\n            .addClass(\"item_modified\")\n            .addClass(\"pull-right\")\n            .appendTo(item);\n\n        if (selectable === false) {\n            checkbox.css('visibility', 'hidden');\n        } else if (selectable === true) {\n            var that = this;\n            row.click(function(e) {\n                // toggle checkbox only if the click doesn't come from the checkbox or the link\n                if (!$(e.target).is('span[class=item_name]') && !$(e.target).is('input[type=checkbox]')) {\n                    checkbox.prop('checked', !checkbox.prop('checked'));\n                }\n                that._selection_changed();\n            });\n        }\n\n        var buttons = $('<div/>')\n            .addClass(\"item_buttons  pull-right\")\n            .appendTo(item);\n\n        $('<div/>')\n            .addClass('running-indicator')\n            .text(i18n.msg._('Running'))\n            .css('visibility', 'hidden')\n            .appendTo(buttons);\n\n        if (index === -1) {\n            this.element.append(row);\n        } else {\n            this.element.children().eq(index).after(row);\n        }\n        return row;\n    };\n\n\n    NotebookList.icons = {\n        directory: 'folder_icon',\n        notebook: 'notebook_icon',\n        file: 'file_icon'\n    };\n\n    NotebookList.uri_prefixes = {\n        directory: 'tree',\n        notebook: 'notebooks',\n        file: 'edit'\n    };\n\n    /**\n     * Select all items in the tree of specified type.\n     * selection_type : string among \"select-all\", \"select-folders\", \"select-notebooks\", \"select-running-notebooks\", \"select-files\"\n     *                  any other string (like \"select-none\") deselects all items\n     */\n    NotebookList.prototype.select = function(selection_type) {\n        var that = this;\n        $('.list_item').each(function(index, item) {\n            var item_type = $(item).data('type');\n            var state = false;\n            state = state || (selection_type === \"select-all\");\n            state = state || (selection_type === \"select-folders\" && item_type === 'directory');\n            state = state || (selection_type === \"select-notebooks\" && item_type === 'notebook');\n            state = state || (selection_type === \"select-running-notebooks\" && item_type === 'notebook' && that.sessions[$(item).data('path')] !== undefined);\n            state = state || (selection_type === \"select-files\" && item_type === 'file');\n            $(item).find('input[type=checkbox]').prop('checked', state);\n        });\n        this._selection_changed();\n    };\n\n    NotebookList.prototype._is_notebook = function(model) {\n      var ipynb_extensions = ['ipynb'];\n      return includes_extension(model.path, ipynb_extensions);\n    };\n    \n    NotebookList.prototype._is_editable = function(model) {\n      // Allow any file to be \"edited\"\n      // Non-text files will display the following error:\n      //   Error: [FILE] is not UTF-8 encoded\n      //   Saving is disabled.\n      //   See Console for more details.\n      return true;\n    };\n    \n    NotebookList.prototype._is_viewable = function(model) {\n      var html_types = ['htm', 'html', 'xhtml', 'xml', 'mht', 'mhtml'];\n      var media_extension = ['3gp', 'avi', 'mov', 'mp4', 'm4v', 'm4a', 'mp3', 'mkv', 'ogv', 'ogm', 'ogg', 'oga', 'webm', 'wav'];\n      var image_type = ['bmp', 'gif', 'jpg', 'jpeg', 'png', 'webp'];\n      var other_type = ['ico'];\n      var viewable_extensions = [].concat(html_types, media_extension, image_type, other_type);\n      return model.mimetype === 'text/html' \n        || includes_extension(model.path, viewable_extensions);\n    };\n    \n    // Files like PDF that should be opened using `/files` prefix\n    NotebookList.prototype._is_pdflike = function(model) {\n      var pdflike_extensions = ['pdf'];\n      return includes_extension(model.path, pdflike_extensions);\n    };\n\n    /**\n     * Handles when any row selector checkbox is toggled.\n     */\n    NotebookList.prototype._selection_changed = function() {\n        // Use a JQuery selector to find each row with a checked checkbox.  If\n        // we decide to add more checkboxes in the future, this code will need\n        // to be changed to distinguish which checkbox is the row selector.\n        var that = this;\n        var selected = [];\n        var has_running_notebook = false;\n        var has_directory = false;\n        var has_file = false;\n        var checked = 0;\n        $('.list_item :checked').each(function(index, item) {\n            var parent = $(item).parent().parent();\n\n            // If the item doesn't have an upload button, isn't the\n            // breadcrumbs and isn't the parent folder '..', then it can be selected.\n            // Breadcrumbs path == ''.\n            if (parent.find('.upload_button').length === 0 && parent.data('path') !== '' && parent.data('path') !== utils.url_path_split(that.notebook_path)[0]) {\n                checked++;\n                selected.push({\n                    name: parent.data('name'),\n                    path: parent.data('path'),\n                    type: parent.data('type')\n                });\n\n                // Set flags according to what is selected.  Flags are later\n                // used to decide which action buttons are visible.\n                has_running_notebook = has_running_notebook ||\n                    (parent.data('type') === 'notebook' && that.sessions[parent.data('path')] !== undefined);\n                has_file = has_file || (parent.data('type') === 'file');\n                has_directory = has_directory || (parent.data('type') === 'directory');\n            }\n        });\n        this.selected = selected;\n\n        // Rename is only visible when one item is selected, and it is not a running notebook\n        if (selected.length === 1 && !has_running_notebook) {\n            $('.rename-button').css('display', 'inline-block');\n        } else {\n            $('.rename-button').css('display', 'none');\n        }\n\n        // Move is visible if at least one item is selected, and none of them\n        // are a running notebook.\n        if (selected.length > 0 && !has_running_notebook) {\n            $('.move-button').css('display', 'inline-block');\n        } else {\n            $('.move-button').css('display', 'none');\n        }\n\n        // Download is only visible when one item is selected, and it is not a\n        // running notebook or a directory\n        // TODO(nhdaly): Add support for download multiple items at once.\n        if (selected.length === 1 && !has_running_notebook && !has_directory) {\n            $('.download-button').css('display', 'inline-block');\n        } else {\n            $('.download-button').css('display', 'none');\n        }\n\n        // Shutdown is only visible when one or more notebooks running notebooks\n        // are selected and no non-notebook items are selected.\n        if (has_running_notebook && !(has_file || has_directory)) {\n            $('.shutdown-button').css('display', 'inline-block');\n        } else {\n            $('.shutdown-button').css('display', 'none');\n        }\n\n        // Duplicate isn't visible when a directory is selected.\n        if (selected.length > 0 && !has_directory) {\n            $('.duplicate-button').css('display', 'inline-block');\n        } else {\n            $('.duplicate-button').css('display', 'none');\n        }\n\n        // Delete is visible if one or more items are selected.\n        if (selected.length > 0) {\n            $('.delete-button').css('display', 'inline-block');\n        } else {\n            $('.delete-button').css('display', 'none');\n        }\n\n        // View is visible in the following case:\n        //\n        //   - the item is editable\n        //   - it is not a notebook\n        //\n        // If it's not editable or unknown, the default action should be view\n        // already so no need to show the button.\n        // That should include things like, html, py, txt, json....\n        if (selected.length >= 1 && !has_directory) {\n            $('.view-button').css('display', 'inline-block');\n        } else {\n            $('.view-button').css('display', 'none');\n        }\n\n        // Edit is visible when an item is unknown, that is to say:\n        //    - not in the editable list\n        //    - not in the known non-editable list.\n        //    - not a notebook.\n        // Indeed if it's editable the default action is already to edit.\n        // And non editable files should not show edit button.\n        // for unknown we'll assume users know what they are doing.\n        if (selected.length >= 1 && !has_directory && selected.every(function(el) {\n            return that._is_editable(el);\n        })) {\n            $('.edit-button').css('display', 'inline-block');\n        } else {\n            $('.edit-button').css('display', 'none');\n        }\n\n        // If all of the items are selected, show the selector as checked.  If\n        // some of the items are selected, show it as checked.  Otherwise,\n        // uncheck it.\n        var total = 0;\n        $('.list_item input[type=checkbox]').each(function(index, item) {\n            var parent = $(item).parent().parent();\n            // If the item doesn't have an upload button and it's not the\n            // breadcrumbs, it can be selected.  Breadcrumbs path == ''.\n            if (parent.find('.upload_button').length === 0 && parent.data('path') !== '' && parent.data('path') !== utils.url_path_split(that.notebook_path)[0]) {\n                total++;\n            }\n        });\n\n        var select_all = $(\"#select-all\");\n        if (checked === 0) {\n            select_all.prop('checked', false);\n            select_all.prop('indeterminate', false);\n            select_all.data('indeterminate', false);\n        } else if (checked === total) {\n            select_all.prop('checked', true);\n            select_all.prop('indeterminate', false);\n            select_all.data('indeterminate', false);\n        } else {\n            select_all.prop('checked', false);\n            select_all.prop('indeterminate', true);\n            select_all.data('indeterminate', true);\n        }\n        // Update total counter\n        checked = bidi.applyBidi(checked);\n        $('#counter-select-all').html(checked===0 ? '&nbsp;' : checked);\n\n        // If at aleast on item is selected, hide the selection instructions.\n        if (checked > 0) {\n            $('.dynamic-instructions').hide();\n        } else {\n            $('.dynamic-instructions').show();\n        }\n    };\n\n    NotebookList.prototype.add_link = function (model, item) {\n        var that = this;\n        var running = (model.type === 'notebook' && this.sessions[model.path] !== undefined);\n        item.data('name',model.name);\n        item.data('path', model.path);\n        item.data('modified', model.last_modified);\n        item.data('type', model.type);\n        item.find(\".item_name\").text(bidi.applyBidi(model.name));\n        var icon = NotebookList.icons[model.type];\n        if (running) {\n            icon = 'running_' + icon;\n        }\n        var uri_prefix = NotebookList.uri_prefixes[model.type];\n        if (model.type === 'file' && this._is_viewable(model))\n        {\n            uri_prefix = 'view';\n        }\n        if (model.type === 'file' && this._is_pdflike(model))\n        {\n            uri_prefix = 'files';\n        }\n        if (model.type === 'file' && this._is_notebook(model))\n        {\n            uri_prefix = 'notebooks';\n        }\n\n        item.find(\".item_icon\").addClass(icon).addClass('icon-fixed-width');\n        var link = item.find(\"a.item_link\")\n            .attr('href',\n                utils.url_path_join(\n                    this.base_url,\n                    uri_prefix,\n                    utils.encode_uri_components(model.path)\n                )\n            );\n\n        item.find(\".item_buttons .running-indicator\").css('visibility', running ? '' : 'hidden');\n\n        // directory nav doesn't open new tabs\n        // files, notebooks do\n        if (model.type !== \"directory\") {\n            link.attr('target', IPython._target);\n        } else {\n            // Replace with a click handler that will use the History API to\n            // push a new route without reloading the page if the click is\n            // not modified (e.g., Ctrl-Click)\n            link.click(function (e) {\n                if(e.altKey || e.metaKey || e.shiftKey) {\n                    return true;\n                }\n                window.history.pushState({\n                    path: model.path\n                }, model.path, utils.url_path_join(\n                    that.base_url,\n                    'tree',\n                    utils.encode_uri_components(model.path)\n                ));\n                that.update_location(model.path);\n                return false;\n            });\n        }\n        \n        // Add in the date that the file was last modified\n        item.find(\".item_modified\").text(utils.format_datetime(model.last_modified));\n        item.find(\".item_modified\").attr(\"title\", moment(model.last_modified).format(\"YYYY-MM-DD HH:mm\"));\n\n        var filesize = utils.format_filesize(model.size);\n        item.find(\".file_size\").text(filesize || '\\xA0');\n    };\n\n\n    NotebookList.prototype.add_name_input = function (name, item, icon_type) {\n        item.data('name', name);\n        item.find(\".item_icon\").addClass(NotebookList.icons[icon_type]).addClass('icon-fixed-width');\n        item.find(\".item_name\").empty().append(\n            $('<input/>')\n            .addClass(\"filename_input\")\n            .attr('value', name)\n            .attr('size', '30')\n            .attr('type', 'text')\n            .keyup(function(event){\n                if(event.keyCode === 13){item.find('.upload_button').click();}\n                else if(event.keyCode === 27){item.remove();}\n            })\n        );\n    };\n\n\n    NotebookList.prototype.add_file_data = function (data, item) {\n        item.data('filedata', data);\n    };\n\n\n    NotebookList.prototype.shutdown_selected = function() {\n        var that = this;\n        this.selected.forEach(function(item) {\n            if (item.type === 'notebook') {\n                that.shutdown_notebook(item.path);\n            }\n        });\n        // Deselect items after successful shutdown.\n        that.select('select-none');\n    };\n\n    NotebookList.prototype.shutdown_notebook = function(path) {\n        var that = this;\n        var settings = {\n            processData : false,\n            cache : false,\n            type : \"DELETE\",\n            dataType : \"json\",\n            success : function () {\n                that.load_sessions();\n            },\n            error : utils.log_ajax_error\n        };\n\n        var session = this.sessions[path];\n        if (session) {\n            var url = utils.url_path_join(\n                this.base_url,\n                'api/sessions',\n                encodeURIComponent(session.id)\n            );\n            utils.ajax(url, settings);\n        }\n    };\n\n    NotebookList.prototype.rename_selected = function() {\n        if (this.selected.length !== 1){\n            return;\n        }\n\n        var that = this;\n        var item_path = this.selected[0].path;\n        var item_name = this.selected[0].name;\n        var item_type = this.selected[0].type;\n        var input = $('<input/>').attr('type','text').attr('size','25').addClass('form-control')\n            .val(item_name);\n        var rename_msg = function (type) {\n        \tswitch(type) {\n        \tcase 'file': return i18n.msg._(\"Enter a new file name:\");\n        \tcase 'directory': return i18n.msg._(\"Enter a new directory name:\");\n        \tcase 'notebook': return i18n.msg._(\"Enter a new notebook name:\");\n        \tdefault: return i18n.msg._(\"Enter a new name:\");\n        \t}\n        };\n        var rename_title = function (type) {\n           \tswitch(type) {\n           \tcase 'file': return i18n.msg._(\"Rename file\");\n           \tcase 'directory': return i18n.msg._(\"Rename directory\");\n           \tcase 'notebook': return i18n.msg._(\"Rename notebook\");\n           \tdefault: return i18n.msg._(\"Rename\");\n           \t}\n        };\n        var dialog_body = $('<div/>').append(\n            $(\"<p/>\").addClass(\"rename-message\")\n                .text(rename_msg(item_type))\n        ).append(\n            $(\"<br/>\")\n        ).append(input);\n        \n        // This statement is used simply so that message extraction\n        // will pick up the strings.  The actual setting of the text\n        // for the button is in dialog.js.\n        var button_labels = [ i18n.msg._(\"Cancel\"), i18n.msg._(\"Rename\"), i18n.msg._(\"OK\"), i18n.msg._(\"Move\")];\n\n        var d = dialog.modal({\n            title : rename_title(item_type),\n            body : dialog_body,\n            default_button: \"Cancel\",\n            buttons : {\n                Cancel: {},\n                Rename : {\n                    class: \"btn-primary\",\n                    click: function() {\n                        that.contents.rename(item_path, utils.url_path_join(that.notebook_path, input.val())).then(function() {\n                            that.load_list();\n                            // Deselect items after successful rename.\n                            that.select('select-none');\n                        }).catch(function(e) {\n                        \tvar template = i18n.msg._(\"An error occurred while renaming \\\"%1$s\\\" to \\\"%2$s\\\".\");\n                        \tvar failmsg = i18n.msg.sprintf(template,item_name,input.val());\n                            dialog.modal({\n                                title: i18n.msg._(\"Rename Failed\"),\n                                body: $('<div/>')\n                                    .text(failmsg)\n                                    .append($('<div/>')\n                                        .addClass('alert alert-danger')\n                                        .text(e.message || e)),\n                                buttons: {\n                                    OK: {'class': 'btn-primary'}\n                                }\n                            });\n                            console.warn('Error during renaming :', e);\n                        });\n                    }\n                }\n            },\n            open : function () {\n                // Upon ENTER, click the OK button.\n                input.keydown(function (event) {\n                    if (event.which === keyboard.keycodes.enter) {\n                        d.find('.btn-primary').first().click();\n                        return false;\n                    }\n                });\n                input.focus();\n                // Highlight the filename (up to the filetype suffix) in the input field.\n                if (input.val().indexOf(\".\") > 0) {\n                    input[0].setSelectionRange(0,input.val().indexOf(\".\"));\n                } else {\n                    input.select();\n                }\n            }\n        });\n    };\n\n    NotebookList.prototype.move_selected = function() {\n        var that = this;\n        var selected = that.selected.slice(); // Don't let that.selected change out from under us\n        var num_items = selected.length;\n\n        // Can move one or more selected items.\n        if (!(num_items >= 1)) {\n            return;\n        }\n\n        // Open a dialog to enter the new path, with current path as default.\n        var input = $('<input/>').attr('type','text').attr('size','25').addClass('form-control')\n            .val(utils.url_path_join('/', that.notebook_path));\n        var dialog_body = $('<div/>').append(\n            $(\"<p/>\").addClass(\"rename-message\")\n                .text(i18n.msg.sprintf(i18n.msg.ngettext(\"Enter a new destination directory path for this item:\",\n                \t\t\t\t\t\"Enter a new destination directory path for these %d items:\", num_items),num_items))\n        ).append(\n            $(\"<br/>\")\n        ).append(\n            $(\"<div/>\").append(\n                // $(\"<i/>\").addClass(\"fa fa-folder\").addClass(\"server-root\")\n                $(\"<span/>\").text(utils.get_body_data(\"serverRoot\")).addClass(\"server-root\")\n            ).append(\n              input.addClass(\"path-input\")\n            ).addClass(\"move-path\")\n        );\n        var d = dialog.modal({\n            title : i18n.msg.sprintf(i18n.msg.ngettext(\"Move an Item\",\"Move %d Items\",num_items),num_items),\n            body : dialog_body,\n            default_button: \"Cancel\",\n            buttons : {\n                Cancel : {},\n                Move : {\n                    class: \"btn-primary\",\n                    click: function() {\n                        // Move all the items.\n                        selected.forEach(function(item) {\n                            var item_path = item.path;\n                            var item_name = item.name;\n                            // Construct the new path using the user input and the item's name.\n                            var new_path = utils.url_path_join(input.val(), item_name);\n                            that.contents.rename(item_path, new_path).then(function() {\n                                // After each move finishes, reload the list.\n                                that.load_list();\n                            }).catch(function(e) {\n                                // If any of the moves fails, show this dialog for that move.\n                            \tvar failmsg = i18n.msg._(\"An error occurred while moving \\\"%1$s\\\" from \\\"%2$s\\\" to \\\"%3$s\\\".\");\n                                dialog.modal({\n                                    title: i18n.msg._(\"Move Failed\"),\n                                    body: $('<div/>')\n                                        .text(i18n.msg.sprintf(failmsg,item_name,item_path,new_path))\n                                        .append($('<div/>')\n                                            .addClass('alert alert-danger')\n                                            .text(e.message || e)),\n                                    buttons: {\n                                        OK: {'class': 'btn-primary'}\n                                    }\n                                });\n                                console.warn('Error during moving :', e);\n                            });\n                        });  // End of forEach.\n                    }\n                }\n            },\n            // TODO: Consider adding fancier UI per Issue #941.\n            open : function () {\n                // Upon ENTER, click the OK button.\n                input.keydown(function (event) {\n                    if (event.which === keyboard.keycodes.enter) {\n                        d.find('.btn-primary').first().click();\n                        return false;\n                    }\n                });\n                // Put the cursor at the end of the input.\n                input.focus();\n            }\n        });\n    };\n\n    NotebookList.prototype.download_selected = function() {\n        var that = this;\n\n        // TODO(nhdaly): Support download multiple items at once.\n        if (that.selected.length !== 1){\n            return;\n        }\n\n        var item_path = that.selected[0].path;\n\n        window.open(utils.url_path_join(that.base_url, 'files', utils.encode_uri_components(item_path)) + '?download=1', IPython._target);\n    };\n\n    NotebookList.prototype.delete_selected = function() {\n        var selected = this.selected.slice(); // Don't let that.selected change out from under us\n        var template = i18n.msg.ngettext(\"Are you sure you want to permanently delete: \\\"%s\\\"?\",\n        \t\t\t\t\t\t\"Are you sure you want to permanently delete the %d files or folders selected?\",\n        \t\t\t\t\t\tselected.length);\n        var delete_msg;\n        if (selected.length === 1) {\n            delete_msg = i18n.msg.sprintf(template, selected[0].name);\n        } else {\n            delete_msg = i18n.msg.sprintf(template, selected.length);\n        }\n        var that = this;\n        dialog.modal({\n            title : i18n.msg._(\"Delete\"),\n            body : delete_msg,\n            default_button: \"Cancel\",\n            buttons : {\n                Cancel: {},\n                Delete : {\n                    class: \"btn-danger\",\n                    click: function() {\n                        // Shutdown any/all selected notebooks before deleting\n                        // the files.\n                        that.shutdown_selected();\n\n                        // Delete selected.\n                        selected.forEach(function(item) {\n                            that.contents.delete(item.path).then(function() {\n                                    that.notebook_deleted(item.path);\n                            }).catch(function(e) {\n                            \tvar failmsg = i18n.msg._(\"An error occurred while deleting \\\"%s\\\".\");\n                                dialog.modal({\n                                    title: i18n.msg._(\"Delete Failed\"),\n                                    body: $('<div/>')\n                                        .text(i18n.msg.sprintf(failmsg, item.path))\n                                        .append($('<div/>')\n                                            .addClass('alert alert-danger')\n                                            .text(e.message || e)),\n                                    buttons: {\n                                        OK: {'class': 'btn-primary'}\n                                    }\n                                });\n                                console.warn('Error during content deletion:', e);\n                            });\n                        });\n                    }\n                }\n            }\n        });\n    };\n\n    NotebookList.prototype.view_selected = function() {\n        var that = this;\n        that.selected.forEach(function(item) {\n            var item_path = utils.encode_uri_components(item.path);\n            var item_type = that._is_notebook(item) ? 'notebooks' : that._is_viewable(item) ? 'view' : 'files';\n            window.open(utils.url_path_join(that.base_url, item_type, item_path), IPython._target);\n      \t});\n    };\n\n    NotebookList.prototype.edit_selected = function() {\n        var that = this;\n        that.selected.forEach(function(item) {\n            var item_path = utils.encode_uri_components(item.path);\n            window.open(utils.url_path_join(that.base_url, 'edit', item_path), IPython._target);\n      \t});\n    };\n\n    NotebookList.prototype.duplicate_selected = function() {\n        var selected = this.selected.slice(); // Don't let that.selected change out from under us\n    \tvar template = i18n.msg.ngettext(\"Are you sure you want to duplicate: \\\"%s\\\"?\",\n\t\t\t\t\"Are you sure you want to duplicate the %d files selected?\",selected.length);\n    \tvar dup_msg;\n        if (selected.length === 1) {\n            dup_msg = i18n.msg.sprintf(template,selected[0].name);\n        } else {\n            dup_msg = i18n.msg.sprintf(template,selected.length);\n        }\n        var that = this;\n        dialog.modal({\n            title : i18n.msg._(\"Duplicate\"),\n            body : dup_msg,\n            default_button: \"Cancel\",\n            buttons : {\n                Cancel: {},\n                Duplicate : {\n                    class: \"btn-primary\",\n                    click: function() {\n                        selected.forEach(function(item) {\n                            that.contents.copy(item.path, that.notebook_path).then(function () {\n                                that.load_list();\n                                // Deselect items after successful duplication.\n                                that.select('select-none');\n                            }).catch(function(e) {\n                            \tvar failmsg = i18n.msg._(\"An error occurred while duplicating \\\"%s\\\".\");\n                                dialog.modal({\n                                    title: i18n.msg._(\"Duplicate Failed\"),\n                                    body: $('<div/>')\n                                        .text(i18n.msg.sprintf(failmsg,item.path))\n                                        .append($('<div/>')\n                                            .addClass('alert alert-danger')\n                                            .text(e.message || e)),\n                                    buttons: {\n                                        OK: {'class': 'btn-primary'}\n                                    }\n                                });\n                                console.warn('Error during content duplication', e);\n                            });\n                        });\n                    }\n                }\n            }\n        });\n    };\n\n    NotebookList.prototype.notebook_deleted = function(path) {\n        /**\n         * Remove the deleted notebook.\n         */\n        var that = this;\n        $(\".list_item\").each(function() {\n            var element = $(this);\n            if (element.data(\"path\") === path) {\n                element.remove();\n                events.trigger('notebook_deleted.NotebookList');\n                that._selection_changed();\n            }\n        });\n    };\n\n    // Add a new class for large file upload\n    NotebookList.prototype.add_large_file_upload_button = function (file) {\n        var that = this;\n        var item = that.new_item(0, true);\n        var stop_signal = false;\n        item.addClass('new-file');\n        that.add_name_input(file.name, item, 'file');\n        var cancel_button = $('<button/>').text(\"Cancel\")\n            .addClass(\"btn btn-default btn-xs\")\n            .click(function (e) {\n                item.remove();\n                stop_signal = true;\n                return false;\n            });\n\n        var upload_button = $('<button/>').text(\"Upload\")\n            .addClass('btn btn-primary btn-xs upload_button')\n            .click(function (e) {\n                var filename = item.find('.item_name > input').val();\n                var path = utils.url_path_join(that.notebook_path, filename);\n                var format = 'text';\n                if (filename.length === 0 || filename[0] === '.') {\n                    dialog.modal({\n                        title : 'Invalid file name',\n                        body : \"File names must be at least one character and not start with a dot\",\n                        buttons : {'OK' : { 'class' : 'btn-primary' }}\n                    });\n                    return false;\n                }\n                \n                var check_exist = function () {\n                    var exists = false;\n                    $.each(that.element.find('.list_item:not(.new-file)'), function(k,v){\n                    if ($(v).data('name') === filename) { exists = true; return false; }\n                    });\n                    return exists\n                };\n                var exists = check_exist();\n                \n                var add_uploading_button = function (f, item) {\n                    // change buttons, add a progress bar\n                    var uploading_button = item.find('.upload_button').text(\"Uploading\");\n                    uploading_button.off('click');  // Prevent double upload\n                    var progress_bar = $('<span/>')\n                        .addClass('progress-bar')\n                        .css('top', '0')\n                        .css('left', '0')\n                        .css('width', '0')\n                        .css('height', '3px')\n                        .css('border-radius', '0 0 0 0')\n                        .css('display', 'inline-block')\n                        .css('position', 'absolute');\n\n                    var parse_large_file = function (f, item) {\n                        // codes inspired by https://stackoverflow.com/a/28318964\n                        var chunk_size = 1024 * 1024;\n                        var offset = 0;\n                        var chunk = 0;\n                        var chunk_reader = null;\n                        \n                        var large_reader_onload = function (event) {\n                            if (stop_signal === true) {\n                                return;\n                            }\n                            if (event.target.error == null) {\n                                offset += chunk_size;\n                                if (offset >= f.size) {\n                                    chunk = -1;\n                                } else {\n                                    chunk += 1;\n                                }\n                                // callback for handling reading: reader_onload in add_upload_button\n                                var item = $(event.target).data('item');\n                                that.add_file_data(event.target.result, item);\n                                upload_file(item, chunk);  // Do the upload\n                            } else {\n                                console.log(\"Read error: \" + event.target.error);\n                            }\n                        };\n                        var on_error = function (event) {\n                            var item = $(event.target).data('item');\n                            var name = item.data('name');\n                            item.remove();\n                            var _exists = check_exist();\n                            if (_exists) {\n                                that.contents.delete(path);\n                            }\n                            dialog.modal({\n                                title : 'Failed to read file',\n                                body : \"Failed to read file '\" + name + \"'\",\n                                buttons : {'OK' : { 'class' : 'btn-primary' }}\n                            });\n                        };\n\n                        chunk_reader = function (_offset, _f) {\n                            var reader = new FileReader();\n                            var blob = _f.slice(_offset, chunk_size + _offset);\n                            // Load everything as ArrayBuffer\n                            reader.readAsArrayBuffer(blob);\n                            // Store the list item in the reader so we can use it later\n                            // to know which item it belongs to.\n                            $(reader).data('item', item);\n                            reader.onload = large_reader_onload;\n                            reader.onerror = on_error;\n                        };\n\n                        // These codes to upload file in original class\n                        var upload_file = function(item, chunk) {\n                            var filedata = item.data('filedata');\n                            if (filedata instanceof ArrayBuffer) {\n                                // base64-encode binary file data\n                                var bytes = '';\n                                var buf = new Uint8Array(filedata);\n                                var nbytes = buf.byteLength;\n                                for (var i=0; i<nbytes; i++) {\n                                    bytes += String.fromCharCode(buf[i]);\n                                }\n                                filedata = btoa(bytes);\n                                format = 'base64';\n                            }\n                            var model = { name: filename, path: path };\n\n                            var name_and_ext = utils.splitext(filename);\n                            var file_ext = name_and_ext[1];\n                            var content_type;\n                            // Treat everything as generic file\n                            model.type = 'file';\n                            model.format = format;\n                            content_type = 'application/octet-stream';\n\n                            model.chunk = chunk;\n                            model.content = filedata;\n                            \n                            var on_success = function () {\n                                if (offset < f.size) {\n                                    // of to the next chunk\n                                    chunk_reader(offset, f);\n                                    // change progress bar and progress button\n                                    var progress = offset / f.size * 100;\n                                    progress = progress > 100 ? 100 : progress;\n                                    uploading_button.text(progress.toFixed(0)+'%');\n                                    progress_bar.css('width', progress+'%')\n                                        .attr('aria-valuenow', progress.toString());\n                                } else {\n                                    item.removeClass('new-file');\n                                    that.add_link(model, item);\n                                    that.session_list.load_sessions();\n                                }\n                            };\n                            that.contents.save(path, model).then(on_success, on_error);\n                        };\n\n                        // now let's start the read with the first block\n                        chunk_reader(offset, f);\n                    };\n                    item.find('.item_buttons')\n                        .append(progress_bar);\n                    parse_large_file(f, item);\n                };\n                if (exists) {\n                    dialog.modal({\n                        title : \"Replace file\",\n                        body : 'There is already a file named ' + filename + ', do you want to replace it?',\n                        default_button: \"Cancel\",\n                        buttons : {\n                            Overwrite : {\n                                class: \"btn-danger\",\n                                click: function () {\n                                    add_uploading_button(file, item);\n                                }\n                            },\n                            Cancel : {\n                                click: function() { item.remove(); }\n                            }\n                        }\n                    });\n                } else {\n                    add_uploading_button(file, item);\n                }\n\n                return false;\n            });\n        item.find(\".item_buttons\").empty()\n            .append(upload_button)\n            .append(cancel_button);\n    };\n\n    NotebookList.prototype.add_upload_button = function (item) {\n        var that = this;\n        var upload_button = $('<button/>').text(i18n.msg._(\"Upload\"))\n            .addClass('btn btn-primary btn-xs upload_button')\n            .click(function (e) {\n                var filename = item.find('.item_name > input').val();\n                var path = utils.url_path_join(that.notebook_path, filename);\n                var filedata = item.data('filedata');\n                var format = 'text';\n                if (filename.length === 0 || filename[0] === '.') {\n                    dialog.modal({\n                        title : i18n.msg._('Invalid file name'),\n                        body : i18n.msg._(\"File names must be at least one character and not start with a period\"),\n                        buttons : {'OK' : { 'class' : 'btn-primary' }}\n                    });\n                    return false;\n                }\n                if (filedata instanceof ArrayBuffer) {\n                    // base64-encode binary file data\n                    var bytes = '';\n                    var buf = new Uint8Array(filedata);\n                    var nbytes = buf.byteLength;\n                    for (var i=0; i<nbytes; i++) {\n                        bytes += String.fromCharCode(buf[i]);\n                    }\n                    filedata = btoa(bytes);\n                    format = 'base64';\n                }\n                var model = { name: filename, path: path };\n\n                var name_and_ext = utils.splitext(filename);\n                var file_ext = name_and_ext[1];\n                var content_type;\n                if (file_ext === '.ipynb') {\n                    model.type = 'notebook';\n                    model.format = 'json';\n                    try {\n                        model.content = JSON.parse(filedata);\n                    } catch (e) {\n                    \tvar failbody = i18n.msg._(\"The error was: %s\");\n                        dialog.modal({\n                            title : i18n.msg._('Cannot upload invalid Notebook'),\n                            body : i18n.msg.sprintf(failbody,e),\n                            buttons : {'OK' : {\n                                'class' : 'btn-primary',\n                                click: function () {\n                                    item.remove();\n                                }\n                            }}\n                        });\n                        console.warn('Error during notebook uploading', e);\n                        return false;\n                    }\n                    content_type = 'application/json';\n                } else {\n                    model.type = 'file';\n                    model.format = format;\n                    model.content = filedata;\n                    content_type = 'application/octet-stream';\n                }\n\n                var on_success = function () {\n                    item.removeClass('new-file');\n                    that.add_link(model, item);\n                    that.session_list.load_sessions();\n                };\n\n                var exists = false;\n                $.each(that.element.find('.list_item:not(.new-file)'), function(k,v){\n                    if ($(v).data('name') === filename) { exists = true; return false; }\n                });\n\n                if (exists) {\n                \tvar body = i18n.msg._(\"There is already a file named \\\"%s\\\". Do you want to replace it?\");\n                    dialog.modal({\n                        title : i18n.msg._(\"Replace file\"),\n                        body : i18n.msg.sprintf(body,filename),\n                        default_button: \"Cancel\",\n                        buttons : {\n                            Cancel : {\n                                click: function() { item.remove(); }\n                            },\n                            Overwrite : {\n                                class: \"btn-danger\",\n                                click: function () {\n                                    that.contents.save(path, model).then(on_success);\n                                }\n                            }\n                        }\n                    });\n                } else {\n                    that.contents.save(path, model).then(on_success);\n                }\n\n                return false;\n            });\n        var cancel_button = $('<button/>').text(i18n.msg._(\"Cancel\"))\n            .addClass(\"btn btn-default btn-xs\")\n            .click(function (e) {\n                item.remove();\n                return false;\n            });\n        item.find(\".item_buttons\").empty()\n            .append(upload_button)\n            .append(cancel_button);\n    };\n\n    return {'NotebookList': NotebookList};\n});\n", "code_before": "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\ndefine([\n    'jquery',\n    'base/js/namespace',\n    'base/js/utils',\n    'base/js/i18n',\n    'base/js/dialog',\n    'base/js/events',\n    'base/js/keyboard',\n    'moment',\n    'bidi/bidi'\n], function($, IPython, utils, i18n, dialog, events, keyboard, moment, bidi) {\n    \"use strict\";\n\n    var extension = function(path){\n      /**\n       *  return the last pat after the dot in a filepath\n       *  or the filepath itself if no dots present.\n       *  Empty string if the filepath ends with a dot.\n       **/\n      var parts = path.split('.');\n      return parts[parts.length-1];\n    };\n\n    var item_in = function(item, list) {\n      // Normalize list and item to lowercase\n      var normalized_list = list.map(function(_item) {\n        return _item.toLowerCase();\n      });\n      return normalized_list.indexOf(item.toLowerCase()) !== -1;\n    };\n\n    var includes_extension = function(filepath, extensionslist) {\n      return item_in(extension(filepath), extensionslist);\n    };\n\n    function name_sorter(ascending) {\n        return (function(a, b) {\n            if (type_order[a['type']] < type_order[b['type']]) {\n                return -1;\n            }\n            if (type_order[a['type']] > type_order[b['type']]) {\n                return 1;\n            }\n            if (a['name'].toLowerCase() < b['name'].toLowerCase()) {\n                return (ascending) ? -1 : 1;\n            }\n            if (a['name'].toLowerCase() > b['name'].toLowerCase()) {\n                return (ascending) ? 1 : -1;\n            }\n            return 0;\n        });\n    }\n\n    function modified_sorter(ascending) {\n        var order = ascending ? 1 : 0;\n        return (function(a, b) {\n            return utils.datetime_sort_helper(a.last_modified, b.last_modified,\n                                              order)\n        });\n    }\n\n    function size_sorter(ascending) {\n        var order = ascending ? 1 : 0;\n        // directories have file size of undefined\n        return (function(a, b) {\n          if (a.size === undefined) {\n             return (ascending) ? -1 : 1;\n          }\n\n          if (b.size === undefined) {\n             return (ascending) ? 1 : -1;\n          }\n\n          if (a.size > b.size) {\n            return (ascending) ? -1 : 1;\n          }\n\n          if (b.size > a.size) {\n            return (ascending) ? 1 : -1;\n          }\n\n          return 0;\n        });\n    }\n\n    var sort_functions = {\n        'sort-name': name_sorter,\n        'last-modified': modified_sorter,\n        'file-size': size_sorter\n    };\n\n    var NotebookList = function (selector, options) {\n        /**\n         * Constructor\n         *\n         * Parameters:\n         *  selector: string\n         *  options: dictionary\n         *      Dictionary of keyword arguments.\n         *          session_list: SessionList instance\n         *          element_name: string\n         *          base_url: string\n         *          notebook_path: string\n         *          contents: Contents instance\n         */\n        var that = this;\n        this.session_list = options.session_list;\n        this.events = this.session_list.events;\n        // allow code re-use by just changing element_name in kernellist.js\n        this.element_name = options.element_name || 'notebook';\n        this.selector = selector;\n        if (this.selector !== undefined) {\n            this.element = $(selector);\n            this.style();\n            this.bind_events();\n        }\n        this.notebooks_list = [];\n        this.sessions = {};\n        this.base_url = options.base_url || utils.get_body_data(\"baseUrl\");\n        this.notebook_path = options.notebook_path || utils.get_body_data(\"notebookPath\");\n        this.initial_notebook_path = this.notebook_path;\n        this.contents = options.contents;\n        if (this.session_list && this.session_list.events) {\n            this.session_list.events.on('sessions_loaded.Dashboard',\n                function(e, d) { that.sessions_loaded(d); });\n        }\n        this.selected = [];\n        this.sort_function = name_sorter(1);\n        // 0 => descending, 1 => ascending\n        this.sort_id = 'sort-name';\n        this.sort_direction = 1;\n        this._max_upload_size_mb = 25;\n        this.EDIT_MIMETYPES = [\n          'application/javascript',\n          'application/x-sh',\n          'application/vnd.groove-tool-template'\n        ];\n    };\n\n    NotebookList.prototype.style = function () {\n        var prefix = '#' + this.element_name;\n        $(prefix + '_toolbar').addClass('list_toolbar');\n        $(prefix + '_list_info').addClass('toolbar_info');\n        $(prefix + '_buttons').addClass('toolbar_buttons');\n        $(prefix + '_list_header').addClass('list_header');\n        this.element.addClass(\"list_container\");\n    };\n\n    NotebookList.prototype.bind_events = function () {\n        var that = this;\n        $('#refresh_' + this.element_name + '_list').click(function () {\n            that.load_sessions();\n        });\n        this.element.bind('dragover', function () {\n            return false;\n        });\n        this.element.bind('drop', function(event){\n            that.handleFilesUpload(event,'drop');\n            return false;\n        });\n\n        // Bind events for singleton controls.\n        if (!NotebookList._bound_singletons) {\n            NotebookList._bound_singletons = true;\n            $('#new-file').click(function(e) {\n                var w = window.open('', IPython._target);\n                that.contents.new_untitled(that.notebook_path || '', {type: 'file', ext: '.txt'}).then(function(data) {\n                    w.location = utils.url_path_join(\n                        that.base_url, 'edit',\n                        utils.encode_uri_components(data.path)\n                    );\n                }).catch(function (e) {\n                    w.close();\n                    dialog.modal({\n                        title: i18n.msg._('Creating File Failed'),\n                        body: $('<div/>')\n                            .text(i18n.msg._(\"An error occurred while creating a new file.\"))\n                            .append($('<div/>')\n                                .addClass('alert alert-danger')\n                                .text(e.message || e)),\n                        buttons: {\n                            OK: {'class': 'btn-primary'}\n                        }\n                    });\n                    console.warn('Error during New file creation', e);\n                });\n                that.load_sessions();\n                e.preventDefault();\n            });\n            $('#new-folder').click(function(e) {\n                that.contents.new_untitled(that.notebook_path || '', {type: 'directory'})\n                .then(function(){\n                    that.load_list();\n                }).catch(function (e) {\n                    dialog.modal({\n                        title: i18n.msg._('Creating Folder Failed'),\n                        body: $('<div/>')\n                            .text(i18n.msg._(\"An error occurred while creating a new folder.\"))\n                            .append($('<div/>')\n                                .addClass('alert alert-danger')\n                                .text(e.message || e)),\n                        buttons: {\n                            OK: {'class': 'btn-primary'}\n                        }\n                    });\n                    console.warn('Error during New directory creation', e);\n                });\n                that.load_sessions();\n                e.preventDefault();\n            });\n\n            // Bind events for action buttons.\n            $('.rename-button').click($.proxy(this.rename_selected, this));\n            $('.move-button').click($.proxy(this.move_selected, this));\n            $('.download-button').click($.proxy(this.download_selected, this));\n            $('.shutdown-button').click($.proxy(this.shutdown_selected, this));\n            $('.duplicate-button').click($.proxy(this.duplicate_selected, this));\n            $('.view-button').click($.proxy(this.view_selected, this));\n            $('.edit-button').click($.proxy(this.edit_selected, this));\n            $('.delete-button').click($.proxy(this.delete_selected, this));\n\n            // Bind events for selection menu buttons.\n            $('#selector-menu').click(function (event) {\n                that.select($(event.target).attr('id'));\n            });\n            var select_all = $('#select-all');\n            select_all.change(function () {\n                if (!select_all.prop('checked') || select_all.data('indeterminate')) {\n                    that.select('select-none');\n                } else {\n                    that.select('select-all');\n                }\n            });\n            $('#button-select-all').click(function (e) {\n                // toggle checkbox if the click doesn't come from the checkbox already\n                if (!$(e.target).is('input[type=checkbox]')) {\n                    if (select_all.prop('checked') || select_all.data('indeterminate')) {\n                        that.select('select-none');\n                    } else {\n                        that.select('select-all');\n                    }\n                }\n            });\n\n            $('.sort-action').click(function(e) {\n                var sort_on = e.target.id;\n\n                // Clear sort indications in UI\n                $(\".sort-action i\").removeClass(\"fa-arrow-up\").removeClass(\"fa-arrow-down\");\n\n                if ((that.sort_id === sort_on) && (that.sort_direction === 1)) {\n                    that.sort_list(sort_on, 0);\n                    $(\"#\" + sort_on + \" i\").addClass(\"fa-arrow-up\");\n                    that.sort_direction = 0;\n                } else {\n                    that.sort_list(sort_on, 1);\n                    $(\"#\" + sort_on + \" i\").addClass(\"fa-arrow-down\");\n                    that.sort_direction = 1;\n                }\n                that.sort_id = sort_on;\n            });\n        }\n    };\n\n    NotebookList.prototype.sort_list = function(id, order) {\n        if (sort_functions.hasOwnProperty(id)) {\n            this.sort_function = sort_functions[id](order);\n            this.draw_notebook_list(this.model_list, this.error_msg);\n        } else {\n            console.error(\"No such sort id: '\" + id + \"'\")\n        }\n    };\n\n    NotebookList.prototype.handleFilesUpload =  function(event, dropOrForm) {\n        var that = this;\n        var files;\n        if(dropOrForm === 'drop'){\n            files = event.originalEvent.dataTransfer.files;\n        } else  {\n            files = event.originalEvent.target.files;\n        }\n\n        var reader_onload = function (event) {\n            var item = $(event.target).data('item');\n            that.add_file_data(event.target.result, item);\n            that.add_upload_button(item);\n        };\n        var reader_onerror = function (event) {\n            var item = $(event.target).data('item');\n            var name = item.data('name');\n            item.remove();\n            dialog.modal({\n                title : i18n.msg._('Failed to read file'),\n                body : i18n.msg.sprintf(i18n.msg._(\"Failed to read file %s\"),name),\n                buttons : {'OK' : { 'class' : 'btn-primary' }}\n            });\n        };\n\n        Array.from(files).forEach(function(f) {\n            var name_and_ext = utils.splitext(f.name);\n            var file_ext = name_and_ext[1];\n\n            if (f.size > that._max_upload_size_mb * 1024 * 1024) {\n            \tvar body_msg = i18n.msg.sprintf(i18n.msg._(\"The file size is %d MB. Do you still want to upload it?\"),\n            \t\t\tMath.round(f.size / (1024 * 1024)));\n                dialog.modal({\n                    title : i18n.msg._('Large file size warning'),\n                    body : body_msg,\n                    buttons : {\n                        Cancel: {},\n                        Ok: {\n                            class: \"btn-primary\",\n                            click: function() {\n                                that.add_large_file_upload_button(f);\n                            }\n                        }\n                    }\n                });\n            }\n            else{\n                var reader = new FileReader();\n                if (file_ext === '.ipynb') {\n                    reader.readAsText(f);\n                } else {\n                    // read non-notebook files as binary\n                    reader.readAsArrayBuffer(f);\n                }\n                var item = that.new_item(0, true);\n                item.addClass('new-file');\n                that.add_name_input(f.name, item, file_ext === '.ipynb' ? 'notebook' : 'file');\n                // Store the list item in the reader so we can use it later\n                // to know which item it belongs to.\n                $(reader).data('item', item);\n                reader.onload = reader_onload;\n                reader.onerror = reader_onerror;\n            }\n        });\n        // Clear fileinput value. This is required to\n        // reset the form. Otherwise, if you upload a file, delete it and try to\n        // upload it again, the changed event won't fire.\n        var form = $('input.fileinput');\n        form.val('');\n        return false;\n    };\n\n    NotebookList.prototype.clear_list = function (remove_uploads) {\n        /**\n         * Clears the navigation tree.\n         *\n         * Parameters\n         * remove_uploads: bool=False\n         *      Should upload prompts also be removed from the tree.\n         */\n        if (remove_uploads) {\n            this.element.children('.list_item').remove();\n        } else {\n            this.element.children('.list_item:not(.new-file)').remove();\n        }\n    };\n\n    NotebookList.prototype.load_sessions = function(){\n        this.session_list.load_sessions();\n    };\n\n\n    NotebookList.prototype.sessions_loaded = function(data){\n        this.sessions = data;\n        this.load_list();\n    };\n\n    NotebookList.prototype.load_list = function () {\n        var that = this;\n        // Add an event handler browser back and forward events\n        window.onpopstate = function(e) {\n            var path = (window.history.state && window.history.state.path) ?\n                    window.history.state.path : that.initial_notebook_path;\n            that.update_location(path);\n        };\n        var breadcrumb = $('.breadcrumb');\n        breadcrumb.empty();\n        var list_item = $('<li/>');\n        var root_url = utils.url_path_join(that.base_url, '/tree');\n        var root = $('<li/>').append(\n            $(\"<a/>\")\n            .attr('href', root_url)\n            .append(\n                $(\"<i/>\")\n                .addClass('fa fa-folder')\n            )\n            .click(function(e) {\n                // Allow the default browser action when the user holds a modifier (e.g., Ctrl-Click)\n                if(e.altKey || e.metaKey || e.shiftKey) {\n                    return true;\n                }\n                var path = '';\n                window.history.pushState(\n                    {path: path},\n                    'Home',\n                    utils.url_path_join(that.base_url, 'tree')\n                );\n                that.update_location(path);\n                return false;\n            })\n        );\n        breadcrumb.append(root);\n        var path_parts = [];\n        this.notebook_path.split('/').forEach(function(path_part) {\n            path_parts.push(path_part);\n            var path = path_parts.join('/');\n            var url = utils.url_path_join(\n                that.base_url,\n                '/tree',\n                utils.encode_uri_components(path)\n            );\n            var crumb = $('<li/>').append(\n                $('<a/>')\n                .attr('href', url)\n                .text(path_part)\n                .click(function(e) {\n                    // Allow the default browser action when the user holds a modifier (e.g., Ctrl-Click)\n                    if(e.altKey || e.metaKey || e.shiftKey) {\n                        return true;\n                    }\n                    window.history.pushState(\n                        {path: path},\n                        path,\n                        url\n                    );\n                    that.update_location(path);\n                    return false;\n                })\n            );\n            breadcrumb.append(crumb);\n        });\n        this.contents.list_contents(that.notebook_path).then(\n            $.proxy(this.draw_notebook_list, this),\n            function(error) {\n                that.draw_notebook_list({content: []}, i18n.msg._(\"Server error: \") + error.message);\n            }\n        );\n    };\n    \n    NotebookList.prototype.update_location = function (path) {\n        this.notebook_path = path;\n        $('body').attr('data-notebook-path', path);\n        // Update the file tree list without reloading the page\n        this.load_list();\n        // Update the page title so the browser tab reflects it\n        // Match how the title appears with a trailing slash or\n        // \"Home\" if the page loads from the server.\n        $('title').text(path ? path+'/' : i18n.msg._(\"Home\"));\n    };\n\n    /**\n     * Draw the list of notebooks\n     * @method draw_notebook_list\n     * @param {Array} list An array of dictionaries representing files or\n     *     directories.\n     * @param {String} error_msg An error message\n     */\n\n\n    var type_order = {'directory':0,'notebook':1,'file':2};\n\n    NotebookList.prototype.draw_notebook_list = function (list, error_msg) {\n        // Remember what was selected before the refresh.\n        var selected_before = this.selected;\n\n        // Store the data to be redrawn by sorting\n        this.model_list = list;\n        this.error_msg = error_msg;\n\n        list.content.sort(this.sort_function);\n        var message = error_msg || i18n.msg._('The notebook list is empty.');\n        var item = null;\n        var model = null;\n        var len = list.content.length;\n        this.clear_list();\n        var n_uploads = this.element.children('.list_item').length;\n        if (len === 0) {\n            item = this.new_item(0);\n            var span12 = item.children().first();\n            span12.empty();\n            span12.append($('<div style=\"margin:auto;text-align:center;color:grey\"/>').text(message));\n        }\n        var path = this.notebook_path;\n        var offset = n_uploads;\n        if (path !== '') {\n            item = this.new_item(offset, false);\n            model = {\n                type: 'directory',\n                name: '..',\n                path: utils.url_path_split(path)[0]\n            };\n            this.add_link(model, item);\n            offset += 1;\n        }\n        for (var i=0; i<len; i++) {\n            model = list.content[i];\n            item = this.new_item(i+offset, true);\n            try {\n                this.add_link(model, item);\n            } catch(err) {\n                console.log('Error adding link: ' + err);\n            }\n        }\n        // Trigger an event when we've finished drawing the notebook list.\n        events.trigger('draw_notebook_list.NotebookList');\n\n        // Reselect the items that were selected before.  Notify listeners\n        // that the selected items may have changed.  O(n^2) operation.\n        selected_before.forEach(function(item) {\n            var list_items = $('.list_item');\n            for (var i=0; i<list_items.length; i++) {\n                var $list_item = $(list_items[i]);\n                if ($list_item.data('path') === item.path) {\n                    $list_item.find('input[type=checkbox]').prop('checked', true);\n                    break;\n                }\n            }\n        });\n        this._selection_changed();\n    };\n\n\n    /**\n     * Creates a new item.\n     * @param  {integer} index\n     * @param  {boolean} [selectable] - tristate, undefined: don't draw checkbox,\n     *                                  false: don't draw checkbox but pad\n     *                                  where it should be, true: draw checkbox.\n     * @return {JQuery} row\n     */\n    NotebookList.prototype.new_item = function (index, selectable) {\n        var row = $('<div/>')\n            .addClass(\"list_item\")\n            .addClass(\"row\");\n\n        var item = $(\"<div/>\")\n            .addClass(\"col-md-12\")\n            .appendTo(row);\n        \n        var checkbox;\n        if (selectable !== undefined) {\n            checkbox = $('<input/>')\n                .attr('type', 'checkbox')\n                .attr('title', i18n.msg._('Click here to rename, delete, etc.'))\n                .appendTo(item);\n        }\n\n        $('<i/>')\n            .addClass('item_icon')\n            .appendTo(item);\n\n        var link = $(\"<a/>\")\n            .addClass(\"item_link\")\n            .appendTo(item);\n\n        $(\"<span/>\")\n            .addClass(\"item_name\")\n            .appendTo(link);\n\n        $(\"<span/>\")\n            .addClass(\"file_size\")\n            .addClass(\"pull-right\")\n            .appendTo(item);\n\n        $(\"<span/>\")\n            .addClass(\"item_modified\")\n            .addClass(\"pull-right\")\n            .appendTo(item);\n\n        if (selectable === false) {\n            checkbox.css('visibility', 'hidden');\n        } else if (selectable === true) {\n            var that = this;\n            row.click(function(e) {\n                // toggle checkbox only if the click doesn't come from the checkbox or the link\n                if (!$(e.target).is('span[class=item_name]') && !$(e.target).is('input[type=checkbox]')) {\n                    checkbox.prop('checked', !checkbox.prop('checked'));\n                }\n                that._selection_changed();\n            });\n        }\n\n        var buttons = $('<div/>')\n            .addClass(\"item_buttons  pull-right\")\n            .appendTo(item);\n\n        $('<div/>')\n            .addClass('running-indicator')\n            .text(i18n.msg._('Running'))\n            .css('visibility', 'hidden')\n            .appendTo(buttons);\n\n        if (index === -1) {\n            this.element.append(row);\n        } else {\n            this.element.children().eq(index).after(row);\n        }\n        return row;\n    };\n\n\n    NotebookList.icons = {\n        directory: 'folder_icon',\n        notebook: 'notebook_icon',\n        file: 'file_icon'\n    };\n\n    NotebookList.uri_prefixes = {\n        directory: 'tree',\n        notebook: 'notebooks',\n        file: 'edit'\n    };\n\n    /**\n     * Select all items in the tree of specified type.\n     * selection_type : string among \"select-all\", \"select-folders\", \"select-notebooks\", \"select-running-notebooks\", \"select-files\"\n     *                  any other string (like \"select-none\") deselects all items\n     */\n    NotebookList.prototype.select = function(selection_type) {\n        var that = this;\n        $('.list_item').each(function(index, item) {\n            var item_type = $(item).data('type');\n            var state = false;\n            state = state || (selection_type === \"select-all\");\n            state = state || (selection_type === \"select-folders\" && item_type === 'directory');\n            state = state || (selection_type === \"select-notebooks\" && item_type === 'notebook');\n            state = state || (selection_type === \"select-running-notebooks\" && item_type === 'notebook' && that.sessions[$(item).data('path')] !== undefined);\n            state = state || (selection_type === \"select-files\" && item_type === 'file');\n            $(item).find('input[type=checkbox]').prop('checked', state);\n        });\n        this._selection_changed();\n    };\n\n    NotebookList.prototype._is_notebook = function(model) {\n      var ipynb_extensions = ['ipynb'];\n      return includes_extension(model.path, ipynb_extensions);\n    };\n    \n    NotebookList.prototype._is_editable = function(model) {\n      // Allow any file to be \"edited\"\n      // Non-text files will display the following error:\n      //   Error: [FILE] is not UTF-8 encoded\n      //   Saving is disabled.\n      //   See Console for more details.\n      return true;\n    };\n    \n    NotebookList.prototype._is_viewable = function(model) {\n      var html_types = ['htm', 'html', 'xhtml', 'xml', 'mht', 'mhtml'];\n      var media_extension = ['3gp', 'avi', 'mov', 'mp4', 'm4v', 'm4a', 'mp3', 'mkv', 'ogv', 'ogm', 'ogg', 'oga', 'webm', 'wav'];\n      var image_type = ['bmp', 'gif', 'jpg', 'jpeg', 'png', 'webp'];\n      var other_type = ['ico'];\n      var viewable_extensions = [].concat(html_types, media_extension, image_type, other_type);\n      return model.mimetype === 'text/html' \n        || includes_extension(model.path, viewable_extensions);\n    };\n    \n    // Files like PDF that should be opened using `/files` prefix\n    NotebookList.prototype._is_pdflike = function(model) {\n      var pdflike_extensions = ['pdf'];\n      return includes_extension(model.path, pdflike_extensions);\n    };\n\n    /**\n     * Handles when any row selector checkbox is toggled.\n     */\n    NotebookList.prototype._selection_changed = function() {\n        // Use a JQuery selector to find each row with a checked checkbox.  If\n        // we decide to add more checkboxes in the future, this code will need\n        // to be changed to distinguish which checkbox is the row selector.\n        var that = this;\n        var selected = [];\n        var has_running_notebook = false;\n        var has_directory = false;\n        var has_file = false;\n        var checked = 0;\n        $('.list_item :checked').each(function(index, item) {\n            var parent = $(item).parent().parent();\n\n            // If the item doesn't have an upload button, isn't the\n            // breadcrumbs and isn't the parent folder '..', then it can be selected.\n            // Breadcrumbs path == ''.\n            if (parent.find('.upload_button').length === 0 && parent.data('path') !== '' && parent.data('path') !== utils.url_path_split(that.notebook_path)[0]) {\n                checked++;\n                selected.push({\n                    name: parent.data('name'),\n                    path: parent.data('path'),\n                    type: parent.data('type')\n                });\n\n                // Set flags according to what is selected.  Flags are later\n                // used to decide which action buttons are visible.\n                has_running_notebook = has_running_notebook ||\n                    (parent.data('type') === 'notebook' && that.sessions[parent.data('path')] !== undefined);\n                has_file = has_file || (parent.data('type') === 'file');\n                has_directory = has_directory || (parent.data('type') === 'directory');\n            }\n        });\n        this.selected = selected;\n\n        // Rename is only visible when one item is selected, and it is not a running notebook\n        if (selected.length === 1 && !has_running_notebook) {\n            $('.rename-button').css('display', 'inline-block');\n        } else {\n            $('.rename-button').css('display', 'none');\n        }\n\n        // Move is visible if at least one item is selected, and none of them\n        // are a running notebook.\n        if (selected.length > 0 && !has_running_notebook) {\n            $('.move-button').css('display', 'inline-block');\n        } else {\n            $('.move-button').css('display', 'none');\n        }\n\n        // Download is only visible when one item is selected, and it is not a\n        // running notebook or a directory\n        // TODO(nhdaly): Add support for download multiple items at once.\n        if (selected.length === 1 && !has_running_notebook && !has_directory) {\n            $('.download-button').css('display', 'inline-block');\n        } else {\n            $('.download-button').css('display', 'none');\n        }\n\n        // Shutdown is only visible when one or more notebooks running notebooks\n        // are selected and no non-notebook items are selected.\n        if (has_running_notebook && !(has_file || has_directory)) {\n            $('.shutdown-button').css('display', 'inline-block');\n        } else {\n            $('.shutdown-button').css('display', 'none');\n        }\n\n        // Duplicate isn't visible when a directory is selected.\n        if (selected.length > 0 && !has_directory) {\n            $('.duplicate-button').css('display', 'inline-block');\n        } else {\n            $('.duplicate-button').css('display', 'none');\n        }\n\n        // Delete is visible if one or more items are selected.\n        if (selected.length > 0) {\n            $('.delete-button').css('display', 'inline-block');\n        } else {\n            $('.delete-button').css('display', 'none');\n        }\n\n        // View is visible in the following case:\n        //\n        //   - the item is editable\n        //   - it is not a notebook\n        //\n        // If it's not editable or unknown, the default action should be view\n        // already so no need to show the button.\n        // That should include things like, html, py, txt, json....\n        if (selected.length >= 1 && !has_directory) {\n            $('.view-button').css('display', 'inline-block');\n        } else {\n            $('.view-button').css('display', 'none');\n        }\n\n        // Edit is visible when an item is unknown, that is to say:\n        //    - not in the editable list\n        //    - not in the known non-editable list.\n        //    - not a notebook.\n        // Indeed if it's editable the default action is already to edit.\n        // And non editable files should not show edit button.\n        // for unknown we'll assume users know what they are doing.\n        if (selected.length >= 1 && !has_directory && selected.every(function(el) {\n            return that._is_editable(el);\n        })) {\n            $('.edit-button').css('display', 'inline-block');\n        } else {\n            $('.edit-button').css('display', 'none');\n        }\n\n        // If all of the items are selected, show the selector as checked.  If\n        // some of the items are selected, show it as checked.  Otherwise,\n        // uncheck it.\n        var total = 0;\n        $('.list_item input[type=checkbox]').each(function(index, item) {\n            var parent = $(item).parent().parent();\n            // If the item doesn't have an upload button and it's not the\n            // breadcrumbs, it can be selected.  Breadcrumbs path == ''.\n            if (parent.find('.upload_button').length === 0 && parent.data('path') !== '' && parent.data('path') !== utils.url_path_split(that.notebook_path)[0]) {\n                total++;\n            }\n        });\n\n        var select_all = $(\"#select-all\");\n        if (checked === 0) {\n            select_all.prop('checked', false);\n            select_all.prop('indeterminate', false);\n            select_all.data('indeterminate', false);\n        } else if (checked === total) {\n            select_all.prop('checked', true);\n            select_all.prop('indeterminate', false);\n            select_all.data('indeterminate', false);\n        } else {\n            select_all.prop('checked', false);\n            select_all.prop('indeterminate', true);\n            select_all.data('indeterminate', true);\n        }\n        // Update total counter\n        checked = bidi.applyBidi(checked);\n        $('#counter-select-all').html(checked===0 ? '&nbsp;' : checked);\n\n        // If at aleast on item is selected, hide the selection instructions.\n        if (checked > 0) {\n            $('.dynamic-instructions').hide();\n        } else {\n            $('.dynamic-instructions').show();\n        }\n    };\n\n    NotebookList.prototype.add_link = function (model, item) {\n        var that = this;\n        var running = (model.type === 'notebook' && this.sessions[model.path] !== undefined);\n        item.data('name',model.name);\n        item.data('path', model.path);\n        item.data('modified', model.last_modified);\n        item.data('type', model.type);\n        item.find(\".item_name\").text(bidi.applyBidi(model.name));\n        var icon = NotebookList.icons[model.type];\n        if (running) {\n            icon = 'running_' + icon;\n        }\n        var uri_prefix = NotebookList.uri_prefixes[model.type];\n        if (model.type === 'file' && this._is_viewable(model))\n        {\n            uri_prefix = 'view';\n        }\n        if (model.type === 'file' && this._is_pdflike(model))\n        {\n            uri_prefix = 'files';\n        }\n        if (model.type === 'file' && this._is_notebook(model))\n        {\n            uri_prefix = 'notebooks';\n        }\n\n        item.find(\".item_icon\").addClass(icon).addClass('icon-fixed-width');\n        var link = item.find(\"a.item_link\")\n            .attr('href',\n                utils.url_path_join(\n                    this.base_url,\n                    uri_prefix,\n                    utils.encode_uri_components(model.path)\n                )\n            );\n\n        item.find(\".item_buttons .running-indicator\").css('visibility', running ? '' : 'hidden');\n\n        // directory nav doesn't open new tabs\n        // files, notebooks do\n        if (model.type !== \"directory\") {\n            link.attr('target', IPython._target);\n        } else {\n            // Replace with a click handler that will use the History API to\n            // push a new route without reloading the page if the click is\n            // not modified (e.g., Ctrl-Click)\n            link.click(function (e) {\n                if(e.altKey || e.metaKey || e.shiftKey) {\n                    return true;\n                }\n                window.history.pushState({\n                    path: model.path\n                }, model.path, utils.url_path_join(\n                    that.base_url,\n                    'tree',\n                    utils.encode_uri_components(model.path)\n                ));\n                that.update_location(model.path);\n                return false;\n            });\n        }\n        \n        // Add in the date that the file was last modified\n        item.find(\".item_modified\").text(utils.format_datetime(model.last_modified));\n        item.find(\".item_modified\").attr(\"title\", moment(model.last_modified).format(\"YYYY-MM-DD HH:mm\"));\n\n        var filesize = utils.format_filesize(model.size);\n        item.find(\".file_size\").text(filesize || '\\xA0');\n    };\n\n\n    NotebookList.prototype.add_name_input = function (name, item, icon_type) {\n        item.data('name', name);\n        item.find(\".item_icon\").addClass(NotebookList.icons[icon_type]).addClass('icon-fixed-width');\n        item.find(\".item_name\").empty().append(\n            $('<input/>')\n            .addClass(\"filename_input\")\n            .attr('value', name)\n            .attr('size', '30')\n            .attr('type', 'text')\n            .keyup(function(event){\n                if(event.keyCode === 13){item.find('.upload_button').click();}\n                else if(event.keyCode === 27){item.remove();}\n            })\n        );\n    };\n\n\n    NotebookList.prototype.add_file_data = function (data, item) {\n        item.data('filedata', data);\n    };\n\n\n    NotebookList.prototype.shutdown_selected = function() {\n        var that = this;\n        this.selected.forEach(function(item) {\n            if (item.type === 'notebook') {\n                that.shutdown_notebook(item.path);\n            }\n        });\n        // Deselect items after successful shutdown.\n        that.select('select-none');\n    };\n\n    NotebookList.prototype.shutdown_notebook = function(path) {\n        var that = this;\n        var settings = {\n            processData : false,\n            cache : false,\n            type : \"DELETE\",\n            dataType : \"json\",\n            success : function () {\n                that.load_sessions();\n            },\n            error : utils.log_ajax_error\n        };\n\n        var session = this.sessions[path];\n        if (session) {\n            var url = utils.url_path_join(\n                this.base_url,\n                'api/sessions',\n                encodeURIComponent(session.id)\n            );\n            utils.ajax(url, settings);\n        }\n    };\n\n    NotebookList.prototype.rename_selected = function() {\n        if (this.selected.length !== 1){\n            return;\n        }\n\n        var that = this;\n        var item_path = this.selected[0].path;\n        var item_name = this.selected[0].name;\n        var item_type = this.selected[0].type;\n        var input = $('<input/>').attr('type','text').attr('size','25').addClass('form-control')\n            .val(item_name);\n        var rename_msg = function (type) {\n        \tswitch(type) {\n        \tcase 'file': return i18n.msg._(\"Enter a new file name:\");\n        \tcase 'directory': return i18n.msg._(\"Enter a new directory name:\");\n        \tcase 'notebook': return i18n.msg._(\"Enter a new notebook name:\");\n        \tdefault: return i18n.msg._(\"Enter a new name:\");\n        \t}\n        };\n        var rename_title = function (type) {\n           \tswitch(type) {\n           \tcase 'file': return i18n.msg._(\"Rename file\");\n           \tcase 'directory': return i18n.msg._(\"Rename directory\");\n           \tcase 'notebook': return i18n.msg._(\"Rename notebook\");\n           \tdefault: return i18n.msg._(\"Rename\");\n           \t}\n        };\n        var dialog_body = $('<div/>').append(\n            $(\"<p/>\").addClass(\"rename-message\")\n                .text(rename_msg(item_type))\n        ).append(\n            $(\"<br/>\")\n        ).append(input);\n        \n        // This statement is used simply so that message extraction\n        // will pick up the strings.  The actual setting of the text\n        // for the button is in dialog.js.\n        var button_labels = [ i18n.msg._(\"Cancel\"), i18n.msg._(\"Rename\"), i18n.msg._(\"OK\"), i18n.msg._(\"Move\")];\n\n        var d = dialog.modal({\n            title : rename_title(item_type),\n            body : dialog_body,\n            default_button: \"Cancel\",\n            buttons : {\n                Cancel: {},\n                Rename : {\n                    class: \"btn-primary\",\n                    click: function() {\n                        that.contents.rename(item_path, utils.url_path_join(that.notebook_path, input.val())).then(function() {\n                            that.load_list();\n                            // Deselect items after successful rename.\n                            that.select('select-none');\n                        }).catch(function(e) {\n                        \tvar template = i18n.msg._(\"An error occurred while renaming \\\"%1$s\\\" to \\\"%2$s\\\".\");\n                        \tvar failmsg = i18n.msg.sprintf(template,item_name,input.val());\n                            dialog.modal({\n                                title: i18n.msg._(\"Rename Failed\"),\n                                body: $('<div/>')\n                                    .text(failmsg)\n                                    .append($('<div/>')\n                                        .addClass('alert alert-danger')\n                                        .text(e.message || e)),\n                                buttons: {\n                                    OK: {'class': 'btn-primary'}\n                                }\n                            });\n                            console.warn('Error during renaming :', e);\n                        });\n                    }\n                }\n            },\n            open : function () {\n                // Upon ENTER, click the OK button.\n                input.keydown(function (event) {\n                    if (event.which === keyboard.keycodes.enter) {\n                        d.find('.btn-primary').first().click();\n                        return false;\n                    }\n                });\n                input.focus();\n                // Highlight the filename (up to the filetype suffix) in the input field.\n                if (input.val().indexOf(\".\") > 0) {\n                    input[0].setSelectionRange(0,input.val().indexOf(\".\"));\n                } else {\n                    input.select();\n                }\n            }\n        });\n    };\n\n    NotebookList.prototype.move_selected = function() {\n        var that = this;\n        var selected = that.selected.slice(); // Don't let that.selected change out from under us\n        var num_items = selected.length;\n\n        // Can move one or more selected items.\n        if (!(num_items >= 1)) {\n            return;\n        }\n\n        // Open a dialog to enter the new path, with current path as default.\n        var input = $('<input/>').attr('type','text').attr('size','25').addClass('form-control')\n            .val(utils.url_path_join('/', that.notebook_path));\n        var dialog_body = $('<div/>').append(\n            $(\"<p/>\").addClass(\"rename-message\")\n                .text(i18n.msg.sprintf(i18n.msg.ngettext(\"Enter a new destination directory path for this item:\",\n                \t\t\t\t\t\"Enter a new destination directory path for these %d items:\", num_items),num_items))\n        ).append(\n            $(\"<br/>\")\n        ).append(\n            $(\"<div/>\").append(\n                // $(\"<i/>\").addClass(\"fa fa-folder\").addClass(\"server-root\")\n                $(\"<span/>\").text(utils.get_body_data(\"serverRoot\")).addClass(\"server-root\")\n            ).append(\n              input.addClass(\"path-input\")\n            ).addClass(\"move-path\")\n        );\n        var d = dialog.modal({\n            title : i18n.msg.sprintf(i18n.msg.ngettext(\"Move an Item\",\"Move %d Items\",num_items),num_items),\n            body : dialog_body,\n            default_button: \"Cancel\",\n            buttons : {\n                Cancel : {},\n                Move : {\n                    class: \"btn-primary\",\n                    click: function() {\n                        // Move all the items.\n                        selected.forEach(function(item) {\n                            var item_path = item.path;\n                            var item_name = item.name;\n                            // Construct the new path using the user input and the item's name.\n                            var new_path = utils.url_path_join(input.val(), item_name);\n                            that.contents.rename(item_path, new_path).then(function() {\n                                // After each move finishes, reload the list.\n                                that.load_list();\n                            }).catch(function(e) {\n                                // If any of the moves fails, show this dialog for that move.\n                            \tvar failmsg = i18n.msg._(\"An error occurred while moving \\\"%1$s\\\" from \\\"%2$s\\\" to \\\"%3$s\\\".\");\n                                dialog.modal({\n                                    title: i18n.msg._(\"Move Failed\"),\n                                    body: $('<div/>')\n                                        .text(i18n.msg.sprintf(failmsg,item_name,item_path,new_path))\n                                        .append($('<div/>')\n                                            .addClass('alert alert-danger')\n                                            .text(e.message || e)),\n                                    buttons: {\n                                        OK: {'class': 'btn-primary'}\n                                    }\n                                });\n                                console.warn('Error during moving :', e);\n                            });\n                        });  // End of forEach.\n                    }\n                }\n            },\n            // TODO: Consider adding fancier UI per Issue #941.\n            open : function () {\n                // Upon ENTER, click the OK button.\n                input.keydown(function (event) {\n                    if (event.which === keyboard.keycodes.enter) {\n                        d.find('.btn-primary').first().click();\n                        return false;\n                    }\n                });\n                // Put the cursor at the end of the input.\n                input.focus();\n            }\n        });\n    };\n\n    NotebookList.prototype.download_selected = function() {\n        var that = this;\n\n        // TODO(nhdaly): Support download multiple items at once.\n        if (that.selected.length !== 1){\n            return;\n        }\n\n        var item_path = that.selected[0].path;\n\n        window.open(utils.url_path_join(that.base_url, 'files', utils.encode_uri_components(item_path)) + '?download=1', IPython._target);\n    };\n\n    NotebookList.prototype.delete_selected = function() {\n        var selected = this.selected.slice(); // Don't let that.selected change out from under us\n        var template = i18n.msg.ngettext(\"Are you sure you want to permanently delete: \\\"%s\\\"?\",\n        \t\t\t\t\t\t\"Are you sure you want to permanently delete the %d files or folders selected?\",\n        \t\t\t\t\t\tselected.length);\n        var delete_msg;\n        if (selected.length === 1) {\n            delete_msg = i18n.msg.sprintf(template, selected[0].name);\n        } else {\n            delete_msg = i18n.msg.sprintf(template, selected.length);\n        }\n        var that = this;\n        dialog.modal({\n            title : i18n.msg._(\"Delete\"),\n            body : delete_msg,\n            default_button: \"Cancel\",\n            buttons : {\n                Cancel: {},\n                Delete : {\n                    class: \"btn-danger\",\n                    click: function() {\n                        // Shutdown any/all selected notebooks before deleting\n                        // the files.\n                        that.shutdown_selected();\n\n                        // Delete selected.\n                        selected.forEach(function(item) {\n                            that.contents.delete(item.path).then(function() {\n                                    that.notebook_deleted(item.path);\n                            }).catch(function(e) {\n                            \tvar failmsg = i18n.msg._(\"An error occurred while deleting \\\"%s\\\".\");\n                                dialog.modal({\n                                    title: i18n.msg._(\"Delete Failed\"),\n                                    body: $('<div/>')\n                                        .text(i18n.msg.sprintf(failmsg, item.path))\n                                        .append($('<div/>')\n                                            .addClass('alert alert-danger')\n                                            .text(e.message || e)),\n                                    buttons: {\n                                        OK: {'class': 'btn-primary'}\n                                    }\n                                });\n                                console.warn('Error during content deletion:', e);\n                            });\n                        });\n                    }\n                }\n            }\n        });\n    };\n\n    NotebookList.prototype.view_selected = function() {\n        var that = this;\n        that.selected.forEach(function(item) {\n            var item_path = utils.encode_uri_components(item.path);\n            var item_type = that._is_notebook(item) ? 'notebooks' : that._is_viewable(item) ? 'view' : 'files';\n            window.open(utils.url_path_join(that.base_url, item_type, item_path), IPython._target);\n      \t});\n    };\n\n    NotebookList.prototype.edit_selected = function() {\n        var that = this;\n        that.selected.forEach(function(item) {\n            var item_path = utils.encode_uri_components(item.path);\n            window.open(utils.url_path_join(that.base_url, 'edit', item_path), IPython._target);\n      \t});\n    };\n\n    NotebookList.prototype.duplicate_selected = function() {\n        var selected = this.selected.slice(); // Don't let that.selected change out from under us\n    \tvar template = i18n.msg.ngettext(\"Are you sure you want to duplicate: \\\"%s\\\"?\",\n\t\t\t\t\"Are you sure you want to duplicate the %d files selected?\",selected.length);\n    \tvar dup_msg;\n        if (selected.length === 1) {\n            dup_msg = i18n.msg.sprintf(template,selected[0].name);\n        } else {\n            dup_msg = i18n.msg.sprintf(template,selected.length);\n        }\n        var that = this;\n        dialog.modal({\n            title : i18n.msg._(\"Duplicate\"),\n            body : dup_msg,\n            default_button: \"Cancel\",\n            buttons : {\n                Cancel: {},\n                Duplicate : {\n                    class: \"btn-primary\",\n                    click: function() {\n                        selected.forEach(function(item) {\n                            that.contents.copy(item.path, that.notebook_path).then(function () {\n                                that.load_list();\n                                // Deselect items after successful duplication.\n                                that.select('select-none');\n                            }).catch(function(e) {\n                            \tvar failmsg = i18n.msg._(\"An error occurred while duplicating \\\"%s\\\".\");\n                                dialog.modal({\n                                    title: i18n.msg._(\"Duplicate Failed\"),\n                                    body: $('<div/>')\n                                        .text(i18n.msg.sprintf(failmsg,item.path))\n                                        .append($('<div/>')\n                                            .addClass('alert alert-danger')\n                                            .text(e.message || e)),\n                                    buttons: {\n                                        OK: {'class': 'btn-primary'}\n                                    }\n                                });\n                                console.warn('Error during content duplication', e);\n                            });\n                        });\n                    }\n                }\n            }\n        });\n    };\n\n    NotebookList.prototype.notebook_deleted = function(path) {\n        /**\n         * Remove the deleted notebook.\n         */\n        var that = this;\n        $(\".list_item\").each(function() {\n            var element = $(this);\n            if (element.data(\"path\") === path) {\n                element.remove();\n                events.trigger('notebook_deleted.NotebookList');\n                that._selection_changed();\n            }\n        });\n    };\n\n    // Add a new class for large file upload\n    NotebookList.prototype.add_large_file_upload_button = function (file) {\n        var that = this;\n        var item = that.new_item(0, true);\n        var stop_signal = false;\n        item.addClass('new-file');\n        that.add_name_input(file.name, item, 'file');\n        var cancel_button = $('<button/>').text(\"Cancel\")\n            .addClass(\"btn btn-default btn-xs\")\n            .click(function (e) {\n                item.remove();\n                stop_signal = true;\n                return false;\n            });\n\n        var upload_button = $('<button/>').text(\"Upload\")\n            .addClass('btn btn-primary btn-xs upload_button')\n            .click(function (e) {\n                var filename = item.find('.item_name > input').val();\n                var path = utils.url_path_join(that.notebook_path, filename);\n                var format = 'text';\n                if (filename.length === 0 || filename[0] === '.') {\n                    dialog.modal({\n                        title : 'Invalid file name',\n                        body : \"File names must be at least one character and not start with a dot\",\n                        buttons : {'OK' : { 'class' : 'btn-primary' }}\n                    });\n                    return false;\n                }\n                \n                var check_exist = function () {\n                    var exists = false;\n                    $.each(that.element.find('.list_item:not(.new-file)'), function(k,v){\n                    if ($(v).data('name') === filename) { exists = true; return false; }\n                    });\n                    return exists\n                };\n                var exists = check_exist();\n                \n                var add_uploading_button = function (f, item) {\n                    // change buttons, add a progress bar\n                    var uploading_button = item.find('.upload_button').text(\"Uploading\");\n                    uploading_button.off('click');  // Prevent double upload\n                    var progress_bar = $('<span/>')\n                        .addClass('progress-bar')\n                        .css('top', '0')\n                        .css('left', '0')\n                        .css('width', '0')\n                        .css('height', '3px')\n                        .css('border-radius', '0 0 0 0')\n                        .css('display', 'inline-block')\n                        .css('position', 'absolute');\n\n                    var parse_large_file = function (f, item) {\n                        // codes inspired by https://stackoverflow.com/a/28318964\n                        var chunk_size = 1024 * 1024;\n                        var offset = 0;\n                        var chunk = 0;\n                        var chunk_reader = null;\n                        \n                        var large_reader_onload = function (event) {\n                            if (stop_signal === true) {\n                                return;\n                            }\n                            if (event.target.error == null) {\n                                offset += chunk_size;\n                                if (offset >= f.size) {\n                                    chunk = -1;\n                                } else {\n                                    chunk += 1;\n                                }\n                                // callback for handling reading: reader_onload in add_upload_button\n                                var item = $(event.target).data('item');\n                                that.add_file_data(event.target.result, item);\n                                upload_file(item, chunk);  // Do the upload\n                            } else {\n                                console.log(\"Read error: \" + event.target.error);\n                            }\n                        };\n                        var on_error = function (event) {\n                            var item = $(event.target).data('item');\n                            var name = item.data('name');\n                            item.remove();\n                            var _exists = check_exist();\n                            if (_exists) {\n                                that.contents.delete(path);\n                            }\n                            dialog.modal({\n                                title : 'Failed to read file',\n                                body : \"Failed to read file '\" + name + \"'\",\n                                buttons : {'OK' : { 'class' : 'btn-primary' }}\n                            });\n                        };\n\n                        chunk_reader = function (_offset, _f) {\n                            var reader = new FileReader();\n                            var blob = _f.slice(_offset, chunk_size + _offset);\n                            // Load everything as ArrayBuffer\n                            reader.readAsArrayBuffer(blob);\n                            // Store the list item in the reader so we can use it later\n                            // to know which item it belongs to.\n                            $(reader).data('item', item);\n                            reader.onload = large_reader_onload;\n                            reader.onerror = on_error;\n                        };\n\n                        // These codes to upload file in original class\n                        var upload_file = function(item, chunk) {\n                            var filedata = item.data('filedata');\n                            if (filedata instanceof ArrayBuffer) {\n                                // base64-encode binary file data\n                                var bytes = '';\n                                var buf = new Uint8Array(filedata);\n                                var nbytes = buf.byteLength;\n                                for (var i=0; i<nbytes; i++) {\n                                    bytes += String.fromCharCode(buf[i]);\n                                }\n                                filedata = btoa(bytes);\n                                format = 'base64';\n                            }\n                            var model = { name: filename, path: path };\n\n                            var name_and_ext = utils.splitext(filename);\n                            var file_ext = name_and_ext[1];\n                            var content_type;\n                            // Treat everything as generic file\n                            model.type = 'file';\n                            model.format = format;\n                            content_type = 'application/octet-stream';\n\n                            model.chunk = chunk;\n                            model.content = filedata;\n                            \n                            var on_success = function () {\n                                if (offset < f.size) {\n                                    // of to the next chunk\n                                    chunk_reader(offset, f);\n                                    // change progress bar and progress button\n                                    var progress = offset / f.size * 100;\n                                    progress = progress > 100 ? 100 : progress;\n                                    uploading_button.text(progress.toFixed(0)+'%');\n                                    progress_bar.css('width', progress+'%')\n                                        .attr('aria-valuenow', progress.toString());\n                                } else {\n                                    item.removeClass('new-file');\n                                    that.add_link(model, item);\n                                    that.session_list.load_sessions();\n                                }\n                            };\n                            that.contents.save(path, model).then(on_success, on_error);\n                        };\n\n                        // now let's start the read with the first block\n                        chunk_reader(offset, f);\n                    };\n                    item.find('.item_buttons')\n                        .append(progress_bar);\n                    parse_large_file(f, item);\n                };\n                if (exists) {\n                    dialog.modal({\n                        title : \"Replace file\",\n                        body : 'There is already a file named ' + filename + ', do you want to replace it?',\n                        default_button: \"Cancel\",\n                        buttons : {\n                            Overwrite : {\n                                class: \"btn-danger\",\n                                click: function () {\n                                    add_uploading_button(file, item);\n                                }\n                            },\n                            Cancel : {\n                                click: function() { item.remove(); }\n                            }\n                        }\n                    });\n                } else {\n                    add_uploading_button(file, item);\n                }\n\n                return false;\n            });\n        item.find(\".item_buttons\").empty()\n            .append(upload_button)\n            .append(cancel_button);\n    };\n\n    NotebookList.prototype.add_upload_button = function (item) {\n        var that = this;\n        var upload_button = $('<button/>').text(i18n.msg._(\"Upload\"))\n            .addClass('btn btn-primary btn-xs upload_button')\n            .click(function (e) {\n                var filename = item.find('.item_name > input').val();\n                var path = utils.url_path_join(that.notebook_path, filename);\n                var filedata = item.data('filedata');\n                var format = 'text';\n                if (filename.length === 0 || filename[0] === '.') {\n                    dialog.modal({\n                        title : i18n.msg._('Invalid file name'),\n                        body : i18n.msg._(\"File names must be at least one character and not start with a period\"),\n                        buttons : {'OK' : { 'class' : 'btn-primary' }}\n                    });\n                    return false;\n                }\n                if (filedata instanceof ArrayBuffer) {\n                    // base64-encode binary file data\n                    var bytes = '';\n                    var buf = new Uint8Array(filedata);\n                    var nbytes = buf.byteLength;\n                    for (var i=0; i<nbytes; i++) {\n                        bytes += String.fromCharCode(buf[i]);\n                    }\n                    filedata = btoa(bytes);\n                    format = 'base64';\n                }\n                var model = { name: filename, path: path };\n\n                var name_and_ext = utils.splitext(filename);\n                var file_ext = name_and_ext[1];\n                var content_type;\n                if (file_ext === '.ipynb') {\n                    model.type = 'notebook';\n                    model.format = 'json';\n                    try {\n                        model.content = JSON.parse(filedata);\n                    } catch (e) {\n                    \tvar failbody = i18n.msg._(\"The error was: %s\");\n                        dialog.modal({\n                            title : i18n.msg._('Cannot upload invalid Notebook'),\n                            body : i18n.msg.sprintf(failbody,e),\n                            buttons : {'OK' : {\n                                'class' : 'btn-primary',\n                                click: function () {\n                                    item.remove();\n                                }\n                            }}\n                        });\n                        console.warn('Error during notebook uploading', e);\n                        return false;\n                    }\n                    content_type = 'application/json';\n                } else {\n                    model.type = 'file';\n                    model.format = format;\n                    model.content = filedata;\n                    content_type = 'application/octet-stream';\n                }\n\n                var on_success = function () {\n                    item.removeClass('new-file');\n                    that.add_link(model, item);\n                    that.session_list.load_sessions();\n                };\n\n                var exists = false;\n                $.each(that.element.find('.list_item:not(.new-file)'), function(k,v){\n                    if ($(v).data('name') === filename) { exists = true; return false; }\n                });\n\n                if (exists) {\n                \tvar body = i18n.msg._(\"There is already a file named \\\"%s\\\". Do you want to replace it?\");\n                    dialog.modal({\n                        title : i18n.msg._(\"Replace file\"),\n                        body : i18n.msg.sprintf(body,filename),\n                        default_button: \"Cancel\",\n                        buttons : {\n                            Cancel : {\n                                click: function() { item.remove(); }\n                            },\n                            Overwrite : {\n                                class: \"btn-danger\",\n                                click: function () {\n                                    that.contents.save(path, model).then(on_success);\n                                }\n                            }\n                        }\n                    });\n                } else {\n                    that.contents.save(path, model).then(on_success);\n                }\n\n                return false;\n            });\n        var cancel_button = $('<button/>').text(i18n.msg._(\"Cancel\"))\n            .addClass(\"btn btn-default btn-xs\")\n            .click(function (e) {\n                item.remove();\n                return false;\n            });\n        item.find(\".item_buttons\").empty()\n            .append(upload_button)\n            .append(cancel_button);\n    };\n\n    return {'NotebookList': NotebookList};\n});\n", "patch": "@@ -383,18 +383,28 @@ define([\n         breadcrumb.empty();\n         var list_item = $('<li/>');\n         var root_url = utils.url_path_join(that.base_url, '/tree');\n-        var root = $('<li/>').append('<a href=\"' + root_url + '\"><i class=\"fa fa-folder\"></i></a>').click(function(e) {\n-            // Allow the default browser action when the user holds a modifier (e.g., Ctrl-Click)\n-            if(e.altKey || e.metaKey || e.shiftKey) {\n-                return true;\n-            }\n-            var path = '';\n-            window.history.pushState({\n-                path: path\n-            }, 'Home', utils.url_path_join(that.base_url, 'tree'));\n-            that.update_location(path);\n-            return false;\n-        });\n+        var root = $('<li/>').append(\n+            $(\"<a/>\")\n+            .attr('href', root_url)\n+            .append(\n+                $(\"<i/>\")\n+                .addClass('fa fa-folder')\n+            )\n+            .click(function(e) {\n+                // Allow the default browser action when the user holds a modifier (e.g., Ctrl-Click)\n+                if(e.altKey || e.metaKey || e.shiftKey) {\n+                    return true;\n+                }\n+                var path = '';\n+                window.history.pushState(\n+                    {path: path},\n+                    'Home',\n+                    utils.url_path_join(that.base_url, 'tree')\n+                );\n+                that.update_location(path);\n+                return false;\n+            })\n+        );\n         breadcrumb.append(root);\n         var path_parts = [];\n         this.notebook_path.split('/').forEach(function(path_part) {\n@@ -405,17 +415,24 @@ define([\n                 '/tree',\n                 utils.encode_uri_components(path)\n             );\n-            var crumb = $('<li/>').append('<a href=\"' + url + '\">' + path_part + '</a>').click(function(e) {\n-                // Allow the default browser action when the user holds a modifier (e.g., Ctrl-Click)\n-                if(e.altKey || e.metaKey || e.shiftKey) {\n-                    return true;\n-                }\n-                window.history.pushState({\n-                    path: path\n-                }, path, url);\n-                that.update_location(path);\n-                return false;\n-            });\n+            var crumb = $('<li/>').append(\n+                $('<a/>')\n+                .attr('href', url)\n+                .text(path_part)\n+                .click(function(e) {\n+                    // Allow the default browser action when the user holds a modifier (e.g., Ctrl-Click)\n+                    if(e.altKey || e.metaKey || e.shiftKey) {\n+                        return true;\n+                    }\n+                    window.history.pushState(\n+                        {path: path},\n+                        path,\n+                        url\n+                    );\n+                    that.update_location(path);\n+                    return false;\n+                })\n+            );\n             breadcrumb.append(crumb);\n         });\n         this.contents.list_contents(that.notebook_path).then(", "file_path": "files/2018_11\\3", "file_language": "js", "file_name": "notebook/static/tree/js/notebooklist.js", "outdated_file_modify": 0, "outdated_file_before": 1, "outdated_file_after": 0}], "outdated": 0, "cwe_descripiton": "", "cwe_consequence": "", "cwe_method": "", "cwe_solution": ""}
