{"index": 9195, "cve_id": "CVE-2022-39348", "cwe_id": ["CWE-79", "CWE-80"], "cve_language": "Python", "cve_description": "Twisted is an event-based framework for internet applications. Started with version 0.9.4, when the host header does not match a configured host `twisted.web.vhost.NameVirtualHost` will return a `NoResource` resource which renders the Host header unescaped into the 404 response allowing HTML and script injection. In practice this should be very difficult to exploit as being able to modify the Host header of a normal HTTP request implies that one is already in a privileged position. This issue was fixed in version 22.10.0rc1. There are no known workarounds.", "cvss": "5.4", "publish_date": "October 26, 2022", "AV": "NETWORK", "AC": "NETWORK", "PR": "LOW", "UI": "REQUIRED", "S": "CHANGED", "C": "LOW", "I": "LOW", "A": "NONE", "commit_id": "f49041bb67792506d85aeda9cf6157e92f8048f4", "commit_message": "vhost bugfix...\n\n\ngit-svn-id: svn://svn.twistedmatrix.com/svn/Twisted/trunk@53 bbbe8e31-12d6-0310-92fd-ac37d47ddeeb", "commit_date": "2001-07-23T00:21:39Z", "project": "twisted/twisted", "url": "https://api.github.com/repos/twisted/twisted/commits/f49041bb67792506d85aeda9cf6157e92f8048f4", "html_url": "https://github.com/twisted/twisted/commit/f49041bb67792506d85aeda9cf6157e92f8048f4", "windows_before": [{"commit_id": "39037efcebbceaffb346d70e73fdeed57dd83ccc", "commit_date": "Mon Jul 23 00:17:41 2001 +0000", "commit_message": "web fixes!", "files_name": ["README", "twisted/web/error.py", "twisted/web/static.py"]}, {"commit_id": "f77dda986eba036805827a87eb6e86fa8b485694", "commit_date": "Sun Jul 22 22:27:21 2001 +0000", "commit_message": "debian build files, thanks to moshe", "files_name": ["debian/changelog", "debian/control", "debian/copyright", "debian/dirs", "debian/postinst", "debian/prerm", "debian/rules"]}, {"commit_id": "408a2e56b2461619accf20fd191143bacb25c6f3", "commit_date": "Sun Jul 22 22:02:31 2001 +0000", "commit_message": "doc updates", "files_name": ["CREDITS", "README"]}, {"commit_id": "250fc2d8fcb8482a913c30dda519e6fc037de920", "commit_date": "Sun Jul 22 21:18:18 2001 +0000", "commit_message": "Initial import of twisted.toc.", "files_name": ["bin/mktocserver", "twisted/protocols/toc.py", "twisted/test/test_all.py", "twisted/test/test_toc.py"]}, {"commit_id": "a74918cf01b4a4d00a209a19f4ed57fa6db94ad3", "commit_date": "Sun Jul 22 10:24:10 2001 +0000", "commit_message": "cleanup", "files_name": ["twisted/internet/tkinternet.py", "twisted/reality/ui/tkfaucet.py"]}, {"commit_id": "7d91c056cf610ce77db84a7d5835544915ec795d", "commit_date": "Sun Jul 22 10:17:59 2001 +0000", "commit_message": "added missing import", "files_name": ["twisted/internet/main.py"]}, {"commit_id": "861149c9dd88e59159706b330aa8d13f00c1b720", "commit_date": "Sun Jul 22 10:14:45 2001 +0000", "commit_message": "Verison updates for 0.9.3", "files_name": ["README", "bin/tkfaucet", "twisted/copyright.py", "twisted/internet/ingtkernet.py", "twisted/internet/main.py", "twisted/internet/tkinternet.py", "twisted/protocols/irc.py", "twisted/python/rebuild.py", "twisted/reality/plumbing.py", "twisted/reality/ui/tkfaucet.py"]}, {"commit_id": "7b1d4ee779ff27534651c15434244536916e6dea", "commit_date": "Sat Jul 21 11:04:08 2001 +0000", "commit_message": "Verison updates for 0.9.2", "files_name": ["README", "twisted/copyright.py"]}, {"commit_id": "4d334dcfded6d1e28d451b0ced949b69e979a893", "commit_date": "Sat Jul 21 10:11:01 2001 +0000", "commit_message": "The GTK faucet.  Reality is now a spreadable service.", "files_name": ["bin/gnusto", "bin/gtkfaucet", "bin/mkrealityserver", "twisted/persisted/styles.py", "twisted/reality/player.py", "twisted/reality/plumbing.py", "twisted/reality/reality.py", "twisted/reality/ui/.cvsignore", "twisted/reality/ui/__init__.py", "twisted/reality/ui/gtkfaucet.py", "twisted/spread/pb.py", "twisted/test/test_pb.py", "twisted/web/distrib.py"]}, {"commit_id": "93c1735d25b8e3cbeeebe0814625b8a8401f55a8", "commit_date": "Sat Jul 21 08:26:38 2001 +0000", "commit_message": "minor fixes", "files_name": ["twisted/python/log.py", "twisted/python/rebuild.py", "twisted/python/usage.py", "twisted/reality/reality.py", "twisted/test/test_delay.py", "twisted/test/test_dirdbm.py"]}, {"commit_id": "f1875c9f5eed1827e2a652273084a16455e02c2b", "commit_date": "Sat Jul 21 08:26:13 2001 +0000", "commit_message": "jemfinch's newer, cooler parsemsg; he tells me it's better than the previous one", "files_name": ["twisted/protocols/irc.py"]}, {"commit_id": "891592dc807af3c196ebb2b7c86e381a3604767c", "commit_date": "Sat Jul 21 08:25:40 2001 +0000", "commit_message": "gtk internet support", "files_name": ["twisted/internet/ingtkernet.py", "twisted/internet/main.py", "twisted/internet/tcp.py"]}, {"commit_id": "dfcdb76f6118fac717f99a1918e328704dbbc341", "commit_date": "Sat Jul 21 08:23:26 2001 +0000", "commit_message": "license issues", "files_name": ["README"]}, {"commit_id": "debde868359690f7e30273096db9c89ebeaaf1c4", "commit_date": "Fri Jul 20 14:53:20 2001 +0000", "commit_message": "more minor log aesthetics", "files_name": ["twisted/python/log.py"]}, {"commit_id": "aea2cfd9b197be648b2251a8da24994326858a9a", "commit_date": "Fri Jul 20 13:37:12 2001 +0000", "commit_message": "removed lots of prints and replaced them with log.msg.  removed dependency on strftime.", "files_name": ["twisted/internet/main.py", "twisted/internet/process.py", "twisted/internet/task.py", "twisted/internet/tcp.py", "twisted/persisted/styles.py", "twisted/protocols/basic.py", "twisted/protocols/irc.py", "twisted/protocols/protocol.py", "twisted/protocols/telnet.py", "twisted/python/delay.py", "twisted/python/log.py", "twisted/python/observable.py", "twisted/python/rebuild.py", "twisted/python/reference.py", "twisted/spread/pb.py", "twisted/test/test_pb.py", "twisted/web/distrib.py", "twisted/web/server.py", "twisted/web/static.py", "twisted/web/twcgi.py"]}, {"commit_id": "e0786d9f944a822eb888ee7d94a06b82c9bbf56c", "commit_date": "Fri Jul 20 12:16:08 2001 +0000", "commit_message": "Prettier repr()s for a few things, nicer output on telnet, bugfix for rebuild", "files_name": ["twisted/internet/main.py", "twisted/internet/tcp.py", "twisted/protocols/telnet.py", "twisted/python/delay.py", "twisted/python/rebuild.py"]}, {"commit_id": "bb6a8b488dbb255e1e787ba838ad161355b69d49", "commit_date": "Fri Jul 20 11:04:16 2001 +0000", "commit_message": "First pass at a re-loading framework.", "files_name": ["twisted/python/delay.py", "twisted/python/rebuild.py", "twisted/test/crash_test_dummy.py", "twisted/test/test_all.py", "twisted/test/test_rebuild.py"]}, {"commit_id": "b910590ab69e52b1ade1d10c2470c53f6350a613", "commit_date": "Fri Jul 20 06:10:06 2001 +0000", "commit_message": "distributed web persistence fix; requests no longer saved.", "files_name": ["twisted/web/distrib.py"]}, {"commit_id": "e3c1f9b79756e940cfaeb62057bd297dbbd0abc8", "commit_date": "Thu Jul 19 10:08:34 2001 +0000", "commit_message": "fix for tracebacks?", "files_name": ["twisted/web/server.py"]}, {"commit_id": "ecd69954f859388ec86f2bd8f92501abbfc247c2", "commit_date": "Thu Jul 19 06:53:06 2001 +0000", "commit_message": "vhost fix", "files_name": ["twisted/web/vhost.py"]}, {"commit_id": "67412821238ac3c1d2e0e7929e37da808b797624", "commit_date": "Thu Jul 19 05:55:31 2001 +0000", "commit_message": "0.9.1 release stuff", "files_name": ["bin/mkircserver", "bin/mkrealityserver", "bin/mktelnetserver", "bin/twistd", "twisted/internet/main.py"]}, {"commit_id": "448ae2d02ae459ea258767ed6bf3c6319a08fd6a", "commit_date": "Thu Jul 19 05:42:08 2001 +0000", "commit_message": "0.9.1 release stuff", "files_name": ["README"]}, {"commit_id": "eb6b1dcb5522224e6514c33d43f8719a6b758505", "commit_date": "Thu Jul 19 05:42:08 2001 +0000", "commit_message": "0.9.1 release stuff", "files_name": ["README", "twisted/copyright.py", "twisted/web/vhost.py"]}, {"commit_id": "7485474bda4d802ea122ac09b19482e5f938aacd", "commit_date": "Thu Jul 19 05:16:05 2001 +0000", "commit_message": "convenience methods, documentation cleanup, sample code", "files_name": ["bin/mkircserver", "bin/mkrealityserver", "bin/mktelnetserver", "bin/mkwebserver", "doc/examples/echoserv.py", "twisted/internet/main.py", "twisted/protocols/protocol.py"]}, {"commit_id": "a1f4a7ea42733f97aea53840119f4317dec80662", "commit_date": "Thu Jul 19 04:15:05 2001 +0000", "commit_message": "More graceful (read: correct) handling of connection failures in the distributed web server.", "files_name": ["README", "twisted/protocols/protocol.py", "twisted/web/distrib.py", "twisted/web/edna.py"]}, {"commit_id": "84064a8645aa87594f1496734f8c03270f3b9e42", "commit_date": "Wed Jul 18 22:02:27 2001 +0000", "commit_message": "Fixes to unit tests (whose bright idea were all those private variables, anyway?), more stability enhancements for PB as well as fixes for annoying \"perspective is None\" bugs.", "files_name": ["bin/runtests", "twisted/spread/banana.py", "twisted/spread/pb.py", "twisted/test/test_protocols.py"]}, {"commit_id": "1f3cfcf70b2e9295dd8715cf9e5f093c1d8fdde1", "commit_date": "Tue Jul 17 01:16:17 2001 +0000", "commit_message": "Added my Nick", "files_name": ["CREDITS"]}, {"commit_id": "f34e2a6aae5cff392adc86e079d27693db51a417", "commit_date": "Sat Jul 14 20:57:20 2001 +0000", "commit_message": "changes to CREDITS file", "files_name": ["CREDITS"]}, {"commit_id": "2fd75df965852ec83d50052a2842f0d06bf7b57a", "commit_date": "Fri Jul 13 14:59:07 2001 +0000", "commit_message": "fixed a bug for systems with Tkinter but not running X (caught TclError)", "files_name": ["bin/runtests"]}, {"commit_id": "7182d3e7ea8b63d91982e2cc22e64e8f766b77f9", "commit_date": "Thu Jul 12 19:33:18 2001 +0000", "commit_message": "added a 'cooker', which should solve Sean's problems...", "files_name": ["twisted/spread/jelly.py"]}, {"commit_id": "219651c8269333a84a87b2430f663aa3973113a6", "commit_date": "Thu Jul 12 19:27:06 2001 +0000", "commit_message": "Added support for .exe files.", "files_name": ["twisted/web/static.py"]}, {"commit_id": "c957e7433010562bb21c31b2b77f994366c1d1c1", "commit_date": "Wed Jul 11 20:27:01 2001 +0000", "commit_message": "fixed a few outstanding NameErrors", "files_name": ["bin/twistd", "twisted/internet/process.py", "twisted/protocols/basic.py", "twisted/protocols/irc.py", "twisted/web/distrib.py"]}, {"commit_id": "6fd0cb54e79496bcbb54d91bbb6259a19417d1a8", "commit_date": "Wed Jul 11 03:36:31 2001 +0000", "commit_message": "Simple mediabrowser with playlist-generator (.m3u) Does recursive and shuffle play. Ugly output.", "files_name": ["twisted/web/edna.py"]}, {"commit_id": "ee9dd8ce0c64c9188a021a41d89f739d673dc947", "commit_date": "Tue Jul 10 21:49:43 2001 +0000", "commit_message": "Removed superfluous TwistedLogo.bmp", "files_name": ["MANIFEST.in"]}, {"commit_id": "25f350c06d74b06711f4789870b82e05a87d160d", "commit_date": "Tue Jul 10 08:39:58 2001 +0000", "commit_message": "error fixed... i hope", "files_name": ["twisted/web/distrib.py"]}, {"commit_id": "2ac2f492cba951df789f04a9eac4dadeaa17fd8c", "commit_date": "Tue Jul 10 08:24:00 2001 +0000", "commit_message": "no seriously", "files_name": []}], "windows_after": [{"commit_id": "153e52a387ead8388267cc1afd6451408ab62354", "commit_date": "Mon Jul 23 00:24:43 2001 +0000", "commit_message": "last vhost bugfix.", "files_name": ["twisted/web/vhost.py"]}, {"commit_id": "05412855db0def47cdaae617e4f131130620b877", "commit_date": "Mon Jul 23 01:04:40 2001 +0000", "commit_message": "qotr fix", "files_name": ["README"]}, {"commit_id": "52c8b19aea7f0835bf0307b8330fcfa6b1b01932", "commit_date": "Mon Jul 23 01:05:00 2001 +0000", "commit_message": "whatsnew fix", "files_name": ["README"]}, {"commit_id": "5c133c25362da05ebc3aa554078abbf840dc4d60", "commit_date": "Mon Jul 23 15:32:08 2001 +0000", "commit_message": "1 or two bugs involving forgetting to pass \"request\"", "files_name": ["twisted/web/twcgi.py"]}, {"commit_id": "74cb59fa29135a693a42a4cdbf7b79ade295395f", "commit_date": "Tue Jul 24 08:42:47 2001 +0000", "commit_message": "minor bugfixes, and C support for banana", "files_name": ["setup.py", "twisted/internet/main.py", "twisted/python/rebuild.py", "twisted/spread/banana.py", "twisted/spread/cBanana.c", "twisted/spread/pb.py", "twisted/test/test_banana.py", "twisted/web/error.py"]}, {"commit_id": "175cc21c39b287d631f25f7a54569ac5d0dd2606", "commit_date": "Thu Jul 26 18:06:48 2001 +0000", "commit_message": "Updating to be able to build platform dependant stuff", "files_name": ["debian/changelog", "debian/control", "debian/rules"]}, {"commit_id": "e7283666ee45e41779ac447b8fb9f6bbd8ed6345", "commit_date": "Fri Jul 27 14:52:55 2001 +0000", "commit_message": "gone!", "files_name": ["bin/mkircserver"]}, {"commit_id": "f73bc4f1a93dc21033c6fb678ac44a33f68cd96f", "commit_date": "Fri Jul 27 14:53:30 2001 +0000", "commit_message": "Gone", "files_name": ["bin/mkrealityserver"]}, {"commit_id": "b29d028b3b3932971e9b3de7ffb8bf144ca88cf1", "commit_date": "Fri Jul 27 15:06:00 2001 +0000", "commit_message": "gone!", "files_name": ["bin/mktelnetserver", "bin/mktocserver", "bin/mkwebserver"]}, {"commit_id": "b7d465d1258069dc19e43baae5804f3f1aa57c27", "commit_date": "Fri Jul 27 15:16:05 2001 +0000", "commit_message": "new mkserver system", "files_name": ["bin/mkserver"]}, {"commit_id": "6667b455125981447dbed7ba285d4c78c916a89d", "commit_date": "Fri Jul 27 16:47:50 2001 +0000", "commit_message": "added --help option", "files_name": ["bin/mkserver"]}, {"commit_id": "825919794f13ba305a98900264f19262820891bb", "commit_date": "Fri Jul 27 18:26:20 2001 +0000", "commit_message": "tweaked --help", "files_name": ["bin/mkserver"]}, {"commit_id": "97e55115b340e1d5d043270e2570f2097178a26c", "commit_date": "Fri Jul 27 22:59:44 2001 +0000", "commit_message": "Updated README to reflect radix's new mkserver, and including the TOC server.", "files_name": ["README"]}, {"commit_id": "f43ac389faadaaee90a0d0bb48e6239fa4232a98", "commit_date": "Wed Aug 1 20:57:43 2001 +0000", "commit_message": "Made it so directory listings were sorted.", "files_name": ["twisted/web/static.py"]}, {"commit_id": "c958865944d39bf4bea6cf24ecf8e056e84e1990", "commit_date": "Thu Aug 2 00:38:25 2001 +0000", "commit_message": "\"import sys\" added to internet.stdio", "files_name": ["twisted/internet/stdio.py"]}, {"commit_id": "700370b00f64f01e349edbfd0c8081010599d399", "commit_date": "Thu Aug 2 22:24:41 2001 +0000", "commit_message": "first pass of 0.9.4 updates, see the readme for details", "files_name": ["README", "bin/faucet", "bin/im", "bin/mktap", "bin/twistd", "twisted/copyright.py", "twisted/internet/main.py", "twisted/internet/tcp.py", "twisted/protocols/irc.py", "twisted/protocols/protocol.py", "twisted/reality/player.py", "twisted/reality/ui/gtkfaucet.py", "twisted/reality/ui/tkfaucet.py", "twisted/spread/banana.py", "twisted/spread/cBanana.c", "twisted/spread/pb.py", "twisted/spread/ui/__init__.py", "twisted/spread/ui/gtkutil.py", "twisted/tap/.cvsignore", "twisted/tap/__init__.py", "twisted/tap/reality.py", "twisted/tap/telnet.py", "twisted/tap/toc.py", "twisted/tap/web.py", "twisted/tap/words.py", "twisted/test/test_all.py", "twisted/test/test_import.py", "twisted/test/test_words.py", "twisted/web/distrib.py", "twisted/web/lmx.py", "twisted/words/.cvsignore", "twisted/words/__init__.py", "twisted/words/ircservice.py", "twisted/words/service.py", "twisted/words/ui/__init__.py", "twisted/words/ui/gtkim.py"]}, {"commit_id": "cac3adcced453e1ccf57cdc25555cc5eabe9d07d", "commit_date": "Thu Aug 2 22:25:39 2001 +0000", "commit_message": "cvsignore files for new directories.", "files_name": ["twisted/spread/ui/.cvsignore", "twisted/words/ui/.cvsignore"]}, {"commit_id": "c092cb4bf3af22cf4eb200b4e7f4252987ba2a8b", "commit_date": "Fri Aug 3 05:30:12 2001 +0000", "commit_message": "More useful twisted.words service.", "files_name": ["twisted/spread/pb.py", "twisted/tap/words.py", "twisted/web/html.py", "twisted/words/service.py", "twisted/words/ui/gtkim.py"]}, {"commit_id": "97c5b22042fb88f8254041ee44eac1c0296327fa", "commit_date": "Fri Aug 3 06:11:26 2001 +0000", "commit_message": "twisted.words additions", "files_name": ["twisted/words/service.py", "twisted/words/webwords.py"]}, {"commit_id": "ffc12e208b4b8f6d42086df900e0b4ffc1593a4e", "commit_date": "Fri Aug 3 08:14:05 2001 +0000", "commit_message": "Basic SMTP/POP3 virtual domains, meant to be (currently) behind a \"prime\" SMTP server", "files_name": ["twisted/mail/__init__.py", "twisted/mail/mail.py", "twisted/tap/mail.py"]}, {"commit_id": "9f23618c5434e133d72bffe2ae859444b5767c5c", "commit_date": "Fri Aug 3 08:41:39 2001 +0000", "commit_message": "Moving Maildir-specifics out of mail", "files_name": ["twisted/mail/mail.py", "twisted/mail/maildir.py", "twisted/tap/mail.py"]}, {"commit_id": "10f8e234e42c229539efd51e74c125a98aefa79e", "commit_date": "Fri Aug 3 10:15:46 2001 +0000", "commit_message": "Stripping", "files_name": ["debian/rules"]}, {"commit_id": "1626b619e0eb83423496f7ef5a5ec9561dabf230", "commit_date": "Fri Aug 3 10:23:10 2001 +0000", "commit_message": "yet more twisted.words", "files_name": ["bin/tkfaucet", "twisted/words/ircservice.py", "twisted/words/service.py"]}, {"commit_id": "fcf366abfb4cf25d28a375633622c346a2db2d07", "commit_date": "Fri Aug 3 10:43:39 2001 +0000", "commit_message": "Updated to new API", "files_name": ["twisted/protocols/pop3.py", "twisted/protocols/smtp.py"]}, {"commit_id": "adfcd00885b0818fa28aee2b8fe309694965983f", "commit_date": "Fri Aug 3 10:56:44 2001 +0000", "commit_message": "Add mail to the list of options", "files_name": ["bin/mktap"]}, {"commit_id": "ea01bbe08d607d370f09df7819de5bc27f0840cb", "commit_date": "Fri Aug 3 11:01:51 2001 +0000", "commit_message": "Added recommendation for python-tk", "files_name": ["debian/control"]}, {"commit_id": "8fd99e4868c674ed15831b98148ef5b3d5158322", "commit_date": "Fri Aug 3 11:30:51 2001 +0000", "commit_message": "release modifications for 0.9.4", "files_name": ["README", "TODO", "twisted/words/service.py"]}, {"commit_id": "3c367df775f89b6c68b28649c64591fa06d4b172", "commit_date": "Fri Aug 3 18:41:29 2001 +0000", "commit_message": "Refactoring some common behaviour from the factories. Refactoring not complete yet.", "files_name": ["twisted/mail/mail.py", "twisted/protocols/protocol.py", "twisted/protocols/smtp.py", "twisted/tap/mail.py", "twisted/test/test_protocols.py"]}, {"commit_id": "bd960efab102076cb14a7c05749dbd7722befc94", "commit_date": "Fri Aug 3 18:45:10 2001 +0000", "commit_message": "pb documentation & banana creme surprise!", "files_name": ["doc/examples/.cvsignore", "doc/examples/echoserv.py", "doc/examples/pbclient.py", "twisted/internet/main.py"]}, {"commit_id": "2cac66bc37a699f738dd5e2b7c076201e7180d2e", "commit_date": "Fri Aug 3 18:51:09 2001 +0000", "commit_message": "doc & support updates", "files_name": ["README"]}, {"commit_id": "862804d27bcf882d1461fb8043810fbf60b5bf51", "commit_date": "Sat Aug 4 06:42:19 2001 +0000", "commit_message": "Changed notice to reflect changes in README and the removal of contrib", "files_name": ["debian/copyright"]}, {"commit_id": "1869239ca17b7236546ccbca9202ea52ba941253", "commit_date": "Sat Aug 4 07:10:08 2001 +0000", "commit_message": "Changes needed for the Debian package to work, but didn't make it into 0.9.4", "files_name": ["debian/control", "debian/dirs", "debian/rules"]}, {"commit_id": "647cb8a377c58c2dfbaa863b6aba2e70b1c73d08", "commit_date": "Sat Aug 4 12:34:17 2001 +0000", "commit_message": "Adding manpage for mktap", "files_name": ["doc/man/mktap.1"]}, {"commit_id": "da77ec8010abc263d7c1c62f9adb47d64cedcf65", "commit_date": "Sat Aug 4 12:43:19 2001 +0000", "commit_message": "First version of manpage for twistd", "files_name": ["doc/man/twistd.1"]}, {"commit_id": "5d40f9ba4f91840bafe67e43c4774f17884f35f7", "commit_date": "Sat Aug 4 12:47:16 2001 +0000", "commit_message": "First version of gnusto manpage", "files_name": ["doc/man/gnusto.1"]}, {"commit_id": "1c163c1ee09d7a80ac9c79e677356a31a18be14f", "commit_date": "Sat Aug 4 12:51:40 2001 +0000", "commit_message": "First version of faucet manpage", "files_name": ["doc/man/faucet.1"]}, {"commit_id": "e9ba16875f4656dd53d2672d1687315953164542", "commit_date": "Sat Aug 4 12:59:02 2001 +0000", "commit_message": "First version of IM's manpage", "files_name": ["doc/man/im.1"]}, {"commit_id": "64a190c0b8cb219abafe896ffb9dc7b64dccf0da", "commit_date": "Sat Aug 4 13:10:09 2001 +0000", "commit_message": "* Installing manpages * Added TODO to the installed doc/ * General cleanup * Installing only a subset of the stuff in bin/", "files_name": ["debian/rules"]}, {"commit_id": "d21a918528514702f4cd0da9c0756a689620214b", "commit_date": "Sat Aug 4 13:46:33 2001 +0000", "commit_message": "Added ignore file so I won't see spurious ?", "files_name": ["twisted/mail/.cvsignore"]}, {"commit_id": "2a68454391f2f799caced4f53b0f91b18d387616", "commit_date": "Sun Aug 5 10:14:34 2001 +0000", "commit_message": "documentation updates", "files_name": ["TODO", "twisted/python/authenticator.py", "twisted/reality/ui/gtkfaucet.py", "twisted/spread/pb.py"]}, {"commit_id": "8e0e616e76b72482c6526aa8d8ae5a1e5ccd7564", "commit_date": "Mon Aug 6 00:18:15 2001 +0000", "commit_message": "minor doc updates, webserver bugfix for sessions.", "files_name": ["TODO", "twisted/reality/ui/gtkfaucet.py", "twisted/tap/reality.py"]}], "parents": [{"commit_id_before": "39037efcebbceaffb346d70e73fdeed57dd83ccc", "url_before": "https://api.github.com/repos/twisted/twisted/commits/39037efcebbceaffb346d70e73fdeed57dd83ccc", "html_url_before": "https://github.com/twisted/twisted/commit/39037efcebbceaffb346d70e73fdeed57dd83ccc"}], "details": [{"raw_url": "https://github.com/twisted/twisted/raw/f49041bb67792506d85aeda9cf6157e92f8048f4/twisted%2Fweb%2Fvhost.py", "code": "\"\"\"I am a virtual hosts implementation.\"\"\"\n\n# System Imports\nimport string\n\n# Sibling Imports\nimport resource\nimport error\n\nclass NameVirtualHost(resource.Resource):\n    \"\"\"I am a resource which represents named virtual hosts.\n    \"\"\"\n\n    def __init__(self):\n        \"\"\"Initialize.\n        \"\"\"\n        resource.Resource.__init__(self)\n        self.hosts = {}\n        \n    def addHost(self, name, resrc):\n        \"\"\"Add a host to this virtual host.\n        \n        This will take a host named `name', and map it to a resource\n        `resrc'.  For example, a setup for our virtual hosts would be::\n        \n            nvh.addHost('divunal.com', divunalDirectory)\n            nvh.addHost('www.divunal.com', divunalDirectory)\n            nvh.addHost('twistedmatrix.com', twistedMatrixDirectory)\n            nvh.addHost('www.twistedmatrix.com', twistedMatrixDirectory)\n        \"\"\"\n        self.hosts[name] = resrc\n\n    def _getResourceForRequest(self, request):\n        \"\"\"(Internal) Get the appropriate resource for the given host.\n        \"\"\"\n        host = string.lower(request.getHeader('host'))\n        return self.hosts.get(host, error.NoResource(\"host %s not in vhost map\" % repr(host)))\n        \n    def render(self, request):\n        \"\"\"Implementation of resource.Resource's render method.\n        \"\"\"\n        resrc = self._getResourceForRequest(request)\n        return resrc.render(request)\n        \n    def getChild(self, path, request):\n        \"\"\"Implementation of resource.Resource's getChild method.\n        \"\"\"\n        resrc = self._getResourceForRequest(request)\n        return resrc.getChildWithDefault(path, request)\n", "code_before": "\"\"\"I am a virtual hosts implementation.\"\"\"\n\n# System Imports\nimport string\n\n# Sibling Imports\nimport resource\nimport error\n\nclass NameVirtualHost(resource.Resource):\n    \"\"\"I am a resource which represents named virtual hosts.\n    \"\"\"\n\n    def __init__(self):\n        \"\"\"Initialize.\n        \"\"\"\n        resource.Resource.__init__(self)\n        self.hosts = {}\n        \n    def addHost(self, name, resrc):\n        \"\"\"Add a host to this virtual host.\n        \n        This will take a host named `name', and map it to a resource\n        `resrc'.  For example, a setup for our virtual hosts would be::\n        \n            nvh.addHost('divunal.com', divunalDirectory)\n            nvh.addHost('www.divunal.com', divunalDirectory)\n            nvh.addHost('twistedmatrix.com', twistedMatrixDirectory)\n            nvh.addHost('www.twistedmatrix.com', twistedMatrixDirectory)\n        \"\"\"\n        self.hosts[name] = resrc\n\n    def _getResourceForRequest(self, request):\n        \"\"\"(Internal) Get the appropriate resource for the given host.\n        \"\"\"\n        host = string.lower(request.getHeader('host'))\n        return self.hosts.get(host, error.NoResource())\n        \n    def render(self, request):\n        \"\"\"Implementation of resource.Resource's render method.\n        \"\"\"\n        resrc = self._getResourceForRequest(request)\n        return resrc.render(request)\n        \n    def getChild(self, path, request):\n        \"\"\"Implementation of resource.Resource's getChild method.\n        \"\"\"\n        resrc = self._getResourceForRequest(request)\n        return resrc.getChildWithDefault(path, request)\n", "patch": "@@ -34,7 +34,7 @@ def _getResourceForRequest(self, request):\n         \"\"\"(Internal) Get the appropriate resource for the given host.\n         \"\"\"\n         host = string.lower(request.getHeader('host'))\n-        return self.hosts.get(host, error.NoResource())\n+        return self.hosts.get(host, error.NoResource(\"host %s not in vhost map\" % repr(host)))\n         \n     def render(self, request):\n         \"\"\"Implementation of resource.Resource's render method.", "file_path": "files/2022_10/59", "file_language": "py", "file_name": "twisted/web/vhost.py", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 1, "llm_check": 0, "static_check": 0, "static": {"rats": [false, []], "semgrep": [false, []]}, "target": 0, "function_before": [{"function": "class NameVirtualHost(resource.Resource):\n    \"\"\"I am a resource which represents named virtual hosts.\n    \"\"\"\n\n    def __init__(self):\n        \"\"\"Initialize.\n        \"\"\"\n        resource.Resource.__init__(self)\n        self.hosts = {}\n        \n    def addHost(self, name, resrc):\n        \"\"\"Add a host to this virtual host.\n        \n        This will take a host named `name', and map it to a resource\n        `resrc'.  For example, a setup for our virtual hosts would be::\n        \n            nvh.addHost('divunal.com', divunalDirectory)\n            nvh.addHost('www.divunal.com', divunalDirectory)\n            nvh.addHost('twistedmatrix.com', twistedMatrixDirectory)\n            nvh.addHost('www.twistedmatrix.com', twistedMatrixDirectory)\n        \"\"\"\n        self.hosts[name] = resrc\n\n    def _getResourceForRequest(self, request):\n        \"\"\"(Internal) Get the appropriate resource for the given host.\n        \"\"\"\n        host = string.lower(request.getHeader('host'))\n        return self.hosts.get(host, error.NoResource())\n        \n    def render(self, request):\n        \"\"\"Implementation of resource.Resource's render method.\n        \"\"\"\n        resrc = self._getResourceForRequest(request)\n        return resrc.render(request)\n        \n    def getChild(self, path, request):\n        \"\"\"Implementation of resource.Resource's getChild method.\n        \"\"\"\n        resrc = self._getResourceForRequest(request)\n        return resrc.getChildWithDefault(path, request)", "target": 0}], "function_after": [{"function": "class NameVirtualHost(resource.Resource):\n    \"\"\"I am a resource which represents named virtual hosts.\n    \"\"\"\n\n    def __init__(self):\n        \"\"\"Initialize.\n        \"\"\"\n        resource.Resource.__init__(self)\n        self.hosts = {}\n        \n    def addHost(self, name, resrc):\n        \"\"\"Add a host to this virtual host.\n        \n        This will take a host named `name', and map it to a resource\n        `resrc'.  For example, a setup for our virtual hosts would be::\n        \n            nvh.addHost('divunal.com', divunalDirectory)\n            nvh.addHost('www.divunal.com', divunalDirectory)\n            nvh.addHost('twistedmatrix.com', twistedMatrixDirectory)\n            nvh.addHost('www.twistedmatrix.com', twistedMatrixDirectory)\n        \"\"\"\n        self.hosts[name] = resrc\n\n    def _getResourceForRequest(self, request):\n        \"\"\"(Internal) Get the appropriate resource for the given host.\n        \"\"\"\n        host = string.lower(request.getHeader('host'))\n        return self.hosts.get(host, error.NoResource(\"host %s not in vhost map\" % repr(host)))\n        \n    def render(self, request):\n        \"\"\"Implementation of resource.Resource's render method.\n        \"\"\"\n        resrc = self._getResourceForRequest(request)\n        return resrc.render(request)\n        \n    def getChild(self, path, request):\n        \"\"\"Implementation of resource.Resource's getChild method.\n        \"\"\"\n        resrc = self._getResourceForRequest(request)\n        return resrc.getChildWithDefault(path, request)", "target": 0}]}], "outdated": 0, "cwe_descripiton": "", "cwe_consequence": "", "cwe_method": "", "cwe_solution": ""}
