{"index": 8182, "cve_id": "CVE-2022-1806", "cwe_id": ["CWE-79"], "cve_language": "Python", "cve_description": "Cross-site Scripting (XSS) - Reflected in GitHub repository rtxteam/rtx prior to checkpoint_2022-05-18.", "cvss": "6.1", "publish_date": "May 20, 2022", "AV": "NETWORK", "AC": "NETWORK", "PR": "NONE", "UI": "REQUIRED", "S": "CHANGED", "C": "LOW", "I": "LOW", "A": "NONE", "commit_id": "9bb109b0014f952f315c7b89e0f29a9ba84ee04c", "commit_message": "remove some cruft and implement a sanitizer for the client-supplied callback function name", "commit_date": "2022-05-18T03:32:13Z", "project": "rtxteam/rtx", "url": "https://api.github.com/repos/RTXteam/RTX/commits/9bb109b0014f952f315c7b89e0f29a9ba84ee04c", "html_url": "https://github.com/RTXteam/RTX/commit/9bb109b0014f952f315c7b89e0f29a9ba84ee04c", "windows_before": [{"commit_id": "ebdb3856d3ce23df62fd7fc3186d3f5f13ea4337", "commit_date": "Wed May 18 03:30:55 2022 +0000", "commit_message": "Start python with -u so that stderr is written to the log files without caching", "files_name": ["code/autocomplete/RTX_Complete.start"]}, {"commit_id": "5a1fb78d9c9cf1d90bfeb0a50f1649426b84c3b3", "commit_date": "Tue May 17 11:10:59 2022 -0700", "commit_message": "Merge branch 'master' of https://github.com/RTXteam/RTX", "files_name": ["c8818552d778e685642a3ab9f7193bef90e73fbf - Wed May 11 12:43:41 2022 -0700 : Refactoring and adding functionality to get specific kinds of kps", "code/ARAX/ARAXQuery/Expand/smartapi.py"]}, {"commit_id": "ba3c979d86ee004ab7c26a2f0ae1a2f4671bc6a5", "commit_date": "Mon May 9 13:44:08 2022 -0400", "commit_message": "update link to point to current API", "files_name": ["README.md"]}, {"commit_id": "08ca66aade6c02b712ee7258a5b04787ea0f40ec", "commit_date": "Mon May 2 02:07:49 2022 -0700", "commit_message": "Merge branch 'master' into issue1818", "files_name": ["d3c7b3096a569995ee8f0cc20f7e78ee5473c088 - Mon May 2 02:07:39 2022 -0700 : #1818, added creative DTD scripts", "code/ARAX/ARAXQuery/Infer/scripts/category_manager.py", "code/ARAX/ARAXQuery/Infer/scripts/creativeDTD.py", "code/ARAX/ARAXQuery/Infer/scripts/kg_env.py", "code/ARAX/ARAXQuery/Infer/scripts/knowledge_graph.py", "code/ARAX/ARAXQuery/Infer/scripts/model_utilities.py", "code/ARAX/ARAXQuery/Infer/scripts/models.py"]}, {"commit_id": "b96927559cdef5591f6aa62d6b556d15fd2a1b16", "commit_date": "Mon May 2 02:06:12 2022 -0700", "commit_message": "#1818, added example pickle files", "files_name": ["code/ARAX/ARAXQuery/Infer/data/result_from_self_predict_top_M_paths.pkl", "code/ARAX/ARAXQuery/Infer/data/result_from_self_predict_top_N_drugs.pkl"]}, {"commit_id": "02d0322085ed0dc0c237570ec892937f87c24510", "commit_date": "Mon May 2 02:04:59 2022 -0700", "commit_message": "#1818, added logic to add paths to knowledge graph and fill results", "files_name": ["code/ARAX/ARAXQuery/ARAX_infer.py"]}, {"commit_id": "e155ae5534007aaa024ccf12583cdb07764fb7a8", "commit_date": "Thu Apr 28 05:04:43 2022 +0000", "commit_message": "Allow larger values for node pruning (up to 99,999 instead of 999)  #1827", "files_name": ["code/UI/interactive/index.html", "code/UI/interactive/rtx.version"]}, {"commit_id": "93c5e2ea716168cd2d6e2ced45ac601804375f90", "commit_date": "Tue Apr 26 13:04:33 2022 -0700", "commit_message": "#1387, change loop order", "files_name": ["code/ARAX/ARAXQuery/ARAX_connect.py", "code/ARAX/test/test_ARAX_connect.py"]}, {"commit_id": "0cab750da0aaf995bd1bb0d5f2f47b4076fdb41a", "commit_date": "Tue Apr 26 12:06:57 2022 -0700", "commit_message": "#1824, add itrb kg2 ci domain", "files_name": ["DockerBuild/KG2-Dockerfile"]}, {"commit_id": "2cbfc0712755a8ed4f54cf67a6803f6d04cb5243", "commit_date": "Tue Apr 26 12:06:26 2022 -0700", "commit_message": "#1824, add itrb arax ci domain", "files_name": ["DockerBuild/Dockerfile"]}, {"commit_id": "f47ecdd6e111c5b430b35f4746ed24f4623c7c63", "commit_date": "Tue Apr 26 11:56:18 2022 -0700", "commit_message": "Merge pull request #1825 from pahmadi8740/master", "files_name": ["9cbd6b834d9f8208a2cc5dbe880faf268a6f06a8 - Mon Apr 25 17:32:30 2022 -0400 : Update Jenkinsfile", "deploy/kg2/Jenkinsfile"]}, {"commit_id": "d0d7546e4dd0ca8786eec24e796d00f2ef1ee024", "commit_date": "Mon Apr 25 15:04:39 2022 -0400", "commit_message": "Update Jenkinsfile", "files_name": ["deploy/arax/Jenkinsfile"]}, {"commit_id": "d0e09fdde9d3d12bb40b528d2cb48316ec1e1e03", "commit_date": "Mon Apr 25 13:32:03 2022 -0400", "commit_message": "Update Jenkinsfile", "files_name": ["deploy/arax/Jenkinsfile"]}, {"commit_id": "f9afe6d6faed130f6f84180e2af5f5b21584674e", "commit_date": "Mon Apr 25 11:30:01 2022 -0400", "commit_message": "Update Jenkinsfile", "files_name": ["deploy/arax/Jenkinsfile"]}, {"commit_id": "50dc32c6436fe6982748404bc3f554e62ed50a70", "commit_date": "Mon Apr 25 10:30:34 2022 -0400", "commit_message": "Merge branch 'RTXteam:master' into master", "files_name": ["5d899c3f29dd0a4de626911f41276fc765832ae2 - Mon Apr 25 00:37:22 2022 -0700 : fix merge conflicts", "5c76876a78a72cd29bbde262cbe937021df8aa7f - Fri Apr 22 17:16:25 2022 -0700 : #1824, add itrb-test to actions workflow", ".github/workflows/pytest.yml"]}, {"commit_id": "6f913349ceca28b3cefc7e9a53fe15f9bfba6290", "commit_date": "Fri Apr 22 16:33:35 2022 -0700", "commit_message": "#1824, update test suite domain", "files_name": ["DockerBuild/Merged-Dockerfile"]}, {"commit_id": "bd6fd8ddbce2bcfe05a4d1f28cca6ed196a675a6", "commit_date": "Thu Apr 21 09:44:31 2022 -0700", "commit_message": "Refine steps about updating version nums #1810", "files_name": ["ISSUE_TEMPLATES/kg2rollout.md"]}, {"commit_id": "7b4b1543f9b6bfd0fb23be06da53685f672521c6", "commit_date": "Wed Apr 20 14:40:08 2022 -0700", "commit_message": "#1824, comment out config domain stuff while we get new KG2 rolledout", "files_name": [".github/workflows/pytest.yml"]}, {"commit_id": "7286025e9419eea512f4981c0f7db8c4fc38e818", "commit_date": "Wed Apr 20 14:37:58 2022 -0700", "commit_message": "Merge remote-tracking branch 'origin/kg2integration' #1810", "files_name": ["1478e7edc10091b951c3b7a7dd5a80e3a966c8f1 - Wed Apr 20 14:36:23 2022 -0700 : Merge remote-tracking branch 'origin/master' into kg2integration #1810", "23e175dde28d860015cc1217c900b15f23d3ac21 - Wed Apr 20 21:33:16 2022 +0000 : update for KG2.7.5", "code/UI/OpenAPI/python-flask-server/KG2/openapi_server/openapi/openapi.yaml", "code/UI/OpenAPI/python-flask-server/RTX_OA3_TRAPI1.2_ARAX.yaml", "code/UI/OpenAPI/python-flask-server/RTX_OA3_TRAPI1.2_KG2.yaml", "code/UI/OpenAPI/python-flask-server/openapi_server/openapi/openapi.yaml"]}, {"commit_id": "5840bafc9cbf7acdc67d1f02d35e034764969345", "commit_date": "Wed Apr 20 14:29:29 2022 -0700", "commit_message": "#1824, fix Merged-Dockerfile", "files_name": ["DockerBuild/Merged-Dockerfile"]}, {"commit_id": "ab02a4fe7f955a5879bc534f25c7f1274bc20ecf", "commit_date": "Wed Apr 20 14:21:34 2022 -0700", "commit_message": "#1824, fix echo command", "files_name": [".github/workflows/pytest.yml", "DockerBuild/Dockerfile", "DockerBuild/KG2-Dockerfile", "DockerBuild/Merged-Dockerfile"]}, {"commit_id": "a6d73807ed2fd8e7bc0a5253670e534d18d83fa7", "commit_date": "Wed Apr 20 14:03:35 2022 -0700", "commit_message": "#1824, update github actions test suite to use config.domain", "files_name": [".github/workflows/pytest.yml"]}, {"commit_id": "a38bb5b39248bf50eae4e2d4ecf0af4a8561dee0", "commit_date": "Wed Apr 20 14:03:00 2022 -0700", "commit_message": "#1824, update dockerfiles to use config.domain", "files_name": ["DockerBuild/Dockerfile", "DockerBuild/KG2-Dockerfile", "DockerBuild/Merged-Dockerfile"]}, {"commit_id": "fa2797e656e3dba18f990a2db1f0f029d41f1921", "commit_date": "Wed Apr 20 18:38:35 2022 +0000", "commit_message": "avoid SQL injection exploits", "files_name": ["code/autocomplete/rtxcomplete.py"]}, {"commit_id": "a17262f3bd1bba8f63b22c3f722f328275edab6e", "commit_date": "Wed Apr 20 08:44:01 2022 -0700", "commit_message": "Move CICD update steps #1810", "files_name": ["ISSUE_TEMPLATES/kg2rollout.md"]}, {"commit_id": "b95e96a83a36791e5b7be4a905e9869db2eec4aa", "commit_date": "Mon Apr 18 16:38:15 2022 -0700", "commit_message": "Added functionality to smartapi.py which retrieves a list of valid KP endpoints", "files_name": ["code/ARAX/ARAXQuery/Expand/smartapi.py"]}, {"commit_id": "efc655446d84f587388be00d7aa79c2533872ef3", "commit_date": "Mon Apr 18 12:35:10 2022 -0700", "commit_message": "Add notes about doing build on ngdbuild.rtx.ai #1810", "files_name": ["code/ARAX/ARAXQuery/Overlay/ngd/README.md"]}, {"commit_id": "d55d107cefae15a937956b215ef7584c520fed21", "commit_date": "Mon Apr 18 09:42:36 2022 -0700", "commit_message": "Some minor tweaks to steps #1810", "files_name": ["ISSUE_TEMPLATES/kg2rollout.md"]}, {"commit_id": "12b9fa79bbe71299dfe3e9211239b381153014df", "commit_date": "Sun Apr 17 14:12:48 2022 -0700", "commit_message": "added SECURITY.md", "files_name": ["SECURITY.md"]}, {"commit_id": "71220f5fc4e6a0760d5c48807b5936ee4d0dfba3", "commit_date": "Fri Apr 15 14:52:57 2022 -0700", "commit_message": "Fix POST request payload entry #1822", "files_name": ["code/ARAX/NodeSynonymizer/sri_node_normalizer.py"]}, {"commit_id": "e1416685cf05b18150813bbd5aa16cbb8d6b5f40", "commit_date": "Fri Apr 15 14:34:41 2022 -0700", "commit_message": "Fix response content error; switch to using POST endpoint #1822", "files_name": ["code/ARAX/NodeSynonymizer/sri_node_normalizer.py"]}, {"commit_id": "cce1e13f9e28de42d1bb0f98f5bca7fd523baec0", "commit_date": "Thu Apr 14 18:51:03 2022 -0700", "commit_message": "Lower batch limit even more! (needed for long curies) #1810", "files_name": ["code/ARAX/NodeSynonymizer/sri_node_normalizer.py"]}, {"commit_id": "27db3d982f2e5e0a5406f802ca9f79331a6e18cc", "commit_date": "Thu Apr 14 10:12:39 2022 -0700", "commit_message": "Decrease batch size more (length still >8192 sometimes) #1810", "files_name": ["code/ARAX/NodeSynonymizer/sri_node_normalizer.py"]}, {"commit_id": "beb72da2048c3ce94bc6e97b522c5f4d891096fe", "commit_date": "Wed Apr 13 21:05:48 2022 -0700", "commit_message": "Decrease batch size to avoid 414 errors from SRI normalizer #1810", "files_name": ["code/ARAX/NodeSynonymizer/sri_node_normalizer.py"]}, {"commit_id": "98c582a5f86ba924ad44f5cab0d8ea16ea91582b", "commit_date": "Wed Apr 13 18:55:24 2022 -0700", "commit_message": "Clear SRI pickle as well before synonymizer build #1810", "files_name": ["code/kg2c/build-synonymizer.sh"]}, {"commit_id": "a849043c82e20c38730cc04eebd3a9cadea53c56", "commit_date": "Wed Apr 13 16:52:41 2022 -0700", "commit_message": "Add directions for creating an issue from the template #1810", "files_name": ["ISSUE_TEMPLATES/kg2rollout.md"]}, {"commit_id": "31af93af5ec6a868636b735481dc58cfb98cd5c7", "commit_date": "Wed Apr 13 16:49:45 2022 -0700", "commit_message": "Minor tweaks to roll-out template #1810", "files_name": ["ISSUE_TEMPLATES/kg2rollout.md"]}, {"commit_id": "2e07185bc9edf2524a2a577e6d15bddf5fda8079", "commit_date": "Wed Apr 13 16:39:36 2022 -0700", "commit_message": "Grab ARAX's biolink version from BiolinkHelper #1810", "files_name": ["code/ARAX/NodeSynonymizer/category_manager.py"]}, {"commit_id": "5a1400c32acf0d9a822dcc878453e37ea07407ef", "commit_date": "Wed Apr 13 16:33:24 2022 -0700", "commit_message": "Add more detail about updating biolink version, how-tos", "files_name": ["ISSUE_TEMPLATES/kg2rollout.md"]}, {"commit_id": "a0cdea52c0de5b17e8f74aac3e26138ef40090e2", "commit_date": "Wed Apr 13 16:32:19 2022 -0700", "commit_message": "Get the correct KG2pre endpoint in template config file", "files_name": ["code/kg2c/kg2c_config.json"]}, {"commit_id": "a6e49c15073b52b9ae17f7137d80a680623d4dc2", "commit_date": "Wed Apr 13 16:20:47 2022 -0700", "commit_message": "Update ARAX and KG2's Biolink version for KG2.7.5 #1810", "files_name": ["code/UI/OpenAPI/python-flask-server/KG2/openapi_server/openapi/openapi.yaml", "code/UI/OpenAPI/python-flask-server/openapi_server/openapi/openapi.yaml"]}, {"commit_id": "576aaed083d4d0f3e1ad655cb1239189fde118a8", "commit_date": "Wed Apr 13 16:03:37 2022 -0700", "commit_message": "Merge remote-tracking branch 'origin/master' into kg2integration #1810", "files_name": ["0107502d7da4f1ee70d76c2ca5e406a07b8012d1 - Wed Apr 13 15:50:17 2022 -0700 : Add KG2pre neo4j endpoint back (still used for synonymizer build)", "code/kg2c/README.md", "code/kg2c/build_kg2c.py", "code/kg2c/kg2c_config.json"]}, {"commit_id": "3f7a9bb7b8a56357b1cb027363087766196a9c48", "commit_date": "Wed Apr 13 15:27:07 2022 -0700", "commit_message": "Don't refer to KG2pre neo4j in log message", "files_name": ["code/kg2c/build_kg2c.py"]}, {"commit_id": "544460dcca492d03ed66ca3094b7dd6a488b94ca", "commit_date": "Wed Apr 13 15:19:45 2022 -0700", "commit_message": "Update template KG2c config file (remove neo4j endpoint)", "files_name": ["code/kg2c/kg2c_config.json"]}, {"commit_id": "b826c903a69cbca59fa41bb2693b31f0e02c0e1a", "commit_date": "Wed Apr 13 15:18:29 2022 -0700", "commit_message": "Add a way to do a true test build off of TSVs", "files_name": ["code/kg2c/create_kg2c_files.py"]}, {"commit_id": "7c2ceef641bd6de3015b31738e1533b312e3ea2d", "commit_date": "Wed Apr 13 15:17:59 2022 -0700", "commit_message": "Don't record KG2pre neo4j endpoint (no longer used)", "files_name": ["code/kg2c/README.md", "code/kg2c/build_kg2c.py"]}, {"commit_id": "d71c2b5f211329245eed86a700cc14a48f2bace3", "commit_date": "Wed Apr 13 15:17:12 2022 -0700", "commit_message": "Add missing requirements for NLP description method", "files_name": ["code/kg2c/requirements.txt"]}, {"commit_id": "a99c07fce1d2df22c00414b8660c82c796d9f2ed", "commit_date": "Wed Apr 13 15:16:49 2022 -0700", "commit_message": "Calculate category/neighbor counts including ancestors #1817", "files_name": ["code/kg2c/record_kg2c_meta_info.py"]}, {"commit_id": "722b86a1ae19e2abea7ff148741fc52f1f708e3e", "commit_date": "Wed Apr 13 14:18:07 2022 -0700", "commit_message": "Update 'slim' databases step #1810", "files_name": ["ISSUE_TEMPLATES/kg2rollout.md"]}, {"commit_id": "0862d0bbd6426e2353e75e39fc234a036cfd4183", "commit_date": "Mon Apr 11 10:37:06 2022 -0700", "commit_message": "#1818, add n_paths parameter", "files_name": ["code/ARAX/ARAXQuery/ARAX_infer.py"]}, {"commit_id": "19b4b8863d14eb2178c483f522ea16287f8d4b5f", "commit_date": "Mon Apr 11 00:38:02 2022 -0700", "commit_message": "#1387, reach out to all kps", "files_name": ["code/ARAX/ARAXQuery/ARAX_connect.py"]}, {"commit_id": "fc17ad3ba1b1fb0f1b8fc1f9ca5c54f0770a645f", "commit_date": "Sun Apr 10 23:33:24 2022 -0700", "commit_message": "#1818, add dtd predictions", "files_name": ["code/ARAX/ARAXQuery/ARAX_infer.py"]}, {"commit_id": "ade0556673c22769278057451d7d47d559921e89", "commit_date": "Sun Apr 10 23:21:17 2022 -0700", "commit_message": "#1818, added arax infer", "files_name": ["code/ARAX/ARAXQuery/ARAX_infer.py"]}, {"commit_id": "ba48fc35ae9019e14c5b03bb6e46ce854fbb5294", "commit_date": "Wed Apr 6 00:55:23 2022 -0700", "commit_message": "#1387, regen documentation", "files_name": ["code/ARAX/ARAXQuery/ARAX_connect.py", "code/ARAX/Documentation/DSL_Documentation.md"]}, {"commit_id": "bc3f5784cd11a18ae3d339f61ab9e86b25dc792a", "commit_date": "Tue Apr 5 23:46:16 2022 -0700", "commit_message": "#1387, added parameter description", "files_name": ["code/ARAX/ARAXQuery/ARAX_connect.py"]}, {"commit_id": "ea78b3cff3cdc9ef4b2a199d1a4f3e5ac48e78f2", "commit_date": "Tue Apr 5 23:40:08 2022 -0700", "commit_message": "#1387, add parameter check for break", "files_name": ["code/ARAX/ARAXQuery/ARAX_connect.py"]}], "windows_after": [{"commit_id": "4882d29be9a0fd886b8d06288d99057bc1512ef4", "commit_date": "Wed May 18 03:34:50 2022 +0000", "commit_message": "enable better logging and move the caching to a separate database because the production database is now read-only", "files_name": ["code/autocomplete/rtxcomplete.py"]}, {"commit_id": "3b20d511504c297a08d879bd78ce335cab338349", "commit_date": "Tue May 17 21:14:50 2022 -0700", "commit_message": "Merge branch 'master' of https://github.com/RTXteam/RTX", "files_name": ["f986a3771e89b7a3c7798dab2c0031fbea2e7cc9 - Tue May 17 22:16:16 2022 -0700 : fix http to https and fix Example query", "code/UI/OpenAPI/python-flask-server/RTX_OA3_TRAPI1.2_ARAX.yaml", "code/UI/OpenAPI/python-flask-server/openapi_server/openapi/openapi.yaml"]}, {"commit_id": "0eca43a8189cbfb60ce957087fb6c0c7c16a9cf9", "commit_date": "Wed May 18 13:28:19 2022 -0700", "commit_message": "#1818, added csv of saved top drugs response to allow for pandas backwards compatibility", "files_name": ["code/ARAX/ARAXQuery/Infer/data/top_n_drugs.csv"]}, {"commit_id": "b3be6915f879966ee69db665ca228fa79ffbc8c4", "commit_date": "Wed May 18 13:29:37 2022 -0700", "commit_message": "#1818, update infer code to expand one path at a time", "files_name": ["code/ARAX/ARAXQuery/ARAX_infer.py", "code/ARAX/ARAXQuery/ARAX_query.py"]}, {"commit_id": "530051dfffdaead6ef1a3b38ca0855d644201af6", "commit_date": "Wed May 18 13:34:55 2022 -0700", "commit_message": "Merge branch 'master' into issue1818", "files_name": ["9458f3aa14b5a809790b84d18e48a191a684aee8 - Wed May 18 13:35:26 2022 -0700 : Merge branch 'master' into arax_connect", "a8348017a664376cc28c5c0977d94ff0df8aff06 - Wed May 18 14:49:21 2022 -0700 : Fix ARAX tet suite config.domain", "DockerBuild/Merged-Dockerfile"]}, {"commit_id": "5cddb05f9b5a3fb07296da606326de5e10d33aff", "commit_date": "Wed May 18 15:13:06 2022 -0700", "commit_message": "#1839, update RTXConfigutation attributes", "files_name": ["code/RTXConfiguration.py"]}, {"commit_id": "42211c98bf97691e5b5342a11dbeb39a56aa7e4b", "commit_date": "Wed May 18 15:16:26 2022 -0700", "commit_message": "#1839, import re", "files_name": ["code/RTXConfiguration.py"]}, {"commit_id": "b66a8f3dcaf179a2a194f391ba756974738b5156", "commit_date": "Wed May 18 16:00:05 2022 -0700", "commit_message": "#1839, update domains for maturity level", "files_name": ["code/RTXConfiguration.py"]}, {"commit_id": "4d24dd6ad1fd0949a81920f745eb0f29b3326819", "commit_date": "Wed May 18 22:20:05 2022 -0700", "commit_message": "added some examples for some endpoints so that TryItOut works and for SmartAPI #1836", "files_name": ["code/UI/OpenAPI/python-flask-server/RTX_OA3_TRAPI1.2_ARAX.yaml", "code/UI/OpenAPI/python-flask-server/openapi_server/openapi/openapi.yaml"]}, {"commit_id": "212e9be873ae5c567115949d6b958a746824999e", "commit_date": "Wed May 18 22:52:48 2022 -0700", "commit_message": "add support for return_minimal_metadata #1792", "files_name": ["code/ARAX/ARAXQuery/ARAX_query.py", "code/ARAX/NodeSynonymizer/Exceptions.txt", "code/ARAX/NodeSynonymizer/sri_node_normalizer.py"]}, {"commit_id": "2f40f2dc3e1a292d3aad62b067282f7757e0cbe2", "commit_date": "Thu May 19 08:49:40 2022 -0700", "commit_message": "Make return_minimal_metadata an allowed parameter #1792", "files_name": ["code/ARAX/ARAXQuery/Expand/expand_utilities.py"]}, {"commit_id": "7196c0fdb5164632c4883ead79463694e7401150", "commit_date": "Fri May 20 00:02:52 2022 +0000", "commit_message": "put return_minimal_metadata into query_options for later use #1792", "files_name": ["code/ARAX/ARAXQuery/ARAX_query.py"]}, {"commit_id": "5cef4cb72732e3e060d7c08395409200419a2f9e", "commit_date": "Thu May 19 17:22:11 2022 -0700", "commit_message": "Decorate only when return_minimal_metadata is false #1792", "files_name": ["code/ARAX/ARAXQuery/ARAX_expander.py", "code/ARAX/ARAXQuery/Expand/expand_utilities.py", "code/ARAX/ARAXQuery/Expand/trapi_querier.py"]}, {"commit_id": "ee166adefc816457f4e6c2f9c41de041f2493370", "commit_date": "Wed May 25 12:19:49 2022 -0700", "commit_message": "merge master into issue1818", "files_name": ["8293d6b0f0a57423d9a22cb1cb057117fa277311 - Wed May 25 14:59:31 2022 -0700 : Add all ARAX servers and their maturity level", "code/UI/OpenAPI/python-flask-server/openapi_server/openapi/openapi.yaml"]}, {"commit_id": "8c3a87d6e76b61b01aa44dfdad8a8dafde22b5f0", "commit_date": "Thu May 26 01:20:59 2022 +0000", "commit_message": "Bump ujson from 5.1.0 to 5.2.0", "files_name": ["requirements.txt"]}, {"commit_id": "ca41842f08c075930c447078d750fe400eaab0f7", "commit_date": "Thu May 26 18:04:26 2022 -0400", "commit_message": "Merge pull request #1845 from RTXteam/dependabot/pip/ujson-5.2.0", "files_name": ["6f1ff4b4882e87d651e4143a27fed3f6b2dc33b6 - Thu May 26 15:13:49 2022 -0700 : Update kgx-validation-and-metagraph.sh", "code/kg2c/kgx-validation-and-metagraph.sh"]}, {"commit_id": "5ca3d9aa5a09a64eb15bac6d5e7dce59d54a2077", "commit_date": "Mon May 30 03:24:46 2022 -0700", "commit_message": "#1818, sped up TRAPI generation step", "files_name": ["code/ARAX/ARAXQuery/ARAX_infer.py"]}, {"commit_id": "f1f3261d032ae5d2435316c9f7f8832db2f97eff", "commit_date": "Mon May 30 03:25:26 2022 -0700", "commit_message": "#1818, added test", "files_name": ["code/ARAX/test/test_ARAX_infer.py"]}, {"commit_id": "352df51f7bd8aa791786478820b44ef0349f8c48", "commit_date": "Mon May 30 03:25:48 2022 -0700", "commit_message": "merge master into issue1818", "files_name": ["e4083bfe6774302391f77e2b8376eb07811ade14 - Tue May 31 13:54:26 2022 -0700 : #1818, breakout subgraph generation into infer utilities", "code/ARAX/ARAXQuery/ARAX_infer.py", "code/ARAX/ARAXQuery/Infer/scripts/infer_utilities.py"]}, {"commit_id": "822ea5adcd42f62a64cf0ae0d13aa7a33fb98585", "commit_date": "Wed Jun 1 13:50:52 2022 -0700", "commit_message": "Added CLI and modifications to smartapi.py for flexible and easy getting of TRAPI endpoints and KPs usage is explained in the file", "files_name": ["code/ARAX/ARAXQuery/Expand/smartapi.py"]}, {"commit_id": "455ceaac3f813f0c211cf54fe4d0c7b3a893e6cb", "commit_date": "Wed Jun 1 15:47:24 2022 -0700", "commit_message": "Changed CLI arg and function parameter 'strict' to be 'flexible' and to be default false on the CLI", "files_name": ["code/ARAX/ARAXQuery/Expand/smartapi.py"]}, {"commit_id": "a0a5e3c76b91e77def047e33cd85579e84880002", "commit_date": "Wed Jun 1 15:48:15 2022 -0700", "commit_message": "Typo fix", "files_name": ["code/ARAX/ARAXQuery/Expand/smartapi.py"]}, {"commit_id": "c456de80a7810d0dcceffcc5f1e57968a20b1b4b", "commit_date": "Sat Jun 4 23:13:31 2022 -0700", "commit_message": "#1818, added bug fix", "files_name": ["code/ARAX/ARAXQuery/Infer/scripts/infer_utilities.py"]}, {"commit_id": "d77963ef9dc77a7400d07480902bfac6cf293c2b", "commit_date": "Sat Jun 4 23:15:37 2022 -0700", "commit_message": "merge master into arax_connect", "files_name": ["014e6e0388608daa382dfd84edbf664695b6ab82 - Sat Jun 4 23:19:04 2022 -0700 : #1818, update dockerfile to checkout issue1818", "DockerBuild/Merged-Dockerfile"]}, {"commit_id": "3a4297c1a0083ac9a2f5dd56683af07ce2f0e1b9", "commit_date": "Sun Jun 5 00:01:59 2022 -0700", "commit_message": "#1387, regenerated dsl documentation", "files_name": ["code/ARAX/Documentation/DSL_Documentation.md"]}, {"commit_id": "e66dbde743e3817de09a9dc90b70fd881f8aaddc", "commit_date": "Sun Jun 5 00:05:03 2022 -0700", "commit_message": "#1387, reverted github actions changes", "files_name": [".github/workflows/pytest.yml"]}, {"commit_id": "e62859414684c7dbd60b2fd00d17fd5dd162f1b4", "commit_date": "Sun Jun 5 14:18:57 2022 -0400", "commit_message": "update doc string", "files_name": ["code/ARAX/ARAXQuery/Infer/scripts/infer_utilities.py"]}, {"commit_id": "cab8378499da447f483d95e5b510bab6d9a9f0b5", "commit_date": "Sun Jun 5 14:20:47 2022 -0400", "commit_message": "update comments", "files_name": ["code/ARAX/ARAXQuery/ARAX_infer.py"]}, {"commit_id": "43928908c5ec80dc2f370f81f4240f5bccbbdf6a", "commit_date": "Sun Jun 5 11:22:58 2022 -0700", "commit_message": "#1818, regen documantation", "files_name": ["code/ARAX/Documentation/DSL_Documentation.md"]}, {"commit_id": "dd1a93fac0a9a3fc60f5ffe7fb6535492d2b00a7", "commit_date": "Sun Jun 5 11:24:58 2022 -0700", "commit_message": "#1818, regen documantation with infer added", "files_name": ["code/ARAX/Documentation/DSL_Documentation.md"]}, {"commit_id": "9cf40f7aeab1b4674556d18c29fa3003926a87d1", "commit_date": "Sun Jun 5 11:52:48 2022 -0700", "commit_message": "Merge pull request #1846 from RTXteam/arax_connect", "files_name": ["37c3675ea692db777a3c09265f0dc0c793e3706d - Mon Jun 6 14:18:59 2022 -0700 : Added the -p/--pretty flag to the CLI that uses new smartapi._collate_and_print method which will aggregate smartapi entries that have the same infores name and print them in a formatted table. This is intended to get users a quick view of which endpoints have which maturities", "code/ARAX/ARAXQuery/Expand/smartapi.py"]}, {"commit_id": "8ddb9d51854fc2111736f332212d21ffbfd909f3", "commit_date": "Mon Jun 6 14:22:35 2022 -0700", "commit_message": "Fixed bug with _collate_and_print that would fail when working with endpoints that have no 'infores_name' or no 'component' attribute", "files_name": ["code/ARAX/ARAXQuery/Expand/smartapi.py"]}, {"commit_id": "752697afaeb62da778753bc47ec65a387c079bdf", "commit_date": "Mon Jun 6 17:36:44 2022 -0700", "commit_message": "Added docstring, modified comments, and moved argparser setup outside of main", "files_name": ["code/ARAX/ARAXQuery/Expand/smartapi.py"]}, {"commit_id": "728c7e886221741de2b86c16e5b3e622276e687c", "commit_date": "Mon Jun 6 17:42:18 2022 -0700", "commit_message": "Typo fixes", "files_name": ["code/ARAX/ARAXQuery/Expand/smartapi.py"]}, {"commit_id": "b17af8d8a3a210701eb6cc8fc75dcc929e5d9497", "commit_date": "Mon Jun 6 18:00:33 2022 -0700", "commit_message": "Renamed get_trapi_kps to get_kps for convenience", "files_name": ["code/ARAX/ARAXQuery/Expand/smartapi.py"]}, {"commit_id": "5890dd2c18dc53607c6a3ecdabade9573f4fa3ae", "commit_date": "Mon Jun 6 18:09:15 2022 -0700", "commit_message": "Fixed bug in collate_and_print when there are no endpoints", "files_name": ["code/ARAX/ARAXQuery/Expand/smartapi.py"]}, {"commit_id": "7033fcbbee82fe442acd68307f3359cd8c402da6", "commit_date": "Mon Jun 6 18:22:50 2022 -0700", "commit_message": "Fixed error in collate_and_print when no endpoints are given", "files_name": ["code/ARAX/ARAXQuery/Expand/smartapi.py"]}, {"commit_id": "58ae4a97925e9878425f3bf4463ebac3447d0e47", "commit_date": "Wed Jun 15 13:08:29 2022 -0700", "commit_message": "Update kg2rollout.md", "files_name": ["ISSUE_TEMPLATES/kg2rollout.md"]}, {"commit_id": "daa218ef205eeab2e8d95e70e8fee2f147115f65", "commit_date": "Thu Jun 16 18:37:46 2022 -0700", "commit_message": "Only resultify the expanded portion of the QG #1848", "files_name": ["code/ARAX/ARAXQuery/ARAX_expander.py", "code/ARAX/ARAXQuery/ARAX_resultify.py", "code/ARAX/ARAXQuery/Overlay/compute_jaccard.py", "code/ARAX/ARAXQuery/Overlay/compute_ngd.py", "code/ARAX/ARAXQuery/Overlay/fisher_exact_test.py", "code/ARAX/ARAXQuery/Overlay/overlay_clinical_info.py", "code/ARAX/ARAXQuery/Overlay/overlay_exposures_data.py", "code/ARAX/ARAXQuery/Overlay/predict_drug_treats_disease.py", "code/ARAX/test/test_ARAX_resultify.py"]}, {"commit_id": "ffc885c793505f861d79a8a67430d20e55662bfc", "commit_date": "Fri Jun 17 17:32:17 2022 -0700", "commit_message": "Add step to turn on KG2pre neo4j", "files_name": ["code/ARAX/ARAXQuery/Overlay/ngd/README.md"]}, {"commit_id": "f9bf67607376b63758cf0706e5317c1093a46108", "commit_date": "Tue Jun 21 12:58:13 2022 -0400", "commit_message": "fix handling of unsupported operation, add test for this. Fixes #1850", "files_name": ["code/ARAX/ARAXQuery/ARAX_query.py", "code/ARAX/ARAXQuery/operation_to_ARAXi.py", "code/ARAX/test/test_ARAX_translate.py"]}, {"commit_id": "f3555ed7ce6561084ce95d316217d5b5210b87cc", "commit_date": "Tue Jun 21 21:22:32 2022 +0000", "commit_message": "Bump numpy from 1.21.3 to 1.22.0", "files_name": ["requirements.txt"]}, {"commit_id": "150a2b3f106f24d3a7bd68413c298da78346db20", "commit_date": "Wed Jun 22 08:32:02 2022 +0000", "commit_message": "Capture \"oneOf\" elements; add user warning", "files_name": ["code/UI/interactive/wf2js.py", "code/UI/interactive/wfoperations.js"]}, {"commit_id": "07f613e5579f0eefc559a540dba6737f97571d9b", "commit_date": "Wed Jun 22 08:32:50 2022 +0000", "commit_message": "- Capture and report errors during streaming response - Display semmeddb predicates summary in Provenance section (from Relay) - (Re-)Enable Cancel button for \"unknown\" Workflow operations - Implement \"asterisk\" warnings for Workflow operations - Small layout fixes and adjustments", "files_name": ["code/UI/interactive/index.html", "code/UI/interactive/rtx.js", "code/UI/interactive/rtx.version"]}, {"commit_id": "4b9c0155b91a559880a1fe700a35d96111335434", "commit_date": "Wed Jun 22 21:47:31 2022 +0000", "commit_message": "add new ars-prod instance and add support for actor 19", "files_name": ["code/ARAX/ResponseCache/response_cache.py"]}, {"commit_id": "e5e5dd69909e132dbd6e7dddd75cdd0082ee9bcf", "commit_date": "Wed Jun 22 14:48:53 2022 -0700", "commit_message": "Merge branch 'master' of github.com:RTXteam/RTX into issue1466", "files_name": ["f53b269f0916c21bd04b2c78bd4e777fe0492184 - Wed Jun 22 21:53:34 2022 +0000 : Merge remote-tracking branch 'origin/master' into dependabot/pip/numpy-1.22.0", "b597b8511944f18dbb31c95bed40eb36adca598b - Wed Jun 22 21:54:48 2022 +0000 : Merge remote-tracking branch 'origin/dependabot/pip/numpy-1.22.0'", "69a8f24f33b880f805e57ab280010fd03033675b - Wed Jun 22 14:56:37 2022 -0700 : Merge remote-tracking branch 'origin/issue1466'", "86f9e48f2f9edb56abb9d04eefbe7bf9a371ebba - Wed Jun 22 14:57:46 2022 -0700 : Merge branch 'master' of github.com:RTXteam/RTX into issue1466", "0af07b6261864b2797d0df15c5f120c4578cf1a4 - Wed Jun 22 14:58:53 2022 -0700 : Merge branch 'master' of github.com:RTXteam/RTX", "2a602d51ef668d4d7e795c1997844e8f9eb0ccf9 - Wed Jun 22 22:08:02 2022 +0000 : add qedge_keys to fill params #1848", "code/UI/OpenAPI/python-flask-server/openapi_server/openapi/openapi.yaml"]}, {"commit_id": "ea2a100e985952aa08936163dfe14065b5ef8fd1", "commit_date": "Wed Jun 22 15:10:01 2022 -0700", "commit_message": "Merge remote-tracking branch 'origin/master' into issue1848 #1848", "files_name": ["e30dbccf86cdf72cbc12331cb21b181dd76f0dbf - Wed Jun 22 15:11:03 2022 -0700 : Merge remote-tracking branch 'origin/issue1848' #1848", "2b9c282b24a55c0705f4101a0ce048d9183efab7 - Wed Jun 22 22:17:34 2022 +0000 : fix line wrap", "code/UI/OpenAPI/python-flask-server/openapi_server/openapi/openapi.yaml"]}, {"commit_id": "71aacff9b962d459acd8a84085353071ba6b7ad9", "commit_date": "Wed Jun 22 15:26:45 2022 -0700", "commit_message": "add all servers and add fill qedge_keys", "files_name": ["code/UI/OpenAPI/python-flask-server/RTX_OA3_TRAPI1.2_ARAX.yaml"]}, {"commit_id": "61e10771290b6b8b48a0d42f0d266259fa2a3000", "commit_date": "Wed Jun 22 15:29:06 2022 -0700", "commit_message": "add historical file", "files_name": ["code/UI/OpenAPI/python-flask-server/TranslatorReasonerAPI_1.2.0.yaml"]}, {"commit_id": "eb2d2596ab4afcad2b167e05fdb5ef450dd672f7", "commit_date": "Wed Jun 22 18:32:37 2022 -0400", "commit_message": "add test for #1848 and mark one test as slow", "files_name": ["code/ARAX/test/test_ARAX_connect.py", "code/ARAX/test/test_ARAX_workflows.py"]}, {"commit_id": "fbf2825955ce5bf8d49f3b87710413052a12ee00", "commit_date": "Wed Jun 22 18:34:16 2022 -0400", "commit_message": "Merge branch 'master' of https://github.com/RTXteam/RTX", "files_name": ["c75ac918b4adb137e3baa2d15052aac53678cb91 - Wed Jun 22 18:52:05 2022 -0400 : undue version bump due to conflict with python version in CI", "requirements.txt"]}, {"commit_id": "2d20f0be7e78ea712fa38d9d2ffb1c6e3c7788b1", "commit_date": "Thu Jun 23 04:48:34 2022 +0000", "commit_message": "Add knowledge_type property", "files_name": ["code/UI/OpenAPI/python-flask-server/KG2/openapi_server/openapi/openapi.yaml", "code/UI/OpenAPI/python-flask-server/RTX_OA3_TRAPI1.2_ARAX.yaml", "code/UI/OpenAPI/python-flask-server/RTX_OA3_TRAPI1.2_KG2.yaml", "code/UI/OpenAPI/python-flask-server/openapi_server/openapi/openapi.yaml"]}], "parents": [{"commit_id_before": "ebdb3856d3ce23df62fd7fc3186d3f5f13ea4337", "url_before": "https://api.github.com/repos/RTXteam/RTX/commits/ebdb3856d3ce23df62fd7fc3186d3f5f13ea4337", "html_url_before": "https://github.com/RTXteam/RTX/commit/ebdb3856d3ce23df62fd7fc3186d3f5f13ea4337"}], "details": [{"raw_url": "https://github.com/RTXteam/RTX/raw/9bb109b0014f952f315c7b89e0f29a9ba84ee04c/code%2Fautocomplete%2Fserver.py", "code": "import tornado.ioloop\nimport tornado.web\nimport os\n#import sqlite3\nimport json\nimport sys\nimport rtxcomplete\nimport traceback\nimport re\n\nroot = os.path.dirname(os.path.abspath(__file__))\nrtxcomplete.load()\n\n\n#### Sanitize the client-provided callback function name\ndef sanitize_callback(callback):\n    if callback is None or not isinstance(callback,str):\n        return 'autocomplete_callback'\n    match = re.match(r'([a-zA-Z0-9_]+).*$', callback)\n    if match:\n         callback = match.group(1)\n    else:\n         callback = 'autocomplete_callback'\n    return callback\n\n\nclass autoSearch(tornado.web.RequestHandler):\n\n    def get(self, arg,word=None):\n        try:\n            limit = self.get_argument(\"limit\")\n            word = self.get_argument(\"word\")\n            callback = sanitize_callback(self.get_argument(\"callback\"))\n\n            result = rtxcomplete.prefix(word,limit)\n            \n            result = callback+\"(\"+json.dumps(result)+\");\"\n            \n            self.write(result)\n            \n        except:\n            print(sys.exc_info()[:])\n            traceback.print_tb(sys.exc_info()[-1])\n            #print sys.exc_info()[2]\n            self.write(\"error\")\n\nclass fuzzySearch(tornado.web.RequestHandler):\n    def get(self, arg,word=None):\n        #print \"matched fuzzy\"\n        try:\n            limit = self.get_argument(\"limit\")\n            word = self.get_argument(\"word\")\n            callback = sanitize_callback(self.get_argument(\"callback\"))\n            #print word\n            #cursor.execute(\"SELECT word FROM spell WHERE word MATCH \\\"\" + word + \"\\\" LIMIT \" + limit)\n            #cursor.execute(\"SELECT word FROM spell WHERE word MATCH \\\"\" + word + \"*\\\" LIMIT \" + limit)\n            result = rtxcomplete.fuzzy(word,limit);\n            #rows = cursor.fetchall()\n            #print type(rows)\n            result = callback+\"(\"+json.dumps(result)+\");\"\n            #print arg, result\n            #if (len(rows) > 0):\n            self.write(result)\n            #else:\n            #self.write(callback+\"(\"+json.dumps([[\"NO SUGGESTIONS\"]])+\");\")\n            #self.write(json.dumps(rows))\n        except:\n            print(sys.exc_info()[:])\n            traceback.print_tb(sys.exc_info()[-1])\n            #print sys.exc_info()[:]\n            self.write(\"error\")\n\nclass autofuzzySearch(tornado.web.RequestHandler):\n    def get(self, arg,word=None):\n        #print \"matched autofuzzy\"\n        try:\n            limit = self.get_argument(\"limit\")\n            word = self.get_argument(\"word\")\n            callback = sanitize_callback(self.get_argument(\"callback\"))\n            #print word\n            #cursor.execute(\"SELECT word FROM spell WHERE word MATCH \\\"\" + word + \"\\\" LIMIT \" + limit)\n            #cursor.execute(\"SELECT word FROM spell WHERE word MATCH \\\"\" + word + \"*\\\" LIMIT \" + limit)\n            result = rtxcomplete.autofuzzy(word,limit);\n            #rows = cursor.fetchall()\n            #print type(rows)\n            result = callback+\"(\"+json.dumps(result)+\");\"\n            #print arg, result\n            #if (len(rows) > 0):\n            self.write(result)\n            #else:\n            #self.write(callback+\"(\"+json.dumps([[\"NO SUGGESTIONS\"]])+\");\")\n            #self.write(json.dumps(rows))\n        except:\n            print(sys.exc_info()[:])\n            traceback.print_tb(sys.exc_info()[-1])\n            #print sys.exc_info()[:]\n            self.write(\"error\")\n\n\nclass nodesLikeSearch(tornado.web.RequestHandler):\n    def get(self, arg,word=None):\n        try:\n            limit = self.get_argument(\"limit\")\n            word = self.get_argument(\"word\")\n            callback = sanitize_callback(self.get_argument(\"callback\"))\n            result = rtxcomplete.get_nodes_like(word,limit);\n            result = callback+\"(\"+json.dumps(result)+\");\"\n            self.write(result)\n        except:\n            print(sys.exc_info()[:])\n            traceback.print_tb(sys.exc_info()[-1])\n            self.write(\"error\")\n\n\nclass defineSearch(tornado.web.RequestHandler):\n    def get(self, arg,word=None):\n        print(\"matched define search: not implemented\")\n        self.write(\"\")\n            \ndef make_https_app():\n    return tornado.web.Application([\n        #(r\"/\", MainHandler),\n        (r\"/autofuzzy(.*)\", autofuzzySearch),\n        (r\"/auto(.*)\", autoSearch),\n        (r\"/fuzzy(.*)\", fuzzySearch),\n        (r\"/define(.*)\", defineSearch),\n        (r\"/nodeslike(.*)\", nodesLikeSearch),\n        (r\"/(.*)\", tornado.web.StaticFileHandler,\n         {\"path\": root, \"default_filename\": \"rtxcomplete.html\"}),\n    ],\n        compress_response= True)\n\nclass redirect_handler(tornado.web.RequestHandler):\n    def prepare(self):\n        if self.request.protocol == 'http':\n            if self.request.host == \"rtxcomplete.ixlab.org\":\n                self.redirect('https://'+self.request.host, permanent=False)\n                \n    def get(self):\n        self.write(\"Looks like you're trying to access rtxcomplete at the wrong host name.\")\n        self.write(\"<br>Please make sure the address is correct: 'rtxcomplete.ixlab.org'\")\n\ndef make_redirect_app():\n    return tornado.web.Application([\n        (r'/', redirect_handler)\n    ])\n\nif __name__ == \"__main__\":\n    print(\"root: \" + root)\n\n    if True: #FW/EWD: clean this up later\n        http_app = make_https_app()\n        http_server = tornado.httpserver.HTTPServer(http_app)\n        http_server.listen(4999)\n\n    else:\n        redirect_app = make_redirect_app()\n        redirect_app.listen(80)\n\n        https_app = make_https_app()\n        https_server = tornado.httpserver.HTTPServer(https_app, ssl_options={\n            \"certfile\": \"/etc/letsencrypt/live/rtxcomplete.ixlab.org/fullchain.pem\",\n            \"keyfile\" : \"/etc/letsencrypt/live/rtxcomplete.ixlab.org/privkey.pem\",\n            })\n        https_server.listen(443)\n\n    tornado.ioloop.IOLoop.current().start()\n", "code_before": "import tornado.ioloop\nimport tornado.web\nimport os\n#import sqlite3\nimport json\nimport sys\nimport rtxcomplete\nimport traceback\n\n#class MainHandler(tornado.web.RequestHandler):\n#    def get(self):\n#        self.write(\"Hello, world\")\n#print __file__\n\nroot = os.path.dirname(os.path.abspath(__file__))\nrtxcomplete.load()\n#conn = sqlite3.connect('dict.db')\n#conn.enable_load_extension(True)\n#conn.load_extension(\"./spellfix\")\n#cursor = conn.cursor()\n\nclass autoSearch(tornado.web.RequestHandler):\n\n    def get(self, arg,word=None):\n        #print \"match auto\"\n        try:\n            limit = self.get_argument(\"limit\")\n            word = self.get_argument(\"word\")\n            callback = self.get_argument(\"callback\") #jsonp\n\n            result = rtxcomplete.prefix(word,limit)\n\n            result = callback+\"(\"+json.dumps(result)+\");\" #jsonp\n            #result = json.dumps(result) #typeahead\n            \n            self.write(result)\n            \n        except:\n            print(sys.exc_info()[:])\n            traceback.print_tb(sys.exc_info()[-1])\n            #print sys.exc_info()[2]\n            self.write(\"error\")\n\nclass fuzzySearch(tornado.web.RequestHandler):\n    def get(self, arg,word=None):\n        #print \"matched fuzzy\"\n        try:\n            limit = self.get_argument(\"limit\")\n            word = self.get_argument(\"word\")\n            callback = self.get_argument(\"callback\")\n            #print word\n            #cursor.execute(\"SELECT word FROM spell WHERE word MATCH \\\"\" + word + \"\\\" LIMIT \" + limit)\n            #cursor.execute(\"SELECT word FROM spell WHERE word MATCH \\\"\" + word + \"*\\\" LIMIT \" + limit)\n            result = rtxcomplete.fuzzy(word,limit);\n            #rows = cursor.fetchall()\n            #print type(rows)\n            result = callback+\"(\"+json.dumps(result)+\");\"\n            #print arg, result\n            #if (len(rows) > 0):\n            self.write(result)\n            #else:\n            #self.write(callback+\"(\"+json.dumps([[\"NO SUGGESTIONS\"]])+\");\")\n            #self.write(json.dumps(rows))\n        except:\n            print(sys.exc_info()[:])\n            traceback.print_tb(sys.exc_info()[-1])\n            #print sys.exc_info()[:]\n            self.write(\"error\")\n\nclass autofuzzySearch(tornado.web.RequestHandler):\n    def get(self, arg,word=None):\n        #print \"matched autofuzzy\"\n        try:\n            limit = self.get_argument(\"limit\")\n            word = self.get_argument(\"word\")\n            callback = self.get_argument(\"callback\")\n            #print word\n            #cursor.execute(\"SELECT word FROM spell WHERE word MATCH \\\"\" + word + \"\\\" LIMIT \" + limit)\n            #cursor.execute(\"SELECT word FROM spell WHERE word MATCH \\\"\" + word + \"*\\\" LIMIT \" + limit)\n            result = rtxcomplete.autofuzzy(word,limit);\n            #rows = cursor.fetchall()\n            #print type(rows)\n            result = callback+\"(\"+json.dumps(result)+\");\"\n            #print arg, result\n            #if (len(rows) > 0):\n            self.write(result)\n            #else:\n            #self.write(callback+\"(\"+json.dumps([[\"NO SUGGESTIONS\"]])+\");\")\n            #self.write(json.dumps(rows))\n        except:\n            print(sys.exc_info()[:])\n            traceback.print_tb(sys.exc_info()[-1])\n            #print sys.exc_info()[:]\n            self.write(\"error\")\n\n\nclass nodesLikeSearch(tornado.web.RequestHandler):\n    def get(self, arg,word=None):\n        #try:\n        if 1 == 1:\n            limit = self.get_argument(\"limit\")\n            word = self.get_argument(\"word\")\n            callback = self.get_argument(\"callback\")\n            result = rtxcomplete.get_nodes_like(word,limit);\n            result = callback+\"(\"+json.dumps(result)+\");\"\n            self.write(result)\n        #except:\n        #    print(sys.exc_info()[:])\n        #    traceback.print_tb(sys.exc_info()[-1])\n        #    self.write(\"error\")\n\n\nclass defineSearch(tornado.web.RequestHandler):\n    def get(self, arg,word=None):\n        print(\"matched define search: not implemented\")\n        self.write(\"\")\n            \ndef make_https_app():\n    return tornado.web.Application([\n        #(r\"/\", MainHandler),\n        (r\"/autofuzzy(.*)\", autofuzzySearch),\n        (r\"/auto(.*)\", autoSearch),\n        (r\"/fuzzy(.*)\", fuzzySearch),\n        (r\"/define(.*)\", defineSearch),\n        (r\"/nodeslike(.*)\", nodesLikeSearch),\n        (r\"/(.*)\", tornado.web.StaticFileHandler,\n         {\"path\": root, \"default_filename\": \"rtxcomplete.html\"}),\n    ],\n        compress_response= True)\n\nclass redirect_handler(tornado.web.RequestHandler):\n    def prepare(self):\n        if self.request.protocol == 'http':\n            if self.request.host == \"rtxcomplete.ixlab.org\":\n                self.redirect('https://'+self.request.host, permanent=False)\n                \n    def get(self):\n        self.write(\"Looks like you're trying to access rtxcomplete at the wrong host name.\")\n        self.write(\"<br>Please make sure the address is correct: 'rtxcomplete.ixlab.org'\")\n\ndef make_redirect_app():\n    return tornado.web.Application([\n        (r'/', redirect_handler)\n    ])\n\nif __name__ == \"__main__\":\n    print(\"root: \" + root)\n\n    if True: #FW/EWD: clean this up later\n        http_app = make_https_app()\n        http_server = tornado.httpserver.HTTPServer(http_app)\n        http_server.listen(4999)\n\n    else:\n        redirect_app = make_redirect_app()\n        redirect_app.listen(80)\n\n        https_app = make_https_app()\n        https_server = tornado.httpserver.HTTPServer(https_app, ssl_options={\n            \"certfile\": \"/etc/letsencrypt/live/rtxcomplete.ixlab.org/fullchain.pem\",\n            \"keyfile\" : \"/etc/letsencrypt/live/rtxcomplete.ixlab.org/privkey.pem\",\n            })\n        https_server.listen(443)\n\n    tornado.ioloop.IOLoop.current().start()\n", "patch": "@@ -6,32 +6,35 @@\n import sys\n import rtxcomplete\n import traceback\n-\n-#class MainHandler(tornado.web.RequestHandler):\n-#    def get(self):\n-#        self.write(\"Hello, world\")\n-#print __file__\n+import re\n \n root = os.path.dirname(os.path.abspath(__file__))\n rtxcomplete.load()\n-#conn = sqlite3.connect('dict.db')\n-#conn.enable_load_extension(True)\n-#conn.load_extension(\"./spellfix\")\n-#cursor = conn.cursor()\n+\n+\n+#### Sanitize the client-provided callback function name\n+def sanitize_callback(callback):\n+    if callback is None or not isinstance(callback,str):\n+        return 'autocomplete_callback'\n+    match = re.match(r'([a-zA-Z0-9_]+).*$', callback)\n+    if match:\n+         callback = match.group(1)\n+    else:\n+         callback = 'autocomplete_callback'\n+    return callback\n+\n \n class autoSearch(tornado.web.RequestHandler):\n \n     def get(self, arg,word=None):\n-        #print \"match auto\"\n         try:\n             limit = self.get_argument(\"limit\")\n             word = self.get_argument(\"word\")\n-            callback = self.get_argument(\"callback\") #jsonp\n+            callback = sanitize_callback(self.get_argument(\"callback\"))\n \n             result = rtxcomplete.prefix(word,limit)\n-\n-            result = callback+\"(\"+json.dumps(result)+\");\" #jsonp\n-            #result = json.dumps(result) #typeahead\n+            \n+            result = callback+\"(\"+json.dumps(result)+\");\"\n             \n             self.write(result)\n             \n@@ -47,7 +50,7 @@ def get(self, arg,word=None):\n         try:\n             limit = self.get_argument(\"limit\")\n             word = self.get_argument(\"word\")\n-            callback = self.get_argument(\"callback\")\n+            callback = sanitize_callback(self.get_argument(\"callback\"))\n             #print word\n             #cursor.execute(\"SELECT word FROM spell WHERE word MATCH \\\"\" + word + \"\\\" LIMIT \" + limit)\n             #cursor.execute(\"SELECT word FROM spell WHERE word MATCH \\\"\" + word + \"*\\\" LIMIT \" + limit)\n@@ -73,7 +76,7 @@ def get(self, arg,word=None):\n         try:\n             limit = self.get_argument(\"limit\")\n             word = self.get_argument(\"word\")\n-            callback = self.get_argument(\"callback\")\n+            callback = sanitize_callback(self.get_argument(\"callback\"))\n             #print word\n             #cursor.execute(\"SELECT word FROM spell WHERE word MATCH \\\"\" + word + \"\\\" LIMIT \" + limit)\n             #cursor.execute(\"SELECT word FROM spell WHERE word MATCH \\\"\" + word + \"*\\\" LIMIT \" + limit)\n@@ -96,18 +99,17 @@ def get(self, arg,word=None):\n \n class nodesLikeSearch(tornado.web.RequestHandler):\n     def get(self, arg,word=None):\n-        #try:\n-        if 1 == 1:\n+        try:\n             limit = self.get_argument(\"limit\")\n             word = self.get_argument(\"word\")\n-            callback = self.get_argument(\"callback\")\n+            callback = sanitize_callback(self.get_argument(\"callback\"))\n             result = rtxcomplete.get_nodes_like(word,limit);\n             result = callback+\"(\"+json.dumps(result)+\");\"\n             self.write(result)\n-        #except:\n-        #    print(sys.exc_info()[:])\n-        #    traceback.print_tb(sys.exc_info()[-1])\n-        #    self.write(\"error\")\n+        except:\n+            print(sys.exc_info()[:])\n+            traceback.print_tb(sys.exc_info()[-1])\n+            self.write(\"error\")\n \n \n class defineSearch(tornado.web.RequestHandler):", "file_path": "files/2022_5/336", "file_language": "py", "file_name": "code/autocomplete/server.py", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 0, "llm_check": 1, "static_check": 0, "static": {"rats": [false, []], "semgrep": [false, []]}, "target": -1, "function_before": [], "function_after": []}], "outdated": 0, "cwe_descripiton": "", "cwe_consequence": "", "cwe_method": "", "cwe_solution": ""}
