{"index": 7257, "cve_id": "CVE-2022-24710", "cwe_id": ["CWE-79"], "cve_language": "Python", "cve_description": "Weblate is a copyleft software web-based continuous localization system. Versions prior to 4.11 do not properly neutralize user input used in user name and language fields. Due to this improper neutralization it is possible to perform cross-site scripting via these fields. The issues were fixed in the 4.11 release. Users unable to upgrade are advised to add their own neutralize logic.", "cvss": "5.4", "publish_date": "February 25, 2022", "AV": "NETWORK", "AC": "NETWORK", "PR": "LOW", "UI": "REQUIRED", "S": "CHANGED", "C": "LOW", "I": "LOW", "A": "NONE", "commit_id": "9e19a8414337692cc90da2a91c9af5420f2952f1", "commit_message": "js: Add missing escaping to username completion\n\nFixes https://hackerone.com/reports/1486674", "commit_date": "2022-02-22T20:00:41Z", "project": "weblateorg/weblate", "url": "https://api.github.com/repos/WeblateOrg/weblate/commits/9e19a8414337692cc90da2a91c9af5420f2952f1", "html_url": "https://github.com/WeblateOrg/weblate/commit/9e19a8414337692cc90da2a91c9af5420f2952f1", "windows_before": [{"commit_id": "f2e5be7b0849405ebe56c7da660f2ca8f0b4121a", "commit_date": "Mon Feb 21 19:15:07 2022 +0000", "commit_message": "[pre-commit.ci] pre-commit autoupdate", "files_name": [".pre-commit-config.yaml"]}, {"commit_id": "c2b01df5bdba2fcf4b91924711b81669dab79be0", "commit_date": "Mon Feb 21 07:15:25 2022 +0100", "commit_message": "stats: Fix crash when deleting language from admin", "files_name": ["weblate/utils/stats.py"]}, {"commit_id": "0b30620f21a77d12084954e5393e6a81a9595f7f", "commit_date": "Sun Feb 20 16:10:58 2022 +0100", "commit_message": "add-ons: Fix typo in attribute name", "files_name": ["weblate/addons/generate.py"]}, {"commit_id": "22d577b1f1e88665a88b4569380148030e0f8389", "commit_date": "Sun Feb 20 15:57:27 2022 +0100", "commit_message": "reports: Escape user names in generated reports", "files_name": ["weblate/trans/tests/test_reports.py", "weblate/trans/views/reports.py"]}, {"commit_id": "0df9304d2c05e5f8af33070f52537ff2bf7767f5", "commit_date": "Sun Feb 20 15:30:31 2022 +0100", "commit_message": "formats: Add context validation", "files_name": ["weblate/formats/base.py", "weblate/formats/ttkit.py", "weblate/trans/models/translation.py", "weblate/trans/tests/test_edit.py"]}, {"commit_id": "548911f905d8009af1b234dd669c9d8329e511d4", "commit_date": "Fri Feb 18 18:11:48 2022 +0100", "commit_message": "docker: allow changing `DEFAULT_PULL_MESSAGE`", "files_name": ["docs/admin/config.rst", "docs/admin/install/docker.rst", "weblate/settings_docker.py"]}, {"commit_id": "a0f1f7f2fc405f6deb65435274a8ba397a2db17d", "commit_date": "Sun Feb 20 14:07:11 2022 +0100", "commit_message": "chore: Fix Django model method ordering", "files_name": ["setup.cfg", "weblate/auth/models.py"]}, {"commit_id": "397ac7422810522be1d859aab0567b67debf443c", "commit_date": "Sun Feb 20 14:06:56 2022 +0100", "commit_message": "chore: Use more f-strings", "files_name": ["setup.cfg", "weblate/api/views.py", "weblate/utils/site.py"]}, {"commit_id": "7ea79bed24e4ae6a98d8b0bb8ce754bfcc3940ff", "commit_date": "Sun Feb 20 13:34:15 2022 +0100", "commit_message": "chore: Improve test assertion", "files_name": [".pre-commit-config.yaml", "setup.cfg", "weblate/accounts/tests/test_views.py", "weblate/auth/tests/test_models.py", "weblate/checks/tests/test_markup_checks.py", "weblate/trans/tests/test_files.py", "weblate/trans/tests/test_views.py", "weblate/trans/tests/test_xliff_placeholders.py", "weblate/utils/tests/test_environment.py", "weblate/utils/tests/test_validators.py"]}, {"commit_id": "914774325e7a01241a85c4401b547291cb4a8a7d", "commit_date": "Sun Feb 20 13:26:06 2022 +0100", "commit_message": "docs: Include more optional deps in the steps", "files_name": ["docs/admin/install/venv-debian.rst", "docs/admin/install/venv-redhat.rst", "docs/admin/install/venv-suse.rst"]}, {"commit_id": "cb5b2e4587d032e37698c37c5eb36071e7d17102", "commit_date": "Sun Feb 20 12:06:54 2022 +0000", "commit_message": "Translated using Weblate (Chinese (Simplified))", "files_name": ["docs/locales/zh_Hans/LC_MESSAGES/docs.po"]}, {"commit_id": "ac2f64212d48c7d21f54af5d9744e2d2d2da9e7d", "commit_date": "Sat Feb 19 18:46:13 2022 +0000", "commit_message": "Translated using Weblate (Japanese)", "files_name": ["docs/locales/ja/LC_MESSAGES/docs.po"]}, {"commit_id": "cc59d4ea651c2cc40023bf2dcf9585759622e6ea", "commit_date": "Sat Feb 19 13:13:51 2022 +0000", "commit_message": "Translated using Weblate (German)", "files_name": ["docs/locales/de/LC_MESSAGES/docs.po"]}, {"commit_id": "f197551edc4e2faac5e5654e3fae13870d315b67", "commit_date": "Sat Feb 19 13:50:43 2022 +0000", "commit_message": "Translated using Weblate (German)", "files_name": ["docs/locales/de/LC_MESSAGES/docs.po"]}, {"commit_id": "3dccf9d9c6a248f76212616822904d4d8b6d96d0", "commit_date": "Sun Feb 20 06:56:21 2022 +0000", "commit_message": "Translated using Weblate (Bulgarian)", "files_name": ["docs/locales/bg/LC_MESSAGES/docs.po"]}, {"commit_id": "0e58f08e5977b78af7659d36031af8476067a090", "commit_date": "Sun Feb 20 06:47:04 2022 +0000", "commit_message": "Translated using Weblate (Bulgarian)", "files_name": ["weblate/locale/bg/LC_MESSAGES/django.po"]}, {"commit_id": "d87d1d1511b14355b3989548c5c37ec8f65729d6", "commit_date": "Sat Feb 19 18:46:00 2022 +0000", "commit_message": "Translated using Weblate (Japanese)", "files_name": ["weblate/locale/ja/LC_MESSAGES/django.po"]}, {"commit_id": "56450206f71eaf73716998c49d0ef716b54c62f4", "commit_date": "Fri Feb 18 15:52:58 2022 +0000", "commit_message": "Translated using Weblate (Chinese (Simplified))", "files_name": ["docs/locales/zh_Hans/LC_MESSAGES/docs.po"]}, {"commit_id": "586ffa8371fc47d09e0b5dd87b6dbcfb201be036", "commit_date": "Sun Feb 20 13:05:10 2022 +0100", "commit_message": "tests: Fix typo in test method", "files_name": ["weblate/trans/tests/test_projecttoken.py"]}, {"commit_id": "3d53e331f9e578fd1ac195704bb220fa47c5b87c", "commit_date": "Sat Feb 19 12:55:45 2022 +0100", "commit_message": "stats: Share project component set automatically", "files_name": ["weblate/trans/tasks.py", "weblate/utils/stats.py"]}, {"commit_id": "101f18533428c98707a7b3054937988bfb335e20", "commit_date": "Fri Feb 18 14:37:18 2022 +0100", "commit_message": "languages: Use TextField for plural formula", "files_name": ["weblate/lang/migrations/0013_alter_plural_formula.py", "weblate/lang/models.py"]}, {"commit_id": "07a3e5282489190c64e300e3f9c18a688748708c", "commit_date": "Fri Feb 18 14:34:54 2022 +0100", "commit_message": "tests: Use assertIn/assertNotIn", "files_name": ["weblate/api/tests.py", "weblate/checks/tests/test_icu_checks.py", "weblate/trans/tests/test_search.py", "weblate/trans/tests/test_selenium.py"]}, {"commit_id": "cb9a18937993146e87ece30a122830e60dc276a3", "commit_date": "Fri Feb 18 14:32:28 2022 +0100", "commit_message": "tests: Improve code formatting", "files_name": ["weblate/trans/tests/test_selenium.py"]}, {"commit_id": "3793c32f201a1778eb5d70cb6157d1d2b24488e4", "commit_date": "Fri Feb 18 14:31:31 2022 +0100", "commit_message": "management: Use exists for existence testing", "files_name": ["weblate/trans/management/commands/__init__.py", "weblate/trans/management/commands/import_project.py"]}, {"commit_id": "e8d0acf991a4f34181280cc6adb6869e05700dc9", "commit_date": "Fri Feb 18 14:31:17 2022 +0100", "commit_message": "tests: Simplify condition", "files_name": ["weblate/trans/tests/test_projecttoken.py"]}, {"commit_id": "c315c8ed2b215a69dbf188d3ffb2b8848733722d", "commit_date": "Fri Feb 18 14:30:58 2022 +0100", "commit_message": "unit: Remove debugging code", "files_name": ["weblate/trans/models/unit.py"]}, {"commit_id": "cf81b252c676f3c1a044ea7aa842eb274c47a26c", "commit_date": "Fri Feb 18 14:23:27 2022 +0100", "commit_message": "docs: Apply feedback from translators", "files_name": ["docs/admin/projects.rst", "docs/changes.rst", "docs/devel/translations.rst"]}, {"commit_id": "2ad59f14ac21f3178cc0a80567fbce135225f027", "commit_date": "Fri Feb 18 14:21:09 2022 +0100", "commit_message": "component: Silent parse errors when adding new translation", "files_name": ["weblate/trans/views/basic.py"]}, {"commit_id": "135a4ba23cd1948ab20ad457fd4669860553b13c", "commit_date": "Fri Feb 18 11:40:28 2022 +0000", "commit_message": "Translated using Weblate (Chinese (Simplified))", "files_name": ["docs/locales/zh_Hans/LC_MESSAGES/docs.po"]}, {"commit_id": "f604babcc83c673a69bd396a6f197e895e19884d", "commit_date": "Fri Feb 18 08:54:51 2022 +0000", "commit_message": "Translated using Weblate (Japanese)", "files_name": ["docs/locales/ja/LC_MESSAGES/docs.po"]}, {"commit_id": "de0b317aed1a3957021010354ac38d09569aff8d", "commit_date": "Fri Feb 18 11:36:19 2022 +0000", "commit_message": "Translated using Weblate (Chinese (Simplified))", "files_name": ["weblate/locale/zh_Hans/LC_MESSAGES/django.po"]}, {"commit_id": "22ec2d36e8f88c11272a945926c0d62f01dd40b3", "commit_date": "Fri Feb 18 08:27:26 2022 +0000", "commit_message": "Translated using Weblate (Korean)", "files_name": ["weblate/locale/ko/LC_MESSAGES/django.po"]}, {"commit_id": "7e4c307a8419f3b2ee6d2066822d083cc3e3164f", "commit_date": "Fri Feb 18 10:39:19 2022 +0000", "commit_message": "Translated using Weblate (Albanian)", "files_name": ["weblate/locale/sq/LC_MESSAGES/django.po"]}, {"commit_id": "b60e5a7b4fb9248567b3e83eb528e6a2320591cb", "commit_date": "Thu Feb 17 14:29:56 2022 +0000", "commit_message": "Translated using Weblate (Chinese (Simplified))", "files_name": ["docs/locales/zh_Hans/LC_MESSAGES/docs.po"]}, {"commit_id": "48cec6f0da0d47d944153df84914fe874683e646", "commit_date": "Thu Feb 17 13:08:58 2022 +0000", "commit_message": "Translated using Weblate (Russian)", "files_name": ["docs/locales/ru/LC_MESSAGES/docs.po"]}, {"commit_id": "17cff7e017f3e4390e2857d72f265b91832d68e0", "commit_date": "Thu Feb 17 13:07:41 2022 +0000", "commit_message": "Translated using Weblate (Russian)", "files_name": ["docs/locales/ru/LC_MESSAGES/docs.po"]}, {"commit_id": "6dbf734d2fec241eb1d8f579e180acdabd29085b", "commit_date": "Thu Feb 17 14:30:03 2022 +0000", "commit_message": "Translated using Weblate (Chinese (Simplified))", "files_name": ["weblate/locale/zh_Hans/LC_MESSAGES/django.po"]}, {"commit_id": "58d39ced2b25fdc97ea4de7f5698760898447ffa", "commit_date": "Thu Feb 17 13:07:41 2022 +0000", "commit_message": "Translated using Weblate (Russian)", "files_name": ["weblate/locale/ru/LC_MESSAGES/django.po"]}, {"commit_id": "9e4600eb050380318244bc5580f2cb830c70ef56", "commit_date": "Thu Feb 17 03:59:13 2022 +0000", "commit_message": "Translated using Weblate (Polish)", "files_name": ["docs/locales/pl/LC_MESSAGES/docs.po"]}, {"commit_id": "00e79d5e206ee94dc78cd6576ceaadeb97b9afdc", "commit_date": "Thu Feb 17 08:42:02 2022 +0000", "commit_message": "Translated using Weblate (Norwegian Bokm\u00e5l)", "files_name": ["docs/locales/nb/LC_MESSAGES/docs.po"]}, {"commit_id": "a287e9f3119c8b079d52fca32eddc666b212af80", "commit_date": "Thu Feb 17 08:53:58 2022 +0000", "commit_message": "Translated using Weblate (Norwegian Bokm\u00e5l)", "files_name": ["weblate/locale/nb/LC_MESSAGES/django.po"]}, {"commit_id": "c2cd796ff9a6b808ad54ca9a35764cbe4b685cc9", "commit_date": "Thu Feb 17 03:33:36 2022 +0000", "commit_message": "Translated using Weblate (Polish)", "files_name": ["weblate/locale/pl/LC_MESSAGES/django.po"]}, {"commit_id": "4cd4aba171a3eab6b4059e47b3789df25177b963", "commit_date": "Wed Feb 16 20:50:53 2022 +0000", "commit_message": "Translated using Weblate (Albanian)", "files_name": ["weblate/locale/sq/LC_MESSAGES/django.po"]}, {"commit_id": "82840b08609ea3746ca1488a3e890c50784e644b", "commit_date": "Wed Feb 16 14:08:13 2022 +0000", "commit_message": "Translated using Weblate (Chinese (Simplified))", "files_name": ["docs/locales/zh_Hans/LC_MESSAGES/docs.po"]}, {"commit_id": "742a9eaaee329c6d2e5252433d62b9c6b26b17c3", "commit_date": "Wed Feb 16 17:34:22 2022 +0000", "commit_message": "Translated using Weblate (Norwegian Bokm\u00e5l)", "files_name": ["docs/locales/nb/LC_MESSAGES/docs.po"]}, {"commit_id": "1691738fa26c81126025fb67d6f955288b3edf70", "commit_date": "Tue Feb 15 16:04:56 2022 +0000", "commit_message": "Translated using Weblate (German)", "files_name": ["docs/locales/de/LC_MESSAGES/docs.po"]}, {"commit_id": "b240b68190342e3ea0d07dc4d760954897ea6fe3", "commit_date": "Tue Feb 15 13:48:16 2022 +0000", "commit_message": "Translated using Weblate (Croatian)", "files_name": ["weblate/locale/hr/LC_MESSAGES/django.po"]}, {"commit_id": "76f634ec4cee8b7c1af091f4a36b49888a3635d0", "commit_date": "Wed Feb 16 17:18:18 2022 +0000", "commit_message": "Translated using Weblate (Norwegian Bokm\u00e5l)", "files_name": ["weblate/locale/nb/LC_MESSAGES/django.po"]}, {"commit_id": "fe438cf41101cfca953c1b7f66890e3d216cdf8f", "commit_date": "Tue Feb 15 23:20:50 2022 +0000", "commit_message": "Translated using Weblate (Albanian)", "files_name": ["weblate/locale/sq/LC_MESSAGES/django.po"]}, {"commit_id": "6f2fd4e36856f00e52da64b4c7f2d7472cd4bee7", "commit_date": "Fri Feb 18 13:59:29 2022 +0100", "commit_message": "announcements: Honor danger flag from announcements", "files_name": ["weblate/utils/messages.py"]}, {"commit_id": "c67899e5797be92c10f3816b993d669f19665270", "commit_date": "Fri Feb 18 08:04:36 2022 +0000", "commit_message": "Bump setuptools from 60.9.1 to 60.9.3", "files_name": ["requirements-ci.txt"]}, {"commit_id": "07c492c8b3363d0b457b0987d993a8d233b19e3b", "commit_date": "Fri Feb 18 13:55:10 2022 +0100", "commit_message": "docs: Update GitHub webhooks doc link", "files_name": ["docs/api.rst"]}, {"commit_id": "c8f4bd0cf2349eef3f73d665de176a8ad23b2aa3", "commit_date": "Fri Feb 18 13:52:04 2022 +0100", "commit_message": "deps: Consolidate deps", "files_name": ["requirements.txt"]}, {"commit_id": "d9beba6858733210aa21e48abcfdd994f672ba64", "commit_date": "Fri Feb 18 08:04:43 2022 +0000", "commit_message": "Update filelock requirement from <3.5.1,>=3.2.0 to >=3.2.0,<3.6.1", "files_name": ["requirements.txt"]}, {"commit_id": "be316040a09a0af62888f948528d84e210d69c8d", "commit_date": "Fri Feb 18 08:40:47 2022 +0000", "commit_message": "js: Update vendored libraries", "files_name": ["weblate/static/vendor/prism/prism-core.js"]}, {"commit_id": "83d9d00e70a1bd8c167b93958811d224bc1f107c", "commit_date": "Fri Feb 18 08:06:44 2022 +0000", "commit_message": "Bump prismjs from 1.26.0 to 1.27.0 in /scripts/yarn", "files_name": ["scripts/yarn/package.json", "scripts/yarn/yarn.lock"]}], "windows_after": [{"commit_id": "572628cef60e9d839b79b2087960b606a5cca4d8", "commit_date": "Tue Feb 22 21:08:02 2022 +0100", "commit_message": "forms: Remove unused code", "files_name": ["weblate/trans/forms.py"]}, {"commit_id": "f6753a1a1c63fade6ad418fbda827c6750ab0bda", "commit_date": "Tue Feb 22 21:10:41 2022 +0100", "commit_message": "translate: Add missing escaping to language name", "files_name": ["weblate/trans/forms.py"]}, {"commit_id": "9ea75da47486a3d25f18b04479f41e32406cfeb1", "commit_date": "Wed Feb 23 08:32:52 2022 +0100", "commit_message": "utils: Add support for borgbackup 1.2", "files_name": ["docs/changes.rst", "weblate/utils/backup.py", "weblate/utils/tests/test_backup.py", "weblate/wladmin/migrations/0005_alter_backuplog_event.py", "weblate/wladmin/models.py", "weblate/wladmin/tasks.py"]}, {"commit_id": "d05a5759f45559948b671f3a4cd3286c7be0ff93", "commit_date": "Wed Feb 23 11:26:39 2022 +0100", "commit_message": "deps: Add pkgconfig to CI deps", "files_name": ["requirements-ci.txt"]}, {"commit_id": "6148a71afa63cc714a272cd9d23fdec770c7a32e", "commit_date": "Wed Feb 23 14:20:48 2022 +0100", "commit_message": "utils: Fix borg cleanup invocation", "files_name": ["weblate/utils/backup.py"]}, {"commit_id": "296c7b42d03243f9be44dadb20abb81ca17c1994", "commit_date": "Wed Feb 23 13:22:14 2022 +0000", "commit_message": "build(deps): update borgbackup requirement", "files_name": ["requirements.txt"]}, {"commit_id": "a24fbbf6b30d0e80fc5c8f871aec77cfaf2a4aca", "commit_date": "Wed Feb 23 18:19:25 2022 +0100", "commit_message": "js: avoid setting extra class on machinery results (#7290)", "files_name": ["weblate/static/editor/full.js"]}, {"commit_id": "686bb695be993ed3c2abf4aa5f36650e42f8f11a", "commit_date": "Wed Feb 23 14:43:38 2022 +0100", "commit_message": "translate: Delay lock checking to permission check", "files_name": ["weblate/trans/tests/test_edit.py", "weblate/trans/tests/test_views.py", "weblate/trans/views/edit.py"]}, {"commit_id": "7f82aff333469bc18bf0aab7f6e7c2b89e757ff7", "commit_date": "Thu Feb 24 12:27:34 2022 +0100", "commit_message": "docs: Move request-timeout=600 to correct location in mod_wsgi config", "files_name": ["weblate/examples/apache-path.conf", "weblate/examples/apache.conf"]}, {"commit_id": "41641ae69cd25c82fbb05c3cc78ca668e6e81bb6", "commit_date": "Thu Feb 24 14:00:19 2022 +0100", "commit_message": "format: Improve diff formatting", "files_name": ["weblate/trans/templatetags/translations.py", "weblate/trans/tests/test_templatetags.py"]}, {"commit_id": "817651a80bdb8a2f8cdad28011ab4fdbaceb724d", "commit_date": "Thu Feb 24 19:57:51 2022 +0100", "commit_message": "utils: Fixed JSON error handling from requets", "files_name": ["weblate/utils/errors.py"]}, {"commit_id": "ba108b1385c885ed25f125701abbe9cc887ed1ee", "commit_date": "Mon Feb 21 02:09:13 2022 +0000", "commit_message": "Translated using Weblate (French)", "files_name": ["weblate/locale/fr/LC_MESSAGES/django.po"]}, {"commit_id": "54a96cf9128b85f7fb6a5617e7da40fa863a7ebe", "commit_date": "Tue Feb 22 10:49:06 2022 +0000", "commit_message": "Translated using Weblate (Albanian)", "files_name": ["weblate/locale/sq/LC_MESSAGES/django.po"]}, {"commit_id": "0b043a7140de7be7c087a3839e40905096f0e988", "commit_date": "Sun Feb 20 18:17:16 2022 +0000", "commit_message": "Translated using Weblate (Dutch)", "files_name": ["weblate/locale/nl/LC_MESSAGES/django.po"]}, {"commit_id": "9c08243e8a1419b47a1bf9ee34609b4d1f4735f2", "commit_date": "Sun Feb 20 16:15:20 2022 +0000", "commit_message": "Translated using Weblate (Japanese)", "files_name": ["weblate/locale/ja/LC_MESSAGES/django.po"]}, {"commit_id": "d9e743e74a95a5127ecfee1f1521f759f5142d9f", "commit_date": "Mon Feb 21 14:22:02 2022 +0000", "commit_message": "Translated using Weblate (German)", "files_name": ["weblate/locale/de/LC_MESSAGES/django.po"]}, {"commit_id": "f24f3ce93975d369d159250fa2aa609e0a92a2f9", "commit_date": "Tue Feb 22 10:25:40 2022 +0000", "commit_message": "Translated using Weblate (Chinese (Simplified))", "files_name": ["weblate/locale/zh_Hans/LC_MESSAGES/django.po"]}, {"commit_id": "c1a5f8e8537cd32c721d3a835f091cc0a8b0bba1", "commit_date": "Sun Feb 20 20:41:57 2022 +0000", "commit_message": "Translated using Weblate (Bulgarian)", "files_name": ["weblate/locale/bg/LC_MESSAGES/django.po"]}, {"commit_id": "03ac3059cbf1f993667c0a2a59c887c03d8ff978", "commit_date": "Mon Feb 21 14:22:02 2022 +0000", "commit_message": "Translated using Weblate (German)", "files_name": ["docs/locales/de/LC_MESSAGES/docs.po"]}, {"commit_id": "6ca8161a989840f664bfd510c2c19351968ad402", "commit_date": "Mon Feb 21 09:13:58 2022 +0000", "commit_message": "Translated using Weblate (Hungarian)", "files_name": ["docs/locales/hu/LC_MESSAGES/docs.po"]}, {"commit_id": "237ab8812aea68f3699554671d7a4805fe07cead", "commit_date": "Tue Feb 22 19:44:52 2022 +0000", "commit_message": "Translated using Weblate (Japanese)", "files_name": ["docs/locales/ja/LC_MESSAGES/docs.po"]}, {"commit_id": "f201c7738fb9548576aeef97ca21661f22535cf3", "commit_date": "Sun Feb 20 18:22:32 2022 +0000", "commit_message": "Translated using Weblate (Dutch)", "files_name": ["docs/locales/nl/LC_MESSAGES/docs.po"]}, {"commit_id": "ab4876be70d760d3727c0dea658f9098db8a72a3", "commit_date": "Wed Feb 23 07:52:04 2022 +0000", "commit_message": "Translated using Weblate (Polish)", "files_name": ["docs/locales/pl/LC_MESSAGES/docs.po"]}, {"commit_id": "3ef3e5873f724130c92c3ae690bbd313bfa1412b", "commit_date": "Wed Feb 23 09:11:15 2022 +0000", "commit_message": "Translated using Weblate (Chinese (Simplified))", "files_name": ["docs/locales/zh_Hans/LC_MESSAGES/docs.po"]}, {"commit_id": "9346d1c7e66b2dc0fa8a64a7b830ca373434a2e3", "commit_date": "Thu Feb 24 18:25:12 2022 +0000", "commit_message": "Translated using Weblate (Japanese)", "files_name": ["docs/locales/ja/LC_MESSAGES/docs.po"]}, {"commit_id": "49d2f04a7fca167f5742f5b1011d6fa4aa9cce33", "commit_date": "Thu Feb 24 20:29:43 2022 +0100", "commit_message": "test: Fix test to improved HTML diff behavior", "files_name": ["weblate/trans/tests/test_templatetags.py"]}, {"commit_id": "e074061a914486fbad7d5e2841ff56b2c011adf6", "commit_date": "Thu Feb 24 14:05:31 2022 +0000", "commit_message": "chore(deps): update dependency @sentry/browser to v6.18.0", "files_name": ["scripts/yarn/package.json", "scripts/yarn/yarn.lock"]}, {"commit_id": "29b2dfe37ea4c4d5350575fe4d37ea90f0b960d0", "commit_date": "Thu Feb 24 14:06:16 2022 +0000", "commit_message": "js: Update vendored libraries", "files_name": ["weblate/static/vendor/sentry.js"]}, {"commit_id": "1c91404bf2d856233342f49cce1bffb0ab5986fe", "commit_date": "Fri Feb 25 04:56:11 2022 +0000", "commit_message": "Translated using Weblate (Bulgarian)", "files_name": ["weblate/locale/bg/LC_MESSAGES/django.po"]}, {"commit_id": "80b536b7614ad855d782b58ecbbcff499e5929dc", "commit_date": "Fri Feb 25 04:56:11 2022 +0000", "commit_message": "Translated using Weblate (Bulgarian)", "files_name": ["docs/locales/bg/LC_MESSAGES/docs.po"]}, {"commit_id": "26a3c85b61f63634de45d6176a191bd78c5dc96f", "commit_date": "Fri Feb 25 09:07:52 2022 +0100", "commit_message": "unit: Fixed applying of automatically translated label", "files_name": ["docs/changes.rst", "weblate/trans/models/unit.py", "weblate/trans/tests/test_autotranslate.py", "weblate/trans/tests/test_views.py"]}, {"commit_id": "9bc4d6117d3b629a7ba02b136b9d541f375414fb", "commit_date": "Fri Feb 25 08:03:21 2022 +0000", "commit_message": "build(deps): bump scripts/spdx-license-list from `8f481f5` to `5f40733`", "files_name": ["scripts/spdx-license-list"]}, {"commit_id": "13e52cc6e0e54966fcf4eabcdebcb2b8008b80ed", "commit_date": "Fri Feb 25 08:04:56 2022 +0000", "commit_message": "utils: Update SPDX license data", "files_name": ["weblate/utils/licensedata.py"]}, {"commit_id": "3d648b05975860e7839c561fb50a0ba040b2fb96", "commit_date": "Fri Feb 25 09:33:23 2022 +0100", "commit_message": "access: Consisten label with other uses", "files_name": ["weblate/templates/trans/project-access.html"]}, {"commit_id": "ec691f03bb8b293b3f09e542b421308df14ac026", "commit_date": "Fri Feb 25 08:34:12 2022 +0000", "commit_message": "build(deps): update translate-toolkit requirement", "files_name": ["requirements.txt"]}, {"commit_id": "363c9a319fc47275728f79c1f71769690e1b4388", "commit_date": "Fri Feb 25 09:41:06 2022 +0100", "commit_message": "deps: Move charset-normalizer to required deps", "files_name": ["docs/admin/upgrade.rst", "requirements-optional.txt", "requirements.txt", "weblate/utils/requirements.py"]}, {"commit_id": "30b5c8a7d09e19f7b8e3df4c2809e8a6d8e6dbeb", "commit_date": "Fri Feb 25 10:02:17 2022 +0100", "commit_message": "deps: Correctly specify lower bound", "files_name": ["requirements.txt"]}, {"commit_id": "83a0af7a43fb874e77b6dc82e576687c6d7eb307", "commit_date": "Fri Feb 25 10:23:04 2022 +0100", "commit_message": "utils: Log IP address while rate limiting", "files_name": ["weblate/utils/ratelimit.py"]}, {"commit_id": "b2bc2314eaa41e8e51c5e6a9cf6e2b94b3c7bb65", "commit_date": "Fri Feb 25 10:38:49 2022 +0100", "commit_message": "docs: Consistently use sign in", "files_name": ["docs/admin/config.rst", "docs/admin/install/steps/install-after.rst", "docs/admin/optionals.rst"]}, {"commit_id": "3d778d3e12b19598b049bfcd03cd4a9bf1e260fe", "commit_date": "Fri Feb 25 10:39:12 2022 +0100", "commit_message": "Releasing 4.11", "files_name": ["docs/changes.rst", "weblate/utils/version.py"]}, {"commit_id": "64c355aeba59fea288ce1e1b2dc3b9d1fa1eef5c", "commit_date": "Fri Feb 25 04:57:56 2022 +0000", "commit_message": "Translated using Weblate (Bulgarian)", "files_name": ["weblate/locale/bg/LC_MESSAGES/django.po"]}, {"commit_id": "585e39b7ef98503a8f12d6c800545d3473088a0a", "commit_date": "Fri Feb 25 05:01:57 2022 +0000", "commit_message": "Translated using Weblate (Bulgarian)", "files_name": ["docs/locales/bg/LC_MESSAGES/docs.po"]}, {"commit_id": "282b72513a843f8c82700beda8bd06b4da70002f", "commit_date": "Fri Feb 25 05:42:02 2022 +0000", "commit_message": "Translated using Weblate (Chinese (Simplified))", "files_name": ["docs/locales/zh_Hans/LC_MESSAGES/docs.po"]}, {"commit_id": "1842eaff1f96c25d4f0e009fbb63afbdeb47012b", "commit_date": "Fri Feb 25 10:42:37 2022 +0100", "commit_message": "i18n: Update PO files", "files_name": ["docs/locales/ar/LC_MESSAGES/docs.po", "docs/locales/ar_LY/LC_MESSAGES/docs.po", "docs/locales/ars/LC_MESSAGES/docs.po", "docs/locales/ast/LC_MESSAGES/docs.po", "docs/locales/az/LC_MESSAGES/docs.po", "docs/locales/be/LC_MESSAGES/docs.po", "docs/locales/be@latin/LC_MESSAGES/docs.po", "docs/locales/ber/LC_MESSAGES/docs.po", "docs/locales/bg/LC_MESSAGES/docs.po", "docs/locales/bn/LC_MESSAGES/docs.po", "docs/locales/bn_BD/LC_MESSAGES/docs.po", "docs/locales/br/LC_MESSAGES/docs.po", "docs/locales/ca/LC_MESSAGES/docs.po", "docs/locales/ce/LC_MESSAGES/docs.po", "docs/locales/ckb/LC_MESSAGES/docs.po", "docs/locales/crh/LC_MESSAGES/docs.po", "docs/locales/cs/LC_MESSAGES/docs.po", "docs/locales/cv/LC_MESSAGES/docs.po", "docs/locales/cy/LC_MESSAGES/docs.po", "docs/locales/da/LC_MESSAGES/docs.po", "docs/locales/de/LC_MESSAGES/docs.po", "docs/locales/docs.pot", "docs/locales/dv/LC_MESSAGES/docs.po", "docs/locales/el/LC_MESSAGES/docs.po", "docs/locales/en_GB/LC_MESSAGES/docs.po", "docs/locales/enm/LC_MESSAGES/docs.po", "docs/locales/eo/LC_MESSAGES/docs.po", "docs/locales/es/LC_MESSAGES/docs.po", "docs/locales/et/LC_MESSAGES/docs.po", "docs/locales/eu/LC_MESSAGES/docs.po", "docs/locales/fa/LC_MESSAGES/docs.po", "docs/locales/fi/LC_MESSAGES/docs.po", "docs/locales/fil/LC_MESSAGES/docs.po", "docs/locales/fr/LC_MESSAGES/docs.po", "docs/locales/fur/LC_MESSAGES/docs.po", "docs/locales/fy/LC_MESSAGES/docs.po", "docs/locales/gl/LC_MESSAGES/docs.po", "docs/locales/he/LC_MESSAGES/docs.po", "docs/locales/hi/LC_MESSAGES/docs.po", "docs/locales/hr/LC_MESSAGES/docs.po", "docs/locales/hu/LC_MESSAGES/docs.po", "docs/locales/hy/LC_MESSAGES/docs.po", "docs/locales/ia/LC_MESSAGES/docs.po", "docs/locales/id/LC_MESSAGES/docs.po", "docs/locales/ie/LC_MESSAGES/docs.po", "docs/locales/is/LC_MESSAGES/docs.po", "docs/locales/it/LC_MESSAGES/docs.po", "docs/locales/ja/LC_MESSAGES/docs.po"]}], "parents": [{"commit_id_before": "f2e5be7b0849405ebe56c7da660f2ca8f0b4121a", "url_before": "https://api.github.com/repos/WeblateOrg/weblate/commits/f2e5be7b0849405ebe56c7da660f2ca8f0b4121a", "html_url_before": "https://github.com/WeblateOrg/weblate/commit/f2e5be7b0849405ebe56c7da660f2ca8f0b4121a"}], "details": [{"raw_url": "https://github.com/WeblateOrg/weblate/raw/9e19a8414337692cc90da2a91c9af5420f2952f1/weblate%2Fstatic%2Floader-bootstrap.js", "code": "var loading = [];\n\n// Remove some weird things from location hash\nif (\n  window.location.hash &&\n  (window.location.hash.indexOf('\"') > -1 ||\n    window.location.hash.indexOf(\"=\") > -1)\n) {\n  window.location.hash = \"\";\n}\n\n// Loading indicator handler\nfunction increaseLoading(sel) {\n  if (!(sel in loading)) {\n    loading[sel] = 0;\n  }\n  if (loading[sel] === 0) {\n    $(\"#loading-\" + sel).show();\n  }\n  loading[sel] += 1;\n}\n\nfunction decreaseLoading(sel) {\n  loading[sel] -= 1;\n  if (loading[sel] === 0) {\n    $(\"#loading-\" + sel).hide();\n  }\n}\n\nfunction addAlert(message, kind = \"danger\", delay = 3000) {\n  var alerts = $(\"#popup-alerts\");\n  var e = $(\n    '<div class=\"alert alert-' +\n      kind +\n      ' alert-dismissible\" role=\"alert\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button></div>'\n  );\n  e.append(new Text(message));\n  e.hide();\n  alerts.show().append(e);\n  e.slideDown(200);\n  e.on(\"closed.bs.alert\", function () {\n    if (alerts.find(\".alert\").length == 0) {\n      alerts.hide();\n    }\n  });\n  if (delay) {\n    e.delay(delay).slideUp(200, function () {\n      $(this).alert(\"close\");\n    });\n  }\n}\n\njQuery.fn.extend({\n  insertAtCaret: function (myValue) {\n    return this.each(function () {\n      if (document.selection) {\n        // For browsers like Internet Explorer\n        this.focus();\n        let sel = document.selection.createRange();\n\n        sel.text = myValue;\n        this.focus();\n      } else if (this.selectionStart || this.selectionStart === 0) {\n        //For browsers like Firefox and Webkit based\n        let startPos = this.selectionStart;\n        let endPos = this.selectionEnd;\n        let scrollTop = this.scrollTop;\n\n        this.value =\n          this.value.substring(0, startPos) +\n          myValue +\n          this.value.substring(endPos, this.value.length);\n        this.focus();\n        this.selectionStart = startPos + myValue.length;\n        this.selectionEnd = startPos + myValue.length;\n        this.scrollTop = scrollTop;\n      } else {\n        this.value += myValue;\n        this.focus();\n      }\n      this.dispatchEvent(new Event(\"input\"));\n      /* Zen editor still relies on jQuery here */\n      $(this).change();\n    });\n  },\n\n  replaceValue: function (myValue) {\n    return this.each(function () {\n      this.value = myValue;\n      this.dispatchEvent(new Event(\"input\"));\n    });\n  },\n});\n\nfunction submitForm(evt) {\n  var $target = $(evt.target);\n  var $form = $target.closest(\"form\");\n\n  if ($form.length === 0) {\n    $form = $(\".translation-form\");\n  }\n  if ($form.length > 0) {\n    let submits = $form.find('input[type=\"submit\"]');\n\n    if (submits.length === 0) {\n      submits = $form.find('button[type=\"submit\"]');\n    }\n    if (submits.length > 0) {\n      submits[0].click();\n    }\n  }\n  return false;\n}\nMousetrap.bindGlobal([\"alt+enter\", \"mod+enter\"], submitForm);\n\nfunction screenshotStart() {\n  $(\"#search-results tbody.unit-listing-body\").empty();\n  increaseLoading(\"screenshots\");\n}\n\nfunction screenshotFailure() {\n  screenshotLoaded({ responseCode: 500 });\n}\n\nfunction screenshotAddString() {\n  var pk = $(this).data(\"pk\");\n  var form = $(\"#screenshot-add-form\");\n\n  $(\"#add-source\").val(pk);\n  $.ajax({\n    type: \"POST\",\n    url: form.attr(\"action\"),\n    data: form.serialize(),\n    dataType: \"json\",\n    success: function () {\n      var list = $(\"#sources-listing\");\n      $.get(list.data(\"href\"), function (data) {\n        list.find(\"table\").replaceWith(data);\n      });\n    },\n    error: function (jqXHR, textStatus, errorThrown) {\n      addAlert(errorThrown);\n    },\n  });\n}\n\nfunction screnshotResultError(severity, message) {\n  $(\"#search-results tbody.unit-listing-body\").html(\n    '<tr class=\"' + severity + '\"><td colspan=\"4\">' + message + \"</td></tr>\"\n  );\n}\n\nfunction screenshotLoaded(data) {\n  decreaseLoading(\"screenshots\");\n  if (data.responseCode !== 200) {\n    screnshotResultError(\"danger\", gettext(\"Error loading search results!\"));\n  } else if (data.results.length === 0) {\n    screnshotResultError(\n      \"warning\",\n      gettext(\"No new matching source strings found.\")\n    );\n  } else {\n    $(\"#search-results table\").replaceWith(data.results);\n    $(\"#search-results\").find(\".add-string\").click(screenshotAddString);\n  }\n}\n\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nfunction extractText(cell) {\n  var value = $(cell).data(\"value\");\n  if (typeof value !== \"undefined\") {\n    return value;\n  }\n  return $.text(cell);\n}\n\nfunction compareCells(a, b) {\n  if (typeof a === \"number\" && typeof b === \"number\") {\n  } else if (a.indexOf(\"%\") !== -1 && b.indexOf(\"%\") !== -1) {\n    a = parseFloat(a.replace(\",\", \".\"));\n    b = parseFloat(b.replace(\",\", \".\"));\n  } else if (isNumber(a) && isNumber(b)) {\n    a = parseFloat(a.replace(\",\", \".\"));\n    b = parseFloat(b.replace(\",\", \".\"));\n  } else if (typeof a === \"string\" && typeof b === \"string\") {\n    a = a.toLowerCase();\n    b = b.toLowerCase();\n  }\n  if (a == b) {\n    return 0;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return -1;\n}\n\nfunction loadTableSorting() {\n  $(\"table.sort\").each(function () {\n    var table = $(this),\n      tbody = table.find(\"tbody\"),\n      thead = table.find(\"thead\"),\n      thIndex = 0;\n\n    $(this)\n      .find(\"thead th\")\n      .each(function () {\n        var th = $(this),\n          inverse = 1;\n\n        // handle colspan\n        if (th.attr(\"colspan\")) {\n          thIndex += parseInt(th.attr(\"colspan\"), 10) - 1;\n        }\n        // skip empty cells and cells with icon (probably already processed)\n        if (\n          th.text() !== \"\" &&\n          !th.hasClass(\"sort-init\") &&\n          !th.hasClass(\"sort-skip\")\n        ) {\n          // Store index copy\n          let myIndex = thIndex;\n          // Add icon, title and class\n          th.addClass(\"sort-init\");\n          if (!th.hasClass(\"sort-cell\")) {\n            // Skip statically initialized parts (when server side ordering is supported)\n            th.attr(\"title\", gettext(\"Sort this column\"))\n              .addClass(\"sort-cell\")\n              .append('<span class=\"sort-icon\" />');\n          }\n\n          // Click handler\n          th.click(function () {\n            tbody\n              .find(\"tr\")\n              .sort(function (a, b) {\n                var $a = $(a),\n                  $b = $(b);\n                var a_parent = $a.data(\"parent\"),\n                  b_parent = $b.data(\"parent\");\n                if (a_parent) {\n                  $a = tbody.find(\"#\" + a_parent);\n                }\n                if (b_parent) {\n                  $b = tbody.find(\"#\" + b_parent);\n                }\n                return (\n                  inverse *\n                  compareCells(\n                    extractText($a.find(\"td,th\")[myIndex]),\n                    extractText($b.find(\"td,th\")[myIndex])\n                  )\n                );\n              })\n              .appendTo(tbody);\n            thead.find(\".sort-icon\").removeClass(\"sort-down sort-up\");\n            if (inverse === 1) {\n              $(this).find(\".sort-icon\").addClass(\"sort-down\");\n            } else {\n              $(this).find(\".sort-icon\").addClass(\"sort-up\");\n            }\n\n            inverse = inverse * -1;\n          });\n        }\n        // Increase index\n        thIndex += 1;\n      });\n  });\n}\n\n/* Thin wrappers for django to avoid problems when i18n js can not be loaded */\nfunction gettext(msgid) {\n  if (typeof django !== \"undefined\") {\n    return django.gettext(msgid);\n  }\n  return msgid;\n}\nfunction pgettext(context, msgid) {\n  if (typeof django !== \"undefined\") {\n    return django.pgettext(context, msgid);\n  }\n  return msgid;\n}\nfunction interpolate(fmt, obj, named) {\n  if (typeof django !== \"undefined\") {\n    return django.interpolate(fmt, obj, named);\n  }\n  return fmt.replace(/%s/g, function () {\n    return String(obj.shift());\n  });\n}\n\nfunction load_matrix() {\n  var $loadingNext = $(\"#loading-next\");\n  var $loader = $(\"#matrix-load\");\n  var offset = parseInt($loader.data(\"offset\"));\n\n  if ($(\"#last-section\").length > 0 || $loadingNext.css(\"display\") !== \"none\") {\n    return;\n  }\n  $loadingNext.show();\n\n  $loader.data(\"offset\", 20 + offset);\n\n  $.get($loader.attr(\"href\") + \"&offset=\" + offset, function (data) {\n    $loadingNext.hide();\n    $(\".matrix tbody\").append(data);\n  });\n}\n\nfunction adjustColspan() {\n  $(\"table.autocolspan\").each(function () {\n    var $this = $(this);\n    var numOfVisibleCols = $this.find(\"thead th:visible\").length;\n    if (numOfVisibleCols === 0) {\n      numOfVisibleCols = 3;\n    }\n    $this.find(\"td.autocolspan\").attr(\"colspan\", numOfVisibleCols - 1);\n  });\n}\n\nfunction quoteSearch(value) {\n  if (value.indexOf(\" \") === -1) {\n    return value;\n  }\n  if (value.indexOf('\"') === -1) {\n    return '\"' + value + '\"';\n  }\n  if (value.indexOf(\"'\") === -1) {\n    return \"'\" + value + \"'\";\n  }\n  /* We should do some escaping here */\n  return value;\n}\n\nfunction initHighlight(root) {\n  if (typeof ResizeObserver === \"undefined\") {\n    return;\n  }\n  root.querySelectorAll(\".highlight-editor\").forEach(function (editor) {\n    var parent = editor.parentElement;\n    var hasFocus = editor == document.activeElement;\n\n    if (parent.classList.contains(\"editor-wrap\")) {\n      return;\n    }\n\n    var mode = editor.getAttribute(\"data-mode\");\n\n    /* Create wrapper element */\n    var wrapper = document.createElement(\"div\");\n    wrapper.setAttribute(\"class\", \"editor-wrap\");\n\n    /* Inject wrapper */\n    parent.replaceChild(wrapper, editor);\n\n    /* Create highlighter */\n    var highlight = document.createElement(\"div\");\n    highlight.setAttribute(\"class\", \"highlighted-output\");\n    if (editor.readOnly) {\n      highlight.classList.add(\"readonly\");\n    }\n    highlight.setAttribute(\"role\", \"status\");\n    if (editor.hasAttribute(\"dir\")) {\n      highlight.setAttribute(\"dir\", editor.getAttribute(\"dir\"));\n    }\n    if (editor.hasAttribute(\"lang\")) {\n      highlight.setAttribute(\"lang\", editor.getAttribute(\"lang\"));\n    }\n    wrapper.appendChild(highlight);\n\n    /* Add editor to wrapper */\n    wrapper.appendChild(editor);\n    if (hasFocus) {\n      editor.focus();\n    }\n\n    /* Content synchronisation and highlighting */\n    var languageMode = Prism.languages[mode];\n    if (editor.classList.contains(\"translation-editor\")) {\n      let placeables = editor.getAttribute(\"data-placeables\");\n      /* This should match WHITESPACE_REGEX in weblate/trans/templatetags/translations.py */\n      let whitespace_regex = new RegExp(\n        [\n          \"  +|(^) +| +(?=$)| +\\n|\\n +|\\t|\",\n          \"\\u00A0|\\u1680|\\u2000|\\u2001|\",\n          \"\\u2002|\\u2003|\\u2004|\\u2005|\",\n          \"\\u2006|\\u2007|\\u2008|\\u2009|\",\n          \"\\u200A|\\u202F|\\u205F|\\u3000\",\n        ].join(\"\")\n      );\n      let extension = {\n        hlspace: {\n          pattern: whitespace_regex,\n          lookbehind: true,\n        },\n      };\n      if (placeables) {\n        extension.placeable = RegExp(placeables);\n      }\n      /*\n       * We can not use Prism.extend here as we want whitespace highlighting\n       * to apply first. The code is borrowed from Prism.util.clone.\n       */\n      for (var key in languageMode) {\n        if (languageMode.hasOwnProperty(key)) {\n          extension[key] = Prism.util.clone(languageMode[key]);\n        }\n      }\n      languageMode = extension;\n    }\n    var syncContent = function () {\n      highlight.innerHTML = Prism.highlight(editor.value, languageMode, mode);\n      autosize.update(editor);\n    };\n    syncContent();\n    editor.addEventListener(\"input\", syncContent);\n\n    /* Handle scrolling */\n    editor.addEventListener(\"scroll\", (event) => {\n      highlight.scrollTop = editor.scrollTop;\n      highlight.scrollLeft = editor.scrollLeft;\n    });\n\n    /* Handle resizing */\n    const resizeObserver = new ResizeObserver((entries) => {\n      for (let entry of entries) {\n        if (entry.target === editor) {\n          // match the height and width of the output area to the input area\n          highlight.style.height = editor.offsetHeight + \"px\";\n          highlight.style.width = editor.offsetWidth + \"px\";\n        }\n      }\n    });\n\n    resizeObserver.observe(editor);\n    /* Autosizing */\n    autosize(editor);\n  });\n}\n\n$(function () {\n  var $window = $(window),\n    $document = $(document);\n\n  adjustColspan();\n  $window.resize(adjustColspan);\n  $document.on(\"shown.bs.tab\", adjustColspan);\n\n  /* AJAX loading of tabs/pills */\n  $document.on(\n    \"show.bs.tab\",\n    '[data-toggle=\"tab\"][data-href], [data-toggle=\"pill\"][data-href]',\n    function (e) {\n      var $target = $(e.target);\n      var $content = $($target.attr(\"href\"));\n      if ($target.data(\"loaded\")) {\n        return;\n      }\n      if ($content.find(\".panel-body\").length > 0) {\n        $content = $content.find(\".panel-body\");\n      }\n      $content.load($target.data(\"href\"), function (responseText, status, xhr) {\n        if (status !== \"success\") {\n          var msg = gettext(\"Error while loading page:\");\n          $content.text(\n            msg +\n              \" \" +\n              xhr.statusText +\n              \" (\" +\n              xhr.status +\n              \"): \" +\n              responseText\n          );\n        }\n        $target.data(\"loaded\", 1);\n        loadTableSorting();\n      });\n    }\n  );\n\n  if ($(\"#form-activetab\").length > 0) {\n    $document.on(\"show.bs.tab\", '[data-toggle=\"tab\"]', function (e) {\n      var $target = $(e.target);\n      $(\"#form-activetab\").attr(\"value\", $target.attr(\"href\"));\n    });\n  }\n\n  /* Form automatic submission */\n  $(\"form.autosubmit select\").change(function () {\n    $(\"form.autosubmit\").submit();\n  });\n\n  var activeTab;\n\n  /* Load correct tab */\n  if (location.hash !== \"\") {\n    /* From URL hash */\n    var separator = location.hash.indexOf(\"__\");\n    if (separator != -1) {\n      activeTab = $(\n        '.nav [data-toggle=tab][href=\"' +\n          location.hash.substr(0, separator) +\n          '\"]'\n      );\n      if (activeTab.length) {\n        activeTab.tab(\"show\");\n      }\n    }\n    activeTab = $('.nav [data-toggle=tab][href=\"' + location.hash + '\"]');\n    if (activeTab.length) {\n      activeTab.tab(\"show\");\n      window.scrollTo(0, 0);\n    } else {\n      document.getElementById(location.hash.substr(1)).scrollIntoView();\n    }\n  } else if (\n    $(\".translation-tabs\").length > 0 &&\n    Cookies.get(\"translate-tab\")\n  ) {\n    /* From cookie */\n    activeTab = $(\n      '[data-toggle=tab][href=\"' + Cookies.get(\"translate-tab\") + '\"]'\n    );\n    if (activeTab.length) {\n      activeTab.tab(\"show\");\n    }\n  }\n\n  /* Add a hash to the URL when the user clicks on a tab */\n  $('a[data-toggle=\"tab\"]').on(\"shown.bs.tab\", function (e) {\n    history.pushState(null, null, $(this).attr(\"href\"));\n    /* Remove focus on rows */\n    $(\".selectable-row\").removeClass(\"active\");\n  });\n\n  /* Navigate to a tab when the history changes */\n  window.addEventListener(\"popstate\", function (e) {\n    if (location.hash !== \"\") {\n      activeTab = $('[data-toggle=tab][href=\"' + location.hash + '\"]');\n    } else {\n      activeTab = Array();\n    }\n    if (activeTab.length) {\n      activeTab.tab(\"show\");\n    } else {\n      $(\".nav-tabs a:first\").tab(\"show\");\n    }\n  });\n\n  /* Activate tab with error */\n  var formErrors = $(\"div.has-error\");\n  if (formErrors.length > 0) {\n    var tab = formErrors.closest(\"div.tab-pane\");\n    if (tab.length > 0) {\n      $('[data-toggle=tab][href=\"#' + tab.attr(\"id\") + '\"]').tab(\"show\");\n    }\n  }\n\n  /* Announcement discard */\n  $(\".alert\").on(\"close.bs.alert\", function () {\n    var $this = $(this);\n    var $form = $(\"#link-post\");\n\n    if ($this.data(\"action\")) {\n      $.ajax({\n        type: \"POST\",\n        url: $this.data(\"action\"),\n        data: {\n          csrfmiddlewaretoken: $form.find(\"input\").val(),\n          id: $this.data(\"id\"),\n        },\n        error: function (jqXHR, textStatus, errorThrown) {\n          addAlert(errorThrown);\n        },\n      });\n    }\n  });\n\n  /* Widgets selector */\n  $(\".select-tab\").on(\"change\", function (e) {\n    $(this).parent().find(\".tab-pane\").removeClass(\"active\");\n    $(\"#\" + $(this).val()).addClass(\"active\");\n  });\n\n  /* Code samples (on widgets page) */\n  $(\".code-example\").focus(function () {\n    $(this).select();\n  });\n\n  /* Table sorting */\n  loadTableSorting();\n\n  /* Matrix mode handling */\n  if ($(\".matrix\").length > 0) {\n    load_matrix();\n    $window.scroll(function () {\n      if ($window.scrollTop() >= $document.height() - 2 * $window.height()) {\n        load_matrix();\n      }\n    });\n  }\n\n  /* Social auth disconnect */\n  $(\"a.disconnect\").click(function (e) {\n    e.preventDefault();\n    $(\"form#disconnect-form\").attr(\"action\", $(this).attr(\"href\")).submit();\n  });\n\n  /* Check if browser provides native datepicker */\n  if (Modernizr.inputtypes.date) {\n    $(document).off(\".datepicker.data-api\");\n  }\n\n  /* Datepicker localization */\n  var week_start = \"1\";\n\n  if (typeof django !== \"undefined\") {\n    week_start = django.formats.FIRST_DAY_OF_WEEK;\n  }\n  $.fn.datepicker.dates.en = {\n    days: [\n      gettext(\"Sunday\"),\n      gettext(\"Monday\"),\n      gettext(\"Tuesday\"),\n      gettext(\"Wednesday\"),\n      gettext(\"Thursday\"),\n      gettext(\"Friday\"),\n      gettext(\"Saturday\"),\n      gettext(\"Sunday\"),\n    ],\n    daysShort: [\n      pgettext(\"Short (for example three letter) name of day in week\", \"Sun\"),\n      pgettext(\"Short (for example three letter) name of day in week\", \"Mon\"),\n      pgettext(\"Short (for example three letter) name of day in week\", \"Tue\"),\n      pgettext(\"Short (for example three letter) name of day in week\", \"Wed\"),\n      pgettext(\"Short (for example three letter) name of day in week\", \"Thu\"),\n      pgettext(\"Short (for example three letter) name of day in week\", \"Fri\"),\n      pgettext(\"Short (for example three letter) name of day in week\", \"Sat\"),\n      pgettext(\"Short (for example three letter) name of day in week\", \"Sun\"),\n    ],\n    daysMin: [\n      pgettext(\"Minimal (for example two letter) name of day in week\", \"Su\"),\n      pgettext(\"Minimal (for example two letter) name of day in week\", \"Mo\"),\n      pgettext(\"Minimal (for example two letter) name of day in week\", \"Tu\"),\n      pgettext(\"Minimal (for example two letter) name of day in week\", \"We\"),\n      pgettext(\"Minimal (for example two letter) name of day in week\", \"Th\"),\n      pgettext(\"Minimal (for example two letter) name of day in week\", \"Fr\"),\n      pgettext(\"Minimal (for example two letter) name of day in week\", \"Sa\"),\n      pgettext(\"Minimal (for example two letter) name of day in week\", \"Su\"),\n    ],\n    months: [\n      gettext(\"January\"),\n      gettext(\"February\"),\n      gettext(\"March\"),\n      gettext(\"April\"),\n      gettext(\"May\"),\n      gettext(\"June\"),\n      gettext(\"July\"),\n      gettext(\"August\"),\n      gettext(\"September\"),\n      gettext(\"October\"),\n      gettext(\"November\"),\n      gettext(\"December\"),\n    ],\n    monthsShort: [\n      pgettext(\"Short name of month\", \"Jan\"),\n      pgettext(\"Short name of month\", \"Feb\"),\n      pgettext(\"Short name of month\", \"Mar\"),\n      pgettext(\"Short name of month\", \"Apr\"),\n      pgettext(\"Short name of month\", \"May\"),\n      pgettext(\"Short name of month\", \"Jun\"),\n      pgettext(\"Short name of month\", \"Jul\"),\n      pgettext(\"Short name of month\", \"Aug\"),\n      pgettext(\"Short name of month\", \"Sep\"),\n      pgettext(\"Short name of month\", \"Oct\"),\n      pgettext(\"Short name of month\", \"Nov\"),\n      pgettext(\"Short name of month\", \"Dec\"),\n    ],\n    today: gettext(\"Today\"),\n    clear: gettext(\"Clear\"),\n    weekStart: week_start,\n    titleFormat: \"MM yyyy\",\n  };\n\n  $(\".dropdown-menu\")\n    .find(\"form\")\n    .click(function (e) {\n      e.stopPropagation();\n    });\n\n  $document.on(\"click\", \".link-post\", function () {\n    var $form = $(\"#link-post\");\n    var $this = $(this);\n\n    $form.attr(\"action\", $this.attr(\"data-href\"));\n    $.each($this.data(\"params\"), function (name, value) {\n      var elm = $(\"<input>\")\n        .attr(\"type\", \"hidden\")\n        .attr(\"name\", name)\n        .attr(\"value\", value);\n      $form.append(elm);\n    });\n    $form.submit();\n    return false;\n  });\n  $(\".link-auto\").click();\n  $document.on(\"click\", \".thumbnail\", function () {\n    var $this = $(this);\n    $(\"#imagepreview\").attr(\"src\", $this.attr(\"href\"));\n    $(\"#screenshotModal\").text($this.attr(\"title\"));\n    $(\"#modalEditLink\").attr(\"href\", $this.data(\"edit\"));\n    $(\"#imagemodal\").modal(\"show\");\n    return false;\n  });\n  /* Screenshot management */\n  $(\"#screenshots-search,#screenshots-auto\").click(function () {\n    var $this = $(this);\n\n    screenshotStart();\n    $.ajax({\n      type: \"POST\",\n      url: $this.data(\"href\"),\n      data: $this.parent().serialize(),\n      dataType: \"json\",\n      success: screenshotLoaded,\n      error: screenshotFailure,\n    });\n    return false;\n  });\n\n  /* Avoid double submission of non AJAX forms */\n  $(\"form:not(.double-submission)\").on(\"submit\", function (e) {\n    var $form = $(this);\n\n    if ($form.data(\"submitted\") === true) {\n      // Previously submitted - don't submit again\n      e.preventDefault();\n    } else {\n      // Mark it so that the next submit can be ignored\n      $form.data(\"submitted\", true);\n    }\n  });\n  /* Reset submitted flag when leaving the page, so that it is not set when going back in history */\n  $window.on(\"pagehide\", function () {\n    $(\"form:not(.double-submission)\").data(\"submitted\", false);\n  });\n\n  /* Client side form persistence */\n  var $forms = $(\"[data-persist]\");\n  if ($forms.length > 0 && window.localStorage) {\n    /* Load from local storage */\n    $forms.each(function () {\n      var $this = $(this);\n      var storedValue = window.localStorage[$this.data(\"persist\")];\n      if (storedValue) {\n        storedValue = JSON.parse(storedValue);\n        $.each(storedValue, function (key, value) {\n          var target = $this.find(\"[name=\" + key + \"]\");\n          if (target.is(\":checkbox\")) {\n            target.prop(\"checked\", value);\n          } else {\n            target.val(value);\n          }\n        });\n      }\n    });\n    /* Save on submit */\n    $forms.submit(function (e) {\n      var data = {};\n      var $this = $(this);\n\n      $this.find(\":checkbox\").each(function () {\n        var $this = $(this);\n\n        data[$this.attr(\"name\")] = $this.prop(\"checked\");\n      });\n      $this.find(\"select\").each(function () {\n        var $this = $(this);\n\n        data[$this.attr(\"name\")] = $this.val();\n      });\n      window.localStorage[$this.data(\"persist\")] = JSON.stringify(data);\n    });\n  }\n\n  /*\n   * Disable modal enforce focus to fix compatibility\n   * issues with ClipboardJS, see https://stackoverflow.com/a/40862005/225718\n   */\n  $.fn.modal.Constructor.prototype.enforceFocus = function () {};\n\n  /* Focus first input in modal */\n  $(document).on(\"shown.bs.modal\", function (event) {\n    var button = $(event.relatedTarget); // Button that triggered the modal\n    var target = button.data(\"focus\");\n    if (target) {\n      /* Modal context focusing */\n      $(target).focus();\n    } else {\n      $(\"input:visible:enabled:first\", event.target).focus();\n    }\n  });\n\n  /* Copy to clipboard */\n  var clipboard = new ClipboardJS(\"[data-clipboard-text]\");\n  clipboard.on(\"success\", function (e) {\n    var text =\n      e.trigger.getAttribute(\"data-clipboard-message\") ||\n      gettext(\"Text copied to clipboard.\");\n    addAlert(text, (kind = \"info\"));\n  });\n  clipboard.on(\"error\", function (e) {\n    addAlert(gettext(\"Please press Ctrl+C to copy.\"), (kind = \"danger\"));\n  });\n  $(\"[data-clipboard-text]\").on(\"click\", function (e) {\n    e.preventDefault();\n  });\n\n  /* Auto translate source select */\n  var select_auto_source = $('input[name=\"auto_source\"]');\n  if (select_auto_source.length > 0) {\n    select_auto_source.on(\"change\", function () {\n      if ($('input[name=\"auto_source\"]:checked').val() == \"others\") {\n        $(\"#auto_source_others\").show();\n        $(\"#auto_source_mt\").hide();\n      } else {\n        $(\"#auto_source_others\").hide();\n        $(\"#auto_source_mt\").show();\n      }\n    });\n    select_auto_source.trigger(\"change\");\n  }\n\n  /* Override all multiple selects */\n  $(\"select[multiple]\").multi({\n    enable_search: true,\n    search_placeholder: gettext(\"Search\u2026\"),\n    non_selected_header: gettext(\"Available:\"),\n    selected_header: gettext(\"Chosen:\"),\n  });\n\n  /* Slugify name */\n  slugify.extend({ \".\": \"-\" });\n  $('input[name=\"slug\"]').each(function () {\n    var $slug = $(this);\n    var $form = $slug.closest(\"form\");\n    $form\n      .find('input[name=\"name\"]')\n      .on(\"change keypress keydown keyup paste\", function () {\n        $slug.val(\n          slugify($(this).val(), { remove: /[^\\w\\s-]+/g }).toLowerCase()\n        );\n      });\n  });\n\n  /* Component update progress */\n  $(\"[data-progress-url]\").each(function () {\n    var $progress = $(this);\n    var $pre = $progress.find(\"pre\"),\n      $bar = $progress.find(\".progress-bar\"),\n      url = $progress.data(\"progress-url\");\n    var $form = $(\"#link-post\");\n\n    $pre.animate({ scrollTop: $pre.get(0).scrollHeight });\n\n    var progress_completed = function () {\n      $bar.width(\"100%\");\n      if ($(\"#progress-redirect\").prop(\"checked\")) {\n        window.location = $(\"#progress-return\").attr(\"href\");\n      }\n    };\n\n    var progress_interval = setInterval(function () {\n      $.ajax({\n        url: url,\n        type: \"get\",\n        error: function (XMLHttpRequest, textStatus, errorThrown) {\n          if (XMLHttpRequest.status == 404) {\n            clearInterval(progress_interval);\n            progress_completed();\n          }\n        },\n        success: function (data) {\n          $bar.width(data.progress + \"%\");\n          $pre.text(data.log);\n          $pre.animate({ scrollTop: $pre.get(0).scrollHeight });\n          if (data.completed) {\n            clearInterval(progress_interval);\n            progress_completed();\n          }\n        },\n      });\n    }, 1000);\n\n    $(\"#terminate-task-button\").click((e) => {\n      fetch(url, {\n        method: \"DELETE\",\n        headers: {\n          Accept: \"application/json\",\n          \"X-CSRFToken\": $form.find(\"input\").val(),\n        },\n      }).then((data) => {\n        window.location = $(\"#progress-return\").attr(\"href\");\n      });\n      e.preventDefault();\n    });\n  });\n\n  /* Generic messages progress */\n  $(\"[data-task]\").each(function () {\n    var $message = $(this);\n    var $bar = $message.find(\".progress-bar\");\n\n    var task_interval = setInterval(function () {\n      $.get($message.data(\"task\"), function (data) {\n        $bar.width(data.progress + \"%\");\n        if (data.completed) {\n          clearInterval(task_interval);\n          $message.text(data.result.message);\n        }\n      });\n    }, 1000);\n  });\n\n  /* Disable invalid file format choices */\n  $(\".invalid-format\").each(function () {\n    $(this).parent().find(\"input\").attr(\"disabled\", \"1\");\n  });\n\n  // Show the correct toggle button\n  if ($(\".sort-field\").length) {\n    var sort_name = $(\"#query-sort-dropdown span.search-label\").text();\n    var sort_dropdown_value = $(\".sort-field li a\")\n      .filter(function () {\n        return $(this).text() == sort_name;\n      })\n      .data(\"sort\");\n    var sort_value = $(\"#id_sort_by\").val();\n    if (sort_dropdown_value) {\n      if (\n        sort_value.replace(\"-\", \"\") === sort_dropdown_value.replace(\"-\", \"\") &&\n        sort_value !== sort_dropdown_value\n      ) {\n        $(\"#query-sort-toggle .asc\").hide();\n        $(\"#query-sort-toggle .desc\").show();\n      } else {\n        $(\"#query-sort-toggle .desc\").hide();\n        $(\"#query-sort-toggle .asc\").show();\n      }\n    }\n  }\n\n  /* Branch loading */\n  $(\".branch-loader select[name=component]\").change(function () {\n    var $this = $(this);\n    var $form = $this.closest(\"form\");\n    var branches = $form.data(\"branches\");\n    var $select = $form.find(\"select[name=branch]\");\n    $select.empty();\n    $.each(branches[$this.val()], function (key, value) {\n      $select.append($(\"<option></option>\").attr(\"value\", value).text(value));\n    });\n  });\n\n  /* Click to edit position inline. Disable when clicked outside or pressed ESC */\n  $(\"#position-input\").on(\"click\", function () {\n    $(\"#position-input\").hide();\n    $(\"#position-input-editable\").show();\n    $(\"#position-input-editable input\").focus();\n    document.addEventListener(\"click\", clickedOutsideEditableInput);\n    document.addEventListener(\"keyup\", pressedEscape);\n  });\n  var clickedOutsideEditableInput = function (event) {\n    if (\n      !$.contains($(\"#position-input-editable\")[0], event.target) &&\n      event.target != $(\"#position-input\")[0]\n    ) {\n      $(\"#position-input\").show();\n      $(\"#position-input-editable\").hide();\n      document.removeEventListener(\"click\", clickedOutsideEditableInput);\n      document.removeEventListener(\"keyup\", pressedEscape);\n    }\n  };\n  var pressedEscape = function (event) {\n    if (event.key == \"Escape\" && event.target != $(\"#position-input\")[0]) {\n      $(\"#position-input\").show();\n      $(\"#position-input-editable\").hide();\n      document.removeEventListener(\"click\", clickedOutsideEditableInput);\n      document.removeEventListener(\"keyup\", pressedEscape);\n    }\n  };\n\n  /* Advanced search */\n  $(\".search-group li a\").click(function () {\n    var $this = $(this);\n    var $group = $this.closest(\".search-group\");\n    var $button = $group.find(\"button.search-field\");\n\n    $button.attr(\"data-field\", $this.data(\"field\"));\n    var $title = $this.find(\"span.title\");\n    var text = $this.text();\n    if ($title.length) {\n      text = $title.text();\n    }\n    $group.find(\"span.search-label\").text(text);\n\n    if ($group.hasClass(\"sort-field\")) {\n      $group.find(\"input[name=sort_by]\").val($this.data(\"sort\"));\n      if ($this.closest(\".result-page-form\").length) {\n        $this.closest(\"form\").submit();\n      }\n    }\n\n    if ($group.hasClass(\"query-field\")) {\n      $group.find(\"input[name=q]\").val($this.data(\"field\"));\n      if ($this.closest(\".result-page-form\").length) {\n        var $form = $this.closest(\"form\");\n        $form.find(\"input[name=offset]\").val(\"1\");\n        $form.submit();\n      }\n    }\n    $this.closest(\"ul\").dropdown(\"toggle\");\n    return false;\n  });\n  $(\".query-sort-toggle\").click(function () {\n    var $this = $(this);\n    var $label = $this.find(\"span.search-icon\");\n    var $input = $this.closest(\".search-group\").find(\"input[name=sort_by]\");\n    $label.toggle();\n    var sort_params = $input.val().split(\",\");\n    sort_params.forEach(function (param, index) {\n      if (param.indexOf(\"-\") !== -1) {\n        sort_params[index] = param.replace(\"-\", \"\");\n      } else {\n        sort_params[index] = `-${param}`;\n      }\n    });\n    $input.val(sort_params.join(\",\"));\n    if ($this.closest(\".result-page-form\").length) {\n      $this.closest(\"form\").submit();\n    }\n  });\n  $(\".search-group input\")\n    .not(\"#id_q,#id_position,#id_term\")\n    .on(\"keydown\", function (event) {\n      if (event.key === \"Enter\") {\n        $(this).closest(\".input-group\").find(\".search-add\").click();\n        event.preventDefault();\n        return false;\n      }\n    });\n  $(\"#id_position\").on(\"keydown\", function (event) {\n    if (event.key === \"Enter\") {\n      $(this).closest(\"form\").submit();\n    }\n  });\n  $(\"#id_q\").on(\"keydown\", function (event) {\n    if (event.key === \"Enter\") {\n      var $form = $(this).closest(\"form\");\n      $form.find(\"input[name=offset]\").val(\"1\");\n      $form.submit();\n    }\n  });\n  $(\".search-add\").click(function () {\n    var group = $(this).closest(\".search-group\");\n    var button = group.find(\"button.search-field\");\n    var input = group.find(\"input\");\n\n    if (input.length === 0) {\n      $(\"#id_q\").insertAtCaret(\" \" + button.attr(\"data-field\") + \" \");\n    } else if (input.val() !== \"\") {\n      var prefix = \"\";\n      if (group.find(\"#is-exact input[type=checkbox]\").is(\":checked\")) {\n        prefix = \"=\";\n      }\n      $(\"#id_q\").insertAtCaret(\n        \" \" +\n          button.attr(\"data-field\") +\n          prefix +\n          quoteSearch(input.val()) +\n          \" \"\n      );\n    }\n  });\n  $(\".search-insert\").click(function () {\n    $(\"#id_q\").insertAtCaret(\n      \" \" + $(this).closest(\"tr\").find(\"code\").text() + \" \"\n    );\n  });\n\n  /* Clickable rows */\n  $(\"tr[data-href]\").click(function () {\n    window.location = $(this).data(\"href\");\n  });\n\n  /* ZIP import - autofill name and slug */\n  $(\"#id_zipcreate_zipfile,#id_doccreate_docfile,#id_image\").change(\n    function () {\n      var $form = $(this).closest(\"form\");\n      var target = $form.find(\"input[name=name]\");\n      if (this.files.length > 0 && target.val() === \"\") {\n        var name = this.files[0].name;\n        target.val(name.substring(0, name.lastIndexOf(\".\")));\n        target.change();\n      }\n    }\n  );\n\n  /* Alert when creating a component */\n  $(\"#form-create-component-branch,#form-create-component-vcs\").submit(\n    function () {\n      addAlert(\n        gettext(\"Weblate is now scanning the repository, please be patient.\"),\n        (kind = \"info\"),\n        (delay = 0)\n      );\n    }\n  );\n\n  /* Username autocompletion */\n  var tribute = new Tribute({\n    trigger: \"@\",\n    requireLeadingSpace: true,\n    menuShowMinLength: 2,\n    noMatchTemplate: function () {\n      return \"\";\n    },\n    menuItemTemplate: function (item) {\n      let link = document.createElement(\"a\");\n      link.innerText = item.string;\n      return link.outerHTML;\n    },\n    values: (text, callback) => {\n      $.ajax({\n        type: \"GET\",\n        url: `/api/users/?username=${text}`,\n        dataType: \"json\",\n        success: function (data) {\n          var userMentionList = data.results.map(function (user) {\n            return {\n              value: user.username,\n              key: `${user.full_name} (${user.username})`,\n            };\n          });\n          callback(userMentionList);\n        },\n        error: function (jqXHR, textStatus, errorThrown) {\n          console.error(errorThrown);\n        },\n      });\n    },\n  });\n  tribute.attach(document.querySelectorAll(\".markdown-editor\"));\n  document.querySelectorAll(\".markdown-editor\").forEach((editor) => {\n    editor.addEventListener(\"tribute-active-true\", function (e) {\n      $(\".tribute-container\").addClass(\"open\");\n      $(\".tribute-container ul\").addClass(\"dropdown-menu\");\n    });\n  });\n\n  /* Textarea higlighting */\n  Prism.languages.none = {};\n  initHighlight(document);\n\n  $(\".replace-preview input[type='checkbox']\").on(\"change\", function () {\n    $(this).closest(\"tr\").toggleClass(\"warning\", this.checked);\n  });\n\n  /* Warn users that they do not want to use developer console in most cases */\n  console.log(\n    \"%c\" +\n      pgettext(\"Alert to user when opening browser developer console\", \"Stop!\"),\n    \"color: red; font-weight: bold; font-size: 50px; font-family: sans-serif; -webkit-text-stroke: 1px black;\"\n  );\n  console.log(\n    \"%c\" +\n      gettext(\n        \"This is a browser feature intended for developers. If someone told you to copy-paste something here, they are likely trying to compromise your Weblate account.\"\n      ),\n    \"font-size: 20px; font-family: sans-serif\"\n  );\n  console.log(\n    \"%c\" +\n      gettext(\n        \"See https://en.wikipedia.org/wiki/Self-XSS for more information.\"\n      ),\n    \"font-size: 20px; font-family: sans-serif\"\n  );\n});\n", "code_before": "var loading = [];\n\n// Remove some weird things from location hash\nif (\n  window.location.hash &&\n  (window.location.hash.indexOf('\"') > -1 ||\n    window.location.hash.indexOf(\"=\") > -1)\n) {\n  window.location.hash = \"\";\n}\n\n// Loading indicator handler\nfunction increaseLoading(sel) {\n  if (!(sel in loading)) {\n    loading[sel] = 0;\n  }\n  if (loading[sel] === 0) {\n    $(\"#loading-\" + sel).show();\n  }\n  loading[sel] += 1;\n}\n\nfunction decreaseLoading(sel) {\n  loading[sel] -= 1;\n  if (loading[sel] === 0) {\n    $(\"#loading-\" + sel).hide();\n  }\n}\n\nfunction addAlert(message, kind = \"danger\", delay = 3000) {\n  var alerts = $(\"#popup-alerts\");\n  var e = $(\n    '<div class=\"alert alert-' +\n      kind +\n      ' alert-dismissible\" role=\"alert\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button></div>'\n  );\n  e.append(new Text(message));\n  e.hide();\n  alerts.show().append(e);\n  e.slideDown(200);\n  e.on(\"closed.bs.alert\", function () {\n    if (alerts.find(\".alert\").length == 0) {\n      alerts.hide();\n    }\n  });\n  if (delay) {\n    e.delay(delay).slideUp(200, function () {\n      $(this).alert(\"close\");\n    });\n  }\n}\n\njQuery.fn.extend({\n  insertAtCaret: function (myValue) {\n    return this.each(function () {\n      if (document.selection) {\n        // For browsers like Internet Explorer\n        this.focus();\n        let sel = document.selection.createRange();\n\n        sel.text = myValue;\n        this.focus();\n      } else if (this.selectionStart || this.selectionStart === 0) {\n        //For browsers like Firefox and Webkit based\n        let startPos = this.selectionStart;\n        let endPos = this.selectionEnd;\n        let scrollTop = this.scrollTop;\n\n        this.value =\n          this.value.substring(0, startPos) +\n          myValue +\n          this.value.substring(endPos, this.value.length);\n        this.focus();\n        this.selectionStart = startPos + myValue.length;\n        this.selectionEnd = startPos + myValue.length;\n        this.scrollTop = scrollTop;\n      } else {\n        this.value += myValue;\n        this.focus();\n      }\n      this.dispatchEvent(new Event(\"input\"));\n      /* Zen editor still relies on jQuery here */\n      $(this).change();\n    });\n  },\n\n  replaceValue: function (myValue) {\n    return this.each(function () {\n      this.value = myValue;\n      this.dispatchEvent(new Event(\"input\"));\n    });\n  },\n});\n\nfunction submitForm(evt) {\n  var $target = $(evt.target);\n  var $form = $target.closest(\"form\");\n\n  if ($form.length === 0) {\n    $form = $(\".translation-form\");\n  }\n  if ($form.length > 0) {\n    let submits = $form.find('input[type=\"submit\"]');\n\n    if (submits.length === 0) {\n      submits = $form.find('button[type=\"submit\"]');\n    }\n    if (submits.length > 0) {\n      submits[0].click();\n    }\n  }\n  return false;\n}\nMousetrap.bindGlobal([\"alt+enter\", \"mod+enter\"], submitForm);\n\nfunction screenshotStart() {\n  $(\"#search-results tbody.unit-listing-body\").empty();\n  increaseLoading(\"screenshots\");\n}\n\nfunction screenshotFailure() {\n  screenshotLoaded({ responseCode: 500 });\n}\n\nfunction screenshotAddString() {\n  var pk = $(this).data(\"pk\");\n  var form = $(\"#screenshot-add-form\");\n\n  $(\"#add-source\").val(pk);\n  $.ajax({\n    type: \"POST\",\n    url: form.attr(\"action\"),\n    data: form.serialize(),\n    dataType: \"json\",\n    success: function () {\n      var list = $(\"#sources-listing\");\n      $.get(list.data(\"href\"), function (data) {\n        list.find(\"table\").replaceWith(data);\n      });\n    },\n    error: function (jqXHR, textStatus, errorThrown) {\n      addAlert(errorThrown);\n    },\n  });\n}\n\nfunction screnshotResultError(severity, message) {\n  $(\"#search-results tbody.unit-listing-body\").html(\n    '<tr class=\"' + severity + '\"><td colspan=\"4\">' + message + \"</td></tr>\"\n  );\n}\n\nfunction screenshotLoaded(data) {\n  decreaseLoading(\"screenshots\");\n  if (data.responseCode !== 200) {\n    screnshotResultError(\"danger\", gettext(\"Error loading search results!\"));\n  } else if (data.results.length === 0) {\n    screnshotResultError(\n      \"warning\",\n      gettext(\"No new matching source strings found.\")\n    );\n  } else {\n    $(\"#search-results table\").replaceWith(data.results);\n    $(\"#search-results\").find(\".add-string\").click(screenshotAddString);\n  }\n}\n\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nfunction extractText(cell) {\n  var value = $(cell).data(\"value\");\n  if (typeof value !== \"undefined\") {\n    return value;\n  }\n  return $.text(cell);\n}\n\nfunction compareCells(a, b) {\n  if (typeof a === \"number\" && typeof b === \"number\") {\n  } else if (a.indexOf(\"%\") !== -1 && b.indexOf(\"%\") !== -1) {\n    a = parseFloat(a.replace(\",\", \".\"));\n    b = parseFloat(b.replace(\",\", \".\"));\n  } else if (isNumber(a) && isNumber(b)) {\n    a = parseFloat(a.replace(\",\", \".\"));\n    b = parseFloat(b.replace(\",\", \".\"));\n  } else if (typeof a === \"string\" && typeof b === \"string\") {\n    a = a.toLowerCase();\n    b = b.toLowerCase();\n  }\n  if (a == b) {\n    return 0;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return -1;\n}\n\nfunction loadTableSorting() {\n  $(\"table.sort\").each(function () {\n    var table = $(this),\n      tbody = table.find(\"tbody\"),\n      thead = table.find(\"thead\"),\n      thIndex = 0;\n\n    $(this)\n      .find(\"thead th\")\n      .each(function () {\n        var th = $(this),\n          inverse = 1;\n\n        // handle colspan\n        if (th.attr(\"colspan\")) {\n          thIndex += parseInt(th.attr(\"colspan\"), 10) - 1;\n        }\n        // skip empty cells and cells with icon (probably already processed)\n        if (\n          th.text() !== \"\" &&\n          !th.hasClass(\"sort-init\") &&\n          !th.hasClass(\"sort-skip\")\n        ) {\n          // Store index copy\n          let myIndex = thIndex;\n          // Add icon, title and class\n          th.addClass(\"sort-init\");\n          if (!th.hasClass(\"sort-cell\")) {\n            // Skip statically initialized parts (when server side ordering is supported)\n            th.attr(\"title\", gettext(\"Sort this column\"))\n              .addClass(\"sort-cell\")\n              .append('<span class=\"sort-icon\" />');\n          }\n\n          // Click handler\n          th.click(function () {\n            tbody\n              .find(\"tr\")\n              .sort(function (a, b) {\n                var $a = $(a),\n                  $b = $(b);\n                var a_parent = $a.data(\"parent\"),\n                  b_parent = $b.data(\"parent\");\n                if (a_parent) {\n                  $a = tbody.find(\"#\" + a_parent);\n                }\n                if (b_parent) {\n                  $b = tbody.find(\"#\" + b_parent);\n                }\n                return (\n                  inverse *\n                  compareCells(\n                    extractText($a.find(\"td,th\")[myIndex]),\n                    extractText($b.find(\"td,th\")[myIndex])\n                  )\n                );\n              })\n              .appendTo(tbody);\n            thead.find(\".sort-icon\").removeClass(\"sort-down sort-up\");\n            if (inverse === 1) {\n              $(this).find(\".sort-icon\").addClass(\"sort-down\");\n            } else {\n              $(this).find(\".sort-icon\").addClass(\"sort-up\");\n            }\n\n            inverse = inverse * -1;\n          });\n        }\n        // Increase index\n        thIndex += 1;\n      });\n  });\n}\n\n/* Thin wrappers for django to avoid problems when i18n js can not be loaded */\nfunction gettext(msgid) {\n  if (typeof django !== \"undefined\") {\n    return django.gettext(msgid);\n  }\n  return msgid;\n}\nfunction pgettext(context, msgid) {\n  if (typeof django !== \"undefined\") {\n    return django.pgettext(context, msgid);\n  }\n  return msgid;\n}\nfunction interpolate(fmt, obj, named) {\n  if (typeof django !== \"undefined\") {\n    return django.interpolate(fmt, obj, named);\n  }\n  return fmt.replace(/%s/g, function () {\n    return String(obj.shift());\n  });\n}\n\nfunction load_matrix() {\n  var $loadingNext = $(\"#loading-next\");\n  var $loader = $(\"#matrix-load\");\n  var offset = parseInt($loader.data(\"offset\"));\n\n  if ($(\"#last-section\").length > 0 || $loadingNext.css(\"display\") !== \"none\") {\n    return;\n  }\n  $loadingNext.show();\n\n  $loader.data(\"offset\", 20 + offset);\n\n  $.get($loader.attr(\"href\") + \"&offset=\" + offset, function (data) {\n    $loadingNext.hide();\n    $(\".matrix tbody\").append(data);\n  });\n}\n\nfunction adjustColspan() {\n  $(\"table.autocolspan\").each(function () {\n    var $this = $(this);\n    var numOfVisibleCols = $this.find(\"thead th:visible\").length;\n    if (numOfVisibleCols === 0) {\n      numOfVisibleCols = 3;\n    }\n    $this.find(\"td.autocolspan\").attr(\"colspan\", numOfVisibleCols - 1);\n  });\n}\n\nfunction quoteSearch(value) {\n  if (value.indexOf(\" \") === -1) {\n    return value;\n  }\n  if (value.indexOf('\"') === -1) {\n    return '\"' + value + '\"';\n  }\n  if (value.indexOf(\"'\") === -1) {\n    return \"'\" + value + \"'\";\n  }\n  /* We should do some escaping here */\n  return value;\n}\n\nfunction initHighlight(root) {\n  if (typeof ResizeObserver === \"undefined\") {\n    return;\n  }\n  root.querySelectorAll(\".highlight-editor\").forEach(function (editor) {\n    var parent = editor.parentElement;\n    var hasFocus = editor == document.activeElement;\n\n    if (parent.classList.contains(\"editor-wrap\")) {\n      return;\n    }\n\n    var mode = editor.getAttribute(\"data-mode\");\n\n    /* Create wrapper element */\n    var wrapper = document.createElement(\"div\");\n    wrapper.setAttribute(\"class\", \"editor-wrap\");\n\n    /* Inject wrapper */\n    parent.replaceChild(wrapper, editor);\n\n    /* Create highlighter */\n    var highlight = document.createElement(\"div\");\n    highlight.setAttribute(\"class\", \"highlighted-output\");\n    if (editor.readOnly) {\n      highlight.classList.add(\"readonly\");\n    }\n    highlight.setAttribute(\"role\", \"status\");\n    if (editor.hasAttribute(\"dir\")) {\n      highlight.setAttribute(\"dir\", editor.getAttribute(\"dir\"));\n    }\n    if (editor.hasAttribute(\"lang\")) {\n      highlight.setAttribute(\"lang\", editor.getAttribute(\"lang\"));\n    }\n    wrapper.appendChild(highlight);\n\n    /* Add editor to wrapper */\n    wrapper.appendChild(editor);\n    if (hasFocus) {\n      editor.focus();\n    }\n\n    /* Content synchronisation and highlighting */\n    var languageMode = Prism.languages[mode];\n    if (editor.classList.contains(\"translation-editor\")) {\n      let placeables = editor.getAttribute(\"data-placeables\");\n      /* This should match WHITESPACE_REGEX in weblate/trans/templatetags/translations.py */\n      let whitespace_regex = new RegExp(\n        [\n          \"  +|(^) +| +(?=$)| +\\n|\\n +|\\t|\",\n          \"\\u00A0|\\u1680|\\u2000|\\u2001|\",\n          \"\\u2002|\\u2003|\\u2004|\\u2005|\",\n          \"\\u2006|\\u2007|\\u2008|\\u2009|\",\n          \"\\u200A|\\u202F|\\u205F|\\u3000\",\n        ].join(\"\")\n      );\n      let extension = {\n        hlspace: {\n          pattern: whitespace_regex,\n          lookbehind: true,\n        },\n      };\n      if (placeables) {\n        extension.placeable = RegExp(placeables);\n      }\n      /*\n       * We can not use Prism.extend here as we want whitespace highlighting\n       * to apply first. The code is borrowed from Prism.util.clone.\n       */\n      for (var key in languageMode) {\n        if (languageMode.hasOwnProperty(key)) {\n          extension[key] = Prism.util.clone(languageMode[key]);\n        }\n      }\n      languageMode = extension;\n    }\n    var syncContent = function () {\n      highlight.innerHTML = Prism.highlight(editor.value, languageMode, mode);\n      autosize.update(editor);\n    };\n    syncContent();\n    editor.addEventListener(\"input\", syncContent);\n\n    /* Handle scrolling */\n    editor.addEventListener(\"scroll\", (event) => {\n      highlight.scrollTop = editor.scrollTop;\n      highlight.scrollLeft = editor.scrollLeft;\n    });\n\n    /* Handle resizing */\n    const resizeObserver = new ResizeObserver((entries) => {\n      for (let entry of entries) {\n        if (entry.target === editor) {\n          // match the height and width of the output area to the input area\n          highlight.style.height = editor.offsetHeight + \"px\";\n          highlight.style.width = editor.offsetWidth + \"px\";\n        }\n      }\n    });\n\n    resizeObserver.observe(editor);\n    /* Autosizing */\n    autosize(editor);\n  });\n}\n\n$(function () {\n  var $window = $(window),\n    $document = $(document);\n\n  adjustColspan();\n  $window.resize(adjustColspan);\n  $document.on(\"shown.bs.tab\", adjustColspan);\n\n  /* AJAX loading of tabs/pills */\n  $document.on(\n    \"show.bs.tab\",\n    '[data-toggle=\"tab\"][data-href], [data-toggle=\"pill\"][data-href]',\n    function (e) {\n      var $target = $(e.target);\n      var $content = $($target.attr(\"href\"));\n      if ($target.data(\"loaded\")) {\n        return;\n      }\n      if ($content.find(\".panel-body\").length > 0) {\n        $content = $content.find(\".panel-body\");\n      }\n      $content.load($target.data(\"href\"), function (responseText, status, xhr) {\n        if (status !== \"success\") {\n          var msg = gettext(\"Error while loading page:\");\n          $content.text(\n            msg +\n              \" \" +\n              xhr.statusText +\n              \" (\" +\n              xhr.status +\n              \"): \" +\n              responseText\n          );\n        }\n        $target.data(\"loaded\", 1);\n        loadTableSorting();\n      });\n    }\n  );\n\n  if ($(\"#form-activetab\").length > 0) {\n    $document.on(\"show.bs.tab\", '[data-toggle=\"tab\"]', function (e) {\n      var $target = $(e.target);\n      $(\"#form-activetab\").attr(\"value\", $target.attr(\"href\"));\n    });\n  }\n\n  /* Form automatic submission */\n  $(\"form.autosubmit select\").change(function () {\n    $(\"form.autosubmit\").submit();\n  });\n\n  var activeTab;\n\n  /* Load correct tab */\n  if (location.hash !== \"\") {\n    /* From URL hash */\n    var separator = location.hash.indexOf(\"__\");\n    if (separator != -1) {\n      activeTab = $(\n        '.nav [data-toggle=tab][href=\"' +\n          location.hash.substr(0, separator) +\n          '\"]'\n      );\n      if (activeTab.length) {\n        activeTab.tab(\"show\");\n      }\n    }\n    activeTab = $('.nav [data-toggle=tab][href=\"' + location.hash + '\"]');\n    if (activeTab.length) {\n      activeTab.tab(\"show\");\n      window.scrollTo(0, 0);\n    } else {\n      document.getElementById(location.hash.substr(1)).scrollIntoView();\n    }\n  } else if (\n    $(\".translation-tabs\").length > 0 &&\n    Cookies.get(\"translate-tab\")\n  ) {\n    /* From cookie */\n    activeTab = $(\n      '[data-toggle=tab][href=\"' + Cookies.get(\"translate-tab\") + '\"]'\n    );\n    if (activeTab.length) {\n      activeTab.tab(\"show\");\n    }\n  }\n\n  /* Add a hash to the URL when the user clicks on a tab */\n  $('a[data-toggle=\"tab\"]').on(\"shown.bs.tab\", function (e) {\n    history.pushState(null, null, $(this).attr(\"href\"));\n    /* Remove focus on rows */\n    $(\".selectable-row\").removeClass(\"active\");\n  });\n\n  /* Navigate to a tab when the history changes */\n  window.addEventListener(\"popstate\", function (e) {\n    if (location.hash !== \"\") {\n      activeTab = $('[data-toggle=tab][href=\"' + location.hash + '\"]');\n    } else {\n      activeTab = Array();\n    }\n    if (activeTab.length) {\n      activeTab.tab(\"show\");\n    } else {\n      $(\".nav-tabs a:first\").tab(\"show\");\n    }\n  });\n\n  /* Activate tab with error */\n  var formErrors = $(\"div.has-error\");\n  if (formErrors.length > 0) {\n    var tab = formErrors.closest(\"div.tab-pane\");\n    if (tab.length > 0) {\n      $('[data-toggle=tab][href=\"#' + tab.attr(\"id\") + '\"]').tab(\"show\");\n    }\n  }\n\n  /* Announcement discard */\n  $(\".alert\").on(\"close.bs.alert\", function () {\n    var $this = $(this);\n    var $form = $(\"#link-post\");\n\n    if ($this.data(\"action\")) {\n      $.ajax({\n        type: \"POST\",\n        url: $this.data(\"action\"),\n        data: {\n          csrfmiddlewaretoken: $form.find(\"input\").val(),\n          id: $this.data(\"id\"),\n        },\n        error: function (jqXHR, textStatus, errorThrown) {\n          addAlert(errorThrown);\n        },\n      });\n    }\n  });\n\n  /* Widgets selector */\n  $(\".select-tab\").on(\"change\", function (e) {\n    $(this).parent().find(\".tab-pane\").removeClass(\"active\");\n    $(\"#\" + $(this).val()).addClass(\"active\");\n  });\n\n  /* Code samples (on widgets page) */\n  $(\".code-example\").focus(function () {\n    $(this).select();\n  });\n\n  /* Table sorting */\n  loadTableSorting();\n\n  /* Matrix mode handling */\n  if ($(\".matrix\").length > 0) {\n    load_matrix();\n    $window.scroll(function () {\n      if ($window.scrollTop() >= $document.height() - 2 * $window.height()) {\n        load_matrix();\n      }\n    });\n  }\n\n  /* Social auth disconnect */\n  $(\"a.disconnect\").click(function (e) {\n    e.preventDefault();\n    $(\"form#disconnect-form\").attr(\"action\", $(this).attr(\"href\")).submit();\n  });\n\n  /* Check if browser provides native datepicker */\n  if (Modernizr.inputtypes.date) {\n    $(document).off(\".datepicker.data-api\");\n  }\n\n  /* Datepicker localization */\n  var week_start = \"1\";\n\n  if (typeof django !== \"undefined\") {\n    week_start = django.formats.FIRST_DAY_OF_WEEK;\n  }\n  $.fn.datepicker.dates.en = {\n    days: [\n      gettext(\"Sunday\"),\n      gettext(\"Monday\"),\n      gettext(\"Tuesday\"),\n      gettext(\"Wednesday\"),\n      gettext(\"Thursday\"),\n      gettext(\"Friday\"),\n      gettext(\"Saturday\"),\n      gettext(\"Sunday\"),\n    ],\n    daysShort: [\n      pgettext(\"Short (for example three letter) name of day in week\", \"Sun\"),\n      pgettext(\"Short (for example three letter) name of day in week\", \"Mon\"),\n      pgettext(\"Short (for example three letter) name of day in week\", \"Tue\"),\n      pgettext(\"Short (for example three letter) name of day in week\", \"Wed\"),\n      pgettext(\"Short (for example three letter) name of day in week\", \"Thu\"),\n      pgettext(\"Short (for example three letter) name of day in week\", \"Fri\"),\n      pgettext(\"Short (for example three letter) name of day in week\", \"Sat\"),\n      pgettext(\"Short (for example three letter) name of day in week\", \"Sun\"),\n    ],\n    daysMin: [\n      pgettext(\"Minimal (for example two letter) name of day in week\", \"Su\"),\n      pgettext(\"Minimal (for example two letter) name of day in week\", \"Mo\"),\n      pgettext(\"Minimal (for example two letter) name of day in week\", \"Tu\"),\n      pgettext(\"Minimal (for example two letter) name of day in week\", \"We\"),\n      pgettext(\"Minimal (for example two letter) name of day in week\", \"Th\"),\n      pgettext(\"Minimal (for example two letter) name of day in week\", \"Fr\"),\n      pgettext(\"Minimal (for example two letter) name of day in week\", \"Sa\"),\n      pgettext(\"Minimal (for example two letter) name of day in week\", \"Su\"),\n    ],\n    months: [\n      gettext(\"January\"),\n      gettext(\"February\"),\n      gettext(\"March\"),\n      gettext(\"April\"),\n      gettext(\"May\"),\n      gettext(\"June\"),\n      gettext(\"July\"),\n      gettext(\"August\"),\n      gettext(\"September\"),\n      gettext(\"October\"),\n      gettext(\"November\"),\n      gettext(\"December\"),\n    ],\n    monthsShort: [\n      pgettext(\"Short name of month\", \"Jan\"),\n      pgettext(\"Short name of month\", \"Feb\"),\n      pgettext(\"Short name of month\", \"Mar\"),\n      pgettext(\"Short name of month\", \"Apr\"),\n      pgettext(\"Short name of month\", \"May\"),\n      pgettext(\"Short name of month\", \"Jun\"),\n      pgettext(\"Short name of month\", \"Jul\"),\n      pgettext(\"Short name of month\", \"Aug\"),\n      pgettext(\"Short name of month\", \"Sep\"),\n      pgettext(\"Short name of month\", \"Oct\"),\n      pgettext(\"Short name of month\", \"Nov\"),\n      pgettext(\"Short name of month\", \"Dec\"),\n    ],\n    today: gettext(\"Today\"),\n    clear: gettext(\"Clear\"),\n    weekStart: week_start,\n    titleFormat: \"MM yyyy\",\n  };\n\n  $(\".dropdown-menu\")\n    .find(\"form\")\n    .click(function (e) {\n      e.stopPropagation();\n    });\n\n  $document.on(\"click\", \".link-post\", function () {\n    var $form = $(\"#link-post\");\n    var $this = $(this);\n\n    $form.attr(\"action\", $this.attr(\"data-href\"));\n    $.each($this.data(\"params\"), function (name, value) {\n      var elm = $(\"<input>\")\n        .attr(\"type\", \"hidden\")\n        .attr(\"name\", name)\n        .attr(\"value\", value);\n      $form.append(elm);\n    });\n    $form.submit();\n    return false;\n  });\n  $(\".link-auto\").click();\n  $document.on(\"click\", \".thumbnail\", function () {\n    var $this = $(this);\n    $(\"#imagepreview\").attr(\"src\", $this.attr(\"href\"));\n    $(\"#screenshotModal\").text($this.attr(\"title\"));\n    $(\"#modalEditLink\").attr(\"href\", $this.data(\"edit\"));\n    $(\"#imagemodal\").modal(\"show\");\n    return false;\n  });\n  /* Screenshot management */\n  $(\"#screenshots-search,#screenshots-auto\").click(function () {\n    var $this = $(this);\n\n    screenshotStart();\n    $.ajax({\n      type: \"POST\",\n      url: $this.data(\"href\"),\n      data: $this.parent().serialize(),\n      dataType: \"json\",\n      success: screenshotLoaded,\n      error: screenshotFailure,\n    });\n    return false;\n  });\n\n  /* Avoid double submission of non AJAX forms */\n  $(\"form:not(.double-submission)\").on(\"submit\", function (e) {\n    var $form = $(this);\n\n    if ($form.data(\"submitted\") === true) {\n      // Previously submitted - don't submit again\n      e.preventDefault();\n    } else {\n      // Mark it so that the next submit can be ignored\n      $form.data(\"submitted\", true);\n    }\n  });\n  /* Reset submitted flag when leaving the page, so that it is not set when going back in history */\n  $window.on(\"pagehide\", function () {\n    $(\"form:not(.double-submission)\").data(\"submitted\", false);\n  });\n\n  /* Client side form persistence */\n  var $forms = $(\"[data-persist]\");\n  if ($forms.length > 0 && window.localStorage) {\n    /* Load from local storage */\n    $forms.each(function () {\n      var $this = $(this);\n      var storedValue = window.localStorage[$this.data(\"persist\")];\n      if (storedValue) {\n        storedValue = JSON.parse(storedValue);\n        $.each(storedValue, function (key, value) {\n          var target = $this.find(\"[name=\" + key + \"]\");\n          if (target.is(\":checkbox\")) {\n            target.prop(\"checked\", value);\n          } else {\n            target.val(value);\n          }\n        });\n      }\n    });\n    /* Save on submit */\n    $forms.submit(function (e) {\n      var data = {};\n      var $this = $(this);\n\n      $this.find(\":checkbox\").each(function () {\n        var $this = $(this);\n\n        data[$this.attr(\"name\")] = $this.prop(\"checked\");\n      });\n      $this.find(\"select\").each(function () {\n        var $this = $(this);\n\n        data[$this.attr(\"name\")] = $this.val();\n      });\n      window.localStorage[$this.data(\"persist\")] = JSON.stringify(data);\n    });\n  }\n\n  /*\n   * Disable modal enforce focus to fix compatibility\n   * issues with ClipboardJS, see https://stackoverflow.com/a/40862005/225718\n   */\n  $.fn.modal.Constructor.prototype.enforceFocus = function () {};\n\n  /* Focus first input in modal */\n  $(document).on(\"shown.bs.modal\", function (event) {\n    var button = $(event.relatedTarget); // Button that triggered the modal\n    var target = button.data(\"focus\");\n    if (target) {\n      /* Modal context focusing */\n      $(target).focus();\n    } else {\n      $(\"input:visible:enabled:first\", event.target).focus();\n    }\n  });\n\n  /* Copy to clipboard */\n  var clipboard = new ClipboardJS(\"[data-clipboard-text]\");\n  clipboard.on(\"success\", function (e) {\n    var text =\n      e.trigger.getAttribute(\"data-clipboard-message\") ||\n      gettext(\"Text copied to clipboard.\");\n    addAlert(text, (kind = \"info\"));\n  });\n  clipboard.on(\"error\", function (e) {\n    addAlert(gettext(\"Please press Ctrl+C to copy.\"), (kind = \"danger\"));\n  });\n  $(\"[data-clipboard-text]\").on(\"click\", function (e) {\n    e.preventDefault();\n  });\n\n  /* Auto translate source select */\n  var select_auto_source = $('input[name=\"auto_source\"]');\n  if (select_auto_source.length > 0) {\n    select_auto_source.on(\"change\", function () {\n      if ($('input[name=\"auto_source\"]:checked').val() == \"others\") {\n        $(\"#auto_source_others\").show();\n        $(\"#auto_source_mt\").hide();\n      } else {\n        $(\"#auto_source_others\").hide();\n        $(\"#auto_source_mt\").show();\n      }\n    });\n    select_auto_source.trigger(\"change\");\n  }\n\n  /* Override all multiple selects */\n  $(\"select[multiple]\").multi({\n    enable_search: true,\n    search_placeholder: gettext(\"Search\u2026\"),\n    non_selected_header: gettext(\"Available:\"),\n    selected_header: gettext(\"Chosen:\"),\n  });\n\n  /* Slugify name */\n  slugify.extend({ \".\": \"-\" });\n  $('input[name=\"slug\"]').each(function () {\n    var $slug = $(this);\n    var $form = $slug.closest(\"form\");\n    $form\n      .find('input[name=\"name\"]')\n      .on(\"change keypress keydown keyup paste\", function () {\n        $slug.val(\n          slugify($(this).val(), { remove: /[^\\w\\s-]+/g }).toLowerCase()\n        );\n      });\n  });\n\n  /* Component update progress */\n  $(\"[data-progress-url]\").each(function () {\n    var $progress = $(this);\n    var $pre = $progress.find(\"pre\"),\n      $bar = $progress.find(\".progress-bar\"),\n      url = $progress.data(\"progress-url\");\n    var $form = $(\"#link-post\");\n\n    $pre.animate({ scrollTop: $pre.get(0).scrollHeight });\n\n    var progress_completed = function () {\n      $bar.width(\"100%\");\n      if ($(\"#progress-redirect\").prop(\"checked\")) {\n        window.location = $(\"#progress-return\").attr(\"href\");\n      }\n    };\n\n    var progress_interval = setInterval(function () {\n      $.ajax({\n        url: url,\n        type: \"get\",\n        error: function (XMLHttpRequest, textStatus, errorThrown) {\n          if (XMLHttpRequest.status == 404) {\n            clearInterval(progress_interval);\n            progress_completed();\n          }\n        },\n        success: function (data) {\n          $bar.width(data.progress + \"%\");\n          $pre.text(data.log);\n          $pre.animate({ scrollTop: $pre.get(0).scrollHeight });\n          if (data.completed) {\n            clearInterval(progress_interval);\n            progress_completed();\n          }\n        },\n      });\n    }, 1000);\n\n    $(\"#terminate-task-button\").click((e) => {\n      fetch(url, {\n        method: \"DELETE\",\n        headers: {\n          Accept: \"application/json\",\n          \"X-CSRFToken\": $form.find(\"input\").val(),\n        },\n      }).then((data) => {\n        window.location = $(\"#progress-return\").attr(\"href\");\n      });\n      e.preventDefault();\n    });\n  });\n\n  /* Generic messages progress */\n  $(\"[data-task]\").each(function () {\n    var $message = $(this);\n    var $bar = $message.find(\".progress-bar\");\n\n    var task_interval = setInterval(function () {\n      $.get($message.data(\"task\"), function (data) {\n        $bar.width(data.progress + \"%\");\n        if (data.completed) {\n          clearInterval(task_interval);\n          $message.text(data.result.message);\n        }\n      });\n    }, 1000);\n  });\n\n  /* Disable invalid file format choices */\n  $(\".invalid-format\").each(function () {\n    $(this).parent().find(\"input\").attr(\"disabled\", \"1\");\n  });\n\n  // Show the correct toggle button\n  if ($(\".sort-field\").length) {\n    var sort_name = $(\"#query-sort-dropdown span.search-label\").text();\n    var sort_dropdown_value = $(\".sort-field li a\")\n      .filter(function () {\n        return $(this).text() == sort_name;\n      })\n      .data(\"sort\");\n    var sort_value = $(\"#id_sort_by\").val();\n    if (sort_dropdown_value) {\n      if (\n        sort_value.replace(\"-\", \"\") === sort_dropdown_value.replace(\"-\", \"\") &&\n        sort_value !== sort_dropdown_value\n      ) {\n        $(\"#query-sort-toggle .asc\").hide();\n        $(\"#query-sort-toggle .desc\").show();\n      } else {\n        $(\"#query-sort-toggle .desc\").hide();\n        $(\"#query-sort-toggle .asc\").show();\n      }\n    }\n  }\n\n  /* Branch loading */\n  $(\".branch-loader select[name=component]\").change(function () {\n    var $this = $(this);\n    var $form = $this.closest(\"form\");\n    var branches = $form.data(\"branches\");\n    var $select = $form.find(\"select[name=branch]\");\n    $select.empty();\n    $.each(branches[$this.val()], function (key, value) {\n      $select.append($(\"<option></option>\").attr(\"value\", value).text(value));\n    });\n  });\n\n  /* Click to edit position inline. Disable when clicked outside or pressed ESC */\n  $(\"#position-input\").on(\"click\", function () {\n    $(\"#position-input\").hide();\n    $(\"#position-input-editable\").show();\n    $(\"#position-input-editable input\").focus();\n    document.addEventListener(\"click\", clickedOutsideEditableInput);\n    document.addEventListener(\"keyup\", pressedEscape);\n  });\n  var clickedOutsideEditableInput = function (event) {\n    if (\n      !$.contains($(\"#position-input-editable\")[0], event.target) &&\n      event.target != $(\"#position-input\")[0]\n    ) {\n      $(\"#position-input\").show();\n      $(\"#position-input-editable\").hide();\n      document.removeEventListener(\"click\", clickedOutsideEditableInput);\n      document.removeEventListener(\"keyup\", pressedEscape);\n    }\n  };\n  var pressedEscape = function (event) {\n    if (event.key == \"Escape\" && event.target != $(\"#position-input\")[0]) {\n      $(\"#position-input\").show();\n      $(\"#position-input-editable\").hide();\n      document.removeEventListener(\"click\", clickedOutsideEditableInput);\n      document.removeEventListener(\"keyup\", pressedEscape);\n    }\n  };\n\n  /* Advanced search */\n  $(\".search-group li a\").click(function () {\n    var $this = $(this);\n    var $group = $this.closest(\".search-group\");\n    var $button = $group.find(\"button.search-field\");\n\n    $button.attr(\"data-field\", $this.data(\"field\"));\n    var $title = $this.find(\"span.title\");\n    var text = $this.text();\n    if ($title.length) {\n      text = $title.text();\n    }\n    $group.find(\"span.search-label\").text(text);\n\n    if ($group.hasClass(\"sort-field\")) {\n      $group.find(\"input[name=sort_by]\").val($this.data(\"sort\"));\n      if ($this.closest(\".result-page-form\").length) {\n        $this.closest(\"form\").submit();\n      }\n    }\n\n    if ($group.hasClass(\"query-field\")) {\n      $group.find(\"input[name=q]\").val($this.data(\"field\"));\n      if ($this.closest(\".result-page-form\").length) {\n        var $form = $this.closest(\"form\");\n        $form.find(\"input[name=offset]\").val(\"1\");\n        $form.submit();\n      }\n    }\n    $this.closest(\"ul\").dropdown(\"toggle\");\n    return false;\n  });\n  $(\".query-sort-toggle\").click(function () {\n    var $this = $(this);\n    var $label = $this.find(\"span.search-icon\");\n    var $input = $this.closest(\".search-group\").find(\"input[name=sort_by]\");\n    $label.toggle();\n    var sort_params = $input.val().split(\",\");\n    sort_params.forEach(function (param, index) {\n      if (param.indexOf(\"-\") !== -1) {\n        sort_params[index] = param.replace(\"-\", \"\");\n      } else {\n        sort_params[index] = `-${param}`;\n      }\n    });\n    $input.val(sort_params.join(\",\"));\n    if ($this.closest(\".result-page-form\").length) {\n      $this.closest(\"form\").submit();\n    }\n  });\n  $(\".search-group input\")\n    .not(\"#id_q,#id_position,#id_term\")\n    .on(\"keydown\", function (event) {\n      if (event.key === \"Enter\") {\n        $(this).closest(\".input-group\").find(\".search-add\").click();\n        event.preventDefault();\n        return false;\n      }\n    });\n  $(\"#id_position\").on(\"keydown\", function (event) {\n    if (event.key === \"Enter\") {\n      $(this).closest(\"form\").submit();\n    }\n  });\n  $(\"#id_q\").on(\"keydown\", function (event) {\n    if (event.key === \"Enter\") {\n      var $form = $(this).closest(\"form\");\n      $form.find(\"input[name=offset]\").val(\"1\");\n      $form.submit();\n    }\n  });\n  $(\".search-add\").click(function () {\n    var group = $(this).closest(\".search-group\");\n    var button = group.find(\"button.search-field\");\n    var input = group.find(\"input\");\n\n    if (input.length === 0) {\n      $(\"#id_q\").insertAtCaret(\" \" + button.attr(\"data-field\") + \" \");\n    } else if (input.val() !== \"\") {\n      var prefix = \"\";\n      if (group.find(\"#is-exact input[type=checkbox]\").is(\":checked\")) {\n        prefix = \"=\";\n      }\n      $(\"#id_q\").insertAtCaret(\n        \" \" +\n          button.attr(\"data-field\") +\n          prefix +\n          quoteSearch(input.val()) +\n          \" \"\n      );\n    }\n  });\n  $(\".search-insert\").click(function () {\n    $(\"#id_q\").insertAtCaret(\n      \" \" + $(this).closest(\"tr\").find(\"code\").text() + \" \"\n    );\n  });\n\n  /* Clickable rows */\n  $(\"tr[data-href]\").click(function () {\n    window.location = $(this).data(\"href\");\n  });\n\n  /* ZIP import - autofill name and slug */\n  $(\"#id_zipcreate_zipfile,#id_doccreate_docfile,#id_image\").change(\n    function () {\n      var $form = $(this).closest(\"form\");\n      var target = $form.find(\"input[name=name]\");\n      if (this.files.length > 0 && target.val() === \"\") {\n        var name = this.files[0].name;\n        target.val(name.substring(0, name.lastIndexOf(\".\")));\n        target.change();\n      }\n    }\n  );\n\n  /* Alert when creating a component */\n  $(\"#form-create-component-branch,#form-create-component-vcs\").submit(\n    function () {\n      addAlert(\n        gettext(\"Weblate is now scanning the repository, please be patient.\"),\n        (kind = \"info\"),\n        (delay = 0)\n      );\n    }\n  );\n\n  /* Username autocompletion */\n  var tribute = new Tribute({\n    trigger: \"@\",\n    requireLeadingSpace: true,\n    menuShowMinLength: 2,\n    noMatchTemplate: function () {\n      return \"\";\n    },\n    menuItemTemplate: function (item) {\n      return `<a>${item.string}</a>`;\n    },\n    values: (text, callback) => {\n      $.ajax({\n        type: \"GET\",\n        url: `/api/users/?username=${text}`,\n        dataType: \"json\",\n        success: function (data) {\n          var userMentionList = data.results.map(function (user) {\n            return {\n              value: user.username,\n              key: `${user.full_name} (${user.username})`,\n            };\n          });\n          callback(userMentionList);\n        },\n        error: function (jqXHR, textStatus, errorThrown) {\n          console.error(errorThrown);\n        },\n      });\n    },\n  });\n  tribute.attach(document.querySelectorAll(\".markdown-editor\"));\n  document.querySelectorAll(\".markdown-editor\").forEach((editor) => {\n    editor.addEventListener(\"tribute-active-true\", function (e) {\n      $(\".tribute-container\").addClass(\"open\");\n      $(\".tribute-container ul\").addClass(\"dropdown-menu\");\n    });\n  });\n\n  /* Textarea higlighting */\n  Prism.languages.none = {};\n  initHighlight(document);\n\n  $(\".replace-preview input[type='checkbox']\").on(\"change\", function () {\n    $(this).closest(\"tr\").toggleClass(\"warning\", this.checked);\n  });\n\n  /* Warn users that they do not want to use developer console in most cases */\n  console.log(\n    \"%c\" +\n      pgettext(\"Alert to user when opening browser developer console\", \"Stop!\"),\n    \"color: red; font-weight: bold; font-size: 50px; font-family: sans-serif; -webkit-text-stroke: 1px black;\"\n  );\n  console.log(\n    \"%c\" +\n      gettext(\n        \"This is a browser feature intended for developers. If someone told you to copy-paste something here, they are likely trying to compromise your Weblate account.\"\n      ),\n    \"font-size: 20px; font-family: sans-serif\"\n  );\n  console.log(\n    \"%c\" +\n      gettext(\n        \"See https://en.wikipedia.org/wiki/Self-XSS for more information.\"\n      ),\n    \"font-size: 20px; font-family: sans-serif\"\n  );\n});\n", "patch": "@@ -1131,7 +1131,9 @@ $(function () {\n       return \"\";\n     },\n     menuItemTemplate: function (item) {\n-      return `<a>${item.string}</a>`;\n+      let link = document.createElement(\"a\");\n+      link.innerText = item.string;\n+      return link.outerHTML;\n     },\n     values: (text, callback) => {\n       $.ajax({", "file_path": "files/2022_2/45", "file_language": "js", "file_name": "weblate/static/loader-bootstrap.js", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 0}], "outdated": 0, "cwe_descripiton": "", "cwe_consequence": "", "cwe_method": "", "cwe_solution": ""}
