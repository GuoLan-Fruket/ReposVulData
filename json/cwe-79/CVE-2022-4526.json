{"index": 10050, "cve_id": "CVE-2022-4526", "cwe_id": ["CWE-79"], "cve_language": "Python", "cve_description": "A vulnerability was found in django-photologue up to 3.15.1 and classified as problematic. Affected by this issue is some unknown functionality of the file photologue/templates/photologue/photo_detail.html of the component Default Template Handler. The manipulation of the argument object.caption leads to cross site scripting. The attack may be launched remotely. Upgrading to version 3.16 is able to address this issue. The name of the patch is 960cb060ce5e2964e6d716ff787c72fc18a371e7. It is recommended to apply a patch to fix this issue. VDB-215906 is the identifier assigned to this vulnerability.", "cvss": "6.1", "publish_date": "December 15, 2022", "AV": "NETWORK", "AC": "NETWORK", "PR": "NONE", "UI": "REQUIRED", "S": "CHANGED", "C": "LOW", "I": "LOW", "A": "NONE", "commit_id": "960cb060ce5e2964e6d716ff787c72fc18a371e7", "commit_message": "Prevent XSS injection with default template.", "commit_date": "2022-08-29T20:23:13Z", "project": "richardbarran/django-photologue", "url": "https://api.github.com/repos/richardbarran/django-photologue/commits/960cb060ce5e2964e6d716ff787c72fc18a371e7", "html_url": "https://github.com/richardbarran/django-photologue/commit/960cb060ce5e2964e6d716ff787c72fc18a371e7", "windows_before": [{"commit_id": "ed468ea6a784f8de9f5f17265b88bf8b2d62a4ae", "commit_date": "Thu Aug 25 22:30:03 2022 +0200", "commit_message": "Create SECURITY.MD", "files_name": ["SECURITY.md"]}, {"commit_id": "0b7d66d5723754cbb5e6eb04da4ef2c8ec431e00", "commit_date": "Mon Aug 15 19:56:29 2022 +0200", "commit_message": "Missed a file.", "files_name": ["scripts/releaser_hooks.py"]}, {"commit_id": "168597f2ac7cc1916499e21565dbbb1315cefd3c", "commit_date": "Mon Aug 15 19:56:07 2022 +0200", "commit_message": "Use pyupgrade to clean the codebase and upgrade the syntax for newer versions of Python.", "files_name": ["docs/conf.py", "photologue/admin.py", "photologue/forms.py", "photologue/management/commands/__init__.py", "photologue/migrations/0001_initial.py", "photologue/migrations/0002_photosize_data.py", "photologue/migrations/0003_auto_20140822_1716.py", "photologue/migrations/0004_auto_20140915_1259.py", "photologue/migrations/0005_auto_20141027_1552.py", "photologue/migrations/0006_auto_20141028_2005.py", "photologue/migrations/0007_auto_20150404_1737.py", "photologue/migrations/0008_auto_20150509_1557.py", "photologue/migrations/0009_auto_20160102_0904.py", "photologue/migrations/0010_auto_20160105_1307.py", "photologue/models.py", "photologue/templatetags/photologue_tags.py", "photologue/tests/factories.py", "photologue/tests/test_gallery.py", "photologue/tests/test_photo.py", "photologue/tests/test_resize.py", "photologue/tests/test_sites.py", "photologue/tests/test_views_gallery.py", "photologue/tests/test_views_photo.py", "photologue/tests/test_zipupload.py"]}, {"commit_id": "f15fe57c62a8dec498e8e93bd9a9057383e651f4", "commit_date": "Sun Aug 14 21:32:22 2022 +0200", "commit_message": "Fixed some deprecation warnings.", "files_name": ["example_project/example_project/settings.py", "photologue/tests/test_zipupload.py"]}, {"commit_id": "a2f512f708bc561e007e8189459e82ed1d32f79f", "commit_date": "Sat Aug 13 00:04:26 2022 +0200", "commit_message": "Tie down Django version when running CI.", "files_name": [".github/workflows/ci.yml"]}, {"commit_id": "6dc03b6f0ae980b650d514e93ee7afe096a36013", "commit_date": "Mon Aug 8 23:04:50 2022 +0200", "commit_message": "Fix code style.", "files_name": ["photologue/forms.py"]}, {"commit_id": "8c20240a2be1d7fab01e4e5068641dfd4510bdf3", "commit_date": "Mon Aug 8 22:21:22 2022 +0200", "commit_message": "Updated CHANGELOG.", "files_name": ["CHANGELOG.txt"]}, {"commit_id": "1d931c85f2af8be5679468a83099c8c74f335e20", "commit_date": "Mon Aug 8 22:18:20 2022 +0200", "commit_message": "Merge pull request #222 from lausek/refactor-zip-upload", "files_name": ["dcb316d148299ad8bd224bad02307044d9a680e0 - Fri Jun 24 21:31:46 2022 +0200 : removed usage of dataclasses", "photologue/forms.py"]}, {"commit_id": "2f8eb2a80442f432748daf6d9bd3c9b1d1c94982", "commit_date": "Thu May 19 20:52:25 2022 +0200", "commit_message": "refactor function for uploading zipfile", "files_name": ["photologue/forms.py"]}, {"commit_id": "3e2e7b3cf02ba396ccb063927513930a9a711036", "commit_date": "Wed Feb 23 11:01:06 2022 +0100", "commit_message": "Back to development: 3.16", "files_name": ["CHANGELOG.txt", "photologue/__init__.py"]}, {"commit_id": "7f1676944474959a74a87a9abb44b13e2706c905", "commit_date": "Wed Feb 23 11:00:34 2022 +0100", "commit_message": "Preparing release 3.15.1", "files_name": ["CHANGELOG.txt", "photologue/__init__.py"]}, {"commit_id": "93c03231b531d2b40985bca96a5aa56e94b9523b", "commit_date": "Wed Feb 23 11:01:50 2022 +0100", "commit_message": "Django 4.0 adds a no-op migration (#221).", "files_name": ["CHANGELOG.txt", "photologue/migrations/0012_alter_photo_effect.py"]}, {"commit_id": "9768a6200a26dd2a34bcdf081d450aa0c4d563b2", "commit_date": "Sat Feb 5 18:22:11 2022 +0100", "commit_message": "Back to development: 3.16", "files_name": ["CHANGELOG.txt", "photologue/__init__.py"]}, {"commit_id": "4535b0e52b43a492b9bc16b84b4f260b732535ad", "commit_date": "Sat Feb 5 18:21:08 2022 +0100", "commit_message": "Preparing release 3.15", "files_name": ["CHANGELOG.txt", "photologue/__init__.py"]}, {"commit_id": "c61e536fb7a486d4c7ad20a4888600f2a9c1775c", "commit_date": "Sat Feb 5 18:20:35 2022 +0100", "commit_message": "Updated the list of contributors.", "files_name": ["CONTRIBUTORS.txt"]}, {"commit_id": "1e35e8e343f1f05a590367b09623debbaa82b0b5", "commit_date": "Sat Feb 5 18:11:03 2022 +0100", "commit_message": "Fixed merge bug, and updated the changelog.", "files_name": ["CHANGELOG.txt", "tox.ini"]}, {"commit_id": "136e9b82d13320cce396da4b56b8c3b4f4e7809a", "commit_date": "Sat Feb 5 18:05:52 2022 +0100", "commit_message": "Merge pull request #220 from MartijnVerkleij/master", "files_name": ["e23786c6d6d32803953dfae2e1b7826b9580cf25 - Sat Feb 5 14:43:36 2022 +0100 : Merge remote-tracking branch 'origin/master'", "c838eaffd111eb4dbd2346bbebae252a414b897f - Sat Feb 5 14:41:56 2022 +0100 : Remove unsupported Django and Python versions. Also corrected incorrect django 4.0 version query", ".github/workflows/ci.yml", "tox.ini"]}, {"commit_id": "ddbc7bbbdd0a73cccabe5a0b3a958478fd1db4e7", "commit_date": "Sat Feb 5 14:41:56 2022 +0100", "commit_message": "Remove unsupported Django and Python versions. Also corrected incorrect django 4.0 version query", "files_name": [".github/workflows/ci.yml", "tox.ini"]}, {"commit_id": "6a5b56877fd6ccab5523cd1c6e824b45e2a72acd", "commit_date": "Fri Feb 4 17:13:41 2022 +0100", "commit_message": "Compile French translation.", "files_name": ["photologue/locale/fr/LC_MESSAGES/django.mo"]}, {"commit_id": "41d340f56c643b62e2538f950d618c9c830bce04", "commit_date": "Fri Feb 4 17:11:12 2022 +0100", "commit_message": "Merge pull request #219 from erdnaxe/fr_translation_fix", "files_name": ["b4debc51f4316f1fe198a28df359a42742734fd7 - Thu Feb 3 17:16:04 2022 +0100 : Fix version number interpreted as decimal value, part 3.", ".github/workflows/ci.yml"]}, {"commit_id": "b508e04c04311d984cb60ad3e2140d3148e21027", "commit_date": "Thu Feb 3 17:13:11 2022 +0100", "commit_message": "Fix version number interpreted as decimal value, part 2.", "files_name": [".github/workflows/ci.yml"]}, {"commit_id": "e5a98b75e301222417270519d89d6197f3f6d4fe", "commit_date": "Thu Feb 3 17:11:30 2022 +0100", "commit_message": "Fix version number interpreted as decimal value.", "files_name": [".github/workflows/ci.yml"]}, {"commit_id": "e3d6c410d493fd97753b9167c484bc0850a9a2dc", "commit_date": "Thu Feb 3 17:03:31 2022 +0100", "commit_message": "added CI stage for 3.10", "files_name": [".github/workflows/ci.yml"]}, {"commit_id": "dbb82dda0846e986dc3ccdc8c9fa9b9362a99615", "commit_date": "Thu Feb 3 16:50:24 2022 +0100", "commit_message": "Updated tests, removed ungettext reference", "files_name": ["photologue/admin.py", "tox.ini"]}, {"commit_id": "3f23f4cc11c206e597bbbeadd24099a893bbd998", "commit_date": "Fri Oct 15 18:30:41 2021 +0200", "commit_message": "Fix missing text on zip upload page with french translation", "files_name": ["photologue/locale/fr/LC_MESSAGES/django.po"]}, {"commit_id": "06e5d2060201de10826312c5f591d0789f03a09a", "commit_date": "Fri Oct 15 18:28:50 2021 +0200", "commit_message": "Remove extra dots in french translation", "files_name": ["photologue/locale/fr/LC_MESSAGES/django.po"]}, {"commit_id": "97768fef566cb19eb3c8454d58d9abf2e7b9f2b6", "commit_date": "Sun Oct 3 13:45:20 2021 +0200", "commit_message": "Tidy README.", "files_name": ["README.rst"]}, {"commit_id": "2ea4c603c4af563d34bff38b8c231c18a3afd678", "commit_date": "Sun Oct 3 13:33:47 2021 +0200", "commit_message": "Back to development: 3.15", "files_name": ["CHANGELOG.txt", "photologue/__init__.py"]}, {"commit_id": "5239bb11757df0befe357dc4ec57f1e31e92858e", "commit_date": "Sun Oct 3 13:32:49 2021 +0200", "commit_message": "Preparing release 3.14", "files_name": ["CHANGELOG.txt", "photologue/__init__.py"]}, {"commit_id": "0be281b187342b8b8ddee927d88cc53636f890f6", "commit_date": "Sun Oct 3 13:26:43 2021 +0200", "commit_message": "Updated translation files.", "files_name": ["photologue/locale/ca/LC_MESSAGES/django.po", "photologue/locale/cs/LC_MESSAGES/django.po", "photologue/locale/da/LC_MESSAGES/django.po", "photologue/locale/de/LC_MESSAGES/django.po", "photologue/locale/en/LC_MESSAGES/django.po", "photologue/locale/es_ES/LC_MESSAGES/django.po", "photologue/locale/eu/LC_MESSAGES/django.po", "photologue/locale/fr/LC_MESSAGES/django.po", "photologue/locale/hu/LC_MESSAGES/django.po", "photologue/locale/it/LC_MESSAGES/django.po", "photologue/locale/nl/LC_MESSAGES/django.po", "photologue/locale/no/LC_MESSAGES/django.po", "photologue/locale/pl/LC_MESSAGES/django.po", "photologue/locale/pt/LC_MESSAGES/django.po", "photologue/locale/pt_BR/LC_MESSAGES/django.po", "photologue/locale/ru/LC_MESSAGES/django.po", "photologue/locale/sk/LC_MESSAGES/django.po", "photologue/locale/tr/LC_MESSAGES/django.po", "photologue/locale/tr_TR/LC_MESSAGES/django.mo", "photologue/locale/tr_TR/LC_MESSAGES/django.po", "photologue/locale/uk/LC_MESSAGES/django.po", "photologue/locale/zh_Hans/LC_MESSAGES/django.po"]}, {"commit_id": "9fbeb61c0899dc4f71413612a1fe6b6d58f44c58", "commit_date": "Sat Oct 2 23:02:32 2021 +0200", "commit_message": "Use isort to tidy imports.", "files_name": [".github/workflows/ci.yml", ".isort.cfg", "CHANGELOG.txt", "docs/conf.py", "example_project/example_project/urls.py", "photologue/admin.py", "photologue/forms.py", "photologue/management/commands/plcache.py", "photologue/management/commands/plcreatesize.py", "photologue/management/commands/plflush.py", "photologue/managers.py", "photologue/models.py", "photologue/sitemaps.py", "photologue/templatetags/photologue_tags.py", "photologue/tests/factories.py", "photologue/tests/helpers.py", "photologue/tests/test_gallery.py", "photologue/tests/test_photo.py", "photologue/tests/test_resize.py", "photologue/tests/test_sitemap.py", "photologue/tests/test_sites.py", "photologue/tests/test_urls.py", "photologue/tests/test_views_gallery.py", "photologue/tests/test_views_photo.py", "photologue/tests/test_zipupload.py", "photologue/urls.py", "photologue/utils/reflection.py", "photologue/utils/watermark.py", "photologue/views.py", "scripts/releaser_hooks.py", "setup.py"]}, {"commit_id": "d5ff4647745c47fd855515410ea949caad964852", "commit_date": "Sat Oct 2 22:01:08 2021 +0200", "commit_message": "Add flake8 to CI.", "files_name": [".github/workflows/ci.yml", "example_project/example_project/urls.py"]}, {"commit_id": "e684ce509dd57e040d0d8ca335404875d98bbd26", "commit_date": "Fri Oct 1 23:30:03 2021 +0200", "commit_message": "Improved CI.", "files_name": [".github/workflows/ci.yml", "example_project/requirements.txt", "tox.ini"]}, {"commit_id": "b3b7e8c2139ea836c8b2801a2b040906caf86efd", "commit_date": "Fri Oct 1 23:02:59 2021 +0200", "commit_message": "Compatibility with Django 3.2.", "files_name": [".github/workflows/ci.yml"]}], "windows_after": [{"commit_id": "5e49a03f32e6eb16829aa10c1a8652bac9d70bf4", "commit_date": "Mon Aug 29 22:43:03 2022 +0200", "commit_message": "Run flake8 on source.", "files_name": ["photologue/tests/test_views_photo.py"]}, {"commit_id": "5e8503cc6ef085b5bec006798c5655405499716c", "commit_date": "Wed Jul 26 22:45:12 2023 +0200", "commit_message": "Fixed deprecation warnings.", "files_name": ["photologue/models.py", "photologue/tests/factories.py"]}, {"commit_id": "bd5512ee34477b155474730a496302569d5c9a68", "commit_date": "Thu Jul 27 21:18:25 2023 +0200", "commit_message": "Update minimum versions of dependencies.", "files_name": ["requirements.txt"]}, {"commit_id": "abaeaed43535ab01ef65751f4f8d019ebb9459a9", "commit_date": "Thu Jul 27 21:20:10 2023 +0200", "commit_message": "Update CHANGELOG.", "files_name": ["CHANGELOG.txt"]}, {"commit_id": "7775e490f27c43663035b896c800a754bded2dc2", "commit_date": "Thu Jul 27 21:33:25 2023 +0200", "commit_message": "Handle when PHOTOLOGUE_DIR is not a string.", "files_name": ["CHANGELOG.txt", "photologue/models.py"]}, {"commit_id": "5d450637c5ac2fb6e4341e50bcefc374f7c8de5a", "commit_date": "Thu Jul 27 21:41:29 2023 +0200", "commit_message": "Apply isort.", "files_name": ["photologue/models.py"]}, {"commit_id": "18565f6539439bed5b1f5fe67a9c079a4e993623", "commit_date": "Thu Jul 27 22:21:33 2023 +0200", "commit_message": "Checked compatibility with Django 4.1 and 4.2.", "files_name": ["CHANGELOG.txt", "tox.ini"]}, {"commit_id": "5d52a4231cf2253ff3c7141dfb7dcf2f9081b256", "commit_date": "Thu Jul 27 22:37:36 2023 +0200", "commit_message": "Fix CI script.", "files_name": [".github/workflows/ci.yml"]}, {"commit_id": "29f52f008794ea3c0e307bb8aa595e7efc87d0ac", "commit_date": "Fri Jul 28 20:12:49 2023 +0200", "commit_message": "Fix test pipelines.", "files_name": [".github/workflows/ci.yml", "CHANGELOG.txt"]}, {"commit_id": "51e39ebbb2ec8f5d53913ef99f1f0727c73129c0", "commit_date": "Fri Jul 28 20:38:43 2023 +0200", "commit_message": "No need for isort and flake8 in release script as they are checked in CI pipeline.", "files_name": ["scripts/releaser_hooks.py"]}, {"commit_id": "0b8d2810e4578f484defa7a8d3c011cae81f1316", "commit_date": "Fri Jul 28 20:40:08 2023 +0200", "commit_message": "Add missing migration.", "files_name": ["photologue/migrations/0013_alter_watermark_image.py"]}, {"commit_id": "52b4a23f78808d5b73b6b35ada80ddebe2e12d61", "commit_date": "Fri Jul 28 20:43:51 2023 +0200", "commit_message": "Updated the list of contributors.", "files_name": ["CONTRIBUTORS.txt"]}, {"commit_id": "e3866fd58135d1a9b9fed36f4d9aa3f7b4e482c2", "commit_date": "Fri Jul 28 20:45:14 2023 +0200", "commit_message": "Preparing release 3.16", "files_name": ["CHANGELOG.txt", "photologue/__init__.py"]}, {"commit_id": "95c81122e35fce373914449637c08cebbfcff600", "commit_date": "Fri Jul 28 20:45:54 2023 +0200", "commit_message": "Back to development: 3.17", "files_name": ["CHANGELOG.txt", "photologue/__init__.py"]}, {"commit_id": "18a7b05b32811cf7b5cbcc5a971bed1b88aef8ab", "commit_date": "Sun Oct 15 22:06:36 2023 +0200", "commit_message": "Fix Photologue on Python 3.11", "files_name": ["photologue/models.py"]}, {"commit_id": "743c2e3ebd91fd12bb7bd55e13e1588eb65e370a", "commit_date": "Mon Oct 23 22:20:42 2023 +0200", "commit_message": "Merge pull request #226 from emirisman/master", "files_name": ["785280c11a8483b4785b833431cfdba9cd2730bf - Wed Oct 25 22:03:29 2023 +0200 : Update changelog.", "CHANGELOG.txt"]}, {"commit_id": "473dfd5279c6e256efe9da81818d890b60e9ba58", "commit_date": "Wed Oct 25 22:04:05 2023 +0200", "commit_message": "Updated the list of contributors.", "files_name": ["CONTRIBUTORS.txt"]}, {"commit_id": "04e681e700ded6fcf8ea1623a928a21ab1bfe1af", "commit_date": "Wed Oct 25 22:04:26 2023 +0200", "commit_message": "Preparing release 3.17", "files_name": ["CHANGELOG.txt", "photologue/__init__.py"]}, {"commit_id": "cb6c9ec770efde0ff986ecc80647a1c49bc6e722", "commit_date": "Wed Oct 25 22:04:48 2023 +0200", "commit_message": "Back to development: 3.18", "files_name": ["CHANGELOG.txt", "photologue/__init__.py"]}], "parents": [{"commit_id_before": "ed468ea6a784f8de9f5f17265b88bf8b2d62a4ae", "url_before": "https://api.github.com/repos/richardbarran/django-photologue/commits/ed468ea6a784f8de9f5f17265b88bf8b2d62a4ae", "html_url_before": "https://github.com/richardbarran/django-photologue/commit/ed468ea6a784f8de9f5f17265b88bf8b2d62a4ae"}], "details": [{"raw_url": "https://github.com/richardbarran/django-photologue/raw/960cb060ce5e2964e6d716ff787c72fc18a371e7/CHANGELOG.txt", "code": "Changelog\n=========\n\n3.16 (unreleased)\n-----------------\n\n- Split out zip upload functionality into a separate function (#222) (contributed by lausek).\n- Do not allow JS injection into the Photo caption field (#223) (bug detected by Domiee13).\n\n\n3.15.1 (2022-02-23)\n-------------------\n\n- Django 4.0 adds a no-op migration (#221) (reported by rhbvkleef).\n\n\n3.15 (2022-02-05)\n-----------------\n\n- Made compatible with Django 4.0 (#220) (contributed by Martijn Verkleij).\n- Updated French translation (#219) (contributed by Alexandre Iooss).\n\n3.14 (2021-10-03)\n-----------------\n\n- Updated the sample templates to use Bootstrap 5 (previously used Bootstrap 3).\n- Checked compatibility with Django 3.2.\n- Use isort to tidy the Python imports.\n\n3.13 (2020-09-03)\n-----------------\n\n- Checked compatibility with Django 3.1.\n- Apply crop/effect changes to existing images (#210).\n- Encoding objects before hashing error\t(#205).\n\n3.12 (2020-07-30)\n-----------------\n\n- Drop alpha channel only on jpeg save (contributed by drazen)\n- Added zh_Hans translation\t(contributed by Lessica)\n- improved Dutch translations (contributed by andreas.milants)\n\n3.11 (2019-12-13)\n-----------------\n\n- Added support for Django 3.\n- Dropped support for Python 2, python 3.4 and Django 2.1.\n\n\n3.10 (2019-08-29)\n-----------------\n\n- Compatibility with Django 2.2.\n\n\n3.9 (2019-04-21)\n----------------\n\n- Fixes when file doesn't exist in the file system but still is in S3.\n- Doc tweaks - and added a page on how to actually use Photologue!\n- Make setup compatible with latest version of pip.\n- Checked compatibility with Django 2.1 and Python 3.7.\n- Updated translations for Catalan and Basque.\n- Missed a Django migration (issue #194).\n- Test Tox; integrate with Travis and Coveralls.\n- Removed old code (old-style demo templates that have been deprecated since 2014).\n- Removed old code (old views that have been deprecated since 2014).\n- Removed all references to PIL (which hasn't been updated since 2009). I think that by now\n  there are no servers left anywhere in the world that still use it :-)\n\n3.8.1 (2017-12-03)\n------------------\n\n- Admin thumbnails were not displaying correctly.\n\n\n3.8 (2017-12-03)\n----------------\n\n- Added support for Django 2.0.\n- Dropped support for Django 1.8 and 1.10.\n- Did not really work with Django 1.11 - sortedm2m library was broken. Upgraded sortedm2m and it now works with 1.11.\n- New translation for Ukrainian; updated translation for Spanish.\n- Fixed template tag that was broken in Django 1.11.\n\n3.7 (2017-05-10)\n----------------\n\n- Now works with Django 1.11. Deprecated support for Django 1.9.\n- Fixed the management commands to work in the latest versions of Django.\n- Fixed an issue with some photo sizes not being created (see #170).\n- Updated translations for French and Basque (provided by matthieu.payet and urtzai).\n\n3.6 (2016-10-05)\n----------------\n\n- Now works with Django 1.10 (to be precise: Photologue worked, but the unit tests did not).\n- Updated urlpatterns in docs, tests and example project for Django 1.8+\n- Enhance Python 2.7 EXIF info.\n- Updated docs (contributed by lizwalsh).\n- Fixed command plcreatesize (contributed by Mikel Larreategi).\n- Fixed deprecated template settings (contributed by Justin Dugger).\n- Updated translations for German and Russian.\n\n3.5.1 (2016-01-13)\n------------------\n\n- Photologue 3.5 failed to install under Python 2.7. Looks like distutils does not like files\n  with non-ascii filenames (reported in #149).\n- Fix for issue #149 - bug with projects that extend ImageModel.\n\n\n3.5 (2016-01-09)\n----------------\n\n- Increased length of 'title' fields to 250 chars in order to store longer title.\n- Rotate image before resize, to comply with height/width constraints (see #145).\n- Added forgotten migration (#148).\n- Changing \"Photo\" image leaves extra files on server (#147).\n- Normalize filenames to ASCII so they work across all filesystems (#109).\n- Updated Hungarian translation.\n\n3.4.1 (2015-12-23)\n------------------\n\n- Django 1.9 requires latest version of django-sortedm2m.\n\n\n3.4 (2015-12-23)\n----------------\n\nUpgrade notes:\n- The EXIF property of an Image is now a method instead.\n\n- Dropped support for Django 1.7.\n- Fixed a few minor issues with the unit tests.\n- Adding a watermark was crashing (fix suggested by hambro).\n- Added/updated translations: Danish, Slovak (contributed by Rasmus Klett, saboter).\n- Fixed Django 1.9 Deprecation warnings (contributed by jlemaes).\n- Processing of EXIF data was broken (and very broken in Python 3) - updated library and bug fixes.\n\n\n3.3.2 (2015-07-20)\n------------------\n\n- Release Photologue as a universal wheel.\n\n\n3.3.1 (2015-07-20)\n------------------\n\n- Upload of 3.3 to Pypi had failed.\n\n3.3 (2015-07-20)\n----------------\n\n- In the initial data setup, the 'thumbnail' photosizes should not increment the\n  view count (issue #133).\n- Fix typo in admin text (issue reported by Transifex user ciastko).\n- Updated translations: Hungarian, Czech, Dutch.\n- Zip upload used gallery title instead of \"Title\" field for photos (#139).\n- Zip upload: an uploaded photo is not a duplicate of an existing photo simply because they share the same slug.\n- Updated django-sortedm2m version - this should help admin performance for galleries with lots of photos.\n\n3.2 (2015-05-11)\n----------------\n\n- Dropped support for Django 1.6.\n- Rotation of photos based upon EXIF data if available, so they get displayed correctly (#122).\n- Misc doc tweaks.\n- Only clear scale cache if image has changed.\n- Pagination is now hard-coded to 20 items per page - it's a convenience to have it available as\n  soon as the app is run, but having settings to tweak this value is not needed as it's so\n  easy to override in a Django project.\n- PHOTOLOGUE_GALLERY_PAGINATE_BY and PHOTOLOGUE_PHOTO_PAGINATE_BY were previously deprecated\n  and have now been removed.\n- Tagging has been removed from Photologue.\n- All references to 'title_slug' field have been removed.\n- Django can now natively chain custom manager filters - so the dependency on django-model-utils\n  is removed.\n- Updated German translation.\n- Improved setup file.\n\n3.1.1 (2014-11-13)\n------------------\n\n- The 'zip upload' functionality did not work (the required html templates\n  were not included into the released package).\n- Updated French translation.\n\n3.1 (2014-11-03)\n----------------\n\n- The 'zip upload' functionality has been moved to a custom admin page.\n- Refactor `add_accessor_methods` to be lazily applied (see #110).\n- Updated German translation.\n- Several improvements to the sample Bootstrap templates.\n- Support CACHEDIR.TAG spec issue #89\n- Fix issue #99 by adding 10 extra char to photo title(max gallery size up to 999999999 images)\n- Sitemap.xml was not aware of Sites (#104).\n- In python 3, gallery upload would crash if uploaded file was not a zip file (#106).\n\n3.0.2 (2014-09-23)\n------------------\n\n- Updated django-sortedm2m to an official release.\n- Updated Spanish translation.\n- Updated Bootstrap version used in example project.\n\n3.0.1 (2014-09-16)\n------------------\n\n- Missed out some templates from the released package.\n\n3.0 (2014-09-15)\n----------------\n\nUpgrade notes:\n\nWARNING: IF YOU'RE USING POSTGRESQL AS A DATABASE & DJANGO 1.7, THE LATEST RELEASE OF\nDJANGO-SORTEDM2M HAS A BUG. INSTEAD, YOU'LL HAVE TO MANUALLY INSTALL:\n\npip install -e git://github.com/richardbarran/django-sortedm2m.git@9a609a1c6b790a40a016e4ceadedbb6dd6b92010#egg=sortedm2m\n\n\n\nTHE FOLLOWING CHANGES BREAK BACKWARDS COMPATIBILITY!\n\n- Django 1.7 comes with a new migrations framework which replaces South -\n  if you continue to use Django 1.6, you'll need to add new settings. Please\n  refer in the docs to the installation instructions.\n  If you're upgrading to Django 1.7 - upgrade Photologue first, THEN upgrade\n  Django.\n- The Twitter-Bootstrap templates - previously in 'contrib' - become the default; the\n  previous templates are moved to 'contrib'.\n- The django-tagging library is no longer maintained by its author. As a consequence,\n  it has been disabled - see the docs for more information (page\n  https://django-photologue.readthedocs.org/en/latest/pages/customising/settings.html#photologue-enable-tags)\n- Support for Django 1.4 and 1.5 has been dropped (Photologue depends on django-sortedm2m,\n  which has dropped support for 1.4; and Django 1.5 is no longer supported).\n- PHOTOLOGUE_USE_CKEDITOR has been removed.\n- Many urls have been renamed; photologue urls now go into their own namespace. See the urls.py\n  file for all the changes.\n\nOther changes:\n\n- Support for Amazon S3 to store images (thank you Celia Oakley!).\n- List views have changed urls: instead of /page/<n>/, we now have a /?page=<n> pattern.\n  This is a more common style, and allows us to simplify template code e.g. paginators!\n- date_taken field not correctly handled during single photo upload (#80).\n- Removed deprecated PhotologueSitemap.\n- Gallery zip uploads would fail if the title contained unicode characters.\n- Gallery-uploads: Do not require title for uploading to existing gallery (#98).\n- The Photologue urls used to use names for months; this has been changed to using\n  numbers, which is better for non-English websites (#101).\n\n\n2.8.3 (2014-08-28)\n------------------\n\n- Updated Spanish translation.\n\n2.8.2 (2014-07-26)\n------------------\n\n- The latest release of django-sortedm2m is not compatible with older\n  versions of Django, so don't use it (issue #92).\n\n2.8.1 (2014-07-26)\n------------------\n\n- Fixed issue #94 (problem with i18n plural forms).\n- Updated Slovak translation.\n\n2.8 (2014-05-04)\n----------------\n\nUpgrade notes:\n\n1. Photologue now depends on django-sortedm2m and django-model-utils - please\n   refer to installation instructions. These dependencies should be added\n   automatically.\n\n2. Run South migrations.\n\nList of changes:\n\n- Photo and Gallery models now support Django's sites framework.\n- Photologue now uses django-sortedm2m to sort photos in a gallery.\n- Major rewrite of zip archive uploader: warn users of files that could not be\n  processed, get code to work with Python 3 (issue #71), add extra error\n  handling.\n- Renamed field title_slug to slug - this allows us to simplify views.py a\n  bit.\n- PHOTOLOGUE_USE_CKEDITOR, PHOTOLOGUE_GALLERY_PAGINATE_BY and\n  PHOTOLOGUE_PHOTO_PAGINATE_BY are deprecated.\n- Fixed pagination controls for photo list template.\n- Tightened naming rules for Photosize names.\n- Fixed a couple of unicode-related bugs.\n- Added to the documentation pages describing how to customise the admin and\n  the views.\n- Refactored slightly views.py.\n- Started work on chainable querysets.\n\n2.7 (2013-10-27)\n----------------\n\nUpgrade notes:\n\n1. All settings are now prefixed with ``PHOTOLOGUE_``. Please check that you are\n   not affected by this.\n\nList of changes:\n\n- Fixed issue #56, Gallery pagination is broken.\n- Photologue now works with Python 3.\n- Added a set of templates that work well with Twitter-Bootstrap 3, and used\n  them for the 'example_project'.\n- Fixed issue #64 (allow installation without installing Pillow).\n- Optional use of CKEditor.\n- Updated/new translations for Polish, Slovak and German.\n- Bugfix: allow viewing latest galleries/latest photos pages even if they\n  are empty.\n- Started using factory-boy - makes unit tests a bit easier to read.\n- Added settings to customise pagination count on list pages.\n- Documented all settings.\n- All settings are now prefixed with ``PHOTOLOGUE_``.\n\n2.6.1 (2013-05-19)\n------------------\n\nList of changes:\n\n- Fixed broken packaging in release 2.6.\n\n2.6 (2013-05-19)\n----------------\n\nUpgrade notes:\n\n1. Photologue now relies on Pillow instead of PIL. The easiest way to upgrade\n   is to remove PIL completely, then install the new version of Photologue.\n2. Photologue, in line with Django itself, has dropped support for Django 1.3.\n\nList of changes:\n\n- Switched from PIL to Pillow - hopefully this should make installation\n  easier.\n- Initial setup of data: removed plinit and replaced it with a South data\n  migration.\n- Added feature to allow extending the built-in templates (and documented\n  it!).\n- Allow editing of Photo added date (temp way of sorting photos).\n- Added an example project to help people wanting to contribute to the\n  project.\n- Fixed buggy Travis CI script.\n- fixed issue #52, transactions in migration\n- fixed issue #51, uniqueness collisions in migration\n- Accessing the root url (usually /photologue/ will now redirect you to the\n  gallery list view.\n- Photologue requires min. Django 1.4.\n- Tidied a data validator on PhotoSizes.\n\n2.5 (2012-12-13)\n----------------\n\n- added a sitemap.xml.\n- added some templatetags.\n- started using Sphinx for managing documentation.\n- started using Transifex for managing translations.\n- started using Travis CI.\n- added 12 new translations and improved some of the existing translations.\n- fixed issue #29 (quote URL of resized image properly).\n- misc improvements to clarity of unit tests.\n- added Django 1.4 timezone support.\n\n2.4 (2012-08-13)\n----------------\n\nUpgrade notes:\n\n1. Starting with this version, Photologue uses South to manage the database\n   schema. If you are upgrading an existing Photologue installation, please\n   follow the South instructions at:\n   http://south.readthedocs.org/en/latest/convertinganapp.html#converting-other-installations-and-servers\n\n2. Photologue has dropped support for Django 1.2.\n\nList of changes:\n\n- use South to manage schema changes.\n- updated installation instructions.\n- fixed issue #9 (In Django 1.3, FileField no longer deletes files).\n- switched from function-based generic views to class-based views.\n- fixed PendingDeprecationWarnings seen when running Django 1.3 - this will\n  make the move to Django 1.5 easier.\n- added unit tests.\n- fixed bug where GALLERY_SAMPLE_SIZE setting was not being used.\n- fixed issue #11 (GalleryUpload with len(title) > 50 causes a crash).\n- fixed issue #10 (Increase the size of the name field for photosize).\n", "code_before": "Changelog\n=========\n\n3.16 (unreleased)\n-----------------\n\n- Split out zip upload functionality into a separate function (#222) (contributed by lausek).\n\n\n3.15.1 (2022-02-23)\n-------------------\n\n- Django 4.0 adds a no-op migration (#221) (reported by rhbvkleef).\n\n\n3.15 (2022-02-05)\n-----------------\n\n- Made compatible with Django 4.0 (#220) (contributed by Martijn Verkleij).\n- Updated French translation (#219) (contributed by Alexandre Iooss).\n\n3.14 (2021-10-03)\n-----------------\n\n- Updated the sample templates to use Bootstrap 5 (previously used Bootstrap 3).\n- Checked compatibility with Django 3.2.\n- Use isort to tidy the Python imports.\n\n3.13 (2020-09-03)\n-----------------\n\n- Checked compatibility with Django 3.1.\n- Apply crop/effect changes to existing images (#210).\n- Encoding objects before hashing error\t(#205).\n\n3.12 (2020-07-30)\n-----------------\n\n- Drop alpha channel only on jpeg save (contributed by drazen)\n- Added zh_Hans translation\t(contributed by Lessica)\n- improved Dutch translations (contributed by andreas.milants)\n\n3.11 (2019-12-13)\n-----------------\n\n- Added support for Django 3.\n- Dropped support for Python 2, python 3.4 and Django 2.1.\n\n\n3.10 (2019-08-29)\n-----------------\n\n- Compatibility with Django 2.2.\n\n\n3.9 (2019-04-21)\n----------------\n\n- Fixes when file doesn't exist in the file system but still is in S3.\n- Doc tweaks - and added a page on how to actually use Photologue!\n- Make setup compatible with latest version of pip.\n- Checked compatibility with Django 2.1 and Python 3.7.\n- Updated translations for Catalan and Basque.\n- Missed a Django migration (issue #194).\n- Test Tox; integrate with Travis and Coveralls.\n- Removed old code (old-style demo templates that have been deprecated since 2014).\n- Removed old code (old views that have been deprecated since 2014).\n- Removed all references to PIL (which hasn't been updated since 2009). I think that by now\n  there are no servers left anywhere in the world that still use it :-)\n\n3.8.1 (2017-12-03)\n------------------\n\n- Admin thumbnails were not displaying correctly.\n\n\n3.8 (2017-12-03)\n----------------\n\n- Added support for Django 2.0.\n- Dropped support for Django 1.8 and 1.10.\n- Did not really work with Django 1.11 - sortedm2m library was broken. Upgraded sortedm2m and it now works with 1.11.\n- New translation for Ukrainian; updated translation for Spanish.\n- Fixed template tag that was broken in Django 1.11.\n\n3.7 (2017-05-10)\n----------------\n\n- Now works with Django 1.11. Deprecated support for Django 1.9.\n- Fixed the management commands to work in the latest versions of Django.\n- Fixed an issue with some photo sizes not being created (see #170).\n- Updated translations for French and Basque (provided by matthieu.payet and urtzai).\n\n3.6 (2016-10-05)\n----------------\n\n- Now works with Django 1.10 (to be precise: Photologue worked, but the unit tests did not).\n- Updated urlpatterns in docs, tests and example project for Django 1.8+\n- Enhance Python 2.7 EXIF info.\n- Updated docs (contributed by lizwalsh).\n- Fixed command plcreatesize (contributed by Mikel Larreategi).\n- Fixed deprecated template settings (contributed by Justin Dugger).\n- Updated translations for German and Russian.\n\n3.5.1 (2016-01-13)\n------------------\n\n- Photologue 3.5 failed to install under Python 2.7. Looks like distutils does not like files\n  with non-ascii filenames (reported in #149).\n- Fix for issue #149 - bug with projects that extend ImageModel.\n\n\n3.5 (2016-01-09)\n----------------\n\n- Increased length of 'title' fields to 250 chars in order to store longer title.\n- Rotate image before resize, to comply with height/width constraints (see #145).\n- Added forgotten migration (#148).\n- Changing \"Photo\" image leaves extra files on server (#147).\n- Normalize filenames to ASCII so they work across all filesystems (#109).\n- Updated Hungarian translation.\n\n3.4.1 (2015-12-23)\n------------------\n\n- Django 1.9 requires latest version of django-sortedm2m.\n\n\n3.4 (2015-12-23)\n----------------\n\nUpgrade notes:\n- The EXIF property of an Image is now a method instead.\n\n- Dropped support for Django 1.7.\n- Fixed a few minor issues with the unit tests.\n- Adding a watermark was crashing (fix suggested by hambro).\n- Added/updated translations: Danish, Slovak (contributed by Rasmus Klett, saboter).\n- Fixed Django 1.9 Deprecation warnings (contributed by jlemaes).\n- Processing of EXIF data was broken (and very broken in Python 3) - updated library and bug fixes.\n\n\n3.3.2 (2015-07-20)\n------------------\n\n- Release Photologue as a universal wheel.\n\n\n3.3.1 (2015-07-20)\n------------------\n\n- Upload of 3.3 to Pypi had failed.\n\n3.3 (2015-07-20)\n----------------\n\n- In the initial data setup, the 'thumbnail' photosizes should not increment the\n  view count (issue #133).\n- Fix typo in admin text (issue reported by Transifex user ciastko).\n- Updated translations: Hungarian, Czech, Dutch.\n- Zip upload used gallery title instead of \"Title\" field for photos (#139).\n- Zip upload: an uploaded photo is not a duplicate of an existing photo simply because they share the same slug.\n- Updated django-sortedm2m version - this should help admin performance for galleries with lots of photos.\n\n3.2 (2015-05-11)\n----------------\n\n- Dropped support for Django 1.6.\n- Rotation of photos based upon EXIF data if available, so they get displayed correctly (#122).\n- Misc doc tweaks.\n- Only clear scale cache if image has changed.\n- Pagination is now hard-coded to 20 items per page - it's a convenience to have it available as\n  soon as the app is run, but having settings to tweak this value is not needed as it's so\n  easy to override in a Django project.\n- PHOTOLOGUE_GALLERY_PAGINATE_BY and PHOTOLOGUE_PHOTO_PAGINATE_BY were previously deprecated\n  and have now been removed.\n- Tagging has been removed from Photologue.\n- All references to 'title_slug' field have been removed.\n- Django can now natively chain custom manager filters - so the dependency on django-model-utils\n  is removed.\n- Updated German translation.\n- Improved setup file.\n\n3.1.1 (2014-11-13)\n------------------\n\n- The 'zip upload' functionality did not work (the required html templates\n  were not included into the released package).\n- Updated French translation.\n\n3.1 (2014-11-03)\n----------------\n\n- The 'zip upload' functionality has been moved to a custom admin page.\n- Refactor `add_accessor_methods` to be lazily applied (see #110).\n- Updated German translation.\n- Several improvements to the sample Bootstrap templates.\n- Support CACHEDIR.TAG spec issue #89\n- Fix issue #99 by adding 10 extra char to photo title(max gallery size up to 999999999 images)\n- Sitemap.xml was not aware of Sites (#104).\n- In python 3, gallery upload would crash if uploaded file was not a zip file (#106).\n\n3.0.2 (2014-09-23)\n------------------\n\n- Updated django-sortedm2m to an official release.\n- Updated Spanish translation.\n- Updated Bootstrap version used in example project.\n\n3.0.1 (2014-09-16)\n------------------\n\n- Missed out some templates from the released package.\n\n3.0 (2014-09-15)\n----------------\n\nUpgrade notes:\n\nWARNING: IF YOU'RE USING POSTGRESQL AS A DATABASE & DJANGO 1.7, THE LATEST RELEASE OF\nDJANGO-SORTEDM2M HAS A BUG. INSTEAD, YOU'LL HAVE TO MANUALLY INSTALL:\n\npip install -e git://github.com/richardbarran/django-sortedm2m.git@9a609a1c6b790a40a016e4ceadedbb6dd6b92010#egg=sortedm2m\n\n\n\nTHE FOLLOWING CHANGES BREAK BACKWARDS COMPATIBILITY!\n\n- Django 1.7 comes with a new migrations framework which replaces South -\n  if you continue to use Django 1.6, you'll need to add new settings. Please\n  refer in the docs to the installation instructions.\n  If you're upgrading to Django 1.7 - upgrade Photologue first, THEN upgrade\n  Django.\n- The Twitter-Bootstrap templates - previously in 'contrib' - become the default; the\n  previous templates are moved to 'contrib'.\n- The django-tagging library is no longer maintained by its author. As a consequence,\n  it has been disabled - see the docs for more information (page\n  https://django-photologue.readthedocs.org/en/latest/pages/customising/settings.html#photologue-enable-tags)\n- Support for Django 1.4 and 1.5 has been dropped (Photologue depends on django-sortedm2m,\n  which has dropped support for 1.4; and Django 1.5 is no longer supported).\n- PHOTOLOGUE_USE_CKEDITOR has been removed.\n- Many urls have been renamed; photologue urls now go into their own namespace. See the urls.py\n  file for all the changes.\n\nOther changes:\n\n- Support for Amazon S3 to store images (thank you Celia Oakley!).\n- List views have changed urls: instead of /page/<n>/, we now have a /?page=<n> pattern.\n  This is a more common style, and allows us to simplify template code e.g. paginators!\n- date_taken field not correctly handled during single photo upload (#80).\n- Removed deprecated PhotologueSitemap.\n- Gallery zip uploads would fail if the title contained unicode characters.\n- Gallery-uploads: Do not require title for uploading to existing gallery (#98).\n- The Photologue urls used to use names for months; this has been changed to using\n  numbers, which is better for non-English websites (#101).\n\n\n2.8.3 (2014-08-28)\n------------------\n\n- Updated Spanish translation.\n\n2.8.2 (2014-07-26)\n------------------\n\n- The latest release of django-sortedm2m is not compatible with older\n  versions of Django, so don't use it (issue #92).\n\n2.8.1 (2014-07-26)\n------------------\n\n- Fixed issue #94 (problem with i18n plural forms).\n- Updated Slovak translation.\n\n2.8 (2014-05-04)\n----------------\n\nUpgrade notes:\n\n1. Photologue now depends on django-sortedm2m and django-model-utils - please\n   refer to installation instructions. These dependencies should be added\n   automatically.\n\n2. Run South migrations.\n\nList of changes:\n\n- Photo and Gallery models now support Django's sites framework.\n- Photologue now uses django-sortedm2m to sort photos in a gallery.\n- Major rewrite of zip archive uploader: warn users of files that could not be\n  processed, get code to work with Python 3 (issue #71), add extra error\n  handling.\n- Renamed field title_slug to slug - this allows us to simplify views.py a\n  bit.\n- PHOTOLOGUE_USE_CKEDITOR, PHOTOLOGUE_GALLERY_PAGINATE_BY and\n  PHOTOLOGUE_PHOTO_PAGINATE_BY are deprecated.\n- Fixed pagination controls for photo list template.\n- Tightened naming rules for Photosize names.\n- Fixed a couple of unicode-related bugs.\n- Added to the documentation pages describing how to customise the admin and\n  the views.\n- Refactored slightly views.py.\n- Started work on chainable querysets.\n\n2.7 (2013-10-27)\n----------------\n\nUpgrade notes:\n\n1. All settings are now prefixed with ``PHOTOLOGUE_``. Please check that you are\n   not affected by this.\n\nList of changes:\n\n- Fixed issue #56, Gallery pagination is broken.\n- Photologue now works with Python 3.\n- Added a set of templates that work well with Twitter-Bootstrap 3, and used\n  them for the 'example_project'.\n- Fixed issue #64 (allow installation without installing Pillow).\n- Optional use of CKEditor.\n- Updated/new translations for Polish, Slovak and German.\n- Bugfix: allow viewing latest galleries/latest photos pages even if they\n  are empty.\n- Started using factory-boy - makes unit tests a bit easier to read.\n- Added settings to customise pagination count on list pages.\n- Documented all settings.\n- All settings are now prefixed with ``PHOTOLOGUE_``.\n\n2.6.1 (2013-05-19)\n------------------\n\nList of changes:\n\n- Fixed broken packaging in release 2.6.\n\n2.6 (2013-05-19)\n----------------\n\nUpgrade notes:\n\n1. Photologue now relies on Pillow instead of PIL. The easiest way to upgrade\n   is to remove PIL completely, then install the new version of Photologue.\n2. Photologue, in line with Django itself, has dropped support for Django 1.3.\n\nList of changes:\n\n- Switched from PIL to Pillow - hopefully this should make installation\n  easier.\n- Initial setup of data: removed plinit and replaced it with a South data\n  migration.\n- Added feature to allow extending the built-in templates (and documented\n  it!).\n- Allow editing of Photo added date (temp way of sorting photos).\n- Added an example project to help people wanting to contribute to the\n  project.\n- Fixed buggy Travis CI script.\n- fixed issue #52, transactions in migration\n- fixed issue #51, uniqueness collisions in migration\n- Accessing the root url (usually /photologue/ will now redirect you to the\n  gallery list view.\n- Photologue requires min. Django 1.4.\n- Tidied a data validator on PhotoSizes.\n\n2.5 (2012-12-13)\n----------------\n\n- added a sitemap.xml.\n- added some templatetags.\n- started using Sphinx for managing documentation.\n- started using Transifex for managing translations.\n- started using Travis CI.\n- added 12 new translations and improved some of the existing translations.\n- fixed issue #29 (quote URL of resized image properly).\n- misc improvements to clarity of unit tests.\n- added Django 1.4 timezone support.\n\n2.4 (2012-08-13)\n----------------\n\nUpgrade notes:\n\n1. Starting with this version, Photologue uses South to manage the database\n   schema. If you are upgrading an existing Photologue installation, please\n   follow the South instructions at:\n   http://south.readthedocs.org/en/latest/convertinganapp.html#converting-other-installations-and-servers\n\n2. Photologue has dropped support for Django 1.2.\n\nList of changes:\n\n- use South to manage schema changes.\n- updated installation instructions.\n- fixed issue #9 (In Django 1.3, FileField no longer deletes files).\n- switched from function-based generic views to class-based views.\n- fixed PendingDeprecationWarnings seen when running Django 1.3 - this will\n  make the move to Django 1.5 easier.\n- added unit tests.\n- fixed bug where GALLERY_SAMPLE_SIZE setting was not being used.\n- fixed issue #11 (GalleryUpload with len(title) > 50 causes a crash).\n- fixed issue #10 (Increase the size of the name field for photosize).\n", "patch": "@@ -5,6 +5,7 @@ Changelog\n -----------------\n \n - Split out zip upload functionality into a separate function (#222) (contributed by lausek).\n+- Do not allow JS injection into the Photo caption field (#223) (bug detected by Domiee13).\n \n \n 3.15.1 (2022-02-23)", "file_path": "files/2022_12/1334", "file_language": "txt", "file_name": "CHANGELOG.txt", "outdated_file_modify": 1, "outdated_file_before": 0, "outdated_file_after": 0}, {"raw_url": "https://github.com/richardbarran/django-photologue/raw/960cb060ce5e2964e6d716ff787c72fc18a371e7/docs%2Fpages%2Fusage.rst", "code": "#####\nUsage\n#####\n\nNow that you've installed Photologue, here are a few suggestions on how to use it:\n\nUpload some photos in the admin\n-------------------------------\nThe ``Photo`` model in the admin allows you to add new photos to Photologue. You can add photos one by one - and\nit the top-right corner there is a 'Upload a Zip archive' button that will allow you to upload many photos at once.\n\nDefine some Photosizes\n----------------------\nPhotologue will create thumbnails of the photos that you upload, and the thumbnails are what is displayed in the\npublic website. By default Photologue comes with a few Photosizes to get you started - feel free to tweak them, or\nto create new ones.\n\nJust note that the ``admin_thumbnail`` size is used by the admin pages, so it's not a good idea to delete it!\n\nBuilt-in pages and templates\n----------------------------\n\nIf you've followed all the instructions in the installation page, you will have included Photologue's\nurls at ``/photologue/`` - you can use these, tweak them, or discard them if they do not fit in with your website's\nrequirements.\n\nCustom usage\n------------\nThe base of Photologue is the ``Photo`` model. When an instance is created, we automatically add methods to retrieve\nphotos at various photosizes. E.g. if you have an instance of ``Photo`` called ``photo``, then the\nfollowing methods will have been added automatically::\n\n    photo.get_thumbnail_url()\n    photo.get_display_url()\n    photo.get_admin_thumbnail_url()\n\nThese can be used in a custom template to display a thumbnail, e.g.::\n\n    <a href=\"{{ photo.image.url }}\">\n        <img src=\"{{ photo.get_display_url }}\" alt=\"{{ photo.title }}\">\n    </a>\n\nThis will display an image, sized to the dimensions specified in the Photosize ``display``,\nand provide a clickable link to the raw image. Please refer to the example templates for ideas on how to use\n``Photo`` and ``Gallery`` instances!\n\nData integrity\n--------------\nPhotologue will store 'as-is' any data stored for galleries and photos.\nYou may want to enforce some data integrity rules - e.g. to sanitise\nany javascript injected into a ``Photo`` ``caption`` field. An easy way to do this\nwould be to add extra processing on a ``post-save`` signal.\n\nPhotologue does not sanitise data itself as you may legitimately want to store html and\njavascript in a caption field e.g. if you use a rich-text editor.\n\n", "code_before": "#####\nUsage\n#####\n\nNow that you've installed Photologue, here are a few suggestions on how to use it:\n\nUpload some photos in the admin\n-------------------------------\nThe ``Photo`` model in the admin allows you to add new photos to Photologue. You can add photos one by one - and\nit the top-right corner there is a 'Upload a Zip archive' button that will allow you to upload many photos at once.\n\nDefine some Photosizes\n----------------------\nPhotologue will create thumbnails of the photos that you upload, and the thumbnails are what is displayed in the\npublic website. By default Photologue comes with a few Photosizes to get you started - feel free to tweak them, or\nto create new ones.\n\nJust note that the ``admin_thumbnail`` size is used by the admin pages, so it's not a good idea to delete it!\n\nBuilt-in pages and templates\n----------------------------\n\nIf you've followed all the instructions in the installation page, you will have included Photologue's\nurls at ``/photologue/`` - you can use these, tweak them, or discard them if they do not fit in with your website's\nrequirements.\n\nCustom usage\n------------\nThe base of Photologue is the ``Photo`` model. When an instance is created, we automatically add methods to retrieve\nphotos at various photosizes. E.g. if you have an instance of ``Photo`` called ``photo``, then the\nfollowing methods will have been added automatically::\n\n    photo.get_thumbnail_url()\n    photo.get_display_url()\n    photo.get_admin_thumbnail_url()\n\nThese can be used in a custom template to display a thumbnail, e.g.::\n\n    <a href=\"{{ photo.image.url }}\">\n        <img src=\"{{ photo.get_display_url }}\" alt=\"{{ photo.title }}\">\n    </a>\n\nThis will display an image, sized to the dimensions specified in the Photosize ``display``,\nand provide a clickable link to the raw image. Please refer to the example templates for ideas on how to use\n``Photo`` and ``Gallery`` instances!\n", "patch": "@@ -43,3 +43,14 @@ These can be used in a custom template to display a thumbnail, e.g.::\n This will display an image, sized to the dimensions specified in the Photosize ``display``,\n and provide a clickable link to the raw image. Please refer to the example templates for ideas on how to use\n ``Photo`` and ``Gallery`` instances!\n+\n+Data integrity\n+--------------\n+Photologue will store 'as-is' any data stored for galleries and photos.\n+You may want to enforce some data integrity rules - e.g. to sanitise\n+any javascript injected into a ``Photo`` ``caption`` field. An easy way to do this\n+would be to add extra processing on a ``post-save`` signal.\n+\n+Photologue does not sanitise data itself as you may legitimately want to store html and\n+javascript in a caption field e.g. if you use a rich-text editor.\n+", "file_path": "files/2022_12/1335", "file_language": "rst", "file_name": "docs/pages/usage.rst", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 0}, {"raw_url": "https://github.com/richardbarran/django-photologue/raw/960cb060ce5e2964e6d716ff787c72fc18a371e7/photologue%2Ftemplates%2Fphotologue%2Fphoto_detail.html", "code": "{% extends \"photologue/root.html\" %}\n{% load photologue_tags i18n %}\n\n{% block title %}{{ object.title }}{% endblock %}\n\n{% block content %}\n\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <h1>{{ object.title }}</h1>\n        <p class=\"text-muted small\">{% trans \"Published\" %} {{ object.date_added }}</p>\n    </div>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-md-6\">\n        {% if object.caption %}<p>{{ object.caption }}</p>{% endif %}\n        <a href=\"{{ object.image.url }}\">\n            <img src=\"{{ object.get_display_url }}\" class=\"img-thumbnail\" alt=\"{{ object.title }}\">\n        </a>\n    </div>\n    <div class=\"col-md-6\">\n        {% if object.public_galleries %}\n        <p>{% trans \"This photo is found in the following galleries\" %}:</p>\n        <table>\n            {% for gallery in object.public_galleries %}\n            <tr>\n                <td>{% previous_in_gallery object gallery %}</td>\n                <td class=\"text-center\"><a href=\"{{ gallery.get_absolute_url }}\">{{ gallery.title }}</a></td>\n                <td>{% next_in_gallery object gallery %}</td>\n            </tr>\n            {% endfor %}\n        </table>\n        {% endif %}\n    </div>\n</div>\n\n{% endblock %}\n", "code_before": "{% extends \"photologue/root.html\" %}\n{% load photologue_tags i18n %}\n\n{% block title %}{{ object.title }}{% endblock %}\n\n{% block content %}\n\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <h1>{{ object.title }}</h1>\n        <p class=\"text-muted small\">{% trans \"Published\" %} {{ object.date_added }}</p>\n    </div>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-md-6\">\n        {% if object.caption %}<p>{{ object.caption|safe }}</p>{% endif %}\n        <a href=\"{{ object.image.url }}\">\n            <img src=\"{{ object.get_display_url }}\" class=\"img-thumbnail\" alt=\"{{ object.title }}\">\n        </a>\n    </div>\n    <div class=\"col-md-6\">\n        {% if object.public_galleries %}\n        <p>{% trans \"This photo is found in the following galleries\" %}:</p>\n        <table>\n            {% for gallery in object.public_galleries %}\n            <tr>\n                <td>{% previous_in_gallery object gallery %}</td>\n                <td class=\"text-center\"><a href=\"{{ gallery.get_absolute_url }}\">{{ gallery.title }}</a></td>\n                <td>{% next_in_gallery object gallery %}</td>\n            </tr>\n            {% endfor %}\n        </table>\n        {% endif %}\n    </div>\n</div>\n\n{% endblock %}\n", "patch": "@@ -14,7 +14,7 @@ <h1>{{ object.title }}</h1>\n \r\n <div class=\"row\">\r\n     <div class=\"col-md-6\">\r\n-        {% if object.caption %}<p>{{ object.caption|safe }}</p>{% endif %}\r\n+        {% if object.caption %}<p>{{ object.caption }}</p>{% endif %}\r\n         <a href=\"{{ object.image.url }}\">\r\n             <img src=\"{{ object.get_display_url }}\" class=\"img-thumbnail\" alt=\"{{ object.title }}\">\r\n         </a>\r", "file_path": "files/2022_12/1336", "file_language": "html", "file_name": "photologue/templates/photologue/photo_detail.html", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 0}, {"raw_url": "https://github.com/richardbarran/django-photologue/raw/960cb060ce5e2964e6d716ff787c72fc18a371e7/photologue%2Ftests%2Ftest_views_photo.py", "code": "from django.test import TestCase, override_settings\n\nfrom ..models import Photo\nfrom .factories import PhotoFactory\n\n\n@override_settings(ROOT_URLCONF='photologue.tests.test_urls')\nclass RequestPhotoTest(TestCase):\n\n    def setUp(self):\n        super().setUp()\n        self.photo = PhotoFactory(slug='fake-photo')\n\n    def tearDown(self):\n        super().tearDown()\n        self.photo.delete()\n\n    def test_archive_photo_url_works(self):\n        response = self.client.get('/ptests/photo/')\n        self.assertEqual(response.status_code, 200)\n\n    def test_archive_photo_empty(self):\n        \"\"\"If there are no photo to show, tell the visitor - don't show a\n        404.\"\"\"\n\n        Photo.objects.all().update(is_public=False)\n\n        response = self.client.get('/ptests/photo/')\n        self.assertEqual(response.status_code, 200)\n\n        self.assertEqual(response.context['latest'].count(),\n                         0)\n\n    def test_paginated_photo_url_works(self):\n        response = self.client.get('/ptests/photolist/')\n        self.assertEqual(response.status_code, 200)\n\n    def test_photo_works(self):\n        response = self.client.get('/ptests/photo/fake-photo/')\n        self.assertEqual(response.status_code, 200)\n\n    def test_archive_year_photo_works(self):\n        response = self.client.get('/ptests/photo/2011/')\n        self.assertEqual(response.status_code, 200)\n\n    def test_archive_month_photo_works(self):\n        response = self.client.get('/ptests/photo/2011/12/')\n        self.assertEqual(response.status_code, 200)\n\n    def test_archive_day_photo_works(self):\n        response = self.client.get('/ptests/photo/2011/12/23/')\n        self.assertEqual(response.status_code, 200)\n\n    def test_detail_photo_works(self):\n        response = self.client.get('/ptests/photo/2011/12/23/fake-photo/')\n        self.assertEqual(response.status_code, 200)\n    def test_detail_photo_xss(self):\n        \"\"\"Check that the default templates handle XSS.\"\"\"\n        self.photo.title = '<img src=x onerror=alert(\"title\")>'\n        self.photo.caption = '<img src=x onerror=alert(origin)>'\n        self.photo.save()\n        response = self.client.get('/ptests/photo/2011/12/23/fake-photo/')\n        self.assertContains(response, 'Photologue Demo - &lt;img src=x onerror=alert(&quot;title&quot;)&gt;')\n        self.assertNotContains(response, '<img src=x onerror=alert(\"title\")>')\n        self.assertContains(response, '&lt;img src=x onerror=alert(origin)&gt;')\n        self.assertNotContains(response, '<img src=x onerror=alert(origin)>')\n", "code_before": "from django.test import TestCase, override_settings\n\nfrom ..models import Photo\nfrom .factories import PhotoFactory\n\n\n@override_settings(ROOT_URLCONF='photologue.tests.test_urls')\nclass RequestPhotoTest(TestCase):\n\n    def setUp(self):\n        super().setUp()\n        self.photo = PhotoFactory(slug='fake-photo')\n\n    def tearDown(self):\n        super().tearDown()\n        self.photo.delete()\n\n    def test_archive_photo_url_works(self):\n        response = self.client.get('/ptests/photo/')\n        self.assertEqual(response.status_code, 200)\n\n    def test_archive_photo_empty(self):\n        \"\"\"If there are no photo to show, tell the visitor - don't show a\n        404.\"\"\"\n\n        Photo.objects.all().update(is_public=False)\n\n        response = self.client.get('/ptests/photo/')\n        self.assertEqual(response.status_code, 200)\n\n        self.assertEqual(response.context['latest'].count(),\n                         0)\n\n    def test_paginated_photo_url_works(self):\n        response = self.client.get('/ptests/photolist/')\n        self.assertEqual(response.status_code, 200)\n\n    def test_photo_works(self):\n        response = self.client.get('/ptests/photo/fake-photo/')\n        self.assertEqual(response.status_code, 200)\n\n    def test_archive_year_photo_works(self):\n        response = self.client.get('/ptests/photo/2011/')\n        self.assertEqual(response.status_code, 200)\n\n    def test_archive_month_photo_works(self):\n        response = self.client.get('/ptests/photo/2011/12/')\n        self.assertEqual(response.status_code, 200)\n\n    def test_archive_day_photo_works(self):\n        response = self.client.get('/ptests/photo/2011/12/23/')\n        self.assertEqual(response.status_code, 200)\n\n    def test_detail_photo_works(self):\n        response = self.client.get('/ptests/photo/2011/12/23/fake-photo/')\n        self.assertEqual(response.status_code, 200)\n", "patch": "@@ -54,3 +54,13 @@ def test_archive_day_photo_works(self):\n     def test_detail_photo_works(self):\n         response = self.client.get('/ptests/photo/2011/12/23/fake-photo/')\n         self.assertEqual(response.status_code, 200)\n+    def test_detail_photo_xss(self):\n+        \"\"\"Check that the default templates handle XSS.\"\"\"\n+        self.photo.title = '<img src=x onerror=alert(\"title\")>'\n+        self.photo.caption = '<img src=x onerror=alert(origin)>'\n+        self.photo.save()\n+        response = self.client.get('/ptests/photo/2011/12/23/fake-photo/')\n+        self.assertContains(response, 'Photologue Demo - &lt;img src=x onerror=alert(&quot;title&quot;)&gt;')\n+        self.assertNotContains(response, '<img src=x onerror=alert(\"title\")>')\n+        self.assertContains(response, '&lt;img src=x onerror=alert(origin)&gt;')\n+        self.assertNotContains(response, '<img src=x onerror=alert(origin)>')", "file_path": "files/2022_12/1337", "file_language": "py", "file_name": "photologue/tests/test_views_photo.py", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 1, "llm_check": 1, "static_check": 0, "static": {"rats": [false, []], "semgrep": [false, []]}, "target": -1, "function_before": [], "function_after": []}], "outdated": 0, "cwe_descripiton": "", "cwe_consequence": "", "cwe_method": "", "cwe_solution": ""}
