{"index": 9624, "cve_id": "CVE-2022-4105", "cwe_id": ["CWE-79"], "cve_language": "Python", "cve_description": "A stored XSS in a kiwi Test Plan can run malicious javascript which could be chained with an HTML injection to perform a UI redressing attack (clickjacking) and an HTML injection which disables the use of the history page.", "cvss": "5.4", "publish_date": "November 21, 2022", "AV": "NETWORK", "AC": "NETWORK", "PR": "LOW", "UI": "REQUIRED", "S": "CHANGED", "C": "LOW", "I": "LOW", "A": "NONE", "commit_id": "a2b169ffdef1d7c1755bade8138578423b35011b", "commit_message": "Clean HTML input when generating history diff\n\nhelps us prevent XSS attacks", "commit_date": "2022-11-07T16:34:59Z", "project": "kiwitcms/kiwi", "url": "https://api.github.com/repos/kiwitcms/Kiwi/commits/a2b169ffdef1d7c1755bade8138578423b35011b", "html_url": "https://github.com/kiwitcms/Kiwi/commit/a2b169ffdef1d7c1755bade8138578423b35011b", "windows_before": [{"commit_id": "a54cbbf73d6978c01f947b2c64f2db1986ecfb2c", "commit_date": "Mon Nov 7 17:51:35 2022 +0200", "commit_message": "Refactor call to bleach.clean() into it's own function", "files_name": ["tcms/core/templatetags/extra_filters.py"]}, {"commit_id": "ced89ee78222304e00a6fd071ebe61d1b3a9e1b4", "commit_date": "Tue Nov 1 16:34:07 2022 +0200", "commit_message": "Update django from 4.1.2 to 4.1.3", "files_name": ["requirements/base.txt"]}, {"commit_id": "44c372a084ab194ff35002a35f558e3ec8fc3fcd", "commit_date": "Sat Nov 5 02:21:48 2022 +0000", "commit_message": "Update pygithub from 1.56 to 1.57", "files_name": ["requirements/base.txt"]}, {"commit_id": "edf2730e277f6a79cdab22f27e06d53de472a435", "commit_date": "Sun Oct 30 18:26:34 2022 +0200", "commit_message": "Update tzdata from 2022.5 to 2022.6", "files_name": ["requirements/base.txt"]}, {"commit_id": "8259b6f7dd26cb814b966b0af29b29af2d84f5a7", "commit_date": "Sat Oct 29 21:31:29 2022 +0300", "commit_message": " New translations django.po (French)", "files_name": ["tcms/locale/fr_FR/LC_MESSAGES/django.po"]}, {"commit_id": "9d4284edb9762293928dbdad91668221bf6f5522", "commit_date": "Fri Oct 28 22:36:10 2022 +0300", "commit_message": "tests: Remove unnecessary patch for older Bugzilla", "files_name": ["tests/bugzilla/Dockerfile", "tests/bugzilla/Util.pm.patch"]}, {"commit_id": "afe29c60639c4cd6bdde4f9268b327df3be63477", "commit_date": "Fri Oct 28 22:27:42 2022 +0300", "commit_message": "tests: Install httpd first, before installing Bugzilla", "files_name": ["tests/bugzilla/Dockerfile"]}, {"commit_id": "8106269c885047b7ecd2edebcedeed2519212d10", "commit_date": "Fri Oct 28 14:31:08 2022 +0000", "commit_message": "Bump fedora from 32 to 36 in /tests/bugzilla", "files_name": ["tests/bugzilla/Dockerfile"]}, {"commit_id": "c9b71e6b2e5f1ab820380e7c4e7637864366dd28", "commit_date": "Fri Oct 28 15:28:38 2022 +0300", "commit_message": "Don't specify custom redhat-catalog container registry", "files_name": [".github/dependabot.yml"]}, {"commit_id": "76bb8ebd05452ea111ef487b280856f12ec0dfa0", "commit_date": "Fri Oct 28 11:34:50 2022 +0000", "commit_message": "Bump django from 4.0.7 to 4.1.2", "files_name": ["requirements/base.txt"]}, {"commit_id": "5a0c285fe9a75b9ce384754aa9d010b3f91ea469", "commit_date": "Fri Oct 28 05:10:14 2022 +0300", "commit_message": "Update python-gitlab from 3.10.0 to 3.11.0", "files_name": ["requirements/base.txt"]}, {"commit_id": "a25c3d53a4bc03221e955e580abdb2fe8c34d458", "commit_date": "Wed Oct 26 03:13:48 2022 +0000", "commit_message": "Bump psycopg2 from 2.9.4 to 2.9.5", "files_name": ["requirements/postgres.txt"]}, {"commit_id": "7b7fd5e2862ff76d20fead78d7f66c62f669f85c", "commit_date": "Tue Oct 18 00:40:37 2022 +0300", "commit_message": "Add missing field in setup() to avoid a warning", "files_name": ["setup.py"]}, {"commit_id": "8bad61e3c5da6e038306470d4c537610cd20521b", "commit_date": "Tue Oct 18 00:07:01 2022 +0300", "commit_message": "Start using find_namespace_packages()", "files_name": ["setup.py", "tests/check-build"]}, {"commit_id": "0d34b35ec95115d28cbdd1c83c4d5ec1a21185ff", "commit_date": "Mon Oct 17 21:19:53 2022 +0300", "commit_message": "npm audit signatures", "files_name": ["tcms/npm-install"]}, {"commit_id": "13e9313b1c20207bd0c4b71e4b11d8124582ebf3", "commit_date": "Fri Oct 14 22:50:05 2022 +0300", "commit_message": "Use npm audit fix to automatically update some Nodejs dependecies", "files_name": ["tcms/npm-install", "tests/check-build"]}, {"commit_id": "5a260116fa83d0b6c8839c5840ab6b123de28d45", "commit_date": "Fri Oct 14 22:47:13 2022 +0300", "commit_message": "Replace `npm install` with the ./npm-install Bash script", "files_name": [".github/workflows/coverity_scan.yml", ".github/workflows/lint.yml", ".github/workflows/sanity.yml", ".github/workflows/security.yml", ".github/workflows/testing.yml", "docs/source/set_dev_env.rst", "tcms/npm-install", "tests/check-build"]}, {"commit_id": "afb414e66e9ad19bb741f90a93b700b33ce8b81b", "commit_date": "Mon Oct 17 15:30:02 2022 +0300", "commit_message": "New translations django.po (German)", "files_name": ["tcms/locale/de_DE/LC_MESSAGES/django.po"]}, {"commit_id": "52fa5d4ee7f6d40e056020ab171328e9333ac323", "commit_date": "Sat Oct 15 23:46:37 2022 +0300", "commit_message": "Update Python references 3.8 -> 3.9", "files_name": ["docs/source/set_dev_env.rst", "setup.py"]}, {"commit_id": "59059107cab0d1ec4040631a2f5562916cddc95e", "commit_date": "Sat Oct 15 00:09:32 2022 +0300", "commit_message": "Start building Kiwi TCMS with Python 3.9", "files_name": [".github/workflows/coverity_scan.yml", ".github/workflows/docker.yml", ".github/workflows/integration_bugtracker.yml", ".github/workflows/lint.yml", ".github/workflows/sanity.yml", ".github/workflows/security.yml", ".github/workflows/testing.yml", "Dockerfile", "Dockerfile.buildroot", "docs/source/installing_docker.rst", "etc/kiwi-httpd.conf"]}, {"commit_id": "a36f50f56c835830a8abd6f66f088ec2c86f1964", "commit_date": "Sat Oct 15 00:04:12 2022 +0300", "commit_message": "Start using RHEL 9 containers", "files_name": ["Dockerfile", "Dockerfile.buildroot", "Makefile", "httpd-foreground"]}, {"commit_id": "34a9af4fdd1463910e8ccbffbc8536e715295306", "commit_date": "Sat Oct 15 21:57:33 2022 +0300", "commit_message": "New translations django.po (Chinese Traditional)", "files_name": ["tcms/locale/bg_BG/LC_MESSAGES/django.po", "tcms/locale/bn_BD/LC_MESSAGES/django.po", "tcms/locale/ca_ES/LC_MESSAGES/django.po", "tcms/locale/cs_CZ/LC_MESSAGES/django.po", "tcms/locale/de_DE/LC_MESSAGES/django.po", "tcms/locale/el_GR/LC_MESSAGES/django.po", "tcms/locale/eo_UY/LC_MESSAGES/django.po", "tcms/locale/es_ES/LC_MESSAGES/django.po", "tcms/locale/fr_FR/LC_MESSAGES/django.po", "tcms/locale/he_IL/LC_MESSAGES/django.po", "tcms/locale/hi_IN/LC_MESSAGES/django.po", "tcms/locale/hu_HU/LC_MESSAGES/django.po", "tcms/locale/id_ID/LC_MESSAGES/django.po", "tcms/locale/it_IT/LC_MESSAGES/django.po", "tcms/locale/ja_JP/LC_MESSAGES/django.po", "tcms/locale/ko_KR/LC_MESSAGES/django.po", "tcms/locale/mk_MK/LC_MESSAGES/django.po", "tcms/locale/mr_IN/LC_MESSAGES/django.po", "tcms/locale/pl_PL/LC_MESSAGES/django.po", "tcms/locale/pt_BR/LC_MESSAGES/django.po", "tcms/locale/ro_RO/LC_MESSAGES/django.po", "tcms/locale/ru_RU/LC_MESSAGES/django.po", "tcms/locale/sk_SK/LC_MESSAGES/django.po", "tcms/locale/sl_SI/LC_MESSAGES/django.po", "tcms/locale/sq_AL/LC_MESSAGES/django.po", "tcms/locale/sw_KE/LC_MESSAGES/django.po", "tcms/locale/ta_IN/LC_MESSAGES/django.po", "tcms/locale/te_IN/LC_MESSAGES/django.po", "tcms/locale/tr_TR/LC_MESSAGES/django.po", "tcms/locale/vi_VN/LC_MESSAGES/django.po", "tcms/locale/zh_CN/LC_MESSAGES/django.po", "tcms/locale/zh_TW/LC_MESSAGES/django.po"]}, {"commit_id": "a33ad958007c7883b2dc8e3aff2b603be1b126d4", "commit_date": "Fri Oct 14 22:33:34 2022 +0300", "commit_message": "Rename Properties to Parameters", "files_name": ["tcms/locale/en/LC_MESSAGES/django.po", "tcms/templates/include/properties_card.html", "tcms/testruns/admin.py", "tcms/testruns/templates/testruns/get.html", "tcms/testruns/templates/testruns/mutable.html"]}, {"commit_id": "cf8f2dff1f48e041c8746b8afa2a4d93c94201bf", "commit_date": "Fri Oct 14 22:25:49 2022 +0300", "commit_message": "Trim white-space after splitting TestCase parameter values", "files_name": ["tcms/static/js/properties.js"]}, {"commit_id": "e59f2757ca8a1066e299e33889c310c803b00efe", "commit_date": "Thu Oct 13 22:50:38 2022 +0300", "commit_message": "Tighten security around docker containers", "files_name": [".github/dependabot.yml", "Dockerfile", "Dockerfile.buildroot", "docker-compose.postgres", "docker-compose.with-secrets", "docker-compose.yml", "tests/azureboards/docker-compose.yml", "tests/bitbucket/docker-compose.yml", "tests/bugzilla/Dockerfile", "tests/bugzilla/docker-compose.yml", "tests/github/docker-compose.yml", "tests/gitlab_com/docker-compose.yml", "tests/jira/docker-compose.yml", "tests/kiwitcms/docker-compose.yml", "tests/redmine/Dockerfile", "tests/redmine/docker-compose.yml"]}, {"commit_id": "39544f007fc01ea2b92024a717e2b1c0466bdacb", "commit_date": "Fri Oct 14 11:31:23 2022 +0300", "commit_message": "Configure Dependabot to update Docker containers", "files_name": [".github/dependabot.yml"]}, {"commit_id": "4333a4be66d57873d37c6b7512b2399695825904", "commit_date": "Thu Oct 13 23:43:43 2022 +0300", "commit_message": "Fix typo in coverity scan CI job", "files_name": [".github/workflows/coverity_scan.yml"]}, {"commit_id": "26120b892f437a30a9ea9809be307e0702c3f5a8", "commit_date": "Thu Oct 13 23:00:22 2022 +0300", "commit_message": "Don't scan devel dependencies with Coverity Scan", "files_name": [".github/workflows/coverity_scan.yml"]}, {"commit_id": "62e8b5ce8817b2397d2a8d00341efebd05045716", "commit_date": "Thu Oct 13 22:57:19 2022 +0300", "commit_message": "Redirect to where we came from in case a post form is invalid", "files_name": ["tcms/bugs/views.py"]}, {"commit_id": "d47ef1b92ed11ed59c6667d890694ea88446280e", "commit_date": "Thu Oct 13 22:02:57 2022 +0300", "commit_message": "Missed an option to cov-build", "files_name": [".github/workflows/coverity_scan.yml"]}, {"commit_id": "b64be2f325acfd380e74362f539bd760d0f70acd", "commit_date": "Thu Oct 13 21:52:29 2022 +0300", "commit_message": "Add Coverity Scan as a GitHub action", "files_name": [".github/workflows/coverity_scan.yml"]}, {"commit_id": "d74645f6f4b12ee4e34471462b73540c4d1ca211", "commit_date": "Thu Oct 13 21:40:34 2022 +0300", "commit_message": "Remove Travis CI config b/c we don't use it anymore", "files_name": [".travis.yml"]}, {"commit_id": "d682bdf289247ca5178377d29a4231b2875c7606", "commit_date": "Thu Oct 13 10:17:41 2022 +0300", "commit_message": "Update Django to 4.0.8 - security", "files_name": ["requirements/base.txt"]}, {"commit_id": "eaabc4755ec5c1da2b6d9adbfc78dd9bef82b546", "commit_date": "Thu Oct 13 05:05:44 2022 +0300", "commit_message": "Update tzdata from 2022.4 to 2022.5", "files_name": ["requirements/base.txt"]}, {"commit_id": "a22b7ecee322fc8be425611936c9b2cd3f5e1d9b", "commit_date": "Thu Oct 13 05:05:42 2022 +0300", "commit_message": "Update pygithub from 1.55 to 1.56", "files_name": ["requirements/base.txt"]}, {"commit_id": "cb6c2582a2998a7292655fa613f19a664f31e9a6", "commit_date": "Tue Oct 11 16:31:00 2022 +0300", "commit_message": "New translations django.po (Chinese Simplified)", "files_name": ["tcms/locale/zh_CN/LC_MESSAGES/django.po"]}, {"commit_id": "4f4118fed0bb01d07a006735e3408c0680631550", "commit_date": "Fri Oct 7 12:44:33 2022 +0300", "commit_message": "New translations django.po (Slovenian)", "files_name": ["tcms/locale/sl_SI/LC_MESSAGES/django.po"]}, {"commit_id": "3b100ff98ab251a07c7f19df68c8753b72ff6e4b", "commit_date": "Wed Sep 28 04:57:55 2022 +0300", "commit_message": "Update python-gitlab from 3.9.0 to 3.10.0", "files_name": ["requirements/base.txt"]}, {"commit_id": "8091b175989f820804b4ccf7e73330e36f256614", "commit_date": "Thu Oct 6 22:47:14 2022 +0300", "commit_message": "Update psycopg2 from 2.9.3 to 2.9.4", "files_name": ["requirements/postgres.txt"]}, {"commit_id": "dd7a59cf5874bbb9f54120390677b3694213f00e", "commit_date": "Tue Oct 4 19:46:04 2022 +0300", "commit_message": "Fix for #2929", "files_name": ["tcms/issuetracker/types.py"]}, {"commit_id": "8ff576b2a8786c7d8be78e420a03e2cb603673df", "commit_date": "Mon Sep 26 21:56:51 2022 +0300", "commit_message": "Update tzdata from 2022.2 to 2022.4", "files_name": ["requirements/base.txt"]}], "windows_after": [{"commit_id": "a54cbbf73d6978c01f947b2c64f2db1986ecfb2c", "commit_date": "Mon Nov 7 17:51:35 2022 +0200", "commit_message": "Refactor call to bleach.clean() into it's own function", "files_name": ["tcms/core/templatetags/extra_filters.py"]}, {"commit_id": "f873ccacba15044b057da85918ec645505536b52", "commit_date": "Tue Nov 8 17:47:51 2022 +0200", "commit_message": "Changelog for v11.6", "files_name": ["CHANGELOG.rst", "tcms/__init__.py"]}, {"commit_id": "939b8e475c3192f5af3537ddc496dc0e6c27cdc3", "commit_date": "Tue Nov 8 03:06:38 2022 +0000", "commit_message": "Bump django-simple-history from 3.0.0 to 3.2.0", "files_name": ["requirements/base.txt"]}, {"commit_id": "d9b5fd94b8097519999321d3f3c6f3b741d6a77b", "commit_date": "Thu Nov 10 11:51:55 2022 +0200", "commit_message": "Add migrations b/c of indexing changes in django-simple-history 3.1.0", "files_name": ["tcms/testcases/migrations/0022_alter_historicaltemplate_options_and_more.py", "tcms/testplans/migrations/0010_alter_historicaltestplan_options_and_more.py", "tcms/testruns/migrations/0018_alter_historicaltestexecution_options_and_more.py"]}, {"commit_id": "5bab924c52ed96efbc24662b44c8d2fc13b3a9d1", "commit_date": "Thu Nov 10 09:55:29 2022 +0000", "commit_message": "Bump eslint-plugin-promise from 4.3.1 to 6.1.1 in /tcms", "files_name": ["tcms/package.json"]}, {"commit_id": "4caefed06fe84845ea75142491b1deb2f32e4395", "commit_date": "Thu Nov 10 12:26:15 2022 +0200", "commit_message": "Update eslint-config-standard to 17.0.0", "files_name": ["tcms/package.json"]}, {"commit_id": "74e135a7d12bf01f7f50675a3258d1057606d0bc", "commit_date": "Thu Nov 10 12:26:43 2022 +0200", "commit_message": "Pin devDependencies versions and let Dependabot upgrade them", "files_name": ["tcms/package.json"]}, {"commit_id": "7c3d274b0ac299e9288182f78a3bcf86fb5a3c44", "commit_date": "Thu Nov 10 12:35:15 2022 +0200", "commit_message": "Upgrade other devDependecies", "files_name": ["tcms/package.json"]}, {"commit_id": "af8c151d2564b8143ff5cc718f7a08f57bca2d65", "commit_date": "Mon Mar 23 23:29:37 2020 +0000", "commit_message": "fix: upgrade bootstrap-switch from 3.3.4 to 3.4.0", "files_name": ["tcms/package.json"]}, {"commit_id": "e54ce708a26e9f5a6c2f63ba0797a06841a6ef97", "commit_date": "Thu Nov 10 12:48:47 2022 +0200", "commit_message": "Install eslint-plugin-n as devel dependency as well", "files_name": ["tcms/package.json"]}, {"commit_id": "7921ff432a1aba7963b34183de92bbb331b35e4d", "commit_date": "Thu Nov 10 14:27:45 2022 +0200", "commit_message": "Commit package-lock.json in git", "files_name": [".gitignore", "tcms/package-lock.json"]}, {"commit_id": "b4a4d7545a664eb73ccf803cebc717508a18b465", "commit_date": "Thu Nov 10 15:59:20 2022 +0200", "commit_message": "Specify bootstrap-switch: 3.4.0 as override", "files_name": ["tcms/package-lock.json", "tcms/package.json"]}, {"commit_id": "e8150fbd7b4d0160910611cd3c122434de12b717", "commit_date": "Thu Nov 10 16:11:34 2022 +0200", "commit_message": "Update bootstrap-select, eonasdan-bootstrap-datetimepicker, jquery and moment-timezone", "files_name": ["tcms/package-lock.json", "tcms/package.json"]}, {"commit_id": "a57a353edc1d794eb9be3f0af0a07b5dc1deb14b", "commit_date": "Tue Oct 18 14:45:31 2022 +0300", "commit_message": "Replace deprecated jQuery syntax for .ready()", "files_name": ["tcms/bugs/static/bugs/js/get.js", "tcms/bugs/static/bugs/js/mutable.js", "tcms/bugs/static/bugs/js/search.js", "tcms/core/widgets.py", "tcms/management/static/management/js/build_admin.js", "tcms/telemetry/static/telemetry/js/testing/breakdown.js", "tcms/telemetry/static/telemetry/js/testing/execution-trends.js", "tcms/telemetry/static/telemetry/js/testing/status-matrix.js", "tcms/telemetry/static/telemetry/js/testing/test-case-health.js", "tcms/templates/admin/base_site.html", "tcms/templates/initdb.html", "tcms/testcases/static/testcases/js/clone.js", "tcms/testcases/static/testcases/js/get.js", "tcms/testcases/static/testcases/js/mutable.js", "tcms/testcases/static/testcases/js/search.js", "tcms/testplans/static/testplans/js/get.js", "tcms/testplans/static/testplans/js/mutable.js", "tcms/testplans/static/testplans/js/search.js", "tcms/testruns/static/testruns/js/environment.js", "tcms/testruns/static/testruns/js/get.js", "tcms/testruns/static/testruns/js/mutable.js", "tcms/testruns/static/testruns/js/search.js"]}, {"commit_id": "35774fa173c3e700abb0976182a63019609d80d6", "commit_date": "Thu Nov 10 17:55:58 2022 +0200", "commit_message": "Install required dependency popper.js", "files_name": ["tcms/package-lock.json", "tcms/package.json", "tcms/templates/patternfly.html"]}, {"commit_id": "4e1e4b54c4f574781378af21120fe5f4d17cdf8c", "commit_date": "Thu Nov 10 20:06:53 2022 +0200", "commit_message": "Include bootstrap-select.min.css", "files_name": ["tcms/templates/patternfly.html"]}, {"commit_id": "147b53d60749bbb0dae4fdcebac094f7d8e2775e", "commit_date": "Thu Nov 10 23:16:18 2022 +0200", "commit_message": "Patternfly still needs bootstrap 3.x", "files_name": ["tcms/package-lock.json", "tcms/package.json"]}, {"commit_id": "64b3eead2e72908e9c3fafe578d41e4c99d18090", "commit_date": "Thu Nov 10 23:16:56 2022 +0200", "commit_message": "Revert \"Install required dependency popper.js\"", "files_name": ["tcms/package-lock.json", "tcms/package.json", "tcms/templates/patternfly.html"]}, {"commit_id": "5fe2868cc1e886030a3e2156f987c25fa8630b35", "commit_date": "Thu Nov 10 23:40:21 2022 +0200", "commit_message": "Revert \"fix: upgrade bootstrap-switch from 3.3.4 to 3.4.0\"", "files_name": ["tcms/package-lock.json", "tcms/package.json"]}, {"commit_id": "29fb994719c7b7abbbe1c21e4bbaa8dc96458297", "commit_date": "Fri Nov 11 03:16:22 2022 +0000", "commit_message": "Bump eslint from 8.0.1 to 8.27.0 in /tcms", "files_name": ["tcms/package-lock.json", "tcms/package.json"]}, {"commit_id": "de7a7cacf2ca4386458a054305aef1bc7bc8c8a1", "commit_date": "Fri Nov 11 03:15:41 2022 +0000", "commit_message": "Bump eslint-plugin-import from 2.25.2 to 2.26.0 in /tcms", "files_name": ["tcms/package-lock.json", "tcms/package.json"]}, {"commit_id": "4948458463cc3a9c83efd4700adec64b94f0c444", "commit_date": "Fri Nov 11 11:58:08 2022 +0000", "commit_message": "Add CodeQL workflow for GitHub code scanning", "files_name": [".github/workflows/codeql.yml"]}, {"commit_id": "d136dbc75f9c9c2be9d755be8cb34a4e297a50fc", "commit_date": "Sat Nov 12 01:59:36 2022 +0200", "commit_message": "Add Docker Hub downloads badge", "files_name": ["README.rst"]}, {"commit_id": "060dd32e8741e404721fce6d4d9dbeb8138c6dd6", "commit_date": "Sat Nov 12 02:01:35 2022 +0200", "commit_message": "Update title in README", "files_name": ["README.rst"]}, {"commit_id": "3b731f305cdd4c840e8ecf97728682d52808606b", "commit_date": "Mon Nov 14 19:17:12 2022 +0200", "commit_message": "Make it possible to override attachments card title", "files_name": ["tcms/templates/include/attachments.html"]}, {"commit_id": "cc12a71258316755c774340a5eadd30f289b89f0", "commit_date": "Fri Nov 11 23:56:57 2022 +0200", "commit_message": "Remove useless tooltip from Telemetry pages", "files_name": ["tcms/telemetry/templates/telemetry/include/filters.html"]}, {"commit_id": "e4a76e3083f55d6a4c6fd1113d7935ccf945e9ad", "commit_date": "Tue Oct 18 15:38:36 2022 +0300", "commit_message": "Define page ID for each page that has a .ready() function", "files_name": ["tcms/bugs/templates/bugs/get.html", "tcms/bugs/templates/bugs/mutable.html", "tcms/bugs/templates/bugs/search.html", "tcms/telemetry/templates/telemetry/testing/breakdown.html", "tcms/telemetry/templates/telemetry/testing/execution-trends.html", "tcms/telemetry/templates/telemetry/testing/status-matrix.html", "tcms/telemetry/templates/telemetry/testing/test-case-health.html", "tcms/templates/base.html", "tcms/templates/initdb.html", "tcms/testcases/templates/testcases/clone.html", "tcms/testcases/templates/testcases/get.html", "tcms/testcases/templates/testcases/mutable.html", "tcms/testcases/templates/testcases/search.html", "tcms/testplans/templates/testplans/get.html", "tcms/testplans/templates/testplans/mutable.html", "tcms/testplans/templates/testplans/search.html", "tcms/testruns/templates/testruns/environment.html", "tcms/testruns/templates/testruns/get.html", "tcms/testruns/templates/testruns/mutable.html", "tcms/testruns/templates/testruns/search.html"]}, {"commit_id": "c6e20981597d183d9191831c81cf877eefed43f8", "commit_date": "Wed Oct 19 12:23:20 2022 +0300", "commit_message": "Only execute .ready() if we're on the same page", "files_name": ["tcms/bugs/static/bugs/js/get.js", "tcms/bugs/static/bugs/js/mutable.js", "tcms/bugs/static/bugs/js/search.js", "tcms/telemetry/static/telemetry/js/testing/breakdown.js", "tcms/telemetry/static/telemetry/js/testing/execution-trends.js", "tcms/telemetry/static/telemetry/js/testing/status-matrix.js", "tcms/telemetry/static/telemetry/js/testing/test-case-health.js", "tcms/testcases/static/testcases/js/clone.js", "tcms/testcases/static/testcases/js/get.js", "tcms/testcases/static/testcases/js/mutable.js", "tcms/testcases/static/testcases/js/search.js", "tcms/testplans/static/testplans/js/get.js", "tcms/testplans/static/testplans/js/mutable.js", "tcms/testplans/static/testplans/js/search.js", "tcms/testplans/templates/testplans/clone.html", "tcms/testruns/static/testruns/js/environment.js", "tcms/testruns/static/testruns/js/get.js", "tcms/testruns/static/testruns/js/mutable.js", "tcms/testruns/static/testruns/js/search.js"]}, {"commit_id": "da9dbf26e1539115ed9ef7975297f4eb726b05c2", "commit_date": "Thu Nov 10 22:29:19 2022 +0200", "commit_message": "Remove duplicate populateProductVersion() function", "files_name": ["tcms/.eslintrc.js", "tcms/testplans/static/testplans/js/mutable.js"]}, {"commit_id": "f6df8f568e8c7b69c7146b9dfb4b860e18b68b9d", "commit_date": "Fri Nov 11 23:53:04 2022 +0200", "commit_message": "Reformat according to new linter config", "files_name": ["tcms/bugs/static/bugs/js/get.js", "tcms/bugs/static/bugs/js/mutable.js", "tcms/bugs/static/bugs/js/search.js", "tcms/management/static/management/js/build_admin.js", "tcms/static/js/bugs.js", "tcms/static/js/jsonrpc.js", "tcms/static/js/pagination.js", "tcms/static/js/properties.js", "tcms/static/js/simplemde_security_override.js", "tcms/static/js/tags.js", "tcms/static/js/utils.js", "tcms/telemetry/static/telemetry/js/testing/breakdown.js", "tcms/telemetry/static/telemetry/js/testing/execution-trends.js", "tcms/telemetry/static/telemetry/js/testing/status-matrix.js", "tcms/telemetry/static/telemetry/js/testing/test-case-health.js", "tcms/telemetry/static/telemetry/js/testing/utils.js", "tcms/testcases/static/testcases/js/clone.js", "tcms/testcases/static/testcases/js/get.js", "tcms/testcases/static/testcases/js/mutable.js", "tcms/testcases/static/testcases/js/search.js", "tcms/testplans/static/testplans/js/get.js", "tcms/testplans/static/testplans/js/mutable.js", "tcms/testplans/static/testplans/js/search.js", "tcms/testruns/static/testruns/js/environment.js", "tcms/testruns/static/testruns/js/get.js", "tcms/testruns/static/testruns/js/mutable.js", "tcms/testruns/static/testruns/js/search.js"]}, {"commit_id": "2a85e056849af286195f49a6a2d117de0ee2b79b", "commit_date": "Wed Nov 16 22:39:06 2022 +0200", "commit_message": "ci: Send results to Codecov.io only if we have a token defined", "files_name": [".github/workflows/integration_bugtracker.yml", ".github/workflows/testing.yml"]}, {"commit_id": "d926c4a2f30f4bc63f7bb7bb2b19c29b3ba5edab", "commit_date": "Wed Nov 16 22:07:41 2022 +0200", "commit_message": "Move shared functions into utils.js", "files_name": ["tcms/bugs/static/bugs/js/mutable.js", "tcms/static/js/utils.js"]}], "parents": [{"commit_id_before": "a54cbbf73d6978c01f947b2c64f2db1986ecfb2c", "url_before": "https://api.github.com/repos/kiwitcms/Kiwi/commits/a54cbbf73d6978c01f947b2c64f2db1986ecfb2c", "html_url_before": "https://github.com/kiwitcms/Kiwi/commit/a54cbbf73d6978c01f947b2c64f2db1986ecfb2c"}], "details": [{"raw_url": "https://github.com/kiwitcms/Kiwi/raw/a2b169ffdef1d7c1755bade8138578423b35011b/tcms%2Fcore%2Fhistory.py", "code": "# pylint: disable=unused-argument, no-self-use, avoid-list-comprehension\nimport difflib\n\nfrom django.db.models import signals\nfrom django.http import HttpResponseRedirect\nfrom django.template.defaultfilters import safe\nfrom django.utils.translation import gettext_lazy as _\nfrom simple_history.admin import SimpleHistoryAdmin\nfrom simple_history.models import HistoricalRecords\n\nfrom tcms.core.templatetags.extra_filters import bleach_input\n\n\ndef diff_objects(old_instance, new_instance, fields):\n    \"\"\"\n    Diff two objects by examining the given fields and\n    return a string.\n    \"\"\"\n    full_diff = []\n\n    for field in fields:\n        field_diff = []\n        old_value = getattr(old_instance, field.attname)\n        new_value = getattr(new_instance, field.attname)\n\n        # clean stored XSS\n        if isinstance(old_value, str):\n            old_value = bleach_input(old_value)\n        if isinstance(new_value, str):\n            new_value = bleach_input(new_value)\n\n        for line in difflib.unified_diff(\n            str(old_value).split(\"\\n\"),\n            str(new_value).split(\"\\n\"),\n            fromfile=field.attname,\n            tofile=field.attname,\n            lineterm=\"\",\n        ):\n            field_diff.append(line)\n        full_diff.extend(field_diff)\n\n    return \"\\n\".join(full_diff)\n\n\ndef history_email_for(instance, title):\n    \"\"\"\n    Generate the subject and email body that is sent via\n    email notifications post update!\n    \"\"\"\n    history = instance.history.latest()\n\n    subject = _(\"UPDATE: %(model_name)s #%(pk)d - %(title)s\") % {\n        \"model_name\": instance.__class__.__name__,\n        \"pk\": instance.pk,\n        \"title\": title,\n    }\n\n    body = (\n        _(\n            \"\"\"Updated on %(history_date)s\nUpdated by %(username)s\n\n%(diff)s\n\nFor more information:\n%(instance_url)s\"\"\"\n        )\n        % {\n            \"history_date\": history.history_date.strftime(\"%c\"),\n            \"username\": getattr(history.history_user, \"username\", \"\"),\n            \"diff\": history.history_change_reason,\n            \"instance_url\": instance.get_full_url(),\n        }\n    )\n    return subject, body\n\n\nclass KiwiHistoricalRecords(HistoricalRecords):\n    \"\"\"\n    This class will keep track of what fields were changed\n    inside of the ``history_change_reason`` field. This gives us\n    a crude changelog until upstream introduces their new interface.\n    \"\"\"\n\n    def pre_save(self, instance, **kwargs):\n        \"\"\"\n        Signal handlers don't have access to the previous version of\n        an object so we have to load it from the database!\n        \"\"\"\n        if kwargs.get(\"raw\", False):\n            return\n\n        if instance.pk and hasattr(instance, \"history\"):\n            instance.previous = instance.__class__.objects.filter(\n                pk=instance.pk\n            ).first()\n\n    def post_save(self, instance, created, using=None, **kwargs):\n        \"\"\"\n        Calculate the changelog and call the inherited method to\n        write the data into the database.\n        \"\"\"\n        if kwargs.get(\"raw\", False):\n            return\n\n        if hasattr(instance, \"previous\") and instance.previous:\n            # note: simple_history.utils.update_change_reason() performs an extra\n            # DB query so it is better to use the private field instead!\n            # In older simple_history version this field wasn't private but was renamed\n            # in 2.10.0 hence the pylint disable!\n            instance._change_reason = diff_objects(  # pylint: disable=protected-access\n                instance.previous, instance, self.fields_included(instance)\n            )\n        super().post_save(instance, created, using, **kwargs)\n\n    def finalize(self, sender, **kwargs):\n        \"\"\"\n        Connect the pre_save signal handler after calling the inherited method.\n        \"\"\"\n        super().finalize(sender, **kwargs)\n        signals.pre_save.connect(self.pre_save, sender=sender, weak=False)\n\n\nclass ReadOnlyHistoryAdmin(SimpleHistoryAdmin):\n    \"\"\"\n    Custom history admin which shows all fields\n    as read-only.\n    \"\"\"\n\n    history_list_display = [\"Diff\"]\n\n    def Diff(self, obj):  # pylint: disable=invalid-name\n        return safe(f\"<pre>{obj.history_change_reason}</pre>\")\n\n    def get_readonly_fields(self, request, obj=None):\n        # make all fields readonly\n        readonly_fields = list(\n            set(\n                [field.name for field in self.opts.local_fields]\n                + [field.name for field in self.opts.local_many_to_many]\n            )\n        )\n        return readonly_fields\n\n    def response_change(self, request, obj):\n        super().response_change(request, obj)\n        return HttpResponseRedirect(obj.get_absolute_url())\n", "code_before": "# pylint: disable=unused-argument, no-self-use, avoid-list-comprehension\nimport difflib\n\nfrom django.db.models import signals\nfrom django.http import HttpResponseRedirect\nfrom django.template.defaultfilters import safe\nfrom django.utils.translation import gettext_lazy as _\nfrom simple_history.admin import SimpleHistoryAdmin\nfrom simple_history.models import HistoricalRecords\n\n\ndef diff_objects(old_instance, new_instance, fields):\n    \"\"\"\n    Diff two objects by examining the given fields and\n    return a string.\n    \"\"\"\n    full_diff = []\n\n    for field in fields:\n        field_diff = []\n        old_value = getattr(old_instance, field.attname)\n        new_value = getattr(new_instance, field.attname)\n        for line in difflib.unified_diff(\n            str(old_value).split(\"\\n\"),\n            str(new_value).split(\"\\n\"),\n            fromfile=field.attname,\n            tofile=field.attname,\n            lineterm=\"\",\n        ):\n            field_diff.append(line)\n        full_diff.extend(field_diff)\n\n    return \"\\n\".join(full_diff)\n\n\ndef history_email_for(instance, title):\n    \"\"\"\n    Generate the subject and email body that is sent via\n    email notifications post update!\n    \"\"\"\n    history = instance.history.latest()\n\n    subject = _(\"UPDATE: %(model_name)s #%(pk)d - %(title)s\") % {\n        \"model_name\": instance.__class__.__name__,\n        \"pk\": instance.pk,\n        \"title\": title,\n    }\n\n    body = (\n        _(\n            \"\"\"Updated on %(history_date)s\nUpdated by %(username)s\n\n%(diff)s\n\nFor more information:\n%(instance_url)s\"\"\"\n        )\n        % {\n            \"history_date\": history.history_date.strftime(\"%c\"),\n            \"username\": getattr(history.history_user, \"username\", \"\"),\n            \"diff\": history.history_change_reason,\n            \"instance_url\": instance.get_full_url(),\n        }\n    )\n    return subject, body\n\n\nclass KiwiHistoricalRecords(HistoricalRecords):\n    \"\"\"\n    This class will keep track of what fields were changed\n    inside of the ``history_change_reason`` field. This gives us\n    a crude changelog until upstream introduces their new interface.\n    \"\"\"\n\n    def pre_save(self, instance, **kwargs):\n        \"\"\"\n        Signal handlers don't have access to the previous version of\n        an object so we have to load it from the database!\n        \"\"\"\n        if kwargs.get(\"raw\", False):\n            return\n\n        if instance.pk and hasattr(instance, \"history\"):\n            instance.previous = instance.__class__.objects.filter(\n                pk=instance.pk\n            ).first()\n\n    def post_save(self, instance, created, using=None, **kwargs):\n        \"\"\"\n        Calculate the changelog and call the inherited method to\n        write the data into the database.\n        \"\"\"\n        if kwargs.get(\"raw\", False):\n            return\n\n        if hasattr(instance, \"previous\") and instance.previous:\n            # note: simple_history.utils.update_change_reason() performs an extra\n            # DB query so it is better to use the private field instead!\n            # In older simple_history version this field wasn't private but was renamed\n            # in 2.10.0 hence the pylint disable!\n            instance._change_reason = diff_objects(  # pylint: disable=protected-access\n                instance.previous, instance, self.fields_included(instance)\n            )\n        super().post_save(instance, created, using, **kwargs)\n\n    def finalize(self, sender, **kwargs):\n        \"\"\"\n        Connect the pre_save signal handler after calling the inherited method.\n        \"\"\"\n        super().finalize(sender, **kwargs)\n        signals.pre_save.connect(self.pre_save, sender=sender, weak=False)\n\n\nclass ReadOnlyHistoryAdmin(SimpleHistoryAdmin):\n    \"\"\"\n    Custom history admin which shows all fields\n    as read-only.\n    \"\"\"\n\n    history_list_display = [\"Diff\"]\n\n    def Diff(self, obj):  # pylint: disable=invalid-name\n        return safe(f\"<pre>{obj.history_change_reason}</pre>\")\n\n    def get_readonly_fields(self, request, obj=None):\n        # make all fields readonly\n        readonly_fields = list(\n            set(\n                [field.name for field in self.opts.local_fields]\n                + [field.name for field in self.opts.local_many_to_many]\n            )\n        )\n        return readonly_fields\n\n    def response_change(self, request, obj):\n        super().response_change(request, obj)\n        return HttpResponseRedirect(obj.get_absolute_url())\n", "patch": "@@ -8,6 +8,8 @@\n from simple_history.admin import SimpleHistoryAdmin\n from simple_history.models import HistoricalRecords\n \n+from tcms.core.templatetags.extra_filters import bleach_input\n+\n \n def diff_objects(old_instance, new_instance, fields):\n     \"\"\"\n@@ -20,6 +22,13 @@ def diff_objects(old_instance, new_instance, fields):\n         field_diff = []\n         old_value = getattr(old_instance, field.attname)\n         new_value = getattr(new_instance, field.attname)\n+\n+        # clean stored XSS\n+        if isinstance(old_value, str):\n+            old_value = bleach_input(old_value)\n+        if isinstance(new_value, str):\n+            new_value = bleach_input(new_value)\n+\n         for line in difflib.unified_diff(\n             str(old_value).split(\"\\n\"),\n             str(new_value).split(\"\\n\"),", "file_path": "files/2022_11/437", "file_language": "py", "file_name": "tcms/core/history.py", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 0, "llm_check": 1, "static_check": 0, "static": {"rats": [false, []], "semgrep": [false, []]}, "target": -1, "function_before": [], "function_after": []}], "outdated": 0, "cwe_descripiton": "", "cwe_consequence": "", "cwe_method": "", "cwe_solution": ""}
