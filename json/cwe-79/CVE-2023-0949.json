{"index": 10600, "cve_id": "CVE-2023-0949", "cwe_id": ["CWE-79"], "cve_language": "Python", "cve_description": "Cross-site Scripting (XSS) - Reflected in GitHub repository modoboa/modoboa prior to 2.0.5.", "cvss": "4.8", "publish_date": "February 22, 2023", "AV": "NETWORK", "AC": "NETWORK", "PR": "HIGH", "UI": "REQUIRED", "S": "CHANGED", "C": "LOW", "I": "LOW", "A": "NONE", "commit_id": "aa74e9a4a870162eea169e0a6a2eab841f8811b7", "commit_message": "Merge pull request #2797 from modoboa/fix/xss_issue_with_tags\n\nFixed XSS vulnerability", "commit_date": "2023-02-22T07:50:08Z", "project": "modoboa/modoboa", "url": "https://api.github.com/repos/modoboa/modoboa/commits/aa74e9a4a870162eea169e0a6a2eab841f8811b7", "html_url": "https://github.com/modoboa/modoboa/commit/aa74e9a4a870162eea169e0a6a2eab841f8811b7", "windows_before": [{"commit_id": "05b4a4f865c821b4d1780ac4a1f00432534abafa", "commit_date": "Tue Feb 21 18:09:13 2023 +0100", "commit_message": "Fixed XSS vulnerability", "files_name": ["modoboa/static/js/listing.js"]}, {"commit_id": "1de3b1eff08ca7b948b9f3f17d827773972765cb", "commit_date": "Tue Feb 21 17:16:01 2023 +0100", "commit_message": "log message on failed auth", "files_name": ["modoboa/core/api/v2/views.py"]}, {"commit_id": "6c7a8d2052493e5e0d353f5c867a948aeb909512", "commit_date": "Mon Feb 20 16:44:11 2023 +0100", "commit_message": "Merge pull request #2790 from modoboa/feature/add_delay_for_server_search_requests", "files_name": ["c40470660df30718555a9db89b6a0a850607f968 - Sun Feb 19 10:23:14 2023 +0100 : increase coverage, removed old workarround", "modoboa/pdfcredentials/api/v2/serializers.py", "modoboa/pdfcredentials/api/v2/tests.py", "modoboa/pdfcredentials/rfc6266.py", "modoboa/pdfcredentials/views.py"]}, {"commit_id": "88743896ce3217646861a64137ac57bca1a9233b", "commit_date": "Sun Feb 19 10:09:17 2023 +0100", "commit_message": "clear selection when fetching identities", "files_name": ["frontend/src/components/identities/IdentityList.vue"]}, {"commit_id": "696971fb802df26def96ec483c7a60ae39ac9312", "commit_date": "Sat Feb 18 16:27:05 2023 +0100", "commit_message": "Added delete action for selected ids", "files_name": ["frontend/src/components/identities/IdentityList.vue"]}, {"commit_id": "229382467b7d6ee27a4573e01f6b90d3d2ec96bc", "commit_date": "Sat Feb 18 12:41:12 2023 +0100", "commit_message": "Removed old forms.py, better UX when custom actions are availible on v2", "files_name": ["frontend/src/components/identities/IdentityList.vue", "modoboa/pdfcredentials/forms.py"]}, {"commit_id": "5b982230b57999a6d10a64ba77b5804f35f6f629", "commit_date": "Sat Feb 18 11:56:13 2023 +0100", "commit_message": "Merge branch 'pdfcredential-v2' of https://github.com/modoboa/modoboa into pdfcredential-v2", "files_name": ["29f1111ee2609291b52a0d1eb98687e1f41208b6 - Sat Feb 18 11:41:17 2023 +0100 : prevent crash if logo is not found", "modoboa/pdfcredentials/lib.py"]}, {"commit_id": "acfa666b921b86c6658208fc7b1fcb51ac620c81", "commit_date": "Sat Feb 18 11:22:27 2023 +0100", "commit_message": "simpler fail if logo is not found", "files_name": ["modoboa/pdfcredentials/documents.py", "modoboa/pdfcredentials/lib.py"]}, {"commit_id": "33e10248addef15f8c88e83f8cffea48897d7e7a", "commit_date": "Sat Feb 18 11:11:16 2023 +0100", "commit_message": "fixed tests", "files_name": ["modoboa/admin/api/v2/serializers.py", "modoboa/core/tests/test_views.py", "modoboa/lib/tests/__init__.py", "modoboa/parameters/api/v2/tests.py", "modoboa/pdfcredentials/api/v2/tests.py"]}, {"commit_id": "00a6b638418e49c476217eec096c8fb271ed204e", "commit_date": "Fri Feb 17 18:09:11 2023 +0100", "commit_message": "added pdfcredential native support", "files_name": ["frontend/src/components/identities/IdentityList.vue", "modoboa/admin/api/v2/serializers.py", "modoboa/admin/signals.py", "modoboa/core/app_settings.py", "modoboa/core/commands/templates/settings.py.tpl", "modoboa/pdfcredentials/__init__.py", "modoboa/pdfcredentials/api/v2/__init__.py", "modoboa/pdfcredentials/api/v2/handlers.py", "modoboa/pdfcredentials/api/v2/serializers.py", "modoboa/pdfcredentials/api/v2/tests.py", "modoboa/pdfcredentials/api/v2/urls.py", "modoboa/pdfcredentials/api/v2/views.py", "modoboa/pdfcredentials/app_settings.py", "modoboa/pdfcredentials/apps.py", "modoboa/pdfcredentials/constants.py", "modoboa/pdfcredentials/documents.py", "modoboa/pdfcredentials/forms.py", "modoboa/pdfcredentials/handlers.py", "modoboa/pdfcredentials/lib.py", "modoboa/pdfcredentials/locale/cs_CZ/LC_MESSAGES/django.po", "modoboa/pdfcredentials/locale/de/LC_MESSAGES/django.po", "modoboa/pdfcredentials/locale/el_GR/LC_MESSAGES/django.po", "modoboa/pdfcredentials/locale/en/LC_MESSAGES/django.po", "modoboa/pdfcredentials/locale/fr/LC_MESSAGES/django.po", "modoboa/pdfcredentials/locale/it/LC_MESSAGES/django.po", "modoboa/pdfcredentials/locale/ja_JP/LC_MESSAGES/django.po", "modoboa/pdfcredentials/locale/nl_NL/LC_MESSAGES/django.po", "modoboa/pdfcredentials/locale/pl_PL/LC_MESSAGES/django.po", "modoboa/pdfcredentials/locale/pt_BR/LC_MESSAGES/django.po", "modoboa/pdfcredentials/locale/pt_PT/LC_MESSAGES/django.po", "modoboa/pdfcredentials/locale/sv/LC_MESSAGES/django.po", "modoboa/pdfcredentials/models.py", "modoboa/pdfcredentials/rfc6266.py", "modoboa/pdfcredentials/tests.py", "modoboa/pdfcredentials/urls.py", "modoboa/pdfcredentials/views.py", "modoboa/urls.py", "modoboa/urls_api_v2.py", "requirements.txt", "test_project/test_project/settings.py"]}, {"commit_id": "0987a482fd5963d2d2acace02df775cb6740e3a5", "commit_date": "Sat Feb 18 11:41:17 2023 +0100", "commit_message": "prevent crash if logo is not found", "files_name": ["modoboa/pdfcredentials/lib.py"]}, {"commit_id": "faf718d7a0cf5a665cbbc8515cdd2b30e1439f5a", "commit_date": "Sat Feb 18 11:22:27 2023 +0100", "commit_message": "simpler fail if logo is not found", "files_name": ["modoboa/pdfcredentials/documents.py", "modoboa/pdfcredentials/lib.py"]}, {"commit_id": "ec4ac89e8e7552f474da90a8b2709b817cce92af", "commit_date": "Sat Feb 18 11:11:16 2023 +0100", "commit_message": "fixed tests", "files_name": ["modoboa/admin/api/v2/serializers.py", "modoboa/core/tests/test_views.py", "modoboa/lib/tests/__init__.py", "modoboa/parameters/api/v2/tests.py", "modoboa/pdfcredentials/api/v2/tests.py"]}, {"commit_id": "056942c82f757c018ae296c16d1b1c34d23bbbba", "commit_date": "Fri Feb 17 22:12:49 2023 +0200", "commit_message": "[IMP] Rest of Finnish translations", "files_name": ["modoboa/admin/locale/fi/LC_MESSAGES/django.po", "modoboa/admin/locale/fi/LC_MESSAGES/djangojs.po", "modoboa/dnstools/locale/fi/LC_MESSAGES/django.po", "modoboa/ldapsync/locale/fi/LC_MESSAGES/django.po", "modoboa/limits/locale/fi/LC_MESSAGES/django.po", "modoboa/locale/fi/LC_MESSAGES/django.po", "modoboa/locale/fi/LC_MESSAGES/djangojs.po", "modoboa/maillog/locale/fi/LC_MESSAGES/django.po", "modoboa/maillog/locale/fi/LC_MESSAGES/djangojs.po", "modoboa/policyd/locale/fi/LC_MESSAGES/django.po", "modoboa/relaydomains/locale/fi/LC_MESSAGES/django.po", "modoboa/relaydomains/locale/fi/LC_MESSAGES/djangojs.po", "modoboa/transport/locale/fi/LC_MESSAGES/django.po", "modoboa/transport/locale/fi/LC_MESSAGES/djangojs.po"]}, {"commit_id": "c164fc8ab495a8e8e7e9ee41dffbd98108b0a048", "commit_date": "Fri Feb 17 19:44:19 2023 +0200", "commit_message": "[IMP] Finnish translations", "files_name": ["frontend/locale/fi/LC_MESSAGES/app.po"]}, {"commit_id": "29c11593391e13bd4b347f7725f1572da51272ee", "commit_date": "Fri Feb 17 18:09:11 2023 +0100", "commit_message": "added pdfcredential native support", "files_name": ["frontend/src/components/identities/IdentityList.vue", "modoboa/admin/api/v2/serializers.py", "modoboa/admin/signals.py", "modoboa/core/app_settings.py", "modoboa/core/commands/templates/settings.py.tpl", "modoboa/pdfcredentials/__init__.py", "modoboa/pdfcredentials/api/v2/__init__.py", "modoboa/pdfcredentials/api/v2/handlers.py", "modoboa/pdfcredentials/api/v2/serializers.py", "modoboa/pdfcredentials/api/v2/tests.py", "modoboa/pdfcredentials/api/v2/urls.py", "modoboa/pdfcredentials/api/v2/views.py", "modoboa/pdfcredentials/app_settings.py", "modoboa/pdfcredentials/apps.py", "modoboa/pdfcredentials/constants.py", "modoboa/pdfcredentials/documents.py", "modoboa/pdfcredentials/forms.py", "modoboa/pdfcredentials/handlers.py", "modoboa/pdfcredentials/lib.py", "modoboa/pdfcredentials/locale/cs_CZ/LC_MESSAGES/django.po", "modoboa/pdfcredentials/locale/de/LC_MESSAGES/django.po", "modoboa/pdfcredentials/locale/el_GR/LC_MESSAGES/django.po", "modoboa/pdfcredentials/locale/en/LC_MESSAGES/django.po", "modoboa/pdfcredentials/locale/fr/LC_MESSAGES/django.po", "modoboa/pdfcredentials/locale/it/LC_MESSAGES/django.po", "modoboa/pdfcredentials/locale/ja_JP/LC_MESSAGES/django.po", "modoboa/pdfcredentials/locale/nl_NL/LC_MESSAGES/django.po", "modoboa/pdfcredentials/locale/pl_PL/LC_MESSAGES/django.po", "modoboa/pdfcredentials/locale/pt_BR/LC_MESSAGES/django.po", "modoboa/pdfcredentials/locale/pt_PT/LC_MESSAGES/django.po", "modoboa/pdfcredentials/locale/sv/LC_MESSAGES/django.po", "modoboa/pdfcredentials/models.py", "modoboa/pdfcredentials/rfc6266.py", "modoboa/pdfcredentials/tests.py", "modoboa/pdfcredentials/urls.py", "modoboa/pdfcredentials/views.py", "modoboa/urls.py", "modoboa/urls_api_v2.py", "requirements.txt", "test_project/test_project/settings.py"]}, {"commit_id": "b83639853062af594ce5525ee4d5789dc2639c16", "commit_date": "Fri Feb 17 17:30:58 2023 +0100", "commit_message": "Add delay for server search requests", "files_name": ["frontend/package.json", "frontend/src/components/alarms/AlarmList.vue", "frontend/src/components/logs/AuditTrailList.vue", "frontend/src/components/logs/MessageList.vue", "frontend/yarn.lock"]}, {"commit_id": "78d8db0ccee336a3ab0109b319d416924a7e8cf6", "commit_date": "Fri Feb 17 13:49:44 2023 +0100", "commit_message": "Merge pull request #2788 from modoboa/fix/interface_v1_fix_language_switch", "files_name": ["117037f5aa9d23d81793a24f18ed37d8217d5cad - Fri Feb 17 12:22:26 2023 +0100 : Fix return", "modoboa/core/views/user.py"]}, {"commit_id": "0424a6c88b881b7e1e7f5cafcac17f2ffaf9691b", "commit_date": "Fri Feb 17 11:20:02 2023 +0100", "commit_message": "Change middlwares order and set cookies cookies instead of using deprecated sessions for language switching", "files_name": ["doc/upgrade.rst", "modoboa/core/commands/templates/settings.py.tpl", "modoboa/core/views/auth.py", "modoboa/core/views/user.py", "test_project/test_project/settings.py"]}, {"commit_id": "63af0b6acbbf59576734575b82b786e262ef24fd", "commit_date": "Thu Feb 16 17:47:39 2023 +0100", "commit_message": "Merge pull request #2787 from modoboa/feature/compile_message_dev", "files_name": ["65e22d90236f6f1a2771a750fa4685218941c7c0 - Thu Feb 16 17:30:35 2023 +0100 : Add gettext alpine package for compiling translations + force compiling when starting the dev server", "docker-compose.yml", "docker/Dockerfile.dev"]}, {"commit_id": "881baea891bcb00d02efc63102598c8bafd98b72", "commit_date": "Thu Feb 16 17:18:36 2023 +0100", "commit_message": "Merge pull request #2784 from modoboa/feature/add_new_admin_docker_compose", "files_name": ["c983be490adb937b1893ec1a772f5ad8bbb692e6 - Thu Feb 16 16:48:29 2023 +0100 : Fix vue config when using docker", "docker-compose.yml", "frontend/vue.config.js", "test_project/test_project/settings.py"]}, {"commit_id": "3edafaa9d27f13742814ece5b6defd75ded6df3c", "commit_date": "Thu Feb 16 16:44:18 2023 +0100", "commit_message": "Merge pull request #2783 from modoboa/fix/internal_aliases_export", "files_name": ["6995159778504f402d666f50815b94278cbd255a - Thu Feb 16 16:43:56 2023 +0100 : Merge pull request #2780 from modoboa/update-frontend-doc", "47f2705b9bb7e6999f2e34fd151a7f8480777100 - Thu Feb 16 16:33:34 2023 +0100 : Merge pull request #2786 from modoboa/fix/change_password_form", "fd752e11eece95d6fc115485856ef78bc2263efc - Thu Feb 16 16:18:23 2023 +0100 : Prevent user from changing their password without the current one.", "modoboa/core/forms.py", "modoboa/core/tests/test_core.py"]}, {"commit_id": "7c5b43a9907f6939038343020f21b102c2afd903", "commit_date": "Thu Feb 16 16:12:17 2023 +0100", "commit_message": "Some cleanup + use front/api wording for containers", "files_name": [".gitignore", "docker-compose.yml"]}], "windows_after": [{"commit_id": "79235b0e7f9257fc7ed7932c31db424253f94908", "commit_date": "Wed Feb 22 12:49:29 2023 +0100", "commit_message": "add missing import for SSHA and add tests", "files_name": ["modoboa/core/password_hashers/advanced.py", "modoboa/core/tests/test_authentication.py"]}, {"commit_id": "bb20d97e8b9620c83edbbe571740d151805baffe", "commit_date": "Wed Feb 22 13:05:02 2023 +0100", "commit_message": "Merge pull request #2799 from Toniob/master", "files_name": ["1f41cb7fa523b61be5a8d8669265ed707d558403 - Wed Feb 22 17:08:51 2023 +0100 : Added transifex config file", "transifex.yml"]}, {"commit_id": "6fdbcc3bab795f2c93d541e46402392db08f367c", "commit_date": "Wed Feb 22 17:09:09 2023 +0100", "commit_message": "Merge branch 'master' of github.com:modoboa/modoboa", "files_name": ["065b838e111faaa814f0a16ff5d69f16db8f9140 - Wed Feb 22 17:15:38 2023 +0100 : Updated transifex config", "transifex.yml"]}, {"commit_id": "9163061e965eca6dbc764bec07794fd8401ba288", "commit_date": "Wed Feb 22 16:17:09 2023 +0000", "commit_message": "Apply translations in cs_CZ", "files_name": ["modoboa/admin/locale/cs_CZ/LC_MESSAGES/djangojs.po"]}, {"commit_id": "2ee88feab6045bda07c7e313b2368dba9a3afac0", "commit_date": "Wed Feb 22 16:17:10 2023 +0000", "commit_message": "Apply translations in br", "files_name": ["modoboa/admin/locale/br/LC_MESSAGES/djangojs.po"]}, {"commit_id": "3df8db9d7a761b7e7d2f36de040ecb800412cb2d", "commit_date": "Wed Feb 22 16:17:14 2023 +0000", "commit_message": "Apply translations in el_GR", "files_name": ["modoboa/admin/locale/el_GR/LC_MESSAGES/djangojs.po"]}, {"commit_id": "1561e7bce0fa8952e90afa79b890f9815a8a4260", "commit_date": "Wed Feb 22 16:17:19 2023 +0000", "commit_message": "Apply translations in de", "files_name": ["modoboa/admin/locale/de/LC_MESSAGES/djangojs.po"]}, {"commit_id": "d06a75c66dcd387cab286d9ca3bffb0f623cfed6", "commit_date": "Wed Feb 22 16:17:20 2023 +0000", "commit_message": "Apply translations in nl_NL", "files_name": ["modoboa/admin/locale/nl_NL/LC_MESSAGES/djangojs.po"]}, {"commit_id": "09b0f911794f67cb03eb0bd1141d94c76411c731", "commit_date": "Wed Feb 22 16:17:24 2023 +0000", "commit_message": "Apply translations in es", "files_name": ["modoboa/admin/locale/es/LC_MESSAGES/djangojs.po"]}, {"commit_id": "af7184d39db643d4b54d2dc7b094a6e08629d1e7", "commit_date": "Wed Feb 22 16:17:29 2023 +0000", "commit_message": "Apply translations in sv", "files_name": ["modoboa/admin/locale/sv/LC_MESSAGES/djangojs.po"]}, {"commit_id": "657c437639c3bcc28eecc8d42f6b8683b541601d", "commit_date": "Wed Feb 22 16:17:33 2023 +0000", "commit_message": "Apply translations in fr", "files_name": ["modoboa/admin/locale/fr/LC_MESSAGES/djangojs.po"]}, {"commit_id": "317f24ad802fefba088190f53d9b8ae334989329", "commit_date": "Wed Feb 22 16:17:36 2023 +0000", "commit_message": "Apply translations in pl_PL", "files_name": ["modoboa/admin/locale/pl_PL/LC_MESSAGES/djangojs.po"]}, {"commit_id": "d16cb30a66a75c5ece86f68fc3787ad98f339ee8", "commit_date": "Wed Feb 22 16:17:38 2023 +0000", "commit_message": "Apply translations in ro_RO", "files_name": ["modoboa/admin/locale/ro_RO/LC_MESSAGES/djangojs.po"]}, {"commit_id": "503a2559fdeabb1362f3beda9b29d354344655a2", "commit_date": "Wed Feb 22 16:17:39 2023 +0000", "commit_message": "Apply translations in ja_JP", "files_name": ["modoboa/admin/locale/ja_JP/LC_MESSAGES/djangojs.po"]}, {"commit_id": "bd6949ac3a93c98dc9dc30f1ed26c5924f923f26", "commit_date": "Wed Feb 22 16:17:41 2023 +0000", "commit_message": "Apply translations in pt_PT", "files_name": ["modoboa/admin/locale/pt_PT/LC_MESSAGES/djangojs.po"]}, {"commit_id": "67e48f1c4a874cacc631c7a47bb0950e249fdab3", "commit_date": "Wed Feb 22 16:17:43 2023 +0000", "commit_message": "Apply translations in ru", "files_name": ["modoboa/admin/locale/ru/LC_MESSAGES/djangojs.po"]}, {"commit_id": "0b2ad0e5dd40366fcad8dff62ad95e583dff7d87", "commit_date": "Wed Feb 22 16:17:43 2023 +0000", "commit_message": "Apply translations in pt_BR", "files_name": ["modoboa/admin/locale/pt_BR/LC_MESSAGES/djangojs.po"]}, {"commit_id": "ddafcdf7e09e78da706bc8646bbc25552d6bc6c8", "commit_date": "Wed Feb 22 16:17:48 2023 +0000", "commit_message": "Apply translations in it", "files_name": ["modoboa/admin/locale/it/LC_MESSAGES/djangojs.po"]}, {"commit_id": "686619467e9518222e480143ae0f1e85fe4d9a76", "commit_date": "Wed Feb 22 16:17:50 2023 +0000", "commit_message": "Apply translations in tr_TR", "files_name": ["modoboa/admin/locale/tr_TR/LC_MESSAGES/djangojs.po"]}, {"commit_id": "bdee2829331b2c24e45a600c7ddaca9658ccf222", "commit_date": "Wed Feb 22 16:17:52 2023 +0000", "commit_message": "Apply translations in zh_TW", "files_name": ["modoboa/admin/locale/zh_TW/LC_MESSAGES/djangojs.po"]}, {"commit_id": "8d044386e9517523d20ce080046e5b138d24dbd5", "commit_date": "Wed Feb 22 16:17:58 2023 +0000", "commit_message": "Apply translations in pl_PL", "files_name": ["modoboa/admin/locale/pl_PL/LC_MESSAGES/django.po"]}, {"commit_id": "1903ad57632223207088457ececafb43d299adfe", "commit_date": "Wed Feb 22 16:18:01 2023 +0000", "commit_message": "Apply translations in ro_RO", "files_name": ["modoboa/admin/locale/ro_RO/LC_MESSAGES/django.po"]}, {"commit_id": "ee0e091f67bc553f5970e301cad27f3e320ca027", "commit_date": "Wed Feb 22 17:32:25 2023 +0100", "commit_message": "Updated transifex config", "files_name": ["transifex.yml"]}, {"commit_id": "e9de9d771ad51f4398bba3aedd286207d735528d", "commit_date": "Wed Feb 22 18:13:06 2023 +0100", "commit_message": "Dot not trigger workflows when translations are updated", "files_name": [".github/workflows/modoboa.yml"]}, {"commit_id": "f8b4b1d4df457ea280b884af12b33c09dab2248d", "commit_date": "Wed Feb 22 18:14:49 2023 +0100", "commit_message": "Merge pull request #2800 from modoboa/translations_85c8545412ad7a48d02077128ccd5226_cs_CZ", "files_name": ["9e1a4e6244c0f447ceda6d5f1215cf044cd0d313 - Wed Feb 22 18:15:41 2023 +0100 : Merge pull request #2801 from modoboa/translations_85c8545412ad7a48d02077128ccd5226_br", "946e8d8451b2b25d40b6a5e816427916a4023ced - Wed Feb 22 18:19:33 2023 +0100 : Added mergify rule for transifex", ".mergify.yml"]}, {"commit_id": "8511fae74b11151587a714c076572f3032492fbe", "commit_date": "Wed Feb 22 18:20:15 2023 +0100", "commit_message": "Merge branch 'master' of github.com:modoboa/modoboa", "files_name": ["89103ab5dd0ee890112d32868ac49f2d535cdf2a - Wed Feb 22 18:21:53 2023 +0100 : Merge pull request #2818 from modoboa/translations_b6b0b4fdbbfb39a4a928f6bc3b038b70_ro_RO", "f83e1b257cf1677a8faaf2fead89e2364e4b69b8 - Wed Feb 22 18:23:00 2023 +0100 : Updated mergify config", ".mergify.yml"]}, {"commit_id": "7a1b2ef190d8d0bbc02e7684e7d805d8ac07318b", "commit_date": "Wed Feb 22 18:23:15 2023 +0100", "commit_message": "Merge branch 'master' of github.com:modoboa/modoboa", "files_name": ["8435759c72b63828a4455a345e1e41a69cf21f1e - Wed Feb 22 17:24:14 2023 +0000 : Merge branch 'master' into translations_85c8545412ad7a48d02077128ccd5226_el_GR", "1a7b39effc0befcdbb6631748018611cb4ce10c5 - Wed Feb 22 18:25:19 2023 +0100 : Merge pull request #2802 from modoboa/translations_85c8545412ad7a48d02077128ccd5226_el_GR", "884473a7a7c3aaf98febe8bd73a3730e2e4ce440 - Wed Feb 22 18:25:36 2023 +0100 : Merge pull request #2803 from modoboa/translations_85c8545412ad7a48d02077128ccd5226_de", "ce38de25f63954ca52916984b8bbf1b2a48ec911 - Wed Feb 22 18:25:52 2023 +0100 : Merge pull request #2804 from modoboa/translations_85c8545412ad7a48d02077128ccd5226_nl_NL", "fe1dda5687b4e9fd55da150b6716607756fed7aa - Wed Feb 22 18:26:11 2023 +0100 : Merge pull request #2805 from modoboa/translations_85c8545412ad7a48d02077128ccd5226_es", "18275fa698526d06c642a2647f2273190e08f418 - Wed Feb 22 18:26:25 2023 +0100 : Merge pull request #2806 from modoboa/translations_85c8545412ad7a48d02077128ccd5226_sv", "f4a0fbd95c0057001bd811b00386260119bcab16 - Wed Feb 22 18:26:45 2023 +0100 : Merge pull request #2807 from modoboa/translations_85c8545412ad7a48d02077128ccd5226_fr", "2a5e0806b773d0802850a04bf765f1a7bb85eb26 - Wed Feb 22 18:27:29 2023 +0100 : Merge pull request #2808 from modoboa/translations_85c8545412ad7a48d02077128ccd5226_pl_PL", "9b8232bff33027e0878cd1f8cce1c4442024081a - Wed Feb 22 18:27:43 2023 +0100 : Merge pull request #2809 from modoboa/translations_85c8545412ad7a48d02077128ccd5226_ro_RO", "fcdca5786704236badf521b2a73f57387fd9dea0 - Wed Feb 22 18:27:57 2023 +0100 : Merge pull request #2810 from modoboa/translations_85c8545412ad7a48d02077128ccd5226_ja_JP", "a8f613bb36dc52a448ab2cdbb091f252e6e72037 - Wed Feb 22 18:28:10 2023 +0100 : Merge pull request #2811 from modoboa/translations_85c8545412ad7a48d02077128ccd5226_pt_PT", "e04c4271828f52a4ccd722b2de25d1f31d3cb090 - Wed Feb 22 18:28:24 2023 +0100 : Merge pull request #2812 from modoboa/translations_85c8545412ad7a48d02077128ccd5226_ru", "a8d3a1bb35488a610c9b31920be21c89163a0ee9 - Wed Feb 22 18:28:39 2023 +0100 : Merge pull request #2813 from modoboa/translations_85c8545412ad7a48d02077128ccd5226_pt_BR", "e08aa9cc49dc2081e4e362927c8ec568f478239e - Wed Feb 22 18:28:53 2023 +0100 : Merge pull request #2814 from modoboa/translations_85c8545412ad7a48d02077128ccd5226_it", "fee9ee315542d47af77bb1f0ba47a612bc5f09b8 - Wed Feb 22 18:29:04 2023 +0100 : Merge pull request #2815 from modoboa/translations_85c8545412ad7a48d02077128ccd5226_tr_TR", "697700fa0b9007f47d0b5d3aac52286dbb064163 - Wed Feb 22 18:29:17 2023 +0100 : Merge pull request #2816 from modoboa/translations_85c8545412ad7a48d02077128ccd5226_zh_TW", "683777d3437ae440f1c7db01e3fcc34272ea240e - Wed Feb 22 18:29:29 2023 +0100 : Merge pull request #2817 from modoboa/translations_b6b0b4fdbbfb39a4a928f6bc3b038b70_pl_PL", "2568aeb3b3ffff7bc4c5aec1eab14d4f87f5fb6e - Wed Feb 22 18:39:39 2023 +0100 : Updated transifex config", "transifex.yml"]}, {"commit_id": "53313b94d3e700dc50013f0a731621367f73c352", "commit_date": "Wed Feb 22 17:41:34 2023 +0000", "commit_message": "Apply translations in pt_PT", "files_name": ["modoboa/relaydomains/locale/pt_PT/LC_MESSAGES/djangojs.po"]}, {"commit_id": "292587673b3f2e49314a274535bbff52ea860a60", "commit_date": "Wed Feb 22 17:41:35 2023 +0000", "commit_message": "Apply translations in fr", "files_name": ["modoboa/dnstools/locale/fr/LC_MESSAGES/django.po"]}, {"commit_id": "beee293270894ea7027c8e19c1e6e7faddacbd1a", "commit_date": "Wed Feb 22 18:52:03 2023 +0100", "commit_message": "Merge pull request #2819 from modoboa/translations_9306ed4e27586b1a2e1f0dc145e10160_pt_PT", "files_name": ["cccdb65755a4c6af19554ba01bdaa504a2d0588c - Wed Feb 22 18:52:16 2023 +0100 : Merge pull request #2820 from modoboa/translations_e4a7968d0651f4861a41e8dbd514d1f7_fr", "c94b50e931c178e3721d5c777d8e47dc8a59203d - Wed Feb 22 18:53:16 2023 +0100 : Updated admin translations", "modoboa/admin/locale/br/LC_MESSAGES/django.po", "modoboa/admin/locale/br/LC_MESSAGES/djangojs.po", "modoboa/admin/locale/cs_CZ/LC_MESSAGES/django.po", "modoboa/admin/locale/cs_CZ/LC_MESSAGES/djangojs.po", "modoboa/admin/locale/de/LC_MESSAGES/django.po", "modoboa/admin/locale/de/LC_MESSAGES/djangojs.po", "modoboa/admin/locale/el_GR/LC_MESSAGES/django.po", "modoboa/admin/locale/el_GR/LC_MESSAGES/djangojs.po", "modoboa/admin/locale/en/LC_MESSAGES/django.po", "modoboa/admin/locale/en/LC_MESSAGES/djangojs.po", "modoboa/admin/locale/es/LC_MESSAGES/django.po", "modoboa/admin/locale/es/LC_MESSAGES/djangojs.po", "modoboa/admin/locale/fr/LC_MESSAGES/django.po", "modoboa/admin/locale/fr/LC_MESSAGES/djangojs.po", "modoboa/admin/locale/it/LC_MESSAGES/django.po", "modoboa/admin/locale/it/LC_MESSAGES/djangojs.po", "modoboa/admin/locale/ja_JP/LC_MESSAGES/django.po", "modoboa/admin/locale/ja_JP/LC_MESSAGES/djangojs.po", "modoboa/admin/locale/nl_NL/LC_MESSAGES/django.po", "modoboa/admin/locale/nl_NL/LC_MESSAGES/djangojs.po", "modoboa/admin/locale/pl_PL/LC_MESSAGES/django.po", "modoboa/admin/locale/pl_PL/LC_MESSAGES/djangojs.po", "modoboa/admin/locale/pt_BR/LC_MESSAGES/django.po", "modoboa/admin/locale/pt_BR/LC_MESSAGES/djangojs.po", "modoboa/admin/locale/pt_PT/LC_MESSAGES/django.po", "modoboa/admin/locale/pt_PT/LC_MESSAGES/djangojs.po", "modoboa/admin/locale/ro_RO/LC_MESSAGES/django.po", "modoboa/admin/locale/ro_RO/LC_MESSAGES/djangojs.po", "modoboa/admin/locale/ru/LC_MESSAGES/django.po", "modoboa/admin/locale/ru/LC_MESSAGES/djangojs.po", "modoboa/admin/locale/sv/LC_MESSAGES/django.po", "modoboa/admin/locale/sv/LC_MESSAGES/djangojs.po", "modoboa/admin/locale/tr_TR/LC_MESSAGES/django.po", "modoboa/admin/locale/tr_TR/LC_MESSAGES/djangojs.po", "modoboa/admin/locale/zh_TW/LC_MESSAGES/django.po", "modoboa/admin/locale/zh_TW/LC_MESSAGES/djangojs.po"]}, {"commit_id": "a09dda9888649ba065e0b32573fb9841e3134671", "commit_date": "Wed Feb 22 18:02:10 2023 +0000", "commit_message": "Apply translations in fr", "files_name": ["modoboa/admin/locale/fr/LC_MESSAGES/django.po"]}, {"commit_id": "1d664ef08ca4825707d3d6768a0340d351c01232", "commit_date": "Wed Feb 22 18:03:00 2023 +0000", "commit_message": "Apply translations in fr", "files_name": ["modoboa/admin/locale/fr/LC_MESSAGES/djangojs.po"]}, {"commit_id": "f2efdc1c42b46fcdc0570b4b90028fd31aee5a6a", "commit_date": "Wed Feb 22 19:03:43 2023 +0100", "commit_message": "Merge pull request #2821 from modoboa/translations_b6b0b4fdbbfb39a4a928f6bc3b038b70_fr", "files_name": ["881a955cfb126b7aed077acd94be21190e679572 - Wed Feb 22 19:03:55 2023 +0100 : Merge pull request #2822 from modoboa/translations_85c8545412ad7a48d02077128ccd5226_fr", "6cbd13173af4957186f949f2ce6bae87b8767a43 - Wed Feb 22 19:26:10 2023 +0100 : Added frontend translations to Transifex", ".github/workflows/modoboa.yml", "frontend/locale/en/LC_MESSAGES/app.po", "frontend/locale/fr/LC_MESSAGES/app.po", "transifex.yml"]}, {"commit_id": "285f4d8c4473e415808a1e66b06239759edd82f2", "commit_date": "Wed Feb 22 19:26:29 2023 +0100", "commit_message": "Merge branch 'master' of github.com:modoboa/modoboa", "files_name": ["7a57c1db00d4208ad9bb96cf9d2cd15d4a3ed968 - Wed Feb 22 19:30:00 2023 +0100 : Merge pull request #2792 from ossimantylahti/master", "fa19125e341235f3bbfaa8eb1c7c8b91cbbffe8f - Wed Feb 22 19:34:59 2023 +0100 : Added finnish translation", "modoboa/core/constants.py"]}, {"commit_id": "5d9f48a76999bb45927a025d6b88f07b400f826e", "commit_date": "Wed Feb 22 19:00:41 2023 +0000", "commit_message": "Apply translations in fr", "files_name": ["modoboa/maillog/locale/fr/LC_MESSAGES/django.po"]}, {"commit_id": "8bfe2c1916fa95a1f281a851d3ad6b5ca30cc784", "commit_date": "Wed Feb 22 20:02:01 2023 +0100", "commit_message": "Merge pull request #2823 from modoboa/translations_45ef08137f7ee2fc8e914c6256635a16_fr", "files_name": ["1a8b8377a2c07f2ee986e7bd4d4949960fd1d309 - Wed Feb 22 19:44:17 2023 +0000 : Apply translations in nl_NL", "modoboa/locale/nl_NL/LC_MESSAGES/djangojs.po"]}, {"commit_id": "de64386b34c177da370a1230886a3fb7ad3afd9f", "commit_date": "Wed Feb 22 20:13:26 2023 +0000", "commit_message": "Apply translations in nl_NL", "files_name": ["modoboa/admin/locale/nl_NL/LC_MESSAGES/django.po"]}, {"commit_id": "cec27ab699b8fd38910cc1138d05140a0488f6b3", "commit_date": "Wed Feb 22 20:14:45 2023 +0000", "commit_message": "Apply translations in nl_NL", "files_name": ["modoboa/admin/locale/nl_NL/LC_MESSAGES/djangojs.po"]}, {"commit_id": "2b0c679d4d58be29ae23a232291be5c77907de6c", "commit_date": "Wed Feb 22 20:24:27 2023 +0000", "commit_message": "Apply translations in nl_NL", "files_name": ["modoboa/dnstools/locale/nl_NL/LC_MESSAGES/django.po"]}, {"commit_id": "584973989a463914ee89c0f7fd44cc511933d78a", "commit_date": "Wed Feb 22 21:50:51 2023 +0100", "commit_message": "Merge pull request #2824 from modoboa/translations_4a510eeff6e480919e943d31202948bd_nl_NL", "files_name": ["f2f71f41dccbe6c0cfe6d008094cfe5c17eb69ab - Wed Feb 22 21:51:09 2023 +0100 : Merge pull request #2876 from modoboa/translations_b6b0b4fdbbfb39a4a928f6bc3b038b70_nl_NL", "a810203b1085b4f9c5915af6cf3f384b4c484676 - Wed Feb 22 21:51:22 2023 +0100 : Merge pull request #2878 from modoboa/translations_85c8545412ad7a48d02077128ccd5226_nl_NL", "75ee32f7237a89721a182dfd77a0e78a0bb10c18 - Wed Feb 22 21:51:36 2023 +0100 : Merge pull request #2879 from modoboa/translations_e4a7968d0651f4861a41e8dbd514d1f7_nl_NL", "70b3b5d05db00a52c0abeadf52789ab547e26017 - Thu Feb 23 08:06:08 2023 +0000 : Apply translations in sv", "modoboa/admin/locale/sv/LC_MESSAGES/djangojs.po"]}, {"commit_id": "bb829e64ebedec922423026f3bdb1d98dc692a50", "commit_date": "Thu Feb 23 09:17:47 2023 +0100", "commit_message": "Merge pull request #2880 from modoboa/translations_85c8545412ad7a48d02077128ccd5226_sv", "files_name": []}], "parents": [{"commit_id_before": "b0c4528ce636f89e7a961aa27ba328135cf8cde4", "url_before": "https://api.github.com/repos/modoboa/modoboa/commits/b0c4528ce636f89e7a961aa27ba328135cf8cde4", "html_url_before": "https://github.com/modoboa/modoboa/commit/b0c4528ce636f89e7a961aa27ba328135cf8cde4"}, {"commit_id_before": "05b4a4f865c821b4d1780ac4a1f00432534abafa", "url_before": "https://api.github.com/repos/modoboa/modoboa/commits/05b4a4f865c821b4d1780ac4a1f00432534abafa", "html_url_before": "https://github.com/modoboa/modoboa/commit/05b4a4f865c821b4d1780ac4a1f00432534abafa"}], "details": [{"raw_url": "https://github.com/modoboa/modoboa/raw/aa74e9a4a870162eea169e0a6a2eab841f8811b7/modoboa%2Fstatic%2Fjs%2Flisting.js", "code": "/**\n * Return an instance of Listing.\n *\n * @constructor\n * @param {Object} options - instance options\n */\nvar Listing = function(options) {\n    this.initialize(options);\n};\n\nListing.prototype = {\n    constructor: Listing,\n\n    listing_defaults: {\n        sortable_selector: '.sortable',\n        with_searchform: true,\n        load_page_url: null,\n        navigation_params: [\"sort_order\", \"searchquery\"],\n        scroll_container: null,\n        main_table_id: \"objects_table\",\n        eor_message: gettext(\"No more entry to show\")\n    },\n\n    initialize: function(options) {\n        this.options = $.extend({}, this.listing_defaults, options);\n        this.tag_handlers = {};\n        this.navobj = new History(this.options);\n        $(document).on(\"click\", \"a.filter\", $.proxy(this.filter_by_tag, this));\n        if (this.options.with_searchform) {\n            this.init_searchform();\n        }\n    },\n\n    /**\n     * Initialize the search form.\n     */\n    init_searchform: function() {\n        $(\"#searchquery\").focus(function() {\n            $(this).val(\"\");\n        }).blur($.proxy(function(e) {\n            var $this = $(e.target);\n            if ($this.val() === \"\") {\n                if (this.navobj.getparam(\"searchquery\")) {\n                    $this.val(this.navobj.getparam(\"searchquery\"));\n                } else {\n                    $this.val(gettext(\"Search\"));\n                }\n            }\n        }, this));\n        if (this.navobj.getparam(\"searchquery\") !== undefined) {\n            $(\"#searchquery\").val(this.navobj.getparam(\"searchquery\"));\n        }\n        $(\"#searchform\").submit($.proxy(this.do_search, this));\n    },\n\n    /**\n     * Apply the current search pattern.\n     */\n    do_search: function(e) {\n        e.preventDefault();\n        var squery = $(\"#searchquery\").val();\n        if (squery !== \"\") {\n            this.navobj.setparam(\"searchquery\", squery);\n        } else {\n            this.navobj.delparam(\"searchquery\");\n        }\n        this.navobj.update();\n    },\n\n\n    load_page: function(e) {\n        var $link = get_target(e, \"a\");\n        e.preventDefault();\n        this.navobj.updateparams($link.attr(\"href\")).update();\n    },\n\n    /**\n     * Return extra arguments used to fetch a page.\n     *\n     * @this Listing\n     */\n    get_load_page_args: function() {\n        var $this = this;\n        var args = {};\n\n        $.each(this.options.navigation_params, function(pos, param) {\n            if ($this.navobj.hasparam(param)) {\n                args[param] = $this.navobj.getparam(param);\n            }\n        });\n        return args;\n    },\n\n    /**\n     * Calculate the bottom position of the scroll container.\n     *\n     * @param {Object} $element - scroll container object\n     */\n    calculate_bottom: function($element) {\n        var $last_row = $(\"#\" + this.options.main_table_id)\n            .find(\"tr\").last();\n        return $last_row.offset().top - $element.height();\n    },\n\n    /**\n     * A new page has been received, inject it.\n     *\n     * @param {Object} data - page content\n     * @param {string} direction - scroll direction (up or down)\n     */\n    add_new_page: function(data, direction) {\n        var $container = $(\"#{0} tbody\".format(this.options.main_table_id));\n\n        if (direction == \"down\") {\n            $container.html(function(pos, oldhtml) {\n                return oldhtml + data.rows;\n            });\n        } else {\n            $container.html(function(pos, oldhtml) {\n                return data.rows + oldhtml;\n            });\n        }\n    },\n\n    /**\n     * Callback called when no more page can be loaded.\n     *\n     * @this Listing\n     */\n    end_of_list_reached: function(element) {\n        $(\"#\" + this.options.main_table_id).after(\n            $(\"<div id='eor_message' class='alert alert-info text-center'>{0}</div>\".format(\n                this.options.eor_message\n            ))\n        );\n    },\n\n    /**\n     * Update the listing with the received data.\n     *\n     * @this Listing\n     * @param {Object} data - new content\n     */\n    update_listing: function(data, with_infinite_scroll) {\n        var $this = this;\n        var $scroll_container = (this.options.scroll_container) ?\n            $(this.options.scroll_container) : $(window);\n\n        $scroll_container.scrollTop(0);\n        if (with_infinite_scroll || with_infinite_scroll === undefined) {\n            if ($scroll_container.data(\"infinite-scroll\") !== undefined) {\n                $scroll_container.infinite_scroll(\"reset_loaded_pages\", data.pages);\n                $scroll_container.infinite_scroll(\"resume\");\n                $(\"#eor_message\").remove();\n            } else {\n                $scroll_container.infinite_scroll({\n                    initial_pages: data.pages,\n                    url: this.options.load_page_url,\n                    get_args: $.proxy(this.get_load_page_args, this),\n                    calculate_bottom: $.proxy(this.calculate_bottom, this),\n                    process_results: $.proxy(this.add_new_page, this),\n                    end_of_list_reached: $.proxy(this.end_of_list_reached, this)\n                });\n            }\n        } else if ($scroll_container.data(\"infinite-scroll\") !== undefined) {\n            $scroll_container.infinite_scroll(\"pause\");\n        }\n\n        var $sortables = $(this.options.sortable_selector);\n        if ($sortables.length) {\n            $(this.options.sortable_selector).sortable({\n                onSortOrderChange: $.proxy(this.change_sort_order, this)\n            });\n            this.set_sort_order();\n        }\n    },\n\n    /**\n     * Set current sort order.\n     *\n     * @this Listing\n     */\n    set_sort_order: function() {\n        var sort_order = this.navobj.getparam(\"sort_order\");\n        var sort_dir;\n\n        if (!sort_order) {\n            return;\n        }\n        if (sort_order[0] == '-') {\n            sort_dir = \"desc\";\n            sort_order = sort_order.substr(1);\n        } else {\n            sort_dir = 'asc';\n        }\n        $(\"th[data-sort_order=\" + sort_order + \"]\").sortable('select', sort_dir);\n    },\n\n    /**\n     * Change current sort order.\n     *\n     * @this Listing\n     */\n    change_sort_order: function(sort_order, dir) {\n        if (dir == \"desc\") {\n            sort_order = \"-\" + sort_order;\n        }\n        this.navobj.setparam(\"sort_order\", sort_order).update();\n    },\n\n    /**\n     * Register a new tag handler.\n     *\n     * @this Listing\n     * @param {string} name - name of the tag\n     * @param {function} handler - reference to a function (optional)\n     */\n    register_tag_handler: function(name, handler) {\n        if (handler === undefined) {\n            handler = this.generic_tag_handler;\n        }\n        this.tag_handlers[name] = handler;\n        if (this.navobj.getparam(name + \"filter\") !== undefined) {\n            var text = this.navobj.getparam(name + \"filter\");\n            $(\"#taglist\").append(this.make_tag(text, name));\n        }\n    },\n\n    /**\n     * Default tag handler.\n     *\n     * @this Listing\n     * @param {string} tag - name of the tag\n     * @param {Object} $link - tag that was clicked\n     * @return {boolean} - return true if handler has been executed\n     */\n    generic_tag_handler: function(tag, $link) {\n        if (this.navobj.getparam(tag + \"filter\") === undefined && $link.hasClass(tag)) {\n            var text = $link.attr(\"name\");\n            this.navobj.setparam(tag + \"filter\", text).update();\n            $(\"#taglist\").append(this.make_tag(text, tag));\n            return true;\n        }\n        return false;\n    },\n\n    /**\n     * Build a button to remove a specific filter.\n     *\n     * @this Listing\n     * @param {string} text - text of the button\n     * @param {string} type - tag type\n     * @return {Object} - new button object\n     */\n    make_tag: function(text, type) {\n        var $tag = $(\"<a />\", {\n            \"name\": type, \"class\" : \"btn btn-default btn-xs\",\n            \"html\": \" \" + htmlEncode(text)\n        });\n\n        $(\"<span />\", {\"class\" : \"fa fa-remove\"}).prependTo($tag);\n        $tag.click($.proxy(this.remove_tag, this));\n        return $tag;\n    },\n\n    /**\n     * Click event : remove a tag button.\n     *\n     * @this Listing\n     * @param {Object} e - event object\n     */\n    remove_tag: function(e) {\n        var $tag = $(e.target);\n\n        if ($tag.is(\"i\")) {\n            $tag = $tag.parent();\n        }\n        e.preventDefault();\n        this.navobj.delparam($tag.attr(\"name\") + \"filter\").update();\n        $tag.remove();\n    },\n\n    /**\n     * Click event: filter the listing when a tag is clicked.\n     *\n     * @this Listing\n     * @param {Object} e - event object\n     */\n    filter_by_tag: function(e) {\n        var $link = $(e.target);\n        e.preventDefault();\n\n        for (var name in this.tag_handlers) {\n            if (this.tag_handlers[name].apply(this, [name, $link])) {\n                break;\n            }\n        }\n    }\n};\n", "code_before": "/**\n * Return an instance of Listing.\n *\n * @constructor\n * @param {Object} options - instance options\n */\nvar Listing = function(options) {\n    this.initialize(options);\n};\n\nListing.prototype = {\n    constructor: Listing,\n\n    listing_defaults: {\n        sortable_selector: '.sortable',\n        with_searchform: true,\n        load_page_url: null,\n        navigation_params: [\"sort_order\", \"searchquery\"],\n        scroll_container: null,\n        main_table_id: \"objects_table\",\n        eor_message: gettext(\"No more entry to show\")\n    },\n\n    initialize: function(options) {\n        this.options = $.extend({}, this.listing_defaults, options);\n        this.tag_handlers = {};\n        this.navobj = new History(this.options);\n        $(document).on(\"click\", \"a.filter\", $.proxy(this.filter_by_tag, this));\n        if (this.options.with_searchform) {\n            this.init_searchform();\n        }\n    },\n\n    /**\n     * Initialize the search form.\n     */\n    init_searchform: function() {\n        $(\"#searchquery\").focus(function() {\n            $(this).val(\"\");\n        }).blur($.proxy(function(e) {\n            var $this = $(e.target);\n            if ($this.val() === \"\") {\n                if (this.navobj.getparam(\"searchquery\")) {\n                    $this.val(this.navobj.getparam(\"searchquery\"));\n                } else {\n                    $this.val(gettext(\"Search\"));\n                }\n            }\n        }, this));\n        if (this.navobj.getparam(\"searchquery\") !== undefined) {\n            $(\"#searchquery\").val(this.navobj.getparam(\"searchquery\"));\n        }\n        $(\"#searchform\").submit($.proxy(this.do_search, this));\n    },\n\n    /**\n     * Apply the current search pattern.\n     */\n    do_search: function(e) {\n        e.preventDefault();\n        var squery = $(\"#searchquery\").val();\n        if (squery !== \"\") {\n            this.navobj.setparam(\"searchquery\", squery);\n        } else {\n            this.navobj.delparam(\"searchquery\");\n        }\n        this.navobj.update();\n    },\n\n\n    load_page: function(e) {\n        var $link = get_target(e, \"a\");\n        e.preventDefault();\n        this.navobj.updateparams($link.attr(\"href\")).update();\n    },\n\n    /**\n     * Return extra arguments used to fetch a page.\n     *\n     * @this Listing\n     */\n    get_load_page_args: function() {\n        var $this = this;\n        var args = {};\n\n        $.each(this.options.navigation_params, function(pos, param) {\n            if ($this.navobj.hasparam(param)) {\n                args[param] = $this.navobj.getparam(param);\n            }\n        });\n        return args;\n    },\n\n    /**\n     * Calculate the bottom position of the scroll container.\n     *\n     * @param {Object} $element - scroll container object\n     */\n    calculate_bottom: function($element) {\n        var $last_row = $(\"#\" + this.options.main_table_id)\n            .find(\"tr\").last();\n        return $last_row.offset().top - $element.height();\n    },\n\n    /**\n     * A new page has been received, inject it.\n     *\n     * @param {Object} data - page content\n     * @param {string} direction - scroll direction (up or down)\n     */\n    add_new_page: function(data, direction) {\n        var $container = $(\"#{0} tbody\".format(this.options.main_table_id));\n\n        if (direction == \"down\") {\n            $container.html(function(pos, oldhtml) {\n                return oldhtml + data.rows;\n            });\n        } else {\n            $container.html(function(pos, oldhtml) {\n                return data.rows + oldhtml;\n            });\n        }\n    },\n\n    /**\n     * Callback called when no more page can be loaded.\n     *\n     * @this Listing\n     */\n    end_of_list_reached: function(element) {\n        $(\"#\" + this.options.main_table_id).after(\n            $(\"<div id='eor_message' class='alert alert-info text-center'>{0}</div>\".format(\n                this.options.eor_message\n            ))\n        );\n    },\n\n    /**\n     * Update the listing with the received data.\n     *\n     * @this Listing\n     * @param {Object} data - new content\n     */\n    update_listing: function(data, with_infinite_scroll) {\n        var $this = this;\n        var $scroll_container = (this.options.scroll_container) ?\n            $(this.options.scroll_container) : $(window);\n\n        $scroll_container.scrollTop(0);\n        if (with_infinite_scroll || with_infinite_scroll === undefined) {\n            if ($scroll_container.data(\"infinite-scroll\") !== undefined) {\n                $scroll_container.infinite_scroll(\"reset_loaded_pages\", data.pages);\n                $scroll_container.infinite_scroll(\"resume\");\n                $(\"#eor_message\").remove();\n            } else {\n                $scroll_container.infinite_scroll({\n                    initial_pages: data.pages,\n                    url: this.options.load_page_url,\n                    get_args: $.proxy(this.get_load_page_args, this),\n                    calculate_bottom: $.proxy(this.calculate_bottom, this),\n                    process_results: $.proxy(this.add_new_page, this),\n                    end_of_list_reached: $.proxy(this.end_of_list_reached, this)\n                });\n            }\n        } else if ($scroll_container.data(\"infinite-scroll\") !== undefined) {\n            $scroll_container.infinite_scroll(\"pause\");\n        }\n\n        var $sortables = $(this.options.sortable_selector);\n        if ($sortables.length) {\n            $(this.options.sortable_selector).sortable({\n                onSortOrderChange: $.proxy(this.change_sort_order, this)\n            });\n            this.set_sort_order();\n        }\n    },\n\n    /**\n     * Set current sort order.\n     *\n     * @this Listing\n     */\n    set_sort_order: function() {\n        var sort_order = this.navobj.getparam(\"sort_order\");\n        var sort_dir;\n\n        if (!sort_order) {\n            return;\n        }\n        if (sort_order[0] == '-') {\n            sort_dir = \"desc\";\n            sort_order = sort_order.substr(1);\n        } else {\n            sort_dir = 'asc';\n        }\n        $(\"th[data-sort_order=\" + sort_order + \"]\").sortable('select', sort_dir);\n    },\n\n    /**\n     * Change current sort order.\n     *\n     * @this Listing\n     */\n    change_sort_order: function(sort_order, dir) {\n        if (dir == \"desc\") {\n            sort_order = \"-\" + sort_order;\n        }\n        this.navobj.setparam(\"sort_order\", sort_order).update();\n    },\n\n    /**\n     * Register a new tag handler.\n     *\n     * @this Listing\n     * @param {string} name - name of the tag\n     * @param {function} handler - reference to a function (optional)\n     */\n    register_tag_handler: function(name, handler) {\n        if (handler === undefined) {\n            handler = this.generic_tag_handler;\n        }\n        this.tag_handlers[name] = handler;\n        if (this.navobj.getparam(name + \"filter\") !== undefined) {\n            var text = this.navobj.getparam(name + \"filter\");\n            $(\"#taglist\").append(this.make_tag(text, name));\n        }\n    },\n\n    /**\n     * Default tag handler.\n     *\n     * @this Listing\n     * @param {string} tag - name of the tag\n     * @param {Object} $link - tag that was clicked\n     * @return {boolean} - return true if handler has been executed\n     */\n    generic_tag_handler: function(tag, $link) {\n        if (this.navobj.getparam(tag + \"filter\") === undefined && $link.hasClass(tag)) {\n            var text = $link.attr(\"name\");\n            this.navobj.setparam(tag + \"filter\", text).update();\n            $(\"#taglist\").append(this.make_tag(text, tag));\n            return true;\n        }\n        return false;\n    },\n\n    /**\n     * Build a button to remove a specific filter.\n     *\n     * @this Listing\n     * @param {string} text - text of the button\n     * @param {string} type - tag type\n     * @return {Object} - new button object\n     */\n    make_tag: function(text, type) {\n        var $tag = $(\"<a />\", {\n            \"name\": type, \"class\" : \"btn btn-default btn-xs\",\n            \"html\": \" \" + htmlEncode(text)\n        });\n\n        $(\"<span />\", {\"class\" : \"fa fa-remove\"}).prependTo($tag);\n        $tag.click($.proxy(this.remove_tag, this));\n        return $tag;\n    },\n\n    /**\n     * Click event : remove a tag button.\n     *\n     * @this Listing\n     * @param {Object} e - event object\n     */\n    remove_tag: function(e) {\n        var $tag = $(e.target);\n\n        if ($tag.is(\"i\")) {\n            $tag = $tag.parent();\n        }\n        e.preventDefault();\n        this.navobj.delparam($tag.attr(\"name\") + \"filter\").update();\n        $tag.remove();\n    },\n\n    /**\n     * Click event: filter the listing when a tag is clicked.\n     *\n     * @this Listing\n     * @param {Object} e - event object\n     */\n    filter_by_tag: function(e) {\n        var $link = $(e.target);\n        e.preventDefault();\n\n        for (var name in this.tag_handlers) {\n            if (this.tag_handlers[name].apply(this, [name, $link])) {\n                break;\n            }\n        }\n    }\n};\n", "patch": "@@ -255,9 +255,9 @@ Listing.prototype = {\n     make_tag: function(text, type) {\n         var $tag = $(\"<a />\", {\n             \"name\": type, \"class\" : \"btn btn-default btn-xs\",\n-            \"html\": \" \" + text\n+            \"html\": \" \" + htmlEncode(text)\n         });\n-        \n+\n         $(\"<span />\", {\"class\" : \"fa fa-remove\"}).prependTo($tag);\n         $tag.click($.proxy(this.remove_tag, this));\n         return $tag;", "file_path": "files/2023_2/577", "file_language": "js", "file_name": "modoboa/static/js/listing.js", "outdated_file_modify": 0, "outdated_file_before": 1, "outdated_file_after": 0}], "outdated": 0, "cwe_descripiton": "", "cwe_consequence": "", "cwe_method": "", "cwe_solution": ""}
