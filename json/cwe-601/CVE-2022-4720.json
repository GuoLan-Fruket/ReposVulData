{"index": 9852, "cve_id": "CVE-2022-4720", "cwe_id": ["CWE-601"], "cve_language": "Python", "cve_description": "Open Redirect in GitHub repository ikus060/rdiffweb prior to 2.5.5.", "cvss": "6.1", "publish_date": "December 27, 2022", "AV": "NETWORK", "AC": "NETWORK", "PR": "NONE", "UI": "REQUIRED", "S": "CHANGED", "C": "LOW", "I": "LOW", "A": "NONE", "commit_id": "6afaae56a29536f0118b3380d296c416aa6d078d", "commit_message": "Disable automatic hyperlink in email template", "commit_date": "2022-12-22T21:21:15Z", "project": "ikus060/rdiffweb", "url": "https://api.github.com/repos/ikus060/rdiffweb/commits/6afaae56a29536f0118b3380d296c416aa6d078d", "html_url": "https://github.com/ikus060/rdiffweb/commit/6afaae56a29536f0118b3380d296c416aa6d078d", "windows_before": [{"commit_id": "b0c142251987302e04b2b1c35cf229b7bf93ff57", "commit_date": "Wed Dec 21 19:05:05 2022 +0000", "commit_message": "Merge branch 'patrik-fix-status-graph' into 'master'", "files_name": ["26149baa666e018b773b55da8eb82874e3650d0d - Wed Dec 21 10:57:12 2022 -0500 : Fix loading of status graph", "rdiffweb/templates/status.html"]}, {"commit_id": "4e4b4cd70001f2dc1c08c8e7bdaac0a9b8bf6ac0", "commit_date": "Mon Dec 19 15:25:00 2022 +0000", "commit_message": "Merge branch 'patrik-graph' into 'master'", "files_name": ["0f07279e64f6969afe17776a7fc94ca37ad91643 - Mon Dec 19 14:06:56 2022 +0000 : Merge branch 'patrik-branding' into 'master'", "fffa013fc7bfbae698547e66659236a672c1644c - Mon Dec 19 09:05:58 2022 -0500 : Fix graphs loading", "rdiffweb/templates/graphs_activities.html", "rdiffweb/templates/graphs_errors.html", "rdiffweb/templates/graphs_files.html", "rdiffweb/templates/graphs_sizes.html", "rdiffweb/templates/graphs_times.html", "rdiffweb/templates/include/chartkick.html"]}, {"commit_id": "7c328ec9083f70232c0ff5d830cf6204b9b4299e", "commit_date": "Mon Dec 19 13:58:22 2022 +0000", "commit_message": "Merge branch 'patrik-csrf-logout' into 'master'", "files_name": ["e6f0d8002129be90fe82fa3e3ea0a6942caba398 - Mon Dec 19 08:18:41 2022 -0500 : Add CSRF verification on `/logout`", "README.md", "rdiffweb/controller/tests/test_controller.py", "rdiffweb/controller/tests/test_page_admin_users.py", "rdiffweb/controller/tests/test_page_login.py", "rdiffweb/controller/tests/test_page_mfa.py", "rdiffweb/controller/tests/test_secure_headers.py", "rdiffweb/templates/layout.html", "rdiffweb/templates/mfa.html", "rdiffweb/test.py", "rdiffweb/tools/auth_form.py"]}, {"commit_id": "ee3e3512a9b50bd3902b17ff145896ec27f5a6fe", "commit_date": "Fri Dec 16 08:53:23 2022 -0500", "commit_message": "Improve custom branding configuration", "files_name": ["doc/configuration.md", "rdiffweb/controller/page_mfa.py", "rdiffweb/controller/tests/test_page_login.py", "rdiffweb/core/config.py", "rdiffweb/locales/fr/LC_MESSAGES/messages.po", "rdiffweb/locales/messages.pot", "rdiffweb/locales/ru/LC_MESSAGES/messages.po", "rdiffweb/rdw_app.py", "rdiffweb/templates/default.css", "rdiffweb/templates/login.html", "rdiffweb/templates/mfa.html"]}, {"commit_id": "43929875248842ee35cb039f257bef84ef5b67b1", "commit_date": "Fri Dec 16 13:52:02 2022 +0000", "commit_message": "Merge branch 'patrik-release-note' into 'master'", "files_name": ["e800385e18f064b53bf4d04cdb79613ccdd95f55 - Fri Dec 16 13:52:02 2022 +0000 : Update Release notes", ".gitlab-ci.yml", "README.md"]}, {"commit_id": "31876dfee583d333af5119c46e971c9789f1103d", "commit_date": "Thu Dec 15 14:03:29 2022 +0000", "commit_message": "Merge branch 'patrik-fix-chartkick' into 'master'", "files_name": ["6bedf3874587470983a063324d9594fe431e4e95 - Thu Dec 15 08:09:42 2022 -0500 : Create symbolic link for chartkick on Ubuntu Jammy", ".gitlab-ci.yml", "debian/rdiffweb.links", "debian/rdiffweb.postinst"]}, {"commit_id": "b1f509be9e28bfaca7c28c1553c62e5cf8f3b90d", "commit_date": "Fri Dec 9 12:22:34 2022 +0000", "commit_message": "Merge branch 'patrik-discard-X-Forwarded-Host' into 'master'", "files_name": ["5f861670ef8f38ca8eea52a98672d0e0fabb5368 - Tue Dec 6 16:24:08 2022 -0500 : Discard `X-Forwarded-Host` headers", "README.md", "rdiffweb/rdw_app.py"]}, {"commit_id": "8e1a4790c09ca4dfed24825efe47f6825f4b0a4f", "commit_date": "Mon Dec 5 22:39:59 2022 +0000", "commit_message": "Merge branch 'patrik-update-config' into 'master'", "files_name": ["43b8a9ba89331d51c55f16a7b1266dc3c8c4dc01 - Mon Dec 5 21:35:53 2022 +0000 : Merge branch 'patrik-duplicate-ssh-key' into 'master'", "0c7a0e3b7fb2c89573277f9808b22fe5a480f2f0 - Mon Dec 5 21:24:33 2022 +0000 : Merge branch 'patrik-fix-revoke-access-token' into 'master'", "c33ab14d7fedbc26134bb5f2ea6909dd9c036811 - Mon Dec 5 09:48:14 2022 -0500 : Update configuration page", "doc/configuration.md"]}, {"commit_id": "8f9e1b353d121fc42fe459afb77959b589fe968e", "commit_date": "Mon Dec 5 14:47:02 2022 -0500", "commit_message": "Improve handling of duplicate ssh keys added via api #248", "files_name": ["rdiffweb/controller/__init__.py", "rdiffweb/controller/page_pref_sshkeys.py", "rdiffweb/controller/tests/test_page_prefs_ssh.py", "rdiffweb/core/model/_user.py", "rdiffweb/tools/auth_mfa.py", "rdiffweb/tools/ratelimit.py"]}, {"commit_id": "2fe0094509e1255a88e9d4368728ae1854221e1f", "commit_date": "Mon Dec 5 14:46:45 2022 -0500", "commit_message": "Fix strange behavior in access token management #247", "files_name": ["README.md", "rdiffweb/controller/page_pref_tokens.py", "rdiffweb/controller/tests/test_page_prefs_tokens.py", "rdiffweb/templates/prefs_tokens.html"]}, {"commit_id": "08bb96199161a24711029c1fdd602db3dbe20510", "commit_date": "Mon Dec 5 19:46:01 2022 +0000", "commit_message": "Merge branch 'patrik-bookworm' into 'master'", "files_name": ["86732dbb87a49ad2889718b48e1d989ea515a7aa - Mon Dec 5 12:05:17 2022 -0500 : Update dependencies for Debian Bookworm", "README.md", "rdiffweb/controller/page_admin_users.py", "rdiffweb/controller/page_delete.py", "rdiffweb/controller/page_mfa.py", "rdiffweb/controller/page_pref_general.py", "rdiffweb/controller/page_pref_mfa.py", "rdiffweb/controller/page_pref_sshkeys.py", "setup.cfg", "tox.ini"]}, {"commit_id": "4383fad9325d3a32b7550293289870491fb4f4a4", "commit_date": "Mon Nov 28 17:01:46 2022 +0000", "commit_message": "Merge branch 'patrik-release' into 'master'", "files_name": ["6abbfd040de0d8020804d8b4cadd0e3d2a1765e2 - Mon Nov 28 07:44:47 2022 -0500 : Update release note 2.5.2", "README.md"]}, {"commit_id": "9af577f88eff4a551b45aa8da3c9bdceb14612ec", "commit_date": "Fri Nov 25 13:25:29 2022 +0000", "commit_message": "Merge branch 'patrik-invalidate-cache' into 'master'", "files_name": ["b79dba31cd87a87cc63cc2b84879de100af5f63d - Thu Nov 24 16:32:07 2022 -0500 : Define repo display_name to fix repository tree", "rdiffweb/core/model/_repo.py"]}, {"commit_id": "766bbdd1b153f4a335ab641b495ca6ba232d99fd", "commit_date": "Thu Nov 24 16:02:04 2022 -0500", "commit_message": "Improve test involving scheduled tasks", "files_name": ["rdiffweb/controller/tests/test_page_delete.py", "rdiffweb/plugins/scheduler.py", "rdiffweb/plugins/tests/test_scheduler.py", "rdiffweb/test.py"]}, {"commit_id": "112d5170ac1d3a7e758d1f22bb42004143d9d482", "commit_date": "Thu Nov 24 20:22:04 2022 +0000", "commit_message": "Merge branch 'patrik-admin-password-reset' into 'master'", "files_name": ["116c1a3a0e326d69ad78743482d5908b496952f8 - Thu Nov 24 15:15:40 2022 -0500 : Invalidate browser cache for logo, headerlogo and favicon on restart #245", "README.md", "rdiffweb/controller/__init__.py", "rdiffweb/templates/layout.html", "rdiffweb/templates/login.html"]}, {"commit_id": "25e325f88650d924ea1e88799f07d46d34a5f4d8", "commit_date": "Thu Nov 24 19:55:43 2022 +0000", "commit_message": "Merge branch 'patrik-fix-empty-user-root' into 'master'", "files_name": ["56b374ac89a6cd4f7b04f1cfdf5bc4732d0eb7fb - Thu Nov 24 14:31:41 2022 -0500 : Replace admin password only when `--admin-password` option is provided", "README.md", "rdiffweb/core/model/_user.py", "rdiffweb/core/model/tests/test_user.py"]}, {"commit_id": "b2df3679564d0daa2856213bb307d3e34bd89a25", "commit_date": "Thu Nov 24 13:21:05 2022 -0500", "commit_message": "Block repository access when user_root directory is empty or a relative path", "files_name": ["README.md", "rdiffweb/controller/tests/test_page_admin_users.py", "rdiffweb/core/librdiff.py", "rdiffweb/core/model/_repo.py", "rdiffweb/core/model/tests/test_user.py", "rdiffweb/core/rdw_templating.py", "rdiffweb/core/tests/test_librdiff.py", "tox.ini"]}, {"commit_id": "979ab34bdb37b644a7d742323e3249f5db463354", "commit_date": "Wed Nov 16 17:44:27 2022 +0000", "commit_message": "Merge branch 'patrik-release-lock-on-restore' into 'master'", "files_name": ["6013d6f053399ccb5730396bb08967cf1282c873 - Wed Nov 16 17:41:11 2022 +0000 : Merge branch 'patrik-filesize-for-deleted-files' into 'master'", "68d86a993bf3a62cb69dd3c07ce0211e49722e69 - Mon Nov 14 21:44:11 2022 +0000 : Merge branch 'patrik-ru-translation' into 'master'", "329362e2163d85c73f3e54d6325c721a6c73ecda - Mon Nov 14 13:28:50 2022 -0500 : Disable filesize for deleted files to improve page loading #241", "README.md", "rdiffweb/controller/tests/test_page_browse.py", "rdiffweb/controller/tests/test_page_history.py", "rdiffweb/core/librdiff.py", "rdiffweb/core/tests/test_librdiff.py", "rdiffweb/templates/browse.html", "rdiffweb/templates/history.html", "rdiffweb/tools/db.py"]}, {"commit_id": "e91bfe85be6e887a5d9caf82e6480de552078312", "commit_date": "Mon Nov 14 15:10:20 2022 -0500", "commit_message": "Update Russian translation file", "files_name": ["rdiffweb/locales/ru/LC_MESSAGES/messages.mo", "rdiffweb/locales/ru/LC_MESSAGES/messages.po"]}, {"commit_id": "ba9aacdb9b3f9b2acba2f2e1db17f4e3e6002b3e", "commit_date": "Mon Nov 14 14:36:41 2022 -0500", "commit_message": "Release session lock on restore", "files_name": ["rdiffweb/controller/page_restore.py"]}, {"commit_id": "519ffd9b980416e9e974967c044a354a69839f5a", "commit_date": "Mon Nov 14 13:24:58 2022 +0000", "commit_message": "Merge branch 'patrik-ubuntu-kinetic' into 'master'", "files_name": ["a762f47138c60c6228e2062d4edc664a590e2974 - Mon Nov 14 07:43:41 2022 -0500 : Add support for Ubuntu Kinetic #240", ".gitlab-ci.yml", "README.md", "doc/installation.md"]}, {"commit_id": "44a2b075c21fe0858a2087c2e19175738622e13d", "commit_date": "Wed Nov 9 21:19:32 2022 +0000", "commit_message": "Merge branch 'patrik-update-french-translation' into 'master'", "files_name": ["35f5968624a2a3e97b9974456ba3713260b6ba5b - Wed Nov 9 14:59:53 2022 -0500 : Update french translation", "rdiffweb/locales/en/LC_MESSAGES/messages.mo", "rdiffweb/locales/fr/LC_MESSAGES/messages.mo", "rdiffweb/locales/fr/LC_MESSAGES/messages.po", "rdiffweb/locales/messages.pot", "rdiffweb/templates/email_mfa.html"]}, {"commit_id": "cc29583e301efdebf57d1fd6fbdc1e2d2ddd59c3", "commit_date": "Mon Nov 7 16:41:19 2022 +0000", "commit_message": "Merge branch 'patrik-adjust' into 'master'", "files_name": ["ba6f387704b631d835183cf3121de8932b54d34b - Sun Nov 6 16:55:44 2022 -0500 : Improve CSS branding configuration #239", "README.md", "doc/configuration.md", "rdiffweb/controller/__init__.py", "rdiffweb/controller/tests/test_controller.py", "rdiffweb/controller/tests/test_secure_headers.py", "rdiffweb/core/config.py", "rdiffweb/rdw_app.py", "rdiffweb/static/blue.css", "rdiffweb/static/orange.css", "rdiffweb/templates/default.css", "rdiffweb/templates/layout.html", "rdiffweb/templates/login.html", "rdiffweb/test.py"]}, {"commit_id": "5990d9d0dd9c802ac6735d64c3230ea20b76ba73", "commit_date": "Wed Nov 2 15:42:00 2022 -0400", "commit_message": "Add rollback call where applicable", "files_name": ["rdiffweb/controller/page_admin_users.py", "rdiffweb/controller/page_pref_general.py", "rdiffweb/controller/page_pref_mfa.py", "rdiffweb/controller/page_pref_notification.py", "rdiffweb/controller/page_pref_sshkeys.py", "rdiffweb/controller/page_pref_tokens.py"]}, {"commit_id": "f77eb8c9a2b835eee253621b4f5c693e8b350316", "commit_date": "Wed Nov 2 15:18:53 2022 -0400", "commit_message": "Handle duplicate token name", "files_name": ["rdiffweb/controller/page_pref_tokens.py", "rdiffweb/controller/tests/test_page_prefs_tokens.py"]}, {"commit_id": "516b3d8d7c34b1baff50ba3ea035d9c7ff96f1e5", "commit_date": "Wed Nov 2 12:54:04 2022 -0400", "commit_message": "Raise `user_added` event before_insert", "files_name": ["rdiffweb/core/model/_user.py"]}], "windows_after": [{"commit_id": "bc4bed89affcba71251fe54ed10639da9d392c1d", "commit_date": "Thu Dec 22 15:54:20 2022 -0500", "commit_message": "Send notification on new SSH Key", "files_name": ["README.md", "rdiffweb/core/model/_user.py", "rdiffweb/core/notification.py", "rdiffweb/core/tests/test_notification.py", "rdiffweb/templates/email_authorizedkey_added.html"]}, {"commit_id": "6e9ee210548f6d3210704cac302cfc7cdb239765", "commit_date": "Thu Dec 22 16:21:01 2022 -0500", "commit_message": "Ratelimit \"Resend code to my email\" in Two-Factor Authentication view", "files_name": ["README.md", "rdiffweb/controller/page_pref_mfa.py", "rdiffweb/core/config.py", "rdiffweb/tools/ratelimit.py"]}, {"commit_id": "d1aaa96b665a39fba9e98d6054a9de511ba0a837", "commit_date": "Thu Dec 22 20:33:38 2022 -0500", "commit_message": "Make username case-insensitive", "files_name": ["README.md", "rdiffweb/controller/tests/test_page_login.py", "rdiffweb/controller/tests/test_page_prefs_general.py", "rdiffweb/core/login.py", "rdiffweb/core/model/__init__.py", "rdiffweb/core/model/_user.py", "rdiffweb/core/model/tests/test_user.py", "rdiffweb/core/tests/test_rdw_templating.py"]}, {"commit_id": "c4a19cf67d575c4886171b8efcbf4675d51f3929", "commit_date": "Fri Dec 23 13:01:27 2022 -0500", "commit_message": "Make sure that all ssh keys are unique, regardless of the user", "files_name": ["README.md", "rdiffweb/core/model/__init__.py", "rdiffweb/core/model/_sshkey.py", "rdiffweb/core/model/_user.py", "rdiffweb/core/model/tests/test_user.py"]}, {"commit_id": "fcffdb3ac3164be44891e2a019a66b1f2739cd95", "commit_date": "Fri Dec 23 13:38:31 2022 -0500", "commit_message": "Disable translation caching", "files_name": ["README.md", "rdiffweb/core/tests/test_i18n.py", "rdiffweb/locales/fr/LC_MESSAGES/messages.mo", "rdiffweb/locales/fr/LC_MESSAGES/messages.po", "rdiffweb/locales/messages.pot", "rdiffweb/tools/i18n.py"]}, {"commit_id": "70c1de694f1f93efa494f29115b33857aa496e8d", "commit_date": "Fri Dec 23 19:42:38 2022 +0000", "commit_message": "Merge branch 'patrik-huntr' into 'master'", "files_name": ["b4add6db996813bebffa97082e9550ebf246f461 - Wed Jan 11 17:04:00 2023 -0500 : Fix Hamburger menu and change working minarca#192", "README.md", "rdiffweb/controller/tests/test_secure_headers.py", "rdiffweb/core/librdiff.py", "rdiffweb/locales/fr/LC_MESSAGES/messages.mo", "rdiffweb/locales/fr/LC_MESSAGES/messages.po", "rdiffweb/locales/messages.pot", "rdiffweb/rdw_app.py", "rdiffweb/tools/secure_headers.py"]}, {"commit_id": "09425fe5588f1f0c29951a6f2b0fe5d485cc0e33", "commit_date": "Thu Jan 12 21:02:26 2023 +0000", "commit_message": "Merge branch 'patrik-little-changes' into 'master'", "files_name": ["0f62f32950e4436f3e5e9f335de0f9ac90cfe740 - Mon Jan 16 16:25:50 2023 -0500 : Fix deletion of repositories in subdirectory #250", "README.md", "rdiffweb/controller/page_delete.py", "rdiffweb/controller/tests/test_page_delete.py", "rdiffweb/controller/tests/test_page_history.py", "rdiffweb/templates/history.html"]}, {"commit_id": "b1f2a8abea8c5db1fa11ea6978f66fd88725b225", "commit_date": "Tue Jan 24 21:00:27 2023 +0000", "commit_message": "Merge branch 'patrik-deletion' into 'master'", "files_name": ["2f77b437c064635dbd186ed6174a974ff03ad1b0 - Tue Jan 24 15:15:14 2023 -0500 : Send notification for inactive backup based on statistics", "README.md", "rdiffweb/core/model/_repo.py", "rdiffweb/core/notification.py", "rdiffweb/core/tests/test_notification.py"]}, {"commit_id": "6cbe5a2c7c2a5e32e7a66db9d7eb23c5f78be21f", "commit_date": "Tue Jan 24 22:45:28 2023 +0000", "commit_message": "Merge branch 'patrik-notification-no-activity' into 'master'", "files_name": ["6af8d27493d1701d096a1797c71cb159f41fc582 - Wed Jan 25 16:47:15 2023 -0500 : Make deletion test more stable", "rdiffweb/controller/tests/test_page_delete.py"]}, {"commit_id": "0d179f17c0eb144cffc74b7dee5e345b8568d783", "commit_date": "Wed Jan 25 13:11:55 2023 -0500", "commit_message": "Improve html2text implementation", "files_name": ["rdiffweb/plugins/smtp.py", "rdiffweb/plugins/tests/test_smtp.py"]}, {"commit_id": "f2c304410a5ad28ed21d40d64c528840b48294ad", "commit_date": "Wed Jan 25 14:33:25 2023 -0500", "commit_message": "Redistribute logos in PNG format for better compatibility", "files_name": ["rdiffweb/rdw_app.py", "rdiffweb/static/header-logo.png", "rdiffweb/static/logo1.png"]}, {"commit_id": "b066ada9f9d191a2f3dda0144ddab57e3a0cc612", "commit_date": "Wed Jan 25 12:49:16 2023 -0500", "commit_message": "Use bootstrapemail to generate email template", "files_name": [".gitignore", "README.md", "rdiffweb/controller/page_mfa.py", "rdiffweb/controller/page_pref_mfa.py", "rdiffweb/core/notification.py", "rdiffweb/core/tests/test_notification.py", "rdiffweb/templates/bootstrap_email/email_layout.html", "rdiffweb/templates/email_access_token_added.html", "rdiffweb/templates/email_authorizedkey_added.html", "rdiffweb/templates/email_changed.html", "rdiffweb/templates/email_layout.html", "rdiffweb/templates/email_mfa.html", "rdiffweb/templates/email_notification.html", "rdiffweb/templates/email_password_changed.html", "rdiffweb/templates/email_verification_code.html", "tox.ini"]}, {"commit_id": "b06acfbf894293098b710745fb38c37ca6b4da1a", "commit_date": "Wed Jan 25 22:42:54 2023 +0000", "commit_message": "Merge branch 'patrik-email-template' into 'master'", "files_name": ["5eb27cd767831f6b8cfba4b06e6084e6dfbb57de - Fri Jan 27 09:19:10 2023 -0500 : Enforce SQLAlchemy version between 1.2 or 1.4", "README.md", "setup.cfg"]}, {"commit_id": "68298e5a7582d81ead10bec3498395b3f1a97f85", "commit_date": "Fri Jan 27 15:35:50 2023 +0000", "commit_message": "Merge branch 'master' into 'patrik-hotfix-sqlalchemy'", "files_name": ["714478c761aee05fd71049836858811c7d572a32 - Fri Jan 27 16:13:54 2023 +0000 : Merge branch 'patrik-hotfix-sqlalchemy' into 'master'", "fc17d076aa6823b7d43be66a5ec9693200905dbc - Thu Jan 26 14:48:10 2023 -0500 : Update EXT4 quota documentation", "doc/configuration.md"]}, {"commit_id": "238b4f5b6a09022623a713687d8f444905f14ed2", "commit_date": "Fri Jan 27 18:32:27 2023 +0000", "commit_message": "Merge branch 'patrik-quota-documentation' into 'master'", "files_name": ["29a9534fd58ec81439a96e9829296c8693277e45 - Wed Feb 1 10:21:49 2023 -0500 : Add external_url configuration #257", "doc/configuration.md", "rdiffweb/controller/tests/test_controller.py", "rdiffweb/core/config.py", "rdiffweb/core/rdw_templating.py", "tox.ini"]}, {"commit_id": "f2144165e2bc723e661555c27444945e2a5834db", "commit_date": "Thu Feb 2 18:35:57 2023 +0000", "commit_message": "Merge branch 'patrik-external-url' into 'master'", "files_name": ["edee07da99a141ccbc7f003779843b2632687eaf - Wed Jan 25 14:46:39 2023 -0500 : Change layout of repositories", "rdiffweb/core/rdw_templating.py", "rdiffweb/templates/locations.html"]}, {"commit_id": "1dfebf384f5c509c1d4a839cbe0c5339bfd0a227", "commit_date": "Wed Jan 25 14:46:39 2023 -0500", "commit_message": "Provide a better overview in Status view", "files_name": ["rdiffweb/controller/__init__.py", "rdiffweb/controller/filter_authorization.py", "rdiffweb/controller/page_status.py", "rdiffweb/controller/tests/test_page_admin.py", "rdiffweb/controller/tests/test_page_delete.py", "rdiffweb/controller/tests/test_page_status.py", "rdiffweb/core/tests/test_rdw_templating.py", "rdiffweb/locales/fr/LC_MESSAGES/messages.po", "rdiffweb/locales/messages.pot", "rdiffweb/templates/admin_repos.html", "rdiffweb/templates/admin_users.html", "rdiffweb/templates/include/chartkick.html", "rdiffweb/templates/layout.html", "rdiffweb/templates/status.html"]}, {"commit_id": "b4351243d4ceee6143770177865835481f9c67e6", "commit_date": "Thu Feb 2 20:05:50 2023 +0000", "commit_message": "Merge branch 'patrik-layout-repositories' into 'master'", "files_name": ["430d2c20950df8c1380043524a53f1e694f6d376 - Thu Feb 2 20:05:59 2023 +0000 : Merge branch 'patrik-status-view' into 'master'", "991bbcffe99e8edbcf4e3270d00ad6c342c19801 - Tue Feb 7 14:57:58 2023 -0500 : Fix delete repository vs path deletion #250", "rdiffweb/controller/page_delete.py"]}, {"commit_id": "63a9044c36a11681652b6591ba60134be8fc57ff", "commit_date": "Thu Feb 9 15:23:51 2023 -0500", "commit_message": "Only log server error", "files_name": ["rdiffweb/rdw_app.py"]}, {"commit_id": "915f0a4579f01fd3b99954c4678a513f389794c3", "commit_date": "Thu Feb 9 15:24:18 2023 -0500", "commit_message": "Adjust server log to include IP address and username for real request", "files_name": ["rdiffweb/main.py"]}, {"commit_id": "7d932d932e0cef4bb46c871ee90cbfa4acf2325b", "commit_date": "Thu Feb 9 21:54:39 2023 -0500", "commit_message": "Support Setuptools v66", "files_name": ["README.md", "debian/rules"]}, {"commit_id": "a839aef9ebbdd44e40622075a6a94d7aade50e62", "commit_date": "Fri Feb 10 13:29:12 2023 +0000", "commit_message": "Merge branch 'patrik-fixes' into 'master'", "files_name": ["3d8507c4ab87406abc278d9cb496d67fb5fdb286 - Sat Feb 11 00:25:02 2023 +0000 : Update ldap.py", "README.md", "rdiffweb/plugins/ldap.py"]}, {"commit_id": "ad5f3979d78e6e3f1d07c8b03ec5fc21645259e8", "commit_date": "Mon Feb 13 15:27:21 2023 +0000", "commit_message": "Merge branch 'rdiffweb-ldapfix-master' into 'master'", "files_name": ["d21e93aca770d48a89795eab5749e10e8418a573 - Fri Feb 10 08:09:26 2023 -0500 : Make use of timezone aware datetime", "rdiffweb/controller/tests/test_controller.py", "rdiffweb/core/model/_session.py", "rdiffweb/core/model/_timestamp.py", "rdiffweb/core/model/_token.py", "rdiffweb/core/model/tests/test_token.py", "rdiffweb/tools/enrich_session.py"]}, {"commit_id": "e0a5399f050b91fa4b5fb3b46dad282cfaa10eb6", "commit_date": "Fri Feb 10 08:30:46 2023 -0500", "commit_message": "Improve System Logs view #62", "files_name": [".gitlab-ci.yml", "README.md", "rdiffweb/controller/page_admin.py", "rdiffweb/controller/page_admin_logs.py", "rdiffweb/controller/page_admin_repos.py", "rdiffweb/controller/page_admin_session.py", "rdiffweb/controller/page_admin_sysinfo.py", "rdiffweb/controller/page_admin_users.py", "rdiffweb/controller/tests/test_page_admin.py", "rdiffweb/controller/tests/test_page_admin_logs.py", "rdiffweb/controller/tests/test_page_admin_repos.py", "rdiffweb/controller/tests/test_page_admin_session.py", "rdiffweb/controller/tests/test_page_admin_sysinfo.py", "rdiffweb/controller/tests/test_page_admin_users.py", "rdiffweb/controller/tests/test_page_history.py", "rdiffweb/core/model/_repo.py", "rdiffweb/core/model/_user.py", "rdiffweb/core/notification.py", "rdiffweb/core/rdw_templating.py", "rdiffweb/core/tests/test_notification.py", "rdiffweb/core/tests/test_rdw_templating.py", "rdiffweb/locales/fr/LC_MESSAGES/messages.po", "rdiffweb/locales/messages.pot", "rdiffweb/static/js/rdiffweb.js", "rdiffweb/templates/admin.html"]}], "parents": [{"commit_id_before": "b0c142251987302e04b2b1c35cf229b7bf93ff57", "url_before": "https://api.github.com/repos/ikus060/rdiffweb/commits/b0c142251987302e04b2b1c35cf229b7bf93ff57", "html_url_before": "https://github.com/ikus060/rdiffweb/commit/b0c142251987302e04b2b1c35cf229b7bf93ff57"}], "details": [{"raw_url": "https://github.com/ikus060/rdiffweb/raw/6afaae56a29536f0118b3380d296c416aa6d078d/rdiffweb%2Fcore%2Fnotification.py", "code": "# -*- coding: utf-8 -*-\n# rdiffweb, A web interface to rdiff-backup repositories\n# Copyright (C) 2012-2021 rdiffweb contributors\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\"\"\"\nPlugin used to send email to users when their repository is getting too old.\nUser can control the notification period.\n\"\"\"\n\nimport datetime\nimport logging\n\nimport cherrypy\nfrom cherrypy.process.plugins import SimplePlugin\n\nfrom rdiffweb.core import librdiff\nfrom rdiffweb.core.model import UserObject\nfrom rdiffweb.tools.i18n import ugettext as _\n\nlogger = logging.getLogger(__name__)\n\n\nclass NotificationPlugin(SimplePlugin):\n    \"\"\"\n    Send email notification when a repository get too old (without a backup).\n    \"\"\"\n\n    execution_time = '23:00'\n\n    send_changed = False\n\n    def start(self):\n        self.bus.log('Start Notification plugin')\n        self.bus.publish('schedule_job', self.execution_time, self.notification_job)\n        self.bus.subscribe('access_token_added', self.access_token_added)\n        self.bus.subscribe('user_attr_changed', self.user_attr_changed)\n        self.bus.subscribe('user_password_changed', self.user_password_changed)\n\n    start.priority = 55\n\n    def stop(self):\n        self.bus.log('Stop Notification plugin')\n        self.bus.publish('unschedule_job', self.notification_job)\n        self.bus.unsubscribe('access_token_added', self.access_token_added)\n        self.bus.unsubscribe('user_attr_changed', self.user_attr_changed)\n        self.bus.unsubscribe('user_password_changed', self.user_password_changed)\n\n    stop.priority = 45\n\n    @property\n    def app(self):\n        return cherrypy.tree.apps['']\n\n    def access_token_added(self, userobj, name):\n        if not self.send_changed:\n            return\n\n        if not userobj.email:\n            logger.info(\"can't sent mail to user [%s] without an email\", userobj.username)\n            return\n\n        # Send a mail notification\n        body = self.app.templates.compile_template(\n            \"email_access_token_added.html\", **{\"header_name\": self.app.cfg.header_name, 'user': userobj, 'name': name}\n        )\n        self.bus.publish('queue_mail', to=userobj.email, subject=_(\"A new access token has been created\"), message=body)\n\n    def user_attr_changed(self, userobj, attrs={}):\n        if not self.send_changed:\n            return\n\n        # Leave if the mail was not changed.\n        if 'email' in attrs:\n            old_email = attrs['email'][0]\n            if not old_email:\n                logger.info(\"can't sent mail to user [%s] without an email\", userobj.username)\n                return\n            # If the email attributes was changed, send a mail notification.\n            subject = _(\"Email address changed\")\n            body = self.app.templates.compile_template(\n                \"email_changed.html\", **{\"header_name\": self.app.cfg.header_name, 'user': userobj}\n            )\n            self.bus.publish('queue_mail', to=old_email, subject=str(subject), message=body)\n\n        if 'mfa' in attrs:\n            if not userobj.email:\n                logger.info(\"can't sent mail to user [%s] without an email\", userobj.username)\n                return\n            subject = (\n                _(\"Two-Factor Authentication turned off\")\n                if userobj.mfa == UserObject.DISABLED_MFA\n                else _(\"Two-Factor Authentication turned on\")\n            )\n            body = self.app.templates.compile_template(\n                \"email_mfa.html\", **{\"header_name\": self.app.cfg.header_name, 'user': userobj}\n            )\n            self.bus.publish('queue_mail', to=userobj.email, subject=str(subject), message=body)\n\n    def user_password_changed(self, userobj):\n        if not self.send_changed:\n            return\n\n        if not userobj.email:\n            logger.info(\"can't sent mail to user [%s] without an email\", userobj.username)\n            return\n\n        # If the email attributes was changed, send a mail notification.\n        body = self.app.templates.compile_template(\n            \"email_password_changed.html\", **{\"header_name\": self.app.cfg.header_name, 'user': userobj}\n        )\n        self.bus.publish('queue_mail', to=userobj.email, subject=_(\"Password changed\"), message=body)\n\n    def notification_job(self):\n        \"\"\"\n        Loop trough all the user repository and send notifications.\n        \"\"\"\n\n        now = librdiff.RdiffTime()\n\n        def _user_repos():\n            \"\"\"Return a generator trought user repos to be notified.\"\"\"\n            for user in UserObject.query.all():\n                # Check if user has email.\n                if not user.email:\n                    continue\n                # Identify old repo for current user.\n                old_repos = []\n                for repo in user.repo_objs:\n                    # Check if repo has age configured (in days)\n                    maxage = repo.maxage\n                    if not maxage or maxage <= 0:\n                        continue\n                    # Check repo age.\n                    if repo.last_backup_date is None or repo.last_backup_date < (now - datetime.timedelta(days=maxage)):\n                        old_repos.append(repo)\n                # Return an item only if user had old repo\n                if old_repos:\n                    yield user, old_repos\n\n        # For each candidate, send mail.\n        for user, repos in _user_repos():\n            parms = {'user': user, 'repos': repos}\n            body = self.app.templates.compile_template(\"email_notification.html\", **parms)\n            cherrypy.engine.publish('queue_mail', to=user.email, subject=_(\"Notification\"), message=body)\n\n\ncherrypy.notification = NotificationPlugin(cherrypy.engine)\ncherrypy.notification.subscribe()\n\ncherrypy.config.namespaces['notification'] = lambda key, value: setattr(cherrypy.notification, key, value)\n", "code_before": "# -*- coding: utf-8 -*-\n# rdiffweb, A web interface to rdiff-backup repositories\n# Copyright (C) 2012-2021 rdiffweb contributors\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\"\"\"\nPlugin used to send email to users when their repository is getting too old.\nUser can control the notification period.\n\"\"\"\n\nimport datetime\nimport logging\n\nimport cherrypy\nfrom cherrypy.process.plugins import SimplePlugin\n\nfrom rdiffweb.core import librdiff\nfrom rdiffweb.core.model import UserObject\nfrom rdiffweb.tools.i18n import ugettext as _\n\nlogger = logging.getLogger(__name__)\n\n\nclass NotificationPlugin(SimplePlugin):\n    \"\"\"\n    Send email notification when a repository get too old (without a backup).\n    \"\"\"\n\n    execution_time = '23:00'\n\n    send_changed = False\n\n    def start(self):\n        self.bus.log('Start Notification plugin')\n        self.bus.publish('schedule_job', self.execution_time, self.notification_job)\n        self.bus.subscribe('access_token_added', self.access_token_added)\n        self.bus.subscribe('user_attr_changed', self.user_attr_changed)\n        self.bus.subscribe('user_password_changed', self.user_password_changed)\n\n    start.priority = 55\n\n    def stop(self):\n        self.bus.log('Stop Notification plugin')\n        self.bus.publish('unschedule_job', self.notification_job)\n        self.bus.unsubscribe('access_token_added', self.access_token_added)\n        self.bus.unsubscribe('user_attr_changed', self.user_attr_changed)\n        self.bus.unsubscribe('user_password_changed', self.user_password_changed)\n\n    stop.priority = 45\n\n    @property\n    def app(self):\n        return cherrypy.tree.apps['']\n\n    def access_token_added(self, userobj, name):\n        if not self.send_changed:\n            return\n\n        if not userobj.email:\n            logger.info(\"can't sent mail to user [%s] without an email\", userobj.username)\n            return\n\n        # Send a mail notification\n        body = self.app.templates.compile_template(\n            \"access_token_added.html\", **{\"header_name\": self.app.cfg.header_name, 'user': userobj, 'name': name}\n        )\n        self.bus.publish('queue_mail', to=userobj.email, subject=_(\"A new access token has been created\"), message=body)\n\n    def user_attr_changed(self, userobj, attrs={}):\n        if not self.send_changed:\n            return\n\n        # Leave if the mail was not changed.\n        if 'email' in attrs:\n            old_email = attrs['email'][0]\n            if not old_email:\n                logger.info(\"can't sent mail to user [%s] without an email\", userobj.username)\n                return\n            # If the email attributes was changed, send a mail notification.\n            subject = _(\"Email address changed\")\n            body = self.app.templates.compile_template(\n                \"email_changed.html\", **{\"header_name\": self.app.cfg.header_name, 'user': userobj}\n            )\n            self.bus.publish('queue_mail', to=old_email, subject=str(subject), message=body)\n\n        if 'mfa' in attrs:\n            if not userobj.email:\n                logger.info(\"can't sent mail to user [%s] without an email\", userobj.username)\n                return\n            subject = (\n                _(\"Two-Factor Authentication turned off\")\n                if userobj.mfa == UserObject.DISABLED_MFA\n                else _(\"Two-Factor Authentication turned on\")\n            )\n            body = self.app.templates.compile_template(\n                \"email_mfa.html\", **{\"header_name\": self.app.cfg.header_name, 'user': userobj}\n            )\n            self.bus.publish('queue_mail', to=userobj.email, subject=str(subject), message=body)\n\n    def user_password_changed(self, userobj):\n        if not self.send_changed:\n            return\n\n        if not userobj.email:\n            logger.info(\"can't sent mail to user [%s] without an email\", userobj.username)\n            return\n\n        # If the email attributes was changed, send a mail notification.\n        body = self.app.templates.compile_template(\n            \"password_changed.html\", **{\"header_name\": self.app.cfg.header_name, 'user': userobj}\n        )\n        self.bus.publish('queue_mail', to=userobj.email, subject=_(\"Password changed\"), message=body)\n\n    def notification_job(self):\n        \"\"\"\n        Loop trough all the user repository and send notifications.\n        \"\"\"\n\n        now = librdiff.RdiffTime()\n\n        def _user_repos():\n            \"\"\"Return a generator trought user repos to be notified.\"\"\"\n            for user in UserObject.query.all():\n                # Check if user has email.\n                if not user.email:\n                    continue\n                # Identify old repo for current user.\n                old_repos = []\n                for repo in user.repo_objs:\n                    # Check if repo has age configured (in days)\n                    maxage = repo.maxage\n                    if not maxage or maxage <= 0:\n                        continue\n                    # Check repo age.\n                    if repo.last_backup_date is None or repo.last_backup_date < (now - datetime.timedelta(days=maxage)):\n                        old_repos.append(repo)\n                # Return an item only if user had old repo\n                if old_repos:\n                    yield user, old_repos\n\n        # For each candidate, send mail.\n        for user, repos in _user_repos():\n            parms = {'user': user, 'repos': repos}\n            body = self.app.templates.compile_template(\"email_notification.html\", **parms)\n            cherrypy.engine.publish('queue_mail', to=user.email, subject=_(\"Notification\"), message=body)\n\n\ncherrypy.notification = NotificationPlugin(cherrypy.engine)\ncherrypy.notification.subscribe()\n\ncherrypy.config.namespaces['notification'] = lambda key, value: setattr(cherrypy.notification, key, value)\n", "patch": "@@ -73,7 +73,7 @@ def access_token_added(self, userobj, name):\n \n         # Send a mail notification\n         body = self.app.templates.compile_template(\n-            \"access_token_added.html\", **{\"header_name\": self.app.cfg.header_name, 'user': userobj, 'name': name}\n+            \"email_access_token_added.html\", **{\"header_name\": self.app.cfg.header_name, 'user': userobj, 'name': name}\n         )\n         self.bus.publish('queue_mail', to=userobj.email, subject=_(\"A new access token has been created\"), message=body)\n \n@@ -118,7 +118,7 @@ def user_password_changed(self, userobj):\n \n         # If the email attributes was changed, send a mail notification.\n         body = self.app.templates.compile_template(\n-            \"password_changed.html\", **{\"header_name\": self.app.cfg.header_name, 'user': userobj}\n+            \"email_password_changed.html\", **{\"header_name\": self.app.cfg.header_name, 'user': userobj}\n         )\n         self.bus.publish('queue_mail', to=userobj.email, subject=_(\"Password changed\"), message=body)\n ", "file_path": "files/2022_12/574", "file_language": "py", "file_name": "rdiffweb/core/notification.py", "outdated_file_modify": 1, "outdated_file_before": 0, "outdated_file_after": 1, "llm_check": 0, "static_check": 0, "static": {"rats": [false, []], "semgrep": [false, []]}, "target": 0, "function_before": [{"function": "class NotificationPlugin(SimplePlugin):\n    \"\"\"\n    Send email notification when a repository get too old (without a backup).\n    \"\"\"\n\n    execution_time = '23:00'\n\n    send_changed = False\n\n    def start(self):\n        self.bus.log('Start Notification plugin')\n        self.bus.publish('schedule_job', self.execution_time, self.notification_job)\n        self.bus.subscribe('access_token_added', self.access_token_added)\n        self.bus.subscribe('user_attr_changed', self.user_attr_changed)\n        self.bus.subscribe('user_password_changed', self.user_password_changed)\n\n    start.priority = 55\n\n    def stop(self):\n        self.bus.log('Stop Notification plugin')\n        self.bus.publish('unschedule_job', self.notification_job)\n        self.bus.unsubscribe('access_token_added', self.access_token_added)\n        self.bus.unsubscribe('user_attr_changed', self.user_attr_changed)\n        self.bus.unsubscribe('user_password_changed', self.user_password_changed)\n\n    stop.priority = 45\n\n    @property\n    def app(self):\n        return cherrypy.tree.apps['']\n\n    def access_token_added(self, userobj, name):\n        if not self.send_changed:\n            return\n\n        if not userobj.email:\n            logger.info(\"can't sent mail to user [%s] without an email\", userobj.username)\n            return\n\n        # Send a mail notification\n        body = self.app.templates.compile_template(\n            \"access_token_added.html\", **{\"header_name\": self.app.cfg.header_name, 'user': userobj, 'name': name}\n        )\n        self.bus.publish('queue_mail', to=userobj.email, subject=_(\"A new access token has been created\"), message=body)\n\n    def user_attr_changed(self, userobj, attrs={}):\n        if not self.send_changed:\n            return\n\n        # Leave if the mail was not changed.\n        if 'email' in attrs:\n            old_email = attrs['email'][0]\n            if not old_email:\n                logger.info(\"can't sent mail to user [%s] without an email\", userobj.username)\n                return\n            # If the email attributes was changed, send a mail notification.\n            subject = _(\"Email address changed\")\n            body = self.app.templates.compile_template(\n                \"email_changed.html\", **{\"header_name\": self.app.cfg.header_name, 'user': userobj}\n            )\n            self.bus.publish('queue_mail', to=old_email, subject=str(subject), message=body)\n\n        if 'mfa' in attrs:\n            if not userobj.email:\n                logger.info(\"can't sent mail to user [%s] without an email\", userobj.username)\n                return\n            subject = (\n                _(\"Two-Factor Authentication turned off\")\n                if userobj.mfa == UserObject.DISABLED_MFA\n                else _(\"Two-Factor Authentication turned on\")\n            )\n            body = self.app.templates.compile_template(\n                \"email_mfa.html\", **{\"header_name\": self.app.cfg.header_name, 'user': userobj}\n            )\n            self.bus.publish('queue_mail', to=userobj.email, subject=str(subject), message=body)\n\n    def user_password_changed(self, userobj):\n        if not self.send_changed:\n            return\n\n        if not userobj.email:\n            logger.info(\"can't sent mail to user [%s] without an email\", userobj.username)\n            return\n\n        # If the email attributes was changed, send a mail notification.\n        body = self.app.templates.compile_template(\n            \"password_changed.html\", **{\"header_name\": self.app.cfg.header_name, 'user': userobj}\n        )\n        self.bus.publish('queue_mail', to=userobj.email, subject=_(\"Password changed\"), message=body)\n\n    def notification_job(self):\n        \"\"\"\n        Loop trough all the user repository and send notifications.\n        \"\"\"\n\n        now = librdiff.RdiffTime()\n\n        def _user_repos():\n            \"\"\"Return a generator trought user repos to be notified.\"\"\"\n            for user in UserObject.query.all():\n                # Check if user has email.\n                if not user.email:\n                    continue\n                # Identify old repo for current user.\n                old_repos = []\n                for repo in user.repo_objs:\n                    # Check if repo has age configured (in days)\n                    maxage = repo.maxage\n                    if not maxage or maxage <= 0:\n                        continue\n                    # Check repo age.\n                    if repo.last_backup_date is None or repo.last_backup_date < (now - datetime.timedelta(days=maxage)):\n                        old_repos.append(repo)\n                # Return an item only if user had old repo\n                if old_repos:\n                    yield user, old_repos\n\n        # For each candidate, send mail.\n        for user, repos in _user_repos():\n            parms = {'user': user, 'repos': repos}\n            body = self.app.templates.compile_template(\"email_notification.html\", **parms)\n            cherrypy.engine.publish('queue_mail', to=user.email, subject=_(\"Notification\"), message=body)", "target": 0}], "function_after": [{"function": "class NotificationPlugin(SimplePlugin):\n    \"\"\"\n    Send email notification when a repository get too old (without a backup).\n    \"\"\"\n\n    execution_time = '23:00'\n\n    send_changed = False\n\n    def start(self):\n        self.bus.log('Start Notification plugin')\n        self.bus.publish('schedule_job', self.execution_time, self.notification_job)\n        self.bus.subscribe('access_token_added', self.access_token_added)\n        self.bus.subscribe('user_attr_changed', self.user_attr_changed)\n        self.bus.subscribe('user_password_changed', self.user_password_changed)\n\n    start.priority = 55\n\n    def stop(self):\n        self.bus.log('Stop Notification plugin')\n        self.bus.publish('unschedule_job', self.notification_job)\n        self.bus.unsubscribe('access_token_added', self.access_token_added)\n        self.bus.unsubscribe('user_attr_changed', self.user_attr_changed)\n        self.bus.unsubscribe('user_password_changed', self.user_password_changed)\n\n    stop.priority = 45\n\n    @property\n    def app(self):\n        return cherrypy.tree.apps['']\n\n    def access_token_added(self, userobj, name):\n        if not self.send_changed:\n            return\n\n        if not userobj.email:\n            logger.info(\"can't sent mail to user [%s] without an email\", userobj.username)\n            return\n\n        # Send a mail notification\n        body = self.app.templates.compile_template(\n            \"email_access_token_added.html\", **{\"header_name\": self.app.cfg.header_name, 'user': userobj, 'name': name}\n        )\n        self.bus.publish('queue_mail', to=userobj.email, subject=_(\"A new access token has been created\"), message=body)\n\n    def user_attr_changed(self, userobj, attrs={}):\n        if not self.send_changed:\n            return\n\n        # Leave if the mail was not changed.\n        if 'email' in attrs:\n            old_email = attrs['email'][0]\n            if not old_email:\n                logger.info(\"can't sent mail to user [%s] without an email\", userobj.username)\n                return\n            # If the email attributes was changed, send a mail notification.\n            subject = _(\"Email address changed\")\n            body = self.app.templates.compile_template(\n                \"email_changed.html\", **{\"header_name\": self.app.cfg.header_name, 'user': userobj}\n            )\n            self.bus.publish('queue_mail', to=old_email, subject=str(subject), message=body)\n\n        if 'mfa' in attrs:\n            if not userobj.email:\n                logger.info(\"can't sent mail to user [%s] without an email\", userobj.username)\n                return\n            subject = (\n                _(\"Two-Factor Authentication turned off\")\n                if userobj.mfa == UserObject.DISABLED_MFA\n                else _(\"Two-Factor Authentication turned on\")\n            )\n            body = self.app.templates.compile_template(\n                \"email_mfa.html\", **{\"header_name\": self.app.cfg.header_name, 'user': userobj}\n            )\n            self.bus.publish('queue_mail', to=userobj.email, subject=str(subject), message=body)\n\n    def user_password_changed(self, userobj):\n        if not self.send_changed:\n            return\n\n        if not userobj.email:\n            logger.info(\"can't sent mail to user [%s] without an email\", userobj.username)\n            return\n\n        # If the email attributes was changed, send a mail notification.\n        body = self.app.templates.compile_template(\n            \"email_password_changed.html\", **{\"header_name\": self.app.cfg.header_name, 'user': userobj}\n        )\n        self.bus.publish('queue_mail', to=userobj.email, subject=_(\"Password changed\"), message=body)\n\n    def notification_job(self):\n        \"\"\"\n        Loop trough all the user repository and send notifications.\n        \"\"\"\n\n        now = librdiff.RdiffTime()\n\n        def _user_repos():\n            \"\"\"Return a generator trought user repos to be notified.\"\"\"\n            for user in UserObject.query.all():\n                # Check if user has email.\n                if not user.email:\n                    continue\n                # Identify old repo for current user.\n                old_repos = []\n                for repo in user.repo_objs:\n                    # Check if repo has age configured (in days)\n                    maxage = repo.maxage\n                    if not maxage or maxage <= 0:\n                        continue\n                    # Check repo age.\n                    if repo.last_backup_date is None or repo.last_backup_date < (now - datetime.timedelta(days=maxage)):\n                        old_repos.append(repo)\n                # Return an item only if user had old repo\n                if old_repos:\n                    yield user, old_repos\n\n        # For each candidate, send mail.\n        for user, repos in _user_repos():\n            parms = {'user': user, 'repos': repos}\n            body = self.app.templates.compile_template(\"email_notification.html\", **parms)\n            cherrypy.engine.publish('queue_mail', to=user.email, subject=_(\"Notification\"), message=body)", "target": 0}]}, {"raw_url": "https://github.com/ikus060/rdiffweb/raw/6afaae56a29536f0118b3380d296c416aa6d078d/rdiffweb%2Fcore%2Ftests%2Ftest_notification.py", "code": "# -*- coding: utf-8 -*-\n# rdiffweb, A web interface to rdiff-backup repositories\n# Copyright (C) 2012-2021 rdiffweb contributors\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\n\"\"\"\nCreated on Feb 13, 2016\n\n@author: Patrik Dufresne <patrik@ikus-soft.com>\n\"\"\"\nfrom unittest.mock import MagicMock\n\nimport cherrypy\n\nimport rdiffweb.core.notification\nimport rdiffweb.test\nfrom rdiffweb.core.model import RepoObject, UserObject\n\n\nclass NotificationJobTest(rdiffweb.test.WebCase):\n    def setUp(self):\n        self.listener = MagicMock()\n        cherrypy.engine.subscribe('queue_mail', self.listener.queue_email, priority=50)\n        return super().setUp()\n\n    def tearDown(self):\n        cherrypy.engine.unsubscribe('queue_mail', self.listener.queue_email)\n        return super().tearDown()\n\n    def test_check_schedule(self):\n        # Given the application is started\n        # Then remove_older job should be schedule\n        self.assertEqual(1, len([job for job in cherrypy.scheduler.list_jobs() if job.name == 'notification_job']))\n\n    def test_notification_job(self):\n        \"\"\"\n        Run the notification and check if mails are sent\n        \"\"\"\n        # Given a user with an email address and a repository with a maxage\n        # Set user config\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'test@test.com'\n        user.commit()\n        repo = RepoObject.query.filter(RepoObject.user == user, RepoObject.repopath == self.REPO).first()\n        repo.maxage = 1\n        repo.commit()\n        # When running notification_job\n        cherrypy.notification.notification_job()\n\n        # Then an email is queue for this user\n        self.listener.queue_email.assert_called_once_with(\n            to='test@test.com',\n            subject='Notification',\n            message=\"<html>\\n  <head></head>\\n  <body>\\n    <p>\\n      <a>Hey admin,</a>\\n    </p>\\n    <p>\\n      You are receiving this email to notify you about your backups. The\\n      following repositories are inactive for some time. We invite you to have a look\\n      at your last backup schedule.\\n    </p>\\n    <ul>\\n      \\n        <li>\\n          <a>testcases</a>\\n        </li>\\n      \\n    </ul>\\n    <p>If you don't want to be notify about this. You need to review your user preferences.</p>\\n  </body>\\n</html>\",\n        )\n\n    def test_notification_job_undefined_last_backup_date(self):\n        # Given a valid user with a repository configured for notification\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'test@test.com'\n        user.add().commit()\n        # Given a repo with last_backup_date None\n        repo = RepoObject.query.filter(RepoObject.user == user, RepoObject.repopath == 'broker-repo').first()\n        repo.maxage = 1\n        repo.add().commit()\n        self.assertIsNone(repo.last_backup_date)\n\n        # When Notification job is running\n        cherrypy.notification.notification_job()\n\n        # Then a notification is sent to the user.\n        self.listener.queue_email.assert_called_once_with(\n            to='test@test.com',\n            subject='Notification',\n            message=\"<html>\\n  <head></head>\\n  <body>\\n    <p>\\n      <a>Hey admin,</a>\\n    </p>\\n    <p>\\n      You are receiving this email to notify you about your backups. The\\n      following repositories are inactive for some time. We invite you to have a look\\n      at your last backup schedule.\\n    </p>\\n    <ul>\\n      \\n        <li>\\n          <a>broker-repo</a>\\n        </li>\\n      \\n    </ul>\\n    <p>If you don't want to be notify about this. You need to review your user preferences.</p>\\n  </body>\\n</html>\",\n        )\n\n    def test_notification_job_without_notification(self):\n        # Given a valid user with a repository configured without notification (-1)\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'test@test.com'\n        user.add().commit()\n        repo = RepoObject.query.filter(RepoObject.user == user, RepoObject.repopath == self.REPO).first()\n        repo.maxage = -1\n        repo.add().commit()\n\n        # Call notification.\n        cherrypy.notification.notification_job()\n\n        # Expect it to be called.\n        self.listener.queue_email.assert_not_called()\n\n\nclass NotificationPluginTest(rdiffweb.test.WebCase):\n\n    default_config = {\n        'email-send-changed-notification': True,\n    }\n\n    def setUp(self):\n        self.listener = MagicMock()\n        cherrypy.engine.subscribe('queue_mail', self.listener.queue_email, priority=50)\n        return super().setUp()\n\n    def tearDown(self):\n        cherrypy.engine.unsubscribe('queue_mail', self.listener.queue_email)\n        return super().tearDown()\n\n    def test_email_changed(self):\n        # Given a user with an email address\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'original_email@test.com'\n        user.add().commit()\n        self.listener.queue_email.reset_mock()\n\n        # When updating the user's email\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'email_changed@test.com'\n        user.add().commit()\n\n        # Then a email is queue to notify the user.\n        self.listener.queue_email.assert_called_once_with(\n            to='original_email@test.com',\n            subject='Email address changed',\n            message='<html>\\n  <head></head>\\n  <body>\\n    <p>\\n      <a>Hey admin,</a>\\n    </p>\\n    <p>\\n      <a>You recently changed the email address associated with your Rdiffweb account.</a>\\n    </p>\\n    <p>\\n      If you did not make this change and believe your account has been compromised, please contact your administrator.\\n    </p>\\n  </body>\\n</html>',\n        )\n\n    def test_email_updated_with_same_value(self):\n        # Given a user with an email\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'email_changed@test.com'\n        user.add().commit()\n        self.listener.queue_email.reset_mock()\n\n        # When updating the user's email with the same value\n        user.email = 'email_changed@test.com'\n        user.add().commit()\n\n        # Then no email are sent to the user\n        self.listener.queue_email.assert_not_called()\n\n    def test_password_change_notification(self):\n        # Given a user with a email.\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'password_change@test.com'\n        user.add().commit()\n        self.listener.queue_email.reset_mock()\n\n        # When updating the user password\n        user.set_password('new_password')\n        user.add().commit()\n\n        # Then a email is send to the user\n        self.listener.queue_email.assert_called_once_with(\n            to='password_change@test.com',\n            subject='Password changed',\n            message='<html>\\n  <head></head>\\n  <body>\\n    <p>\\n      <a>Hey admin,</a>\\n    </p>\\n    <p>You recently changed the password associated with your Rdiffweb account.</p>\\n    <p>\\n      If you did not make this change and believe your account has been compromised, please contact your administrator.\\n    </p>\\n  </body>\\n</html>',\n        )\n\n    def test_password_change_with_same_value(self):\n        # Given a user with a email.\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'password_change@test.com'\n        user.set_password('new_password')\n        user.add().commit()\n        self.listener.queue_email.reset_mock()\n\n        # When updating the user password with the same value\n        user.set_password('new_password')\n        user.add().commit()\n\n        # Then an email is sent to the user\n        self.listener.queue_email.assert_called_once_with(\n            to='password_change@test.com',\n            subject='Password changed',\n            message='<html>\\n  <head></head>\\n  <body>\\n    <p>\\n      <a>Hey admin,</a>\\n    </p>\\n    <p>You recently changed the password associated with your Rdiffweb account.</p>\\n    <p>\\n      If you did not make this change and believe your account has been compromised, please contact your administrator.\\n    </p>\\n  </body>\\n</html>',\n        )\n", "code_before": "# -*- coding: utf-8 -*-\n# rdiffweb, A web interface to rdiff-backup repositories\n# Copyright (C) 2012-2021 rdiffweb contributors\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\n\"\"\"\nCreated on Feb 13, 2016\n\n@author: Patrik Dufresne <patrik@ikus-soft.com>\n\"\"\"\nfrom unittest.mock import MagicMock\n\nimport cherrypy\n\nimport rdiffweb.core.notification\nimport rdiffweb.test\nfrom rdiffweb.core.model import RepoObject, UserObject\n\n\nclass NotificationJobTest(rdiffweb.test.WebCase):\n    def setUp(self):\n        self.listener = MagicMock()\n        cherrypy.engine.subscribe('queue_mail', self.listener.queue_email, priority=50)\n        return super().setUp()\n\n    def tearDown(self):\n        cherrypy.engine.unsubscribe('queue_mail', self.listener.queue_email)\n        return super().tearDown()\n\n    def test_check_schedule(self):\n        # Given the application is started\n        # Then remove_older job should be schedule\n        self.assertEqual(1, len([job for job in cherrypy.scheduler.list_jobs() if job.name == 'notification_job']))\n\n    def test_notification_job(self):\n        \"\"\"\n        Run the notification and check if mails are sent\n        \"\"\"\n        # Given a user with an email address and a repository with a maxage\n        # Set user config\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'test@test.com'\n        user.commit()\n        repo = RepoObject.query.filter(RepoObject.user == user, RepoObject.repopath == self.REPO).first()\n        repo.maxage = 1\n        repo.commit()\n        # When running notification_job\n        cherrypy.notification.notification_job()\n\n        # Then an email is queue for this user\n        self.listener.queue_email.assert_called_once_with(\n            to='test@test.com',\n            subject='Notification',\n            message=\"<html>\\n  <head></head>\\n  <body>\\n    Hey admin,\\n    <p>\\n      You are receiving this email to notify you about your backups. The\\n      following repositories are inactive for some time. We invite you to have a look\\n      at your last backup schedule.\\n    </p>\\n    <ul>\\n      <li>testcases</li>\\n    </ul>\\n    <p>\\n      If you don't want to be notify about this. You need to review your\\n      user preferences.\\n    </p>\\n  </body>\\n</html>\",\n        )\n\n    def test_notification_job_undefined_last_backup_date(self):\n        # Given a valid user with a repository configured for notification\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'test@test.com'\n        user.add().commit()\n        # Given a repo with last_backup_date None\n        repo = RepoObject.query.filter(RepoObject.user == user, RepoObject.repopath == 'broker-repo').first()\n        repo.maxage = 1\n        repo.add().commit()\n        self.assertIsNone(repo.last_backup_date)\n\n        # When Notification job is running\n        cherrypy.notification.notification_job()\n\n        # Then a notification is sent to the user.\n        self.listener.queue_email.assert_called_once_with(\n            to='test@test.com',\n            subject='Notification',\n            message=\"<html>\\n  <head></head>\\n  <body>\\n    Hey admin,\\n    <p>\\n      You are receiving this email to notify you about your backups. The\\n      following repositories are inactive for some time. We invite you to have a look\\n      at your last backup schedule.\\n    </p>\\n    <ul>\\n      <li>broker-repo</li>\\n    </ul>\\n    <p>\\n      If you don't want to be notify about this. You need to review your\\n      user preferences.\\n    </p>\\n  </body>\\n</html>\",\n        )\n\n    def test_notification_job_without_notification(self):\n        # Given a valid user with a repository configured without notification (-1)\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'test@test.com'\n        user.add().commit()\n        repo = RepoObject.query.filter(RepoObject.user == user, RepoObject.repopath == self.REPO).first()\n        repo.maxage = -1\n        repo.add().commit()\n\n        # Call notification.\n        cherrypy.notification.notification_job()\n\n        # Expect it to be called.\n        self.listener.queue_email.assert_not_called()\n\n\nclass NotificationPluginTest(rdiffweb.test.WebCase):\n\n    default_config = {\n        'email-send-changed-notification': True,\n    }\n\n    def setUp(self):\n        self.listener = MagicMock()\n        cherrypy.engine.subscribe('queue_mail', self.listener.queue_email, priority=50)\n        return super().setUp()\n\n    def tearDown(self):\n        cherrypy.engine.unsubscribe('queue_mail', self.listener.queue_email)\n        return super().tearDown()\n\n    def test_email_changed(self):\n        # Given a user with an email address\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'original_email@test.com'\n        user.add().commit()\n        self.listener.queue_email.reset_mock()\n\n        # When updating the user's email\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'email_changed@test.com'\n        user.add().commit()\n\n        # Then a email is queue to notify the user.\n        self.listener.queue_email.assert_called_once_with(\n            to='original_email@test.com',\n            subject='Email address changed',\n            message='<html>\\n  <head></head>\\n  <body>\\n    Hey admin,\\n    <p>You recently changed the email address associated with your Rdiffweb account.</p>\\n    <p>\\n      If you did not make this change and believe your account has been compromised, please contact your administrator.\\n    </p>\\n  </body>\\n</html>',\n        )\n\n    def test_email_updated_with_same_value(self):\n        # Given a user with an email\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'email_changed@test.com'\n        user.add().commit()\n        self.listener.queue_email.reset_mock()\n\n        # When updating the user's email with the same value\n        user.email = 'email_changed@test.com'\n        user.add().commit()\n\n        # Then no email are sent to the user\n        self.listener.queue_email.assert_not_called()\n\n    def test_password_change_notification(self):\n        # Given a user with a email.\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'password_change@test.com'\n        user.add().commit()\n        self.listener.queue_email.reset_mock()\n\n        # When updating the user password\n        user.set_password('new_password')\n        user.add().commit()\n\n        # Then a email is send to the user\n        self.listener.queue_email.assert_called_once_with(\n            to='password_change@test.com',\n            subject='Password changed',\n            message='<html>\\n  <head></head>\\n  <body>\\n    Hey admin,\\n    <p>You recently changed the password associated with your Rdiffweb account.</p>\\n    <p>\\n      If you did not make this change and believe your account has been compromised, please contact your administrator.\\n    </p>\\n  </body>\\n</html>',\n        )\n\n    def test_password_change_with_same_value(self):\n        # Given a user with a email.\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'password_change@test.com'\n        user.set_password('new_password')\n        user.add().commit()\n        self.listener.queue_email.reset_mock()\n\n        # When updating the user password with the same value\n        user.set_password('new_password')\n        user.add().commit()\n\n        # Then an email is sent to the user\n        self.listener.queue_email.assert_called_once_with(\n            to='password_change@test.com',\n            subject='Password changed',\n            message='<html>\\n  <head></head>\\n  <body>\\n    Hey admin,\\n    <p>You recently changed the password associated with your Rdiffweb account.</p>\\n    <p>\\n      If you did not make this change and believe your account has been compromised, please contact your administrator.\\n    </p>\\n  </body>\\n</html>',\n        )\n", "patch": "@@ -64,7 +64,7 @@ def test_notification_job(self):\n         self.listener.queue_email.assert_called_once_with(\n             to='test@test.com',\n             subject='Notification',\n-            message=\"<html>\\n  <head></head>\\n  <body>\\n    Hey admin,\\n    <p>\\n      You are receiving this email to notify you about your backups. The\\n      following repositories are inactive for some time. We invite you to have a look\\n      at your last backup schedule.\\n    </p>\\n    <ul>\\n      <li>testcases</li>\\n    </ul>\\n    <p>\\n      If you don't want to be notify about this. You need to review your\\n      user preferences.\\n    </p>\\n  </body>\\n</html>\",\n+            message=\"<html>\\n  <head></head>\\n  <body>\\n    <p>\\n      <a>Hey admin,</a>\\n    </p>\\n    <p>\\n      You are receiving this email to notify you about your backups. The\\n      following repositories are inactive for some time. We invite you to have a look\\n      at your last backup schedule.\\n    </p>\\n    <ul>\\n      \\n        <li>\\n          <a>testcases</a>\\n        </li>\\n      \\n    </ul>\\n    <p>If you don't want to be notify about this. You need to review your user preferences.</p>\\n  </body>\\n</html>\",\n         )\n \n     def test_notification_job_undefined_last_backup_date(self):\n@@ -85,7 +85,7 @@ def test_notification_job_undefined_last_backup_date(self):\n         self.listener.queue_email.assert_called_once_with(\n             to='test@test.com',\n             subject='Notification',\n-            message=\"<html>\\n  <head></head>\\n  <body>\\n    Hey admin,\\n    <p>\\n      You are receiving this email to notify you about your backups. The\\n      following repositories are inactive for some time. We invite you to have a look\\n      at your last backup schedule.\\n    </p>\\n    <ul>\\n      <li>broker-repo</li>\\n    </ul>\\n    <p>\\n      If you don't want to be notify about this. You need to review your\\n      user preferences.\\n    </p>\\n  </body>\\n</html>\",\n+            message=\"<html>\\n  <head></head>\\n  <body>\\n    <p>\\n      <a>Hey admin,</a>\\n    </p>\\n    <p>\\n      You are receiving this email to notify you about your backups. The\\n      following repositories are inactive for some time. We invite you to have a look\\n      at your last backup schedule.\\n    </p>\\n    <ul>\\n      \\n        <li>\\n          <a>broker-repo</a>\\n        </li>\\n      \\n    </ul>\\n    <p>If you don't want to be notify about this. You need to review your user preferences.</p>\\n  </body>\\n</html>\",\n         )\n \n     def test_notification_job_without_notification(self):\n@@ -135,7 +135,7 @@ def test_email_changed(self):\n         self.listener.queue_email.assert_called_once_with(\n             to='original_email@test.com',\n             subject='Email address changed',\n-            message='<html>\\n  <head></head>\\n  <body>\\n    Hey admin,\\n    <p>You recently changed the email address associated with your Rdiffweb account.</p>\\n    <p>\\n      If you did not make this change and believe your account has been compromised, please contact your administrator.\\n    </p>\\n  </body>\\n</html>',\n+            message='<html>\\n  <head></head>\\n  <body>\\n    <p>\\n      <a>Hey admin,</a>\\n    </p>\\n    <p>\\n      <a>You recently changed the email address associated with your Rdiffweb account.</a>\\n    </p>\\n    <p>\\n      If you did not make this change and believe your account has been compromised, please contact your administrator.\\n    </p>\\n  </body>\\n</html>',\n         )\n \n     def test_email_updated_with_same_value(self):\n@@ -167,7 +167,7 @@ def test_password_change_notification(self):\n         self.listener.queue_email.assert_called_once_with(\n             to='password_change@test.com',\n             subject='Password changed',\n-            message='<html>\\n  <head></head>\\n  <body>\\n    Hey admin,\\n    <p>You recently changed the password associated with your Rdiffweb account.</p>\\n    <p>\\n      If you did not make this change and believe your account has been compromised, please contact your administrator.\\n    </p>\\n  </body>\\n</html>',\n+            message='<html>\\n  <head></head>\\n  <body>\\n    <p>\\n      <a>Hey admin,</a>\\n    </p>\\n    <p>You recently changed the password associated with your Rdiffweb account.</p>\\n    <p>\\n      If you did not make this change and believe your account has been compromised, please contact your administrator.\\n    </p>\\n  </body>\\n</html>',\n         )\n \n     def test_password_change_with_same_value(self):\n@@ -186,5 +186,5 @@ def test_password_change_with_same_value(self):\n         self.listener.queue_email.assert_called_once_with(\n             to='password_change@test.com',\n             subject='Password changed',\n-            message='<html>\\n  <head></head>\\n  <body>\\n    Hey admin,\\n    <p>You recently changed the password associated with your Rdiffweb account.</p>\\n    <p>\\n      If you did not make this change and believe your account has been compromised, please contact your administrator.\\n    </p>\\n  </body>\\n</html>',\n+            message='<html>\\n  <head></head>\\n  <body>\\n    <p>\\n      <a>Hey admin,</a>\\n    </p>\\n    <p>You recently changed the password associated with your Rdiffweb account.</p>\\n    <p>\\n      If you did not make this change and believe your account has been compromised, please contact your administrator.\\n    </p>\\n  </body>\\n</html>',\n         )", "file_path": "files/2022_12/575", "file_language": "py", "file_name": "rdiffweb/core/tests/test_notification.py", "outdated_file_modify": 1, "outdated_file_before": 0, "outdated_file_after": 1, "llm_check": 0, "static_check": 0, "static": {"rats": [false, []], "semgrep": [false, []]}, "target": 0, "function_before": [{"function": "class NotificationJobTest(rdiffweb.test.WebCase):\n    def setUp(self):\n        self.listener = MagicMock()\n        cherrypy.engine.subscribe('queue_mail', self.listener.queue_email, priority=50)\n        return super().setUp()\n\n    def tearDown(self):\n        cherrypy.engine.unsubscribe('queue_mail', self.listener.queue_email)\n        return super().tearDown()\n\n    def test_check_schedule(self):\n        # Given the application is started\n        # Then remove_older job should be schedule\n        self.assertEqual(1, len([job for job in cherrypy.scheduler.list_jobs() if job.name == 'notification_job']))\n\n    def test_notification_job(self):\n        \"\"\"\n        Run the notification and check if mails are sent\n        \"\"\"\n        # Given a user with an email address and a repository with a maxage\n        # Set user config\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'test@test.com'\n        user.commit()\n        repo = RepoObject.query.filter(RepoObject.user == user, RepoObject.repopath == self.REPO).first()\n        repo.maxage = 1\n        repo.commit()\n        # When running notification_job\n        cherrypy.notification.notification_job()\n\n        # Then an email is queue for this user\n        self.listener.queue_email.assert_called_once_with(\n            to='test@test.com',\n            subject='Notification',\n            message=\"<html>\\n  <head></head>\\n  <body>\\n    Hey admin,\\n    <p>\\n      You are receiving this email to notify you about your backups. The\\n      following repositories are inactive for some time. We invite you to have a look\\n      at your last backup schedule.\\n    </p>\\n    <ul>\\n      <li>testcases</li>\\n    </ul>\\n    <p>\\n      If you don't want to be notify about this. You need to review your\\n      user preferences.\\n    </p>\\n  </body>\\n</html>\",\n        )\n\n    def test_notification_job_undefined_last_backup_date(self):\n        # Given a valid user with a repository configured for notification\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'test@test.com'\n        user.add().commit()\n        # Given a repo with last_backup_date None\n        repo = RepoObject.query.filter(RepoObject.user == user, RepoObject.repopath == 'broker-repo').first()\n        repo.maxage = 1\n        repo.add().commit()\n        self.assertIsNone(repo.last_backup_date)\n\n        # When Notification job is running\n        cherrypy.notification.notification_job()\n\n        # Then a notification is sent to the user.\n        self.listener.queue_email.assert_called_once_with(\n            to='test@test.com',\n            subject='Notification',\n            message=\"<html>\\n  <head></head>\\n  <body>\\n    Hey admin,\\n    <p>\\n      You are receiving this email to notify you about your backups. The\\n      following repositories are inactive for some time. We invite you to have a look\\n      at your last backup schedule.\\n    </p>\\n    <ul>\\n      <li>broker-repo</li>\\n    </ul>\\n    <p>\\n      If you don't want to be notify about this. You need to review your\\n      user preferences.\\n    </p>\\n  </body>\\n</html>\",\n        )\n\n    def test_notification_job_without_notification(self):\n        # Given a valid user with a repository configured without notification (-1)\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'test@test.com'\n        user.add().commit()\n        repo = RepoObject.query.filter(RepoObject.user == user, RepoObject.repopath == self.REPO).first()\n        repo.maxage = -1\n        repo.add().commit()\n\n        # Call notification.\n        cherrypy.notification.notification_job()\n\n        # Expect it to be called.\n        self.listener.queue_email.assert_not_called()", "target": 0}, {"function": "class NotificationPluginTest(rdiffweb.test.WebCase):\n\n    default_config = {\n        'email-send-changed-notification': True,\n    }\n\n    def setUp(self):\n        self.listener = MagicMock()\n        cherrypy.engine.subscribe('queue_mail', self.listener.queue_email, priority=50)\n        return super().setUp()\n\n    def tearDown(self):\n        cherrypy.engine.unsubscribe('queue_mail', self.listener.queue_email)\n        return super().tearDown()\n\n    def test_email_changed(self):\n        # Given a user with an email address\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'original_email@test.com'\n        user.add().commit()\n        self.listener.queue_email.reset_mock()\n\n        # When updating the user's email\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'email_changed@test.com'\n        user.add().commit()\n\n        # Then a email is queue to notify the user.\n        self.listener.queue_email.assert_called_once_with(\n            to='original_email@test.com',\n            subject='Email address changed',\n            message='<html>\\n  <head></head>\\n  <body>\\n    Hey admin,\\n    <p>You recently changed the email address associated with your Rdiffweb account.</p>\\n    <p>\\n      If you did not make this change and believe your account has been compromised, please contact your administrator.\\n    </p>\\n  </body>\\n</html>',\n        )\n\n    def test_email_updated_with_same_value(self):\n        # Given a user with an email\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'email_changed@test.com'\n        user.add().commit()\n        self.listener.queue_email.reset_mock()\n\n        # When updating the user's email with the same value\n        user.email = 'email_changed@test.com'\n        user.add().commit()\n\n        # Then no email are sent to the user\n        self.listener.queue_email.assert_not_called()\n\n    def test_password_change_notification(self):\n        # Given a user with a email.\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'password_change@test.com'\n        user.add().commit()\n        self.listener.queue_email.reset_mock()\n\n        # When updating the user password\n        user.set_password('new_password')\n        user.add().commit()\n\n        # Then a email is send to the user\n        self.listener.queue_email.assert_called_once_with(\n            to='password_change@test.com',\n            subject='Password changed',\n            message='<html>\\n  <head></head>\\n  <body>\\n    Hey admin,\\n    <p>You recently changed the password associated with your Rdiffweb account.</p>\\n    <p>\\n      If you did not make this change and believe your account has been compromised, please contact your administrator.\\n    </p>\\n  </body>\\n</html>',\n        )\n\n    def test_password_change_with_same_value(self):\n        # Given a user with a email.\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'password_change@test.com'\n        user.set_password('new_password')\n        user.add().commit()\n        self.listener.queue_email.reset_mock()\n\n        # When updating the user password with the same value\n        user.set_password('new_password')\n        user.add().commit()\n\n        # Then an email is sent to the user\n        self.listener.queue_email.assert_called_once_with(\n            to='password_change@test.com',\n            subject='Password changed',\n            message='<html>\\n  <head></head>\\n  <body>\\n    Hey admin,\\n    <p>You recently changed the password associated with your Rdiffweb account.</p>\\n    <p>\\n      If you did not make this change and believe your account has been compromised, please contact your administrator.\\n    </p>\\n  </body>\\n</html>',\n        )", "target": 0}], "function_after": [{"function": "class NotificationJobTest(rdiffweb.test.WebCase):\n    def setUp(self):\n        self.listener = MagicMock()\n        cherrypy.engine.subscribe('queue_mail', self.listener.queue_email, priority=50)\n        return super().setUp()\n\n    def tearDown(self):\n        cherrypy.engine.unsubscribe('queue_mail', self.listener.queue_email)\n        return super().tearDown()\n\n    def test_check_schedule(self):\n        # Given the application is started\n        # Then remove_older job should be schedule\n        self.assertEqual(1, len([job for job in cherrypy.scheduler.list_jobs() if job.name == 'notification_job']))\n\n    def test_notification_job(self):\n        \"\"\"\n        Run the notification and check if mails are sent\n        \"\"\"\n        # Given a user with an email address and a repository with a maxage\n        # Set user config\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'test@test.com'\n        user.commit()\n        repo = RepoObject.query.filter(RepoObject.user == user, RepoObject.repopath == self.REPO).first()\n        repo.maxage = 1\n        repo.commit()\n        # When running notification_job\n        cherrypy.notification.notification_job()\n\n        # Then an email is queue for this user\n        self.listener.queue_email.assert_called_once_with(\n            to='test@test.com',\n            subject='Notification',\n            message=\"<html>\\n  <head></head>\\n  <body>\\n    <p>\\n      <a>Hey admin,</a>\\n    </p>\\n    <p>\\n      You are receiving this email to notify you about your backups. The\\n      following repositories are inactive for some time. We invite you to have a look\\n      at your last backup schedule.\\n    </p>\\n    <ul>\\n      \\n        <li>\\n          <a>testcases</a>\\n        </li>\\n      \\n    </ul>\\n    <p>If you don't want to be notify about this. You need to review your user preferences.</p>\\n  </body>\\n</html>\",\n        )\n\n    def test_notification_job_undefined_last_backup_date(self):\n        # Given a valid user with a repository configured for notification\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'test@test.com'\n        user.add().commit()\n        # Given a repo with last_backup_date None\n        repo = RepoObject.query.filter(RepoObject.user == user, RepoObject.repopath == 'broker-repo').first()\n        repo.maxage = 1\n        repo.add().commit()\n        self.assertIsNone(repo.last_backup_date)\n\n        # When Notification job is running\n        cherrypy.notification.notification_job()\n\n        # Then a notification is sent to the user.\n        self.listener.queue_email.assert_called_once_with(\n            to='test@test.com',\n            subject='Notification',\n            message=\"<html>\\n  <head></head>\\n  <body>\\n    <p>\\n      <a>Hey admin,</a>\\n    </p>\\n    <p>\\n      You are receiving this email to notify you about your backups. The\\n      following repositories are inactive for some time. We invite you to have a look\\n      at your last backup schedule.\\n    </p>\\n    <ul>\\n      \\n        <li>\\n          <a>broker-repo</a>\\n        </li>\\n      \\n    </ul>\\n    <p>If you don't want to be notify about this. You need to review your user preferences.</p>\\n  </body>\\n</html>\",\n        )\n\n    def test_notification_job_without_notification(self):\n        # Given a valid user with a repository configured without notification (-1)\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'test@test.com'\n        user.add().commit()\n        repo = RepoObject.query.filter(RepoObject.user == user, RepoObject.repopath == self.REPO).first()\n        repo.maxage = -1\n        repo.add().commit()\n\n        # Call notification.\n        cherrypy.notification.notification_job()\n\n        # Expect it to be called.\n        self.listener.queue_email.assert_not_called()", "target": 0}, {"function": "class NotificationPluginTest(rdiffweb.test.WebCase):\n\n    default_config = {\n        'email-send-changed-notification': True,\n    }\n\n    def setUp(self):\n        self.listener = MagicMock()\n        cherrypy.engine.subscribe('queue_mail', self.listener.queue_email, priority=50)\n        return super().setUp()\n\n    def tearDown(self):\n        cherrypy.engine.unsubscribe('queue_mail', self.listener.queue_email)\n        return super().tearDown()\n\n    def test_email_changed(self):\n        # Given a user with an email address\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'original_email@test.com'\n        user.add().commit()\n        self.listener.queue_email.reset_mock()\n\n        # When updating the user's email\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'email_changed@test.com'\n        user.add().commit()\n\n        # Then a email is queue to notify the user.\n        self.listener.queue_email.assert_called_once_with(\n            to='original_email@test.com',\n            subject='Email address changed',\n            message='<html>\\n  <head></head>\\n  <body>\\n    <p>\\n      <a>Hey admin,</a>\\n    </p>\\n    <p>\\n      <a>You recently changed the email address associated with your Rdiffweb account.</a>\\n    </p>\\n    <p>\\n      If you did not make this change and believe your account has been compromised, please contact your administrator.\\n    </p>\\n  </body>\\n</html>',\n        )\n\n    def test_email_updated_with_same_value(self):\n        # Given a user with an email\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'email_changed@test.com'\n        user.add().commit()\n        self.listener.queue_email.reset_mock()\n\n        # When updating the user's email with the same value\n        user.email = 'email_changed@test.com'\n        user.add().commit()\n\n        # Then no email are sent to the user\n        self.listener.queue_email.assert_not_called()\n\n    def test_password_change_notification(self):\n        # Given a user with a email.\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'password_change@test.com'\n        user.add().commit()\n        self.listener.queue_email.reset_mock()\n\n        # When updating the user password\n        user.set_password('new_password')\n        user.add().commit()\n\n        # Then a email is send to the user\n        self.listener.queue_email.assert_called_once_with(\n            to='password_change@test.com',\n            subject='Password changed',\n            message='<html>\\n  <head></head>\\n  <body>\\n    <p>\\n      <a>Hey admin,</a>\\n    </p>\\n    <p>You recently changed the password associated with your Rdiffweb account.</p>\\n    <p>\\n      If you did not make this change and believe your account has been compromised, please contact your administrator.\\n    </p>\\n  </body>\\n</html>',\n        )\n\n    def test_password_change_with_same_value(self):\n        # Given a user with a email.\n        user = UserObject.get_user(self.USERNAME)\n        user.email = 'password_change@test.com'\n        user.set_password('new_password')\n        user.add().commit()\n        self.listener.queue_email.reset_mock()\n\n        # When updating the user password with the same value\n        user.set_password('new_password')\n        user.add().commit()\n\n        # Then an email is sent to the user\n        self.listener.queue_email.assert_called_once_with(\n            to='password_change@test.com',\n            subject='Password changed',\n            message='<html>\\n  <head></head>\\n  <body>\\n    <p>\\n      <a>Hey admin,</a>\\n    </p>\\n    <p>You recently changed the password associated with your Rdiffweb account.</p>\\n    <p>\\n      If you did not make this change and believe your account has been compromised, please contact your administrator.\\n    </p>\\n  </body>\\n</html>',\n        )", "target": 0}]}, {"raw_url": "https://github.com/ikus060/rdiffweb/raw/b0c142251987302e04b2b1c35cf229b7bf93ff57/rdiffweb%2Ftemplates%2Faccess_token_added.html", "code": "<html>\n  <head></head>\n  <body>\n    {% trans username=user.username %}Hey {{ username }},{% endtrans %}\n    <p>{% trans %}A new access token, named \"{{ name }}\", has been created.{% endtrans %}</p>\n    <p>\n      {% trans %}If you did not make this change and believe your account has been compromised, please contact your administrator.{% endtrans %}\n    </p>\n  </body>\n</html>\n", "code_before": "<html>\n  <head></head>\n  <body>\n    {% trans username=user.username %}Hey {{ username }},{% endtrans %}\n    <p>{% trans %}A new access token, named \"{{ name }}\", has been created.{% endtrans %}</p>\n    <p>\n      {% trans %}If you did not make this change and believe your account has been compromised, please contact your administrator.{% endtrans %}\n    </p>\n  </body>\n</html>\n", "patch": "@@ -1,10 +0,0 @@\n-<html>\n-  <head></head>\n-  <body>\n-    {% trans username=user.username %}Hey {{ username }},{% endtrans %}\n-    <p>{% trans %}A new access token, named \"{{ name }}\", has been created.{% endtrans %}</p>\n-    <p>\n-      {% trans %}If you did not make this change and believe your account has been compromised, please contact your administrator.{% endtrans %}\n-    </p>\n-  </body>\n-</html>", "file_path": "files/2022_12/576", "file_language": "html", "file_name": "rdiffweb/templates/access_token_added.html", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 0}, {"raw_url": "https://github.com/ikus060/rdiffweb/raw/6afaae56a29536f0118b3380d296c416aa6d078d/rdiffweb%2Ftemplates%2Femail_access_token_added.html", "code": "<html>\n  <head></head>\n  <body>\n    <p>\n      <a>{% trans username=(user.fullname or user.username) %}Hey {{ username }},{% endtrans %}</a>\n    </p>\n    <p>\n      <a>{% trans %}A new access token, named \"{{ name }}\", has been created.{% endtrans %}</a>\n    </p>\n    <p>\n      {% trans %}If you did not make this change and believe your account has been compromised, please contact your administrator.{% endtrans %}\n    </p>\n  </body>\n</html>\n", "code_before": "", "patch": "@@ -0,0 +1,14 @@\n+<html>\n+  <head></head>\n+  <body>\n+    <p>\n+      <a>{% trans username=(user.fullname or user.username) %}Hey {{ username }},{% endtrans %}</a>\n+    </p>\n+    <p>\n+      <a>{% trans %}A new access token, named \"{{ name }}\", has been created.{% endtrans %}</a>\n+    </p>\n+    <p>\n+      {% trans %}If you did not make this change and believe your account has been compromised, please contact your administrator.{% endtrans %}\n+    </p>\n+  </body>\n+</html>", "file_path": "files/2022_12/577", "file_language": "html", "file_name": "rdiffweb/templates/email_access_token_added.html", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 0}, {"raw_url": "https://github.com/ikus060/rdiffweb/raw/6afaae56a29536f0118b3380d296c416aa6d078d/rdiffweb%2Ftemplates%2Femail_changed.html", "code": "<html>\n  <head></head>\n  <body>\n    <p>\n      <a>{% trans username=(user.fullname or user.username) %}Hey {{ username }},{% endtrans %}</a>\n    </p>\n    <p>\n      <a>{% trans %}You recently changed the email address associated with your {{ header_name }} account.{% endtrans %}</a>\n    </p>\n    <p>\n      {% trans %}If you did not make this change and believe your account has been compromised, please contact your administrator.{% endtrans %}\n    </p>\n  </body>\n</html>\n", "code_before": "<html>\n  <head></head>\n  <body>\n    {% trans username=(user.fullname or user.username) %}Hey {{ username }},{% endtrans %}\n    <p>{% trans %}You recently changed the email address associated with your {{ header_name }} account.{% endtrans %}</p>\n    <p>\n      {% trans %}If you did not make this change and believe your account has been compromised, please contact your administrator.{% endtrans %}\n    </p>\n  </body>\n</html>\n", "patch": "@@ -1,8 +1,12 @@\n <html>\n   <head></head>\n   <body>\n-    {% trans username=(user.fullname or user.username) %}Hey {{ username }},{% endtrans %}\n-    <p>{% trans %}You recently changed the email address associated with your {{ header_name }} account.{% endtrans %}</p>\n+    <p>\n+      <a>{% trans username=(user.fullname or user.username) %}Hey {{ username }},{% endtrans %}</a>\n+    </p>\n+    <p>\n+      <a>{% trans %}You recently changed the email address associated with your {{ header_name }} account.{% endtrans %}</a>\n+    </p>\n     <p>\n       {% trans %}If you did not make this change and believe your account has been compromised, please contact your administrator.{% endtrans %}\n     </p>", "file_path": "files/2022_12/578", "file_language": "html", "file_name": "rdiffweb/templates/email_changed.html", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 0}, {"raw_url": "https://github.com/ikus060/rdiffweb/raw/6afaae56a29536f0118b3380d296c416aa6d078d/rdiffweb%2Ftemplates%2Femail_mfa.html", "code": "<html>\n  <head></head>\n  <body>\n    <p>\n      <a>{% trans username=(user.fullname or user.username) %}Hey {{ username }},{% endtrans %}</a>\n    </p>\n    <p>\n      {% if user.mfa %}\n        {% trans %}Your {{ header_name }} Account is now protected with Two-Factor Authentication. When you sign in on a new or untrusted device, you'll need your second factor to verify your identity.{% endtrans %}\n      {% else %}\n        {% trans %}Your {{ header_name }} account is no longer protected with Two-Factor Authentication. You don't need your second factor to sign in.{% endtrans %}\n      {% endif %}\n    </p>\n    <p>\n      {% trans %}You received this email to let you know about important changes to your {{ header_name }} Account.{% endtrans %}\n    </p>\n  </body>\n</html>\n", "code_before": "<html>\n  <head></head>\n  <body>\n    {% trans username=(user.fullname or user.username) %}Hey {{ username }},{% endtrans %}\n    <p>\n      {% if user.mfa %}\n        {% trans %}Your {{ header_name }} Account is now protected with Two-Factor Authentication. When you sign in on a new or untrusted device, you'll need your second factor to verify your identity.{% endtrans %}\n      {% else %}\n        {% trans %}Your {{ header_name }} account is no longer protected with Two-Factor Authentication. You don't need your second factor to sign in.{% endtrans %}\n      {% endif %}\n    </p>\n    <p>\n      {% trans %}You received this email to let you know about important changes to your {{ header_name }} Account.{% endtrans %}\n    </p>\n  </body>\n</html>\n", "patch": "@@ -1,7 +1,9 @@\n <html>\n   <head></head>\n   <body>\n-    {% trans username=(user.fullname or user.username) %}Hey {{ username }},{% endtrans %}\n+    <p>\n+      <a>{% trans username=(user.fullname or user.username) %}Hey {{ username }},{% endtrans %}</a>\n+    </p>\n     <p>\n       {% if user.mfa %}\n         {% trans %}Your {{ header_name }} Account is now protected with Two-Factor Authentication. When you sign in on a new or untrusted device, you'll need your second factor to verify your identity.{% endtrans %}", "file_path": "files/2022_12/579", "file_language": "html", "file_name": "rdiffweb/templates/email_mfa.html", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 0}, {"raw_url": "https://github.com/ikus060/rdiffweb/raw/6afaae56a29536f0118b3380d296c416aa6d078d/rdiffweb%2Ftemplates%2Femail_notification.html", "code": "<html>\n  <head></head>\n  <body>\n    <p>\n      <a>{% trans username=(user.fullname or user.username) %}Hey {{ username }},{% endtrans %}</a>\n    </p>\n    <p>\n      {% trans %}You are receiving this email to notify you about your backups. The\n      following repositories are inactive for some time. We invite you to have a look\n      at your last backup schedule.{% endtrans %}\n    </p>\n    <ul>\n      {% for r in repos %}\n        <li>\n          <a>{{ r.display_name }}</a>\n        </li>\n      {% endfor %}\n    </ul>\n    <p>{% trans %}If you don't want to be notify about this. You need to review your user preferences.{% endtrans %}</p>\n  </body>\n</html>\n", "code_before": "<html>\n  <head></head>\n  <body>\n    {% trans username=(user.fullname or user.username) %}Hey {{ username }},{% endtrans %}\n    <p>\n      {% trans %}You are receiving this email to notify you about your backups. The\n      following repositories are inactive for some time. We invite you to have a look\n      at your last backup schedule.{% endtrans %}\n    </p>\n    <ul>\n      {% for r in repos %}<li>{{ r.display_name }}</li>{% endfor %}\n    </ul>\n    <p>\n      {% trans %}If you don't want to be notify about this. You need to review your\n      user preferences.{% endtrans %}\n    </p>\n  </body>\n</html>\n", "patch": "@@ -1,18 +1,21 @@\n <html>\n   <head></head>\n   <body>\n-    {% trans username=(user.fullname or user.username) %}Hey {{ username }},{% endtrans %}\n+    <p>\n+      <a>{% trans username=(user.fullname or user.username) %}Hey {{ username }},{% endtrans %}</a>\n+    </p>\n     <p>\n       {% trans %}You are receiving this email to notify you about your backups. The\n       following repositories are inactive for some time. We invite you to have a look\n       at your last backup schedule.{% endtrans %}\n     </p>\n     <ul>\n-      {% for r in repos %}<li>{{ r.display_name }}</li>{% endfor %}\n+      {% for r in repos %}\n+        <li>\n+          <a>{{ r.display_name }}</a>\n+        </li>\n+      {% endfor %}\n     </ul>\n-    <p>\n-      {% trans %}If you don't want to be notify about this. You need to review your\n-      user preferences.{% endtrans %}\n-    </p>\n+    <p>{% trans %}If you don't want to be notify about this. You need to review your user preferences.{% endtrans %}</p>\n   </body>\n </html>", "file_path": "files/2022_12/580", "file_language": "html", "file_name": "rdiffweb/templates/email_notification.html", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 0}, {"raw_url": "https://github.com/ikus060/rdiffweb/raw/6afaae56a29536f0118b3380d296c416aa6d078d/rdiffweb%2Ftemplates%2Femail_password_changed.html", "code": "<html>\n  <head></head>\n  <body>\n    <p>\n      <a>{% trans username=(user.fullname or user.username) %}Hey {{ username }},{% endtrans %}</a>\n    </p>\n    <p>{% trans %}You recently changed the password associated with your {{ header_name }} account.{% endtrans %}</p>\n    <p>\n      {% trans %}If you did not make this change and believe your account has been compromised, please contact your administrator.{% endtrans %}\n    </p>\n  </body>\n</html>\n", "code_before": "", "patch": "@@ -1,7 +1,9 @@\n <html>\n   <head></head>\n   <body>\n-    {% trans username=user.username %}Hey {{ username }},{% endtrans %}\n+    <p>\n+      <a>{% trans username=(user.fullname or user.username) %}Hey {{ username }},{% endtrans %}</a>\n+    </p>\n     <p>{% trans %}You recently changed the password associated with your {{ header_name }} account.{% endtrans %}</p>\n     <p>\n       {% trans %}If you did not make this change and believe your account has been compromised, please contact your administrator.{% endtrans %}", "file_path": "files/2022_12/581", "file_language": "html", "file_name": "rdiffweb/templates/email_password_changed.html", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 0}, {"raw_url": "https://github.com/ikus060/rdiffweb/raw/6afaae56a29536f0118b3380d296c416aa6d078d/rdiffweb%2Ftemplates%2Femail_verification_code.html", "code": "<html>\n  <head></head>\n  <body>\n    <p>\n      <a>{% trans username=(user.fullname or user.username) %}Hey {{ username }},{% endtrans %}</a>\n    </p>\n    <p>\n      {% trans %}To help us make sure it's really you, here's the verification code you'll need to log in:{% endtrans %}\n    </p>\n    <p>\n      <strong>{{ code }}</strong>\n    </p>\n    <p>\n      {% trans %}If this wasn't you logging in, and you use a password to log in, please reset your password.{% endtrans %}\n    </p>\n    <p>\n      {% trans %}This code will expire in 1 hour. Once the code expires, you will need to request a new verification code by going through the login procedure again.{% endtrans %}\n    </p>\n  </body>\n</html>\n", "code_before": "<html>\n  <head></head>\n  <body>\n    {% trans username=(user.fullname or user.username) %}Hey {{ username }},{% endtrans %}\n    <p>\n      {% trans %}To help us make sure it's really you, here's the verification code you'll need to log in:{% endtrans %}\n    </p>\n    <p>\n      <strong>{{ code }}</strong>\n    </p>\n    <p>\n      {% trans %}If this wasn't you logging in, and you use a password to log in, please reset your password.{% endtrans %}\n    </p>\n    <p>\n      {% trans %}This code will expire in 1 hour. Once the code expires, you will need to request a new verification code by going through the login procedure again.{% endtrans %}\n    </p>\n  </body>\n</html>\n", "patch": "@@ -1,7 +1,9 @@\n <html>\n   <head></head>\n   <body>\n-    {% trans username=(user.fullname or user.username) %}Hey {{ username }},{% endtrans %}\n+    <p>\n+      <a>{% trans username=(user.fullname or user.username) %}Hey {{ username }},{% endtrans %}</a>\n+    </p>\n     <p>\n       {% trans %}To help us make sure it's really you, here's the verification code you'll need to log in:{% endtrans %}\n     </p>", "file_path": "files/2022_12/582", "file_language": "html", "file_name": "rdiffweb/templates/email_verification_code.html", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 0}], "outdated": 1, "cwe_descripiton": "", "cwe_consequence": "", "cwe_method": "", "cwe_solution": ""}
