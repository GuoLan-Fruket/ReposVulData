{"index": 12500, "cve_id": "CVE-2021-46898", "cwe_id": ["CWE-601"], "cve_language": "Python", "cve_description": "views/switch.py in django-grappelli (aka Django Grappelli) before 2.15.2 attempts to prevent external redirection with startswith(\"/\") but this does not consider a protocol-relative URL (e.g., //example.com) attack.", "cvss": "6.1", "publish_date": "October 22, 2023", "AV": "NETWORK", "AC": "NETWORK", "PR": "NONE", "UI": "REQUIRED", "S": "CHANGED", "C": "LOW", "I": "LOW", "A": "NONE", "commit_id": "4ca94bcda0fa2720594506853d85e00c8212968f", "commit_message": "Update switch.py\n\nThis will fix issue #975 (I referred to this https://github.com/django/django/blob/main/django/views/i18n.py#L41-L45)", "commit_date": "2021-09-30T11:39:12Z", "project": "sehmaschine/django-grappelli", "url": "https://api.github.com/repos/sehmaschine/django-grappelli/commits/4ca94bcda0fa2720594506853d85e00c8212968f", "html_url": "https://github.com/sehmaschine/django-grappelli/commit/4ca94bcda0fa2720594506853d85e00c8212968f", "windows_before": [{"commit_id": "4aa8d072ae880e63de96db0476a1e0a0351b76cf", "commit_date": "Wed Sep 29 13:29:41 2021 +0200", "commit_message": "fixed pagination ellipsis, #974", "files_name": ["grappelli/templates/admin/pagination.html"]}, {"commit_id": "55f88d661c28598d059cf81dbfd38dacb945662f", "commit_date": "Wed Aug 4 13:28:42 2021 +0200", "commit_message": "Merge pull request #972 from dandicocco/reversion-patch", "files_name": ["355414eb378503058f28f32a1a5471f5dc68c3de - Mon Aug 2 08:46:55 2021 -0400 : update revision.comment", "grappelli/templates/reversion/object_history.html"]}, {"commit_id": "d46c4d75f7380f0baf9a6a9dece79c76468ce402", "commit_date": "Mon Jul 12 17:07:50 2021 +0200", "commit_message": "updated changelog", "files_name": ["docs/changelog.rst"]}, {"commit_id": "33a4e8a5d8854ecc76c6acd5b384181343e9c33c", "commit_date": "Mon Jul 12 16:34:07 2021 +0200", "commit_message": "Merge pull request #969 from maximdeclercq/stable/2.15.x", "files_name": ["7d5dcc4d781528f12cfade0102bdc95221a7bf0c - Sat Jul 10 18:47:02 2021 +0200 : fix(autocomplete): fix styling for native django autocompletion", "grappelli/compass/sass/partials/layout/_tools.scss", "grappelli/static/grappelli/stylesheets/screen.css"]}, {"commit_id": "10427bc0b9a49ab4cb7e93458bdc57aa59a3a1c0", "commit_date": "Sat Jul 10 15:26:40 2021 +0200", "commit_message": "fix(autocomplete): remove redundant autocomplete javascript", "files_name": ["grappelli/static/admin/js/autocomplete.js"]}, {"commit_id": "b4cb098d0022f7b08f2f649377d3c30701f495a0", "commit_date": "Thu Apr 22 13:07:41 2021 +0200", "commit_message": "pushed dev version to 2.15.2", "files_name": ["docs/changelog.rst", "docs/conf.py", "docs/quickstart.rst", "grappelli/__init__.py", "package.json", "setup.py"]}, {"commit_id": "c682ecaedce789b7974dc88a1e0200f7135c7fd5", "commit_date": "Thu Apr 22 12:57:14 2021 +0200", "commit_message": "docs for upcoming release", "files_name": ["README.rst", "docs/index.rst"]}, {"commit_id": "34942435a5c4a6525986d3750440d4e797b08322", "commit_date": "Thu Apr 15 16:34:46 2021 +0200", "commit_message": "dashboard label, fixed #957", "files_name": ["grappelli/dashboard/apps.py"]}, {"commit_id": "a0a916265477161574b919c92c16c35abbb4eab9", "commit_date": "Thu Apr 15 16:34:25 2021 +0200", "commit_message": "travis/tox for upcoming release", "files_name": [".travis.yml", "tox.ini"]}, {"commit_id": "55f62757e6f5983299ccd6648b982bf58ca2ddbc", "commit_date": "Thu Apr 15 16:34:16 2021 +0200", "commit_message": "version for upcoming release", "files_name": ["README.rst", "docs/changelog.rst", "docs/conf.py", "docs/index.rst", "docs/quickstart.rst", "docs/releasenotes.rst", "grappelli/__init__.py", "package.json", "setup.py"]}, {"commit_id": "716a730e4158e3ddf5d4d6b2d43cf83d47d9f3e3", "commit_date": "Thu Apr 15 13:30:28 2021 +0200", "commit_message": "fixed typo with docs", "files_name": ["README.rst", "docs/index.rst"]}, {"commit_id": "fdd6c20ede13f6126e799f83a66c249009ea6437", "commit_date": "Thu Apr 15 13:24:56 2021 +0200", "commit_message": "versions update for upcoming release", "files_name": ["README.rst", "docs/changelog.rst", "docs/index.rst"]}, {"commit_id": "d88c702c5f7fdf61fb583a96bdf746f6b4a07cd1", "commit_date": "Thu Apr 15 13:07:43 2021 +0200", "commit_message": "extended changelog with older versions, fixed #959", "files_name": ["docs/changelog.rst"]}, {"commit_id": "ea438c64e6ac29ac06fc291484265c92135809e4", "commit_date": "Thu Apr 15 13:01:22 2021 +0200", "commit_message": "added blocks stacked/tabular with inlines, fixed #956", "files_name": ["docs/changelog.rst", "grappelli/templates/admin/edit_inline/stacked.html", "grappelli/templates/admin/edit_inline/tabular.html"]}, {"commit_id": "022f67d2f7f17a625c7de3a56982a38cb521d60b", "commit_date": "Mon Mar 22 15:47:34 2021 +0100", "commit_message": "fixed redirect check with switch user", "files_name": ["docs/changelog.rst", "grappelli/views/switch.py"]}, {"commit_id": "088bd5c825b0839dbc8e35310d8164e3e6fe0c93", "commit_date": "Mon Mar 22 14:55:21 2021 +0100", "commit_message": "Merge branch 'master' into stable/2.14.x", "files_name": ["c92512a1c5143c879f3d7fc4c4b50c7a3edc9d0f - Mon Mar 22 14:54:44 2021 +0100 : updated changelog", "docs/changelog.rst"]}, {"commit_id": "8e274d5d0a3451ab29f8fdae019b0ee1c8a9361e", "commit_date": "Mon Mar 22 14:47:07 2021 +0100", "commit_message": "Remove extra filtering in AutocompleteLookup, fixed #954", "files_name": ["docs/changelog.rst", "grappelli/views/related.py"]}, {"commit_id": "8e0aa7402f916397278a77533b076b4055d2cc51", "commit_date": "Wed Feb 3 13:34:22 2021 +0100", "commit_message": "Merge pull request #955 from dancaron/docs_add_include", "files_name": ["2e4483601bafb69f26b6ed756b3e7b2d15a688bb - Mon Feb 1 13:14:12 2021 -0500 : add import statement", "docs/quickstart.rst"]}, {"commit_id": "c49ecc5525e49625ccd5ac94aab8ac1807adcfe1", "commit_date": "Tue Nov 24 16:04:18 2020 +0100", "commit_message": "pushed dev version to 2.14.4", "files_name": ["docs/conf.py", "docs/quickstart.rst", "grappelli/__init__.py", "package.json", "setup.py"]}, {"commit_id": "6473f037ddae88d11bca7a3b208f5b51168bfe22", "commit_date": "Tue Nov 24 15:08:20 2020 +0100", "commit_message": "docs for upcoming release", "files_name": ["README.rst", "docs/changelog.rst", "docs/index.rst", "docs/quickstart.rst", "docs/releasenotes.rst"]}, {"commit_id": "9c9c5b7786c8de0cefa02f7d392d40714fd6c44a", "commit_date": "Tue Nov 24 15:05:16 2020 +0100", "commit_message": "fixed info about adding grappelli docs urls, #949", "files_name": ["docs/templates.rst"]}, {"commit_id": "55c6c118952941b6808caf90b6f8f145dc7503ae", "commit_date": "Fri Nov 20 17:10:46 2020 +0100", "commit_message": "Merge pull request #947 from MrSenko/django3.1_deprecations", "files_name": ["0d3de64f82322227b7da8b0d35421b61784acefc - Fri Aug 21 00:19:55 2020 +0300 : django.conf.urls.url() -> django.urls.re_path()", "grappelli/tests/urls.py", "grappelli/urls.py", "grappelli/urls_docs.py"]}, {"commit_id": "a3e9354ab4113344a714067607c4aef8520cbf7b", "commit_date": "Fri Aug 21 00:05:22 2020 +0300", "commit_message": "Change how test dependencies are specified so we can test with Django 3.1", "files_name": [".travis.yml", "requirements/requirements-testing.txt", "tox.ini"]}, {"commit_id": "90b5d6654a0ceaba051afea9161e39e65575ee22", "commit_date": "Fri Aug 28 10:53:14 2020 +0200", "commit_message": "Merge pull request #948 from MrSenko/test_on_prs", "files_name": ["98d0ebd5832877591fac40bc3068a215367125db - Fri Aug 21 00:10:02 2020 +0300 : Run tests in Travis CI for every branch/PR", ".travis.yml"]}, {"commit_id": "64acd2231d471f88c66ded229db00507f13747a4", "commit_date": "Thu May 14 15:23:58 2020 +0200", "commit_message": "pushed dev versioin to 2.14.3", "files_name": ["docs/conf.py", "docs/index.rst", "docs/quickstart.rst", "grappelli/__init__.py", "package.json", "setup.py"]}, {"commit_id": "92e173c8a83d2b6ea5c59522ff4f2ed4bb81c501", "commit_date": "Thu May 14 15:15:52 2020 +0200", "commit_message": "new release 2.14.2", "files_name": ["README.rst", "docs/changelog.rst", "docs/index.rst"]}, {"commit_id": "8eba490b599ce104adb074a66d49c4902a02b7ab", "commit_date": "Thu May 14 15:09:55 2020 +0200", "commit_message": "added python 3.7/3.8 to travis tests, #935", "files_name": [".travis.yml", "setup.py"]}, {"commit_id": "0dbc58a5ab6f8ba4c8ba003468fc2b7457a5da60", "commit_date": "Thu May 14 14:46:22 2020 +0200", "commit_message": "changed bodyclass, #939", "files_name": ["grappelli/templates/admin/base.html"]}, {"commit_id": "9b04050a4f49146215e0cd8e3e16763247a14f76", "commit_date": "Thu May 14 14:39:05 2020 +0200", "commit_message": "fixed recent/my actions, #931", "files_name": ["docs/dashboard_api.rst", "grappelli/dashboard/dashboards.py", "grappelli/dashboard/modules.py", "grappelli/dashboard/templates/grappelli/dashboard/dashboard.txt", "grappelli/templates/admin/index.html"]}, {"commit_id": "fe1e1b14b198d41664677814bb0600ac44b97599", "commit_date": "Thu May 14 13:33:14 2020 +0200", "commit_message": "fixed sortables with tuples, #933", "files_name": ["grappelli/templates/admin/edit_inline/stacked.html"]}, {"commit_id": "619128e2c07c01695bfb208c287280d4f1ba80bd", "commit_date": "Thu May 14 12:44:37 2020 +0200", "commit_message": "fixed dashboard class", "files_name": ["grappelli/dashboard/dashboards.py"]}, {"commit_id": "0018beb68a21e8a774f9a66f3d303c347badbac3", "commit_date": "Thu May 14 12:44:31 2020 +0200", "commit_message": "added idea to gitignore", "files_name": [".gitignore"]}, {"commit_id": "0fb30ce0e3e4235d7678487f218033cd1d404e75", "commit_date": "Thu May 14 12:40:02 2020 +0200", "commit_message": "Merge branch 'master' into stable/2.14.x", "files_name": ["74f227539bb9e8e473d18185db67cbb120f02ea3 - Mon Apr 6 15:06:34 2020 +0200 : Merge pull request #932 from Djailla/six", "d7f96018d81aa524e15f0aa9a23ae6a8fcf78b8b - Mon Apr 6 12:11:47 2020 +0200 : Merge pull request #937 from tdruez/patch-1", "083383a2966dfb2027aee58b29f55ae0d3c799cd - Thu Apr 2 20:18:19 2020 +0400 : Define missing variable in RelatedObjectLookups.js", "grappelli/static/admin/js/admin/RelatedObjectLookups.js"]}, {"commit_id": "6b6239e323b69563e83bcbbc978596f8807ea79d", "commit_date": "Tue Mar 3 17:17:56 2020 +0100", "commit_message": "[compat] Remove six dependency, artefact of python 2.x compat", "files_name": ["grappelli/dashboard/dashboards.py", "grappelli/tests/models.py", "requirements/requirements-testing.txt", "setup.py"]}, {"commit_id": "76679114d6db6d4864f9c8075cf51c52f71f2cf4", "commit_date": "Mon Feb 10 15:55:52 2020 +0100", "commit_message": "updated changelog", "files_name": ["docs/changelog.rst"]}, {"commit_id": "f81c5f7ba251704a12f8039daf22ac87399276ed", "commit_date": "Mon Feb 10 15:55:20 2020 +0100", "commit_message": "fixed django version with doccs", "files_name": ["docs/index.rst", "docs/quickstart.rst"]}, {"commit_id": "25319eca923f179a8a4082231f335a6369d299d7", "commit_date": "Mon Feb 10 15:35:34 2020 +0100", "commit_message": "pushed dev version to 2.14.2", "files_name": ["docs/conf.py", "docs/index.rst", "docs/quickstart.rst", "grappelli/__init__.py", "package.json", "setup.py"]}, {"commit_id": "4f447fbe52adc15683c329831d6a42efe25661c7", "commit_date": "Mon Feb 10 15:28:17 2020 +0100", "commit_message": "versions for upcoming release", "files_name": ["README.rst", "docs/index.rst"]}, {"commit_id": "136302242cc65f19fc3e541448f39f2968eb5f4d", "commit_date": "Mon Feb 10 15:28:06 2020 +0100", "commit_message": "fixed namespace with admin js", "files_name": ["grappelli/static/admin/js/SelectBox.js", "grappelli/static/admin/js/SelectFilter2.js", "grappelli/static/admin/js/actions.js", "grappelli/static/admin/js/actions.min.js", "grappelli/static/admin/js/admin/RelatedObjectLookups.js", "grappelli/static/admin/js/cancel.js", "grappelli/static/admin/js/change_form.js", "grappelli/static/admin/js/prepopulate.js", "grappelli/static/admin/js/prepopulate.min.js", "grappelli/static/admin/js/prepopulate_init.js"]}, {"commit_id": "08d843b843ec8b0dda719ff811610985ad6f986b", "commit_date": "Mon Feb 10 14:52:34 2020 +0100", "commit_message": "updated docs for upcoming release", "files_name": ["docs/changelog.rst"]}, {"commit_id": "57fc5bdf959a9b173664071982502b44fa9b8404", "commit_date": "Mon Feb 10 13:55:39 2020 +0100", "commit_message": "select2 with inlines, #927", "files_name": ["grappelli/static/admin/js/jquery.init.js"]}], "windows_after": [{"commit_id": "ac35b747b927899c5c3a0f8ed042caa4eaaff1d9", "commit_date": "Thu Oct 7 14:35:44 2021 +0200", "commit_message": "Merge pull request #976 from ksg97031/patch-1", "files_name": ["05ff146d8d450616f901311c488b072ced67355c - Thu Oct 7 14:38:07 2021 +0200 : constance template update, fixed #973", "grappelli/templates/admin/constance/includes/results_list.html"]}, {"commit_id": "4713e35834ba7027087da2ad23988448fcd1b451", "commit_date": "Thu Oct 7 14:44:16 2021 +0200", "commit_message": "Merge branch 'master' into stable/2.15.x", "files_name": ["27e18e9fd702be18ce1e3c4a3dc114f308e725ad - Thu Oct 7 15:06:24 2021 +0200 : new release (2.15.2)", "README.rst", "docs/changelog.rst", "docs/index.rst"]}, {"commit_id": "0de7e9c7937b28b6f7181e26d9e4d21e59ff5681", "commit_date": "Thu Oct 7 15:09:19 2021 +0200", "commit_message": "fixed release version (new release 2.15.3)", "files_name": ["README.rst", "docs/changelog.rst", "docs/conf.py", "docs/index.rst", "docs/quickstart.rst", "grappelli/__init__.py", "package.json", "setup.py"]}, {"commit_id": "b56e3954dbe80f998c631e607ca7497700e2bf3f", "commit_date": "Thu Oct 7 15:14:22 2021 +0200", "commit_message": "pushed dev version to 2.15.4", "files_name": ["docs/conf.py", "docs/index.rst", "docs/quickstart.rst", "grappelli/__init__.py", "package.json", "setup.py"]}, {"commit_id": "6b4a709608f8aeb152388bafb9369e55fead313b", "commit_date": "Sat Nov 6 12:41:52 2021 +0000", "commit_message": "migrate CI to GitHub actions", "files_name": [".github/workflows/tests.yml", ".travis.yml"]}, {"commit_id": "3a7c574513cdafc20a9e37b69af8985de37638dc", "commit_date": "Sat Nov 6 12:47:20 2021 +0000", "commit_message": "update badge in README", "files_name": ["README.rst"]}, {"commit_id": "d4046fc53cd245e8b267bd06f25512ac86990a04", "commit_date": "Mon Dec 27 13:18:31 2021 +0100", "commit_message": "Merge pull request #977 from browniebroke/ci/github-actions", "files_name": ["3f4cc9408d4f8cf4a1c8b4e08ef7a5b9cb1933f2 - Mon Dec 27 13:29:26 2021 +0100 : Merge branch 'master' into stable/2.15.x", "8273e17dd772324e0f7b83c5210eb98667ffff43 - Mon Dec 27 13:44:30 2021 +0100 : removed ifnotequal tag with search form, fixed #978", "grappelli/templates/admin/search_form.html"]}, {"commit_id": "a8417ad56f9804459e5d282454a9df3f34584dd3", "commit_date": "Tue Dec 28 10:19:38 2021 +0100", "commit_message": "RemovedInDjango41Warning, fixed #966", "files_name": ["grappelli/__init__.py"]}, {"commit_id": "ad4b84e2472196d0dd22f0b6b019356616436c88", "commit_date": "Tue Dec 28 12:48:42 2021 +0100", "commit_message": "improved django autocompletes styling, #982", "files_name": ["grappelli/compass/sass/partials/layout/_tools.scss", "grappelli/compass/sass/screen.scss", "grappelli/static/grappelli/stylesheets/screen.css"]}, {"commit_id": "6b82c1cdb538da013cc6c6d05a97185872db90d4", "commit_date": "Tue Dec 28 12:49:36 2021 +0100", "commit_message": "jquery update, fixed #952 #953", "files_name": ["grappelli/static/grappelli/jquery/jquery.js", "grappelli/static/grappelli/jquery/jquery.min.js"]}, {"commit_id": "f474d55454a0fbcb960bf572d5613e6e89a5ef8b", "commit_date": "Tue Dec 28 12:50:48 2021 +0100", "commit_message": "jquery ui update, #930", "files_name": ["grappelli/static/grappelli/jquery/ui/AUTHORS.txt", "grappelli/static/grappelli/jquery/ui/LICENSE.txt", "grappelli/static/grappelli/jquery/ui/external/jquery/jquery.js", "grappelli/static/grappelli/jquery/ui/images/ui-bg_diagonals-thick_18_b81900_40x40.png", "grappelli/static/grappelli/jquery/ui/images/ui-bg_diagonals-thick_20_666666_40x40.png", "grappelli/static/grappelli/jquery/ui/images/ui-bg_flat_10_000000_40x100.png", "grappelli/static/grappelli/jquery/ui/images/ui-bg_glass_100_f6f6f6_1x400.png", "grappelli/static/grappelli/jquery/ui/images/ui-bg_glass_100_fdf5ce_1x400.png", "grappelli/static/grappelli/jquery/ui/images/ui-bg_glass_65_ffffff_1x400.png", "grappelli/static/grappelli/jquery/ui/images/ui-bg_gloss-wave_35_f6a828_500x100.png", "grappelli/static/grappelli/jquery/ui/images/ui-bg_highlight-soft_100_eeeeee_1x100.png", "grappelli/static/grappelli/jquery/ui/images/ui-bg_highlight-soft_75_ffe45c_1x100.png", "grappelli/static/grappelli/jquery/ui/images/ui-icons_222222_256x240.png", "grappelli/static/grappelli/jquery/ui/images/ui-icons_228ef1_256x240.png", "grappelli/static/grappelli/jquery/ui/images/ui-icons_444444_256x240.png", "grappelli/static/grappelli/jquery/ui/images/ui-icons_555555_256x240.png", "grappelli/static/grappelli/jquery/ui/images/ui-icons_777620_256x240.png", "grappelli/static/grappelli/jquery/ui/images/ui-icons_777777_256x240.png", "grappelli/static/grappelli/jquery/ui/images/ui-icons_cc0000_256x240.png", "grappelli/static/grappelli/jquery/ui/images/ui-icons_ef8c08_256x240.png", "grappelli/static/grappelli/jquery/ui/images/ui-icons_ffd27a_256x240.png", "grappelli/static/grappelli/jquery/ui/images/ui-icons_ffffff_256x240.png", "grappelli/static/grappelli/jquery/ui/index.html", "grappelli/static/grappelli/jquery/ui/jquery-ui.css", "grappelli/static/grappelli/jquery/ui/jquery-ui.js", "grappelli/static/grappelli/jquery/ui/jquery-ui.min.css", "grappelli/static/grappelli/jquery/ui/jquery-ui.min.js", "grappelli/static/grappelli/jquery/ui/jquery-ui.structure.css", "grappelli/static/grappelli/jquery/ui/jquery-ui.structure.min.css", "grappelli/static/grappelli/jquery/ui/jquery-ui.theme.css", "grappelli/static/grappelli/jquery/ui/jquery-ui.theme.min.css", "grappelli/static/grappelli/jquery/ui/package.json"]}, {"commit_id": "81b6c460b3ff7c8ef09afe675e726d677bb1e38d", "commit_date": "Tue Dec 28 12:51:24 2021 +0100", "commit_message": "fixed inline sortables with new jquery ui version, #930", "files_name": ["grappelli/templates/admin/edit_inline/stacked.html", "grappelli/templates/admin/edit_inline/tabular.html"]}, {"commit_id": "0069b5ab8c9dec4fbae25c70f8994651ad53f42d", "commit_date": "Tue Dec 28 13:12:56 2021 +0100", "commit_message": "removed django javascripts, #980", "files_name": ["grappelli/static/admin/js/SelectBox.js", "grappelli/static/admin/js/SelectFilter2.js", "grappelli/static/admin/js/actions.min.js", "grappelli/static/admin/js/calendar.js", "grappelli/static/admin/js/cancel.js", "grappelli/static/admin/js/change_form.js", "grappelli/static/admin/js/collapse.js", "grappelli/static/admin/js/collapse.min.js", "grappelli/static/admin/js/core.js", "grappelli/static/admin/js/inlines.js", "grappelli/static/admin/js/inlines.min.js", "grappelli/static/admin/js/jquery.init.js", "grappelli/static/admin/js/popup_response.js", "grappelli/static/admin/js/prepopulate.js", "grappelli/static/admin/js/prepopulate.min.js", "grappelli/static/admin/js/prepopulate_init.js", "grappelli/static/admin/js/timeparse.js", "grappelli/static/admin/js/urlify.js", "grappelli/static/admin/js/vendor/jquery/LICENSE.txt", "grappelli/static/admin/js/vendor/jquery/jquery.js", "grappelli/static/admin/js/vendor/jquery/jquery.min.js", "grappelli/static/admin/js/vendor/select2/LICENSE.md", "grappelli/static/admin/js/vendor/select2/i18n/af.js", "grappelli/static/admin/js/vendor/select2/i18n/ar.js", "grappelli/static/admin/js/vendor/select2/i18n/az.js", "grappelli/static/admin/js/vendor/select2/i18n/bg.js", "grappelli/static/admin/js/vendor/select2/i18n/bn.js", "grappelli/static/admin/js/vendor/select2/i18n/bs.js", "grappelli/static/admin/js/vendor/select2/i18n/ca.js", "grappelli/static/admin/js/vendor/select2/i18n/cs.js", "grappelli/static/admin/js/vendor/select2/i18n/da.js", "grappelli/static/admin/js/vendor/select2/i18n/de.js", "grappelli/static/admin/js/vendor/select2/i18n/dsb.js", "grappelli/static/admin/js/vendor/select2/i18n/el.js", "grappelli/static/admin/js/vendor/select2/i18n/en.js", "grappelli/static/admin/js/vendor/select2/i18n/es.js", "grappelli/static/admin/js/vendor/select2/i18n/et.js", "grappelli/static/admin/js/vendor/select2/i18n/eu.js", "grappelli/static/admin/js/vendor/select2/i18n/fa.js", "grappelli/static/admin/js/vendor/select2/i18n/fi.js", "grappelli/static/admin/js/vendor/select2/i18n/fr.js", "grappelli/static/admin/js/vendor/select2/i18n/gl.js", "grappelli/static/admin/js/vendor/select2/i18n/he.js", "grappelli/static/admin/js/vendor/select2/i18n/hi.js", "grappelli/static/admin/js/vendor/select2/i18n/hr.js", "grappelli/static/admin/js/vendor/select2/i18n/hsb.js", "grappelli/static/admin/js/vendor/select2/i18n/hu.js", "grappelli/static/admin/js/vendor/select2/i18n/hy.js", "grappelli/static/admin/js/vendor/select2/i18n/id.js", "grappelli/static/admin/js/vendor/select2/i18n/is.js", "grappelli/static/admin/js/vendor/select2/i18n/it.js", "grappelli/static/admin/js/vendor/select2/i18n/ja.js", "grappelli/static/admin/js/vendor/select2/i18n/ka.js", "grappelli/static/admin/js/vendor/select2/i18n/km.js", "grappelli/static/admin/js/vendor/select2/i18n/ko.js", "grappelli/static/admin/js/vendor/select2/i18n/lt.js", "grappelli/static/admin/js/vendor/select2/i18n/lv.js", "grappelli/static/admin/js/vendor/select2/i18n/mk.js", "grappelli/static/admin/js/vendor/select2/i18n/ms.js", "grappelli/static/admin/js/vendor/select2/i18n/nb.js", "grappelli/static/admin/js/vendor/select2/i18n/ne.js", "grappelli/static/admin/js/vendor/select2/i18n/nl.js", "grappelli/static/admin/js/vendor/select2/i18n/pl.js", "grappelli/static/admin/js/vendor/select2/i18n/ps.js", "grappelli/static/admin/js/vendor/select2/i18n/pt-BR.js", "grappelli/static/admin/js/vendor/select2/i18n/pt.js", "grappelli/static/admin/js/vendor/select2/i18n/ro.js", "grappelli/static/admin/js/vendor/select2/i18n/ru.js", "grappelli/static/admin/js/vendor/select2/i18n/sk.js", "grappelli/static/admin/js/vendor/select2/i18n/sl.js", "grappelli/static/admin/js/vendor/select2/i18n/sq.js", "grappelli/static/admin/js/vendor/select2/i18n/sr-Cyrl.js", "grappelli/static/admin/js/vendor/select2/i18n/sr.js", "grappelli/static/admin/js/vendor/select2/i18n/sv.js", "grappelli/static/admin/js/vendor/select2/i18n/th.js", "grappelli/static/admin/js/vendor/select2/i18n/tk.js", "grappelli/static/admin/js/vendor/select2/i18n/tr.js", "grappelli/static/admin/js/vendor/select2/i18n/uk.js", "grappelli/static/admin/js/vendor/select2/i18n/vi.js", "grappelli/static/admin/js/vendor/select2/i18n/zh-CN.js", "grappelli/static/admin/js/vendor/select2/i18n/zh-TW.js", "grappelli/static/admin/js/vendor/select2/select2.full.js", "grappelli/static/admin/js/vendor/select2/select2.full.min.js", "grappelli/static/admin/js/vendor/xregexp/LICENSE.txt", "grappelli/static/admin/js/vendor/xregexp/xregexp.js", "grappelli/static/admin/js/vendor/xregexp/xregexp.min.js"]}, {"commit_id": "731dce3619aa8fa5c88cde46c293587c36a044ec", "commit_date": "Tue Dec 28 13:14:41 2021 +0100", "commit_message": "updated actions.js, #980", "files_name": ["grappelli/static/admin/js/actions.js"]}, {"commit_id": "caeca33b788cf68597d87fc8eb662db11a369399", "commit_date": "Tue Dec 28 13:14:58 2021 +0100", "commit_message": "fixed actions and prepopulated, #980", "files_name": ["grappelli/templates/admin/change_list.html", "grappelli/templates/admin/change_list_filter_confirm.html", "grappelli/templates/admin/change_list_filter_confirm_sidebar.html", "grappelli/templates/admin/change_list_filter_sidebar.html", "grappelli/templates/admin/prepopulated_fields_js.html"]}, {"commit_id": "192afe747bbb98f8a70ab66b393ae94694beb733", "commit_date": "Tue Dec 28 13:16:39 2021 +0100", "commit_message": "changelog", "files_name": ["docs/changelog.rst"]}, {"commit_id": "39a8d82b1d4585a3b538f155344baf20f1811ac4", "commit_date": "Tue Jan 4 16:17:46 2022 +0100", "commit_message": "grappelli styles for django select2, #982", "files_name": ["grappelli/compass/sass/partials/custom/_select2-admin.scss", "grappelli/compass/sass/partials/layout/_tools.scss", "grappelli/compass/sass/screen.scss", "grappelli/static/grappelli/images/icons-small-sc29b5b842f.png", "grappelli/static/grappelli/images/icons-small-sf6f04fa616.png"]}], "parents": [{"commit_id_before": "55f88d661c28598d059cf81dbfd38dacb945662f", "url_before": "https://api.github.com/repos/sehmaschine/django-grappelli/commits/55f88d661c28598d059cf81dbfd38dacb945662f", "html_url_before": "https://github.com/sehmaschine/django-grappelli/commit/55f88d661c28598d059cf81dbfd38dacb945662f"}], "details": [{"raw_url": "https://github.com/sehmaschine/django-grappelli/raw/4ca94bcda0fa2720594506853d85e00c8212968f/grappelli%2Fviews%2Fswitch.py", "code": "# coding: utf-8\n\nfrom django.conf import settings\nfrom django.contrib import messages\nfrom django.contrib.admin.views.decorators import staff_member_required\nfrom django.contrib.auth import load_backend, login\nfrom django.core.exceptions import ObjectDoesNotExist\nfrom django.http import Http404\nfrom django.shortcuts import redirect\nfrom django.utils.html import escape\nfrom django.utils.http import url_has_allowed_host_and_scheme\nfrom django.utils.translation import gettext_lazy as _\n\nfrom grappelli.settings import SWITCH_USER_ORIGINAL, SWITCH_USER_TARGET\n\ntry:\n    from django.contrib.auth import get_user_model\n    User = get_user_model()\nexcept ImportError:\n    from django.contrib.auth.models import User\n\n\n@staff_member_required\ndef switch_user(request, object_id):\n\n    # current/session user\n    current_user = request.user\n    session_user = request.session.get(\"original_user\", {\"id\": current_user.id, \"username\": current_user.get_username()})\n\n    # check redirect\n    redirect_url = request.GET.get(\"redirect\", None)\n    if redirect_url is None or not \\\n        url_has_allowed_host_and_scheme(\n            url=redirect_url,\n            allowed_hosts={request.get_host()},\n            require_https=request.is_secure(),\n        ):\n        raise Http404()\n        \n    # check original_user\n    try:\n        original_user = User.objects.get(pk=session_user[\"id\"], is_staff=True)\n        if not SWITCH_USER_ORIGINAL(original_user):\n            messages.add_message(request, messages.ERROR, _(\"Permission denied.\"))\n            return redirect(redirect_url)\n    except ObjectDoesNotExist:\n        msg = _('%(name)s object with primary key %(key)r does not exist.') % {'name': \"User\", 'key': escape(session_user[\"id\"])}\n        messages.add_message(request, messages.ERROR, msg)\n        return redirect(redirect_url)\n\n    # check new user\n    try:\n        target_user = User.objects.get(pk=object_id, is_staff=True)\n        if target_user != original_user and not SWITCH_USER_TARGET(original_user, target_user):\n            messages.add_message(request, messages.ERROR, _(\"Permission denied.\"))\n            return redirect(redirect_url)\n    except ObjectDoesNotExist:\n        msg = _('%(name)s object with primary key %(key)r does not exist.') % {'name': \"User\", 'key': escape(object_id)}\n        messages.add_message(request, messages.ERROR, msg)\n        return redirect(redirect_url)\n\n    # find backend\n    if not hasattr(target_user, 'backend'):\n        for backend in settings.AUTHENTICATION_BACKENDS:\n            if target_user == load_backend(backend).get_user(target_user.pk):\n                target_user.backend = backend\n                break\n\n    # target user login, set original as session\n    if hasattr(target_user, 'backend'):\n        login(request, target_user)\n        if original_user.id != target_user.id:\n            request.session[\"original_user\"] = {\"id\": original_user.id, \"username\": original_user.get_username()}\n\n    return redirect(redirect_url)\n", "code_before": "# coding: utf-8\n\nfrom django.conf import settings\nfrom django.contrib import messages\nfrom django.contrib.admin.views.decorators import staff_member_required\nfrom django.contrib.auth import load_backend, login\nfrom django.core.exceptions import ObjectDoesNotExist\nfrom django.http import Http404\nfrom django.shortcuts import redirect\nfrom django.utils.html import escape\nfrom django.utils.translation import gettext_lazy as _\n\nfrom grappelli.settings import SWITCH_USER_ORIGINAL, SWITCH_USER_TARGET\n\ntry:\n    from django.contrib.auth import get_user_model\n    User = get_user_model()\nexcept ImportError:\n    from django.contrib.auth.models import User\n\n\n@staff_member_required\ndef switch_user(request, object_id):\n\n    # current/session user\n    current_user = request.user\n    session_user = request.session.get(\"original_user\", {\"id\": current_user.id, \"username\": current_user.get_username()})\n\n    # check redirect\n    redirect_url = request.GET.get(\"redirect\", None)\n    if redirect_url is None or not redirect_url.startswith(\"/\"):\n        raise Http404()\n\n    # check original_user\n    try:\n        original_user = User.objects.get(pk=session_user[\"id\"], is_staff=True)\n        if not SWITCH_USER_ORIGINAL(original_user):\n            messages.add_message(request, messages.ERROR, _(\"Permission denied.\"))\n            return redirect(request.GET.get(\"redirect\"))\n    except ObjectDoesNotExist:\n        msg = _('%(name)s object with primary key %(key)r does not exist.') % {'name': \"User\", 'key': escape(session_user[\"id\"])}\n        messages.add_message(request, messages.ERROR, msg)\n        return redirect(request.GET.get(\"redirect\"))\n\n    # check new user\n    try:\n        target_user = User.objects.get(pk=object_id, is_staff=True)\n        if target_user != original_user and not SWITCH_USER_TARGET(original_user, target_user):\n            messages.add_message(request, messages.ERROR, _(\"Permission denied.\"))\n            return redirect(request.GET.get(\"redirect\"))\n    except ObjectDoesNotExist:\n        msg = _('%(name)s object with primary key %(key)r does not exist.') % {'name': \"User\", 'key': escape(object_id)}\n        messages.add_message(request, messages.ERROR, msg)\n        return redirect(request.GET.get(\"redirect\"))\n\n    # find backend\n    if not hasattr(target_user, 'backend'):\n        for backend in settings.AUTHENTICATION_BACKENDS:\n            if target_user == load_backend(backend).get_user(target_user.pk):\n                target_user.backend = backend\n                break\n\n    # target user login, set original as session\n    if hasattr(target_user, 'backend'):\n        login(request, target_user)\n        if original_user.id != target_user.id:\n            request.session[\"original_user\"] = {\"id\": original_user.id, \"username\": original_user.get_username()}\n\n    return redirect(request.GET.get(\"redirect\"))\n", "patch": "@@ -8,6 +8,7 @@\n from django.http import Http404\n from django.shortcuts import redirect\n from django.utils.html import escape\n+from django.utils.http import url_has_allowed_host_and_scheme\n from django.utils.translation import gettext_lazy as _\n \n from grappelli.settings import SWITCH_USER_ORIGINAL, SWITCH_USER_TARGET\n@@ -28,30 +29,35 @@ def switch_user(request, object_id):\n \n     # check redirect\n     redirect_url = request.GET.get(\"redirect\", None)\n-    if redirect_url is None or not redirect_url.startswith(\"/\"):\n+    if redirect_url is None or not \\\n+        url_has_allowed_host_and_scheme(\n+            url=redirect_url,\n+            allowed_hosts={request.get_host()},\n+            require_https=request.is_secure(),\n+        ):\n         raise Http404()\n-\n+        \n     # check original_user\n     try:\n         original_user = User.objects.get(pk=session_user[\"id\"], is_staff=True)\n         if not SWITCH_USER_ORIGINAL(original_user):\n             messages.add_message(request, messages.ERROR, _(\"Permission denied.\"))\n-            return redirect(request.GET.get(\"redirect\"))\n+            return redirect(redirect_url)\n     except ObjectDoesNotExist:\n         msg = _('%(name)s object with primary key %(key)r does not exist.') % {'name': \"User\", 'key': escape(session_user[\"id\"])}\n         messages.add_message(request, messages.ERROR, msg)\n-        return redirect(request.GET.get(\"redirect\"))\n+        return redirect(redirect_url)\n \n     # check new user\n     try:\n         target_user = User.objects.get(pk=object_id, is_staff=True)\n         if target_user != original_user and not SWITCH_USER_TARGET(original_user, target_user):\n             messages.add_message(request, messages.ERROR, _(\"Permission denied.\"))\n-            return redirect(request.GET.get(\"redirect\"))\n+            return redirect(redirect_url)\n     except ObjectDoesNotExist:\n         msg = _('%(name)s object with primary key %(key)r does not exist.') % {'name': \"User\", 'key': escape(object_id)}\n         messages.add_message(request, messages.ERROR, msg)\n-        return redirect(request.GET.get(\"redirect\"))\n+        return redirect(redirect_url)\n \n     # find backend\n     if not hasattr(target_user, 'backend'):\n@@ -66,4 +72,4 @@ def switch_user(request, object_id):\n         if original_user.id != target_user.id:\n             request.session[\"original_user\"] = {\"id\": original_user.id, \"username\": original_user.get_username()}\n \n-    return redirect(request.GET.get(\"redirect\"))\n+    return redirect(redirect_url)", "file_path": "files/2023_10/633", "file_language": "py", "file_name": "grappelli/views/switch.py", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 0, "llm_check": 1, "static_check": 1, "static": {"rats": [false, []], "semgrep": [true, ["       python.django.security.injection.open-redirect.open-redirect                                   \n          Data from request ($DATA) is passed to redirect(). This is an open redirect and could be    \n          exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url().\n          See https://cwe.mitre.org/data/definitions/601.html for more information.                   \n          Details: https://sg.run/Ave2                                                                \n           69\u2506 return redirect(request.GET.get(\"redirect\"))", "       python.django.security.injection.open-redirect.open-redirect                                   \n          Data from request ($DATA) is passed to redirect(). This is an open redirect and could be    \n          exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url().\n          See https://cwe.mitre.org/data/definitions/601.html for more information.                   \n          Details: https://sg.run/Ave2                                                                \n\n           69\u2506 return redirect(request.GET.get(\"redirect\"))", "       python.django.security.injection.open-redirect.open-redirect                                   \n          Data from request ($DATA) is passed to redirect(). This is an open redirect and could be    \n          exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url().\n          See https://cwe.mitre.org/data/definitions/601.html for more information.                   \n          Details: https://sg.run/Ave2                                                                \n\n           54\u2506 return redirect(request.GET.get(\"redirect\"))", "       python.django.security.injection.open-redirect.open-redirect                                   \n          Data from request ($DATA) is passed to redirect(). This is an open redirect and could be    \n          exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url().\n          See https://cwe.mitre.org/data/definitions/601.html for more information.                   \n          Details: https://sg.run/Ave2                                                                \n\n           54\u2506 return redirect(request.GET.get(\"redirect\"))", "       python.django.security.injection.open-redirect.open-redirect                                   \n          Data from request ($DATA) is passed to redirect(). This is an open redirect and could be    \n          exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url().\n          See https://cwe.mitre.org/data/definitions/601.html for more information.                   \n          Details: https://sg.run/Ave2                                                                \n\n           50\u2506 return redirect(request.GET.get(\"redirect\"))", "       python.django.security.injection.open-redirect.open-redirect                                   \n          Data from request ($DATA) is passed to redirect(). This is an open redirect and could be    \n          exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url().\n          See https://cwe.mitre.org/data/definitions/601.html for more information.                   \n          Details: https://sg.run/Ave2                                                                \n\n           50\u2506 return redirect(request.GET.get(\"redirect\"))", "       python.django.security.injection.open-redirect.open-redirect                                   \n          Data from request ($DATA) is passed to redirect(). This is an open redirect and could be    \n          exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url().\n          See https://cwe.mitre.org/data/definitions/601.html for more information.                   \n          Details: https://sg.run/Ave2                                                                \n\n           43\u2506 return redirect(request.GET.get(\"redirect\"))", "       python.django.security.injection.open-redirect.open-redirect                                   \n          Data from request ($DATA) is passed to redirect(). This is an open redirect and could be    \n          exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url().\n          See https://cwe.mitre.org/data/definitions/601.html for more information.                   \n          Details: https://sg.run/Ave2                                                                \n\n           43\u2506 return redirect(request.GET.get(\"redirect\"))", "       python.django.security.injection.open-redirect.open-redirect                                   \n          Data from request ($DATA) is passed to redirect(). This is an open redirect and could be    \n          exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url().\n          See https://cwe.mitre.org/data/definitions/601.html for more information.                   \n          Details: https://sg.run/Ave2                                                                \n\n           39\u2506 return redirect(request.GET.get(\"redirect\"))", "       python.django.security.injection.open-redirect.open-redirect                                   \n          Data from request ($DATA) is passed to redirect(). This is an open redirect and could be    \n          exploited. Ensure you are redirecting to safe URLs by using django.utils.http.is_safe_url().\n          See https://cwe.mitre.org/data/definitions/601.html for more information.                   \n          Details: https://sg.run/Ave2                                                                \n\n           39\u2506 return redirect(request.GET.get(\"redirect\"))"]]}, "target": 1, "function_before": [], "function_after": []}], "outdated": 0, "cwe_descripiton": "", "cwe_consequence": "", "cwe_method": "", "cwe_solution": ""}
