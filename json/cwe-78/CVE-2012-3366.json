{"index": 161, "cve_id": "CVE-2012-3366", "cwe_id": ["CWE-78"], "cve_language": "Python", "cve_description": "The Trigger plugin in bcfg2 1.2.x before 1.2.3 allows remote attackers with root access to the client to execute arbitrary commands via shell metacharacters in the UUID field to the server process (bcfg2-server).", "cvss": "8.8", "publish_date": "July 3, 2012", "AV": "NETWORK", "AC": "NETWORK", "PR": "LOW", "UI": "NONE", "S": "UNCHANGED", "C": "HIGH", "I": "HIGH", "A": "HIGH", "commit_id": "a524967e8d5c4c22e49cd619aed20c87a316c0be", "commit_message": "fixed major security flaw in Trigger plugin", "commit_date": "2012-06-12T13:20:10Z", "project": "bcfg2/bcfg2", "url": "https://api.github.com/repos/Bcfg2/bcfg2/commits/a524967e8d5c4c22e49cd619aed20c87a316c0be", "html_url": "https://github.com/Bcfg2/bcfg2/commit/a524967e8d5c4c22e49cd619aed20c87a316c0be", "windows_before": [{"commit_id": "8c08bfc37cb7cdec5e83005ea71f55f0cfd4259e", "commit_date": "Tue Jun 12 09:08:14 2012 -0400", "commit_message": "added support for Puppet External Node Classifiers", "files_name": ["doc/server/plugins/connectors/puppetenc.txt", "src/lib/Bcfg2/Server/Plugins/PuppetENC.py"]}, {"commit_id": "b15095b90848bd82714d0537339c8991387e62e1", "commit_date": "Tue Jun 12 09:05:32 2012 -0400", "commit_message": "converted Trigger to use ClientRunHooks instead of abusing Statistics; fix major security flaw in Trigger plugin", "files_name": ["src/lib/Bcfg2/Server/Plugins/Trigger.py"]}, {"commit_id": "97a78bb7e487f2fec0595f585e3295625b2df062", "commit_date": "Tue Jun 12 09:04:58 2012 -0400", "commit_message": "converted Packages to use ClientRunHooks instead of abusing GoalValidator", "files_name": ["src/lib/Bcfg2/Server/Plugins/Packages/__init__.py"]}, {"commit_id": "e10a759d9bc471e0089ce773ae81440fb9a8d854", "commit_date": "Tue Jun 12 09:04:41 2012 -0400", "commit_message": "added ClientRunHooks plugin role", "files_name": ["doc/server/plugins/plugin-roles.txt", "src/lib/Bcfg2/Server/Core.py", "src/lib/Bcfg2/Server/Plugin.py"]}, {"commit_id": "f85839c194eead8a3bcfc7a16ff342a468cb85fd", "commit_date": "Thu Jun 7 17:41:28 2012 -0400", "commit_message": "bcfg2-crypt fixes", "files_name": ["src/sbin/bcfg2-crypt"]}, {"commit_id": "57345e32a9d04d7e22a844c75100ed3a36bce5bd", "commit_date": "Thu Jun 7 08:57:03 2012 -0500", "commit_message": "bcfg2-info: print trace when buildfile fails", "files_name": ["src/sbin/bcfg2-info"]}, {"commit_id": "c2a593d070cd3408e03104d6e7e22a1d98071405", "commit_date": "Thu Jun 7 06:50:10 2012 -0500", "commit_message": "web_reports: remove :", "files_name": ["src/lib/Bcfg2/Server/Reports/reports/templates/clients/detail.html"]}, {"commit_id": "92d6996f8767482fe6a099a1e6937196800b44a3", "commit_date": "Wed Jun 6 22:36:16 2012 -0500", "commit_message": "Probes: Handle write failures better", "files_name": ["src/lib/Bcfg2/Server/Plugins/Probes.py"]}, {"commit_id": "b85e47f2aab6d4412a4dda2de1f9471f979f18b8", "commit_date": "Wed Jun 6 22:21:55 2012 -0500", "commit_message": "web_reports: Improve element lists", "files_name": ["src/lib/Bcfg2/Server/Reports/reports/templates/config_items/listing.html", "src/lib/Bcfg2/Server/Reports/reports/views.py"]}, {"commit_id": "3ffd9bccb20f199ffc48263d019dfc3c44d0119b", "commit_date": "Wed Jun 6 16:55:57 2012 -0500", "commit_message": "web_reports: speed up client detail view", "files_name": ["reports/site_media/bcfg2_base.css", "src/lib/Bcfg2/Server/Reports/reports/templates/clients/detail.html", "src/lib/Bcfg2/Server/Reports/reports/templatetags/bcfg2_tags.py", "src/lib/Bcfg2/Server/Reports/reports/views.py"]}, {"commit_id": "01d68bf3237529f5cb6a9160b4328e797d01b0fe", "commit_date": "Wed Jun 6 16:35:13 2012 -0400", "commit_message": "added -B (skip bundles) and -Z (skip independent) options", "files_name": ["src/lib/Bcfg2/Client/Frame.py", "src/lib/Bcfg2/Options.py", "src/sbin/bcfg2"]}, {"commit_id": "63167ca8054b58a7420cfc358c1decc77f06076f", "commit_date": "Wed Jun 6 14:28:47 2012 -0500", "commit_message": "Reports: add group relationships", "files_name": ["src/lib/Bcfg2/Server/Reports/reports/models.py"]}, {"commit_id": "4063587b20cbd97e55069a7ea94a2a231b7de622", "commit_date": "Wed Jun 6 14:19:42 2012 -0500", "commit_message": "web_reports: add group filtering logic to grid and detailed list", "files_name": ["src/lib/Bcfg2/Server/Reports/reports/templates/clients/index.html", "src/lib/Bcfg2/Server/Reports/reports/templates/widgets/filter_bar.html", "src/lib/Bcfg2/Server/Reports/reports/templatetags/bcfg2_tags.py"]}, {"commit_id": "1e954c9bd17ab7fcb31bb85a268303fd1266c761", "commit_date": "Wed Jun 6 10:49:56 2012 -0500", "commit_message": "web_reports: add filters to the grid view", "files_name": ["src/lib/Bcfg2/Server/Reports/reports/urls.py", "src/lib/Bcfg2/Server/Reports/reports/views.py"]}, {"commit_id": "6b7b61e585df5fd02fab166421a20f5905b5ce70", "commit_date": "Wed Jun 6 10:45:31 2012 -0500", "commit_message": "web_reports: filter by group", "files_name": ["src/lib/Bcfg2/Server/Reports/reports/views.py", "src/lib/Bcfg2/Server/Reports/utils.py"]}, {"commit_id": "ee7a0fae2160d8e6f31c7ff932419c1e500e7e52", "commit_date": "Wed Jun 6 10:35:24 2012 -0500", "commit_message": "web_reports: show filter list when no records are returned", "files_name": ["src/lib/Bcfg2/Server/Reports/reports/templates/clients/detailed-list.html"]}, {"commit_id": "2798c9e83801f96cfd940d5338fee86ec471e4e1", "commit_date": "Wed Jun 6 09:26:55 2012 -0500", "commit_message": "web_reports: Show client profile, groups, and bundles in detailed view", "files_name": ["src/lib/Bcfg2/Server/Reports/reports/templates/clients/detail.html"]}, {"commit_id": "54f46a42ceb443528d54dd5734449dfeb5e79df4", "commit_date": "Wed Jun 6 09:18:40 2012 -0500", "commit_message": "DBStats: Save interaction metadata", "files_name": ["src/lib/Bcfg2/Server/Plugins/DBStats.py", "src/lib/Bcfg2/Server/Reports/importscript.py", "src/lib/Bcfg2/Server/Reports/reports/models.py"]}, {"commit_id": "6a968b1468fff08e0aeebae04dd7cf0888a4014e", "commit_date": "Tue Jun 5 16:50:07 2012 -0500", "commit_message": "Reports: remove unused function", "files_name": ["src/lib/Bcfg2/Server/Reports/reports/models.py"]}, {"commit_id": "254ef5d38d715e2b8b0099281707bc43247f12a9", "commit_date": "Wed Jun 6 09:33:52 2012 -0400", "commit_message": "service_modes upgrade script upgrades Rules and Defaults plugins", "files_name": ["tools/upgrade/1.3/service_modes.py"]}, {"commit_id": "1291e5b09efb956d42e7ab83d485d41542f438f4", "commit_date": "Wed Jun 6 09:31:14 2012 -0400", "commit_message": "added properties element encryption added bcfg2-crypt utility for encrypting Properties and Cfg files", "files_name": ["doc/server/plugins/connectors/properties.txt", "doc/server/plugins/generators/cfg.txt", "src/lib/Bcfg2/Options.py", "src/lib/Bcfg2/Server/Plugins/Cfg/CfgEncryptedGenerator.py", "src/lib/Bcfg2/Server/Plugins/Properties.py", "src/sbin/bcfg2-crypt", "tools/manpagegen/bcfg2-crypt.8.ronn"]}, {"commit_id": "f46d4216cd4d6a4b272bfff1465a19a5649a93e7", "commit_date": "Tue Jun 5 17:01:08 2012 -0500", "commit_message": "OpenCSW: Add client tool", "files_name": ["src/lib/Bcfg2/Client/Tools/OpenCSW.py"]}, {"commit_id": "200f79387247eefa01d60e4f6e573ba5162054bc", "commit_date": "Tue Jun 5 17:00:40 2012 -0500", "commit_message": "PY3K: Refactor input code", "files_name": ["src/lib/Bcfg2/Bcfg2Py3k.py", "src/lib/Bcfg2/Client/Tools/Action.py", "src/lib/Bcfg2/Client/Tools/__init__.py", "src/lib/Bcfg2/Server/Admin/Init.py", "src/lib/Bcfg2/Server/Admin/Pull.py", "src/lib/Bcfg2/Server/Admin/Tidy.py", "src/lib/Bcfg2/Server/Plugins/Snapshots.py", "src/lib/Bcfg2/Server/Reports/reports/templatetags/syntax_coloring.py", "src/lib/Bcfg2/Server/Snapshots/model.py"]}, {"commit_id": "f31d06a61e3a246118bab537923e1039ba3a2571", "commit_date": "Tue Jun 5 16:59:30 2012 -0500", "commit_message": "doc: Instructions apply to all RHEL versions", "files_name": ["doc/server/plugins/generators/tgenshi/index.txt"]}, {"commit_id": "42e619c585de45e5e4e16ae3746efb7db9f90b1e", "commit_date": "Tue Jun 5 17:34:29 2012 -0400", "commit_message": "re-rationalized service modes to make them more consistent and granular", "files_name": ["doc/server/plugins/generators/rules.txt", "schemas/servicetype.xsd", "src/lib/Bcfg2/Client/Tools/Chkconfig.py", "src/lib/Bcfg2/Client/Tools/DebInit.py", "src/lib/Bcfg2/Client/Tools/RcUpdate.py", "src/lib/Bcfg2/Client/Tools/SMF.py", "src/lib/Bcfg2/Client/Tools/Systemd.py", "src/lib/Bcfg2/Client/Tools/Upstart.py", "src/lib/Bcfg2/Client/Tools/__init__.py", "src/lib/Bcfg2/Client/Tools/launchd.py", "tools/upgrade/1.3/service_modes.py"]}, {"commit_id": "c6e7bfed9b6563b0c567997f063a8259ec548519", "commit_date": "Tue Jun 5 14:54:04 2012 -0500", "commit_message": "web_reports:  Trap KeyError from duplicate metrics", "files_name": ["src/lib/Bcfg2/Server/Reports/reports/views.py"]}, {"commit_id": "5de4020d2a2ed1028ce39d3a8bd3a8bd865fc8cd", "commit_date": "Tue Jun 5 14:41:43 2012 -0500", "commit_message": "web_reports: added a view to show the most common configuration problems", "files_name": ["reports/site_media/bcfg2_base.css", "src/lib/Bcfg2/Server/Reports/reports/models.py", "src/lib/Bcfg2/Server/Reports/reports/templates/base-timeview.html", "src/lib/Bcfg2/Server/Reports/reports/templates/base.html", "src/lib/Bcfg2/Server/Reports/reports/templates/config_items/common.html", "src/lib/Bcfg2/Server/Reports/reports/urls.py", "src/lib/Bcfg2/Server/Reports/reports/views.py"]}, {"commit_id": "e2b832878a70478add4859f6f17039be9474b749", "commit_date": "Tue Jun 5 07:26:14 2012 -0500", "commit_message": "Replace UpdaterError with UpdaterRoutineException", "files_name": ["src/lib/Bcfg2/Server/Reports/Updater/Routines.py"]}, {"commit_id": "3ba28dce51eebe94e37e3555c240d999e0c10e09", "commit_date": "Tue Jun 5 05:54:42 2012 -0500", "commit_message": "importscript: Fix client added message and log level", "files_name": ["src/lib/Bcfg2/Server/Reports/importscript.py"]}, {"commit_id": "5dbca666092d679935bb7dacf339c929f3c12114", "commit_date": "Tue Jun 5 05:44:55 2012 -0500", "commit_message": "DBStats: Remove clients.xml from the import process", "files_name": ["src/lib/Bcfg2/Server/Admin/Reports.py", "src/lib/Bcfg2/Server/Reports/importscript.py"]}, {"commit_id": "11913d1203f928eee1b549d7232e205626a5bb88", "commit_date": "Tue Jun 5 05:29:02 2012 -0500", "commit_message": "DBStats: Stop building a ConfigStatistics xml", "files_name": ["src/lib/Bcfg2/Server/Plugins/DBStats.py", "src/lib/Bcfg2/Server/Reports/importscript.py"]}, {"commit_id": "be914202afa067353601c27ddcdd751da0ebe44b", "commit_date": "Tue Jun 5 05:28:12 2012 -0500", "commit_message": "Admin reports: Print the exception when load_stats fails", "files_name": ["src/lib/Bcfg2/Server/Admin/Reports.py"]}, {"commit_id": "608b341869a15bb7bfe0212548e84f8c7aed1ff1", "commit_date": "Mon Jun 4 16:37:32 2012 -0500", "commit_message": "doc: Remove references to ping data", "files_name": ["doc/appendix/files/ntp.txt", "doc/appendix/guides/nat_howto.txt", "doc/server/plugins/grouping/metadata.txt"]}, {"commit_id": "503ea9de36d74ac6d7ad564d04a923a016592ccd", "commit_date": "Mon Jun 4 17:36:27 2012 -0400", "commit_message": "fixed bcfg2-info buildall without -f", "files_name": ["src/sbin/bcfg2-info"]}, {"commit_id": "d711dd20ca577779493e2c7ee3cd4a592adf4b90", "commit_date": "Mon Jun 4 16:09:00 2012 -0500", "commit_message": "DBStats: drop database table for ping", "files_name": ["src/lib/Bcfg2/Server/Reports/Updater/Changes/1_3_0.py", "src/lib/Bcfg2/Server/Reports/Updater/Routines.py"]}, {"commit_id": "4c86dd989773aeb010ac9c583bb9de21ea4fc023", "commit_date": "Mon Jun 4 16:02:02 2012 -0500", "commit_message": "DBStats: Remove ping data", "files_name": ["src/lib/Bcfg2/Server/Admin/Init.py", "src/lib/Bcfg2/Server/Reports/reports/models.py"]}, {"commit_id": "12dd7abdc0e38383b2c20d484e3049d1435176ef", "commit_date": "Mon Jun 4 15:57:29 2012 -0500", "commit_message": "DBStats: Stop loading ping data", "files_name": ["src/lib/Bcfg2/Server/Reports/importscript.py"]}, {"commit_id": "eb97b19d806b48995b311b41d5e3819641d48dc2", "commit_date": "Mon Jun 4 15:42:48 2012 -0500", "commit_message": "Statistics: missing sys import", "files_name": ["src/lib/Bcfg2/Server/Plugins/Statistics.py"]}, {"commit_id": "94c51e20ceeb2c127dbfa9d6befa69a2faa54b0a", "commit_date": "Mon Jun 4 15:18:20 2012 -0500", "commit_message": "Admin reports: Stop handling ping data", "files_name": ["src/lib/Bcfg2/Server/Admin/Reports.py"]}, {"commit_id": "db56ef598b45f4310b74ffd2a3e151649a05e509", "commit_date": "Mon Jun 4 15:16:10 2012 -0500", "commit_message": "web_reports: Remove ping data from summary view", "files_name": ["src/lib/Bcfg2/Server/Reports/reports/views.py"]}, {"commit_id": "4f0998dc8f47afa655bf571b4e2727b57922f4bc", "commit_date": "Mon Jun 4 14:37:52 2012 -0500", "commit_message": "web_reports: display_summary executes query twice", "files_name": ["src/lib/Bcfg2/Server/Reports/reports/views.py"]}, {"commit_id": "826987ef1f86c2847cd83c4137c50c4904032068", "commit_date": "Mon Jun 4 14:23:56 2012 -0500", "commit_message": "web_reports: select_related for all render_history_view calls", "files_name": ["src/lib/Bcfg2/Server/Reports/reports/views.py"]}, {"commit_id": "6633ba7144dbc884732ee521d380456bbb2146f7", "commit_date": "Mon Jun 4 14:05:25 2012 -0500", "commit_message": "DBStats: Remove custom sql", "files_name": ["src/lib/Bcfg2/Server/Reports/reports/models.py", "src/lib/Bcfg2/Server/Reports/reports/sql/client.sql"]}, {"commit_id": "48d77ab49b8c8e69c38b2b659ba4b31e781443c8", "commit_date": "Fri Jun 1 09:14:37 2012 -0500", "commit_message": "Admin reports: add django shell and dbshell commands", "files_name": ["src/lib/Bcfg2/Server/Admin/Reports.py"]}, {"commit_id": "7b8a57ef6a643e7340ef2c825bdf889693cb8bbe", "commit_date": "Mon Jun 4 12:34:31 2012 -0500", "commit_message": "DBStats: Add missing sys import", "files_name": ["src/lib/Bcfg2/Server/Plugins/DBStats.py"]}, {"commit_id": "8cc08eb59ddd87e32b67be4551f29af56f359eda", "commit_date": "Mon Jun 4 12:28:08 2012 -0500", "commit_message": "NagiosGen: Create empty config.xml when missing", "files_name": ["doc/server/plugins/generators/nagiosgen.txt", "src/lib/Bcfg2/Server/Plugins/NagiosGen.py"]}, {"commit_id": "f4bb86dee4e578d761d3161db30cd55b22c4142d", "commit_date": "Mon Jun 4 10:52:40 2012 -0500", "commit_message": "Admin/Client: Can't index when missing args", "files_name": ["src/lib/Bcfg2/Server/Admin/Client.py"]}, {"commit_id": "dbb3146b3270363f76e0f6ba1ad9751ff359091c", "commit_date": "Mon Jun 4 11:49:19 2012 -0400", "commit_message": "fixed docs, code that referenced old yum section of packages.conf", "files_name": ["doc/server/plugins/generators/packages.txt", "src/lib/Bcfg2/Server/Plugins/Packages/Yum.py"]}], "windows_after": [{"commit_id": "77b945b0ff23d778439148fe01eedd3884364024", "commit_date": "Tue Jun 12 09:29:54 2012 -0400", "commit_message": "added end_statistics hook to ClientRunHooks; added calls to Packages and PuppetENC to clean cache after statistics, too", "files_name": ["src/lib/Bcfg2/Server/Core.py", "src/lib/Bcfg2/Server/Plugin.py", "src/lib/Bcfg2/Server/Plugins/Packages/__init__.py", "src/lib/Bcfg2/Server/Plugins/PuppetENC.py"]}, {"commit_id": "ee84ce80cc8992438ca17418a98918aec642aef6", "commit_date": "Tue Jun 12 09:45:10 2012 -0400", "commit_message": "clarified when trigger scripts are run", "files_name": ["doc/server/plugins/misc/trigger.txt"]}, {"commit_id": "0e5e54118824d477af758cb2c336a1dad79db407", "commit_date": "Tue Jun 12 10:00:49 2012 -0400", "commit_message": "EntrySet inherits from Debuggable so no longer needs explicity debug_log; properly toggle debug on GroupSpool entries", "files_name": ["src/lib/Bcfg2/Server/Plugin.py"]}, {"commit_id": "5114a9855a34eed4180bc9b724331927f88c8dfb", "commit_date": "Tue Jun 12 10:17:25 2012 -0400", "commit_message": "removed extraneous debugging calls", "files_name": ["src/lib/Server/Plugins/Trigger.py"]}, {"commit_id": "afc2236cb97bdfd00cd3d7c54669b52861266b03", "commit_date": "Wed Jun 13 09:50:07 2012 -0400", "commit_message": "bcfg2 cronjob fixes:", "files_name": ["debian/bcfg2.cron.daily", "debian/bcfg2.cron.hourly"]}, {"commit_id": "f379b0e43cfa0137379ad0f78f48223eba7db61a", "commit_date": "Wed Jun 13 14:36:39 2012 -0400", "commit_message": "improved SSLCA verification routines and logging", "files_name": ["doc/server/plugins/generators/sslca.txt", "src/lib/Server/Plugins/SSLCA.py"]}, {"commit_id": "7480e8f11d991b75fe5ece33323734451defc7bd", "commit_date": "Wed Jun 13 16:15:58 2012 -0400", "commit_message": "fixed ProbeData object to actually be a str, not just try (and fail) to imitate one", "files_name": ["src/lib/Server/Plugins/Probes.py"]}, {"commit_id": "4f2e595e6649f036c306abf0400cf45ce352375b", "commit_date": "Fri Jun 8 10:34:10 2012 -0500", "commit_message": "web_reports: group filtering for <type> element views", "files_name": ["src/lib/Bcfg2/Server/Reports/reports/templates/config_items/listing.html", "src/lib/Bcfg2/Server/Reports/reports/urls.py", "src/lib/Bcfg2/Server/Reports/reports/views.py"]}, {"commit_id": "e0de3fe9d506c300edd46e11494e0af85e527b5b", "commit_date": "Thu Jun 14 08:58:07 2012 -0500", "commit_message": "web_reports: add a helper function for in_bulk", "files_name": ["src/lib/Bcfg2/Server/Reports/reports/views.py"]}, {"commit_id": "772ea973da6b425e9f2336ed64cb2fd1081b3256", "commit_date": "Thu Jun 14 09:21:24 2012 -0500", "commit_message": "Client Stats: Add good entries to the statistics sent to the server", "files_name": ["src/lib/Bcfg2/Client/Frame.py"]}, {"commit_id": "3f3d2138aca930c59a2139f6ff2a5405c2449fe5", "commit_date": "Thu Jun 14 10:20:12 2012 -0500", "commit_message": "DBStats: Start loading good entries into the db", "files_name": ["src/lib/Bcfg2/Server/Reports/importscript.py", "src/lib/Bcfg2/Server/Reports/reports/models.py", "src/lib/Bcfg2/Server/Reports/reports/views.py"]}, {"commit_id": "1ddeca7906604d0e55217ca7d037f4cd61777e80", "commit_date": "Thu Jun 14 11:14:07 2012 -0400", "commit_message": "bcfg2-reports improvements:", "files_name": ["src/sbin/bcfg2-reports"]}, {"commit_id": "11f83946824722a0abbee482e0f4cf2d8db23eb4", "commit_date": "Thu Jun 14 10:40:01 2012 -0500", "commit_message": "bcfg2-reports: exclude clients without an interaction", "files_name": ["src/sbin/bcfg2-reports"]}, {"commit_id": "bc4882af81fb25d0d347554d34dae849dbbffda9", "commit_date": "Thu Jun 14 11:45:20 2012 -0400", "commit_message": "bcfg2-reports: exit if file cannot be read", "files_name": ["src/sbin/bcfg2-reports"]}, {"commit_id": "206359116e8d0684ce54712ef497fb23bdffd46e", "commit_date": "Thu Jun 14 11:46:02 2012 -0400", "commit_message": "fixed path to bcfg2-cron in cronjobs", "files_name": ["debian/bcfg2.cron.daily", "debian/bcfg2.cron.hourly"]}, {"commit_id": "de0f5b03c6afef195fc448b1ac4b0e1c216beed6", "commit_date": "Thu Jun 14 10:52:33 2012 -0500", "commit_message": "bcfg2-reports: pull good entries from the database", "files_name": ["src/sbin/bcfg2-reports"]}, {"commit_id": "d0555789f2af89817b4bf50a4d88e98ad6c20730", "commit_date": "Thu Jun 14 11:07:22 2012 -0500", "commit_message": "DBStats: watch for missing work queue", "files_name": ["src/lib/Bcfg2/Server/Plugin.py"]}, {"commit_id": "c3f70edc456bb47c2058a424f99e4673b8586214", "commit_date": "Thu Jun 14 11:07:22 2012 -0500", "commit_message": "DBStats: watch for missing work queue (cherry picked from commit d0555789f2af89817b4bf50a4d88e98ad6c20730)", "files_name": ["src/lib/Server/Plugin.py"]}, {"commit_id": "591200dab6feb2a5f9f42292fc92e778591a8a38", "commit_date": "Thu Jun 14 11:20:25 2012 -0500", "commit_message": "web_reports: Make reasons clickable in entry listings", "files_name": ["src/lib/Bcfg2/Server/Reports/reports/models.py", "src/lib/Bcfg2/Server/Reports/reports/templates/config_items/common.html", "src/lib/Bcfg2/Server/Reports/reports/templates/config_items/listing.html"]}, {"commit_id": "08ee6ed4397bdd2c8d1539b5300cd12b3c750246", "commit_date": "Thu Jun 14 12:04:31 2012 -0500", "commit_message": "web_reports: Add entry view", "files_name": ["src/lib/Bcfg2/Server/Reports/reports/templates/config_items/entry_status.html", "src/lib/Bcfg2/Server/Reports/reports/urls.py", "src/lib/Bcfg2/Server/Reports/reports/views.py"]}, {"commit_id": "ec195f704ae1818f0a0c7eb3eeacf21b271708b9", "commit_date": "Thu Jun 14 12:08:35 2012 -0500", "commit_message": "web_reports: add entry links", "files_name": ["src/lib/Bcfg2/Server/Reports/reports/templates/config_items/common.html", "src/lib/Bcfg2/Server/Reports/reports/templates/config_items/listing.html"]}, {"commit_id": "d6f6290a2db83cbcb9829431b37b1c510c28bdd8", "commit_date": "Thu Jun 14 12:14:35 2012 -0500", "commit_message": "web_reports: add links to entry view", "files_name": ["src/lib/Bcfg2/Server/Reports/reports/templates/config_items/entry_status.html"]}, {"commit_id": "252989b29cf04aadf9775d720da495b381df7a43", "commit_date": "Thu Jun 14 15:12:13 2012 -0400", "commit_message": "fix ProbeData inheritance from str", "files_name": ["src/lib/Server/Plugins/Probes.py"]}, {"commit_id": "33e36dd2ac03c71c47e8c1841c50ca35c7ef94d4", "commit_date": "Thu Jun 14 17:03:07 2012 -0400", "commit_message": "better error message from bcfg2-info packagesources without a hostname", "files_name": ["src/sbin/bcfg2-info"]}, {"commit_id": "5dba50f1db4b9807a137a2f40b338010eaf297ea", "commit_date": "Thu Jun 14 18:17:15 2012 -0500", "commit_message": "ThreadedStatistics: Set daemon=False for ThreadedStatistic", "files_name": ["src/lib/Bcfg2/Server/Plugin.py"]}, {"commit_id": "e43040b084d66702efe1887a9d953b9154732512", "commit_date": "Thu Jun 14 20:08:47 2012 -0400", "commit_message": "made bcfg2-lint load lint plugins from server plugins where appropriate", "files_name": ["src/lib/Bcfg2/Server/Lint/Bundles.py", "src/lib/Bcfg2/Server/Lint/Deltas.py", "src/lib/Bcfg2/Server/Lint/GroupPatterns.py", "src/lib/Bcfg2/Server/Lint/InfoXML.py", "src/lib/Bcfg2/Server/Lint/Pkgmgr.py", "src/lib/Bcfg2/Server/Lint/TemplateHelper.py", "src/lib/Bcfg2/Server/Plugins/Bundler.py", "src/lib/Bcfg2/Server/Plugins/Cfg/__init__.py", "src/lib/Bcfg2/Server/Plugins/GroupPatterns.py", "src/lib/Bcfg2/Server/Plugins/Pkgmgr.py", "src/lib/Bcfg2/Server/Plugins/TemplateHelper.py", "src/sbin/bcfg2-lint"]}, {"commit_id": "cee325724cd91a7d780b35a6856618ce7e1739a5", "commit_date": "Fri Jun 15 07:43:06 2012 -0400", "commit_message": "fixed ProbeData.__new__ to actually return something", "files_name": ["src/lib/Server/Plugins/Probes.py"]}, {"commit_id": "11f32cb8af475567efb2e1532de61c970cee8f2e", "commit_date": "Fri Jun 15 08:03:22 2012 -0400", "commit_message": "really fixed ProbeData init", "files_name": ["src/lib/Server/Plugins/Probes.py"]}, {"commit_id": "c09f4ba5fdd5fbbdfb97b95840cb9dd214cca733", "commit_date": "Fri Jun 15 09:08:39 2012 -0500", "commit_message": "DBStats: make imports transactional", "files_name": ["src/lib/Bcfg2/Server/Reports/importscript.py"]}, {"commit_id": "067c582b1f62e44aa44a155f1fc55b1140a9a7da", "commit_date": "Fri Jun 15 09:31:21 2012 -0500", "commit_message": "DBStats: add unique contraints for entries", "files_name": ["src/lib/Bcfg2/Server/Reports/reports/models.py"]}, {"commit_id": "ac829ae7da105070007d7f95882ddff1f6b338f0", "commit_date": "Fri Jun 15 09:34:01 2012 -0500", "commit_message": "DBStats: remove vlevel from _fetch_reason", "files_name": ["src/lib/Bcfg2/Server/Reports/importscript.py"]}, {"commit_id": "edf1383048bfbd117ec27fb25a74c4b02a430ecd", "commit_date": "Fri Jun 15 09:41:50 2012 -0500", "commit_message": "DBStats: Load entries in bulk", "files_name": ["src/lib/Bcfg2/Server/Reports/importscript.py"]}, {"commit_id": "9b08b9179e11ef092396662afd1a71e57ca5e528", "commit_date": "Fri Jun 15 10:54:30 2012 -0400", "commit_message": "fixed option alignment issues", "files_name": ["src/lib/Bcfg2/Options.py", "src/sbin/bcfg2-admin", "src/sbin/bcfg2-crypt", "src/sbin/bcfg2-info"]}, {"commit_id": "e3131034dd00c61ed5ca4f6a38f74250f0ac5726", "commit_date": "Fri Jun 15 10:55:58 2012 -0400", "commit_message": "added support for encrypting different elements in a single Properties file with different passphrases", "files_name": ["doc/server/plugins/connectors/properties.txt", "src/lib/Bcfg2/Server/Plugins/Properties.py", "src/sbin/bcfg2-crypt", "tools/manpagegen/bcfg2-crypt.8.ronn"]}, {"commit_id": "cc8685b40db175517bfe036f2a3e94be005727d5", "commit_date": "Tue Jun 19 11:09:16 2012 -0400", "commit_message": "fixed import", "files_name": ["src/sbin/bcfg2-reports"]}, {"commit_id": "3cb7b5bf345785d9ad1f3916b21ee06fffb9ce46", "commit_date": "Thu May 17 23:56:46 2012 +0000", "commit_message": "Adding DBStats hooks into YUMng", "files_name": ["src/lib/Client/Tools/YUMng.py"]}, {"commit_id": "49362b6d633a7784f77650d5218d0e629d50e4fb", "commit_date": "Thu May 17 23:58:19 2012 +0000", "commit_message": "Adding DB2 support for Statistics", "files_name": ["src/lib/Server/Reports/settings.py"]}, {"commit_id": "16a38827b5bb374da6caaf103f9363a45262f745", "commit_date": "Wed May 23 08:24:42 2012 -0500", "commit_message": "YUMng: Fix DBStats hooks for centos5", "files_name": ["src/lib/Client/Tools/YUMng.py"]}, {"commit_id": "869934179f21858b10d4de60d11d3644afcfad74", "commit_date": "Tue Jun 19 11:24:00 2012 -0400", "commit_message": "merged maint", "files_name": ["5b811a941fc01fe9f5d0aade8e908be5682cd000 - Tue Jun 19 11:32:21 2012 -0400 : fixed code-block directives", "doc/server/plugins/generators/packages.txt"]}, {"commit_id": "bc7fe61e6bbbc3c94275c85b674c7ee6c73fd5f7", "commit_date": "Tue Jun 19 11:34:31 2012 -0400", "commit_message": "fixed typo in Packages end_statistics hook", "files_name": ["src/lib/Bcfg2/Server/Plugins/Packages/__init__.py"]}, {"commit_id": "482051f595c23819d35f5e7cc38b1675e90a2c89", "commit_date": "Tue Jun 19 13:43:59 2012 -0400", "commit_message": "fixed decryption of Properties files", "files_name": ["src/lib/Bcfg2/Server/Plugins/Properties.py"]}, {"commit_id": "3c2fef87e14a05f9f4deff93ee6d9fbbcfc47ec5", "commit_date": "Tue Jun 19 14:05:47 2012 -0400", "commit_message": "added XMLMatch() method of StructFile to resolve Group/Client tags recursively and return an XML document", "files_name": ["src/lib/Bcfg2/Server/Plugin.py"]}, {"commit_id": "dbc5e0d190ecfb3b047e133294b8d1e6ef451c46", "commit_date": "Tue Jun 19 14:17:52 2012 -0400", "commit_message": "added automatch to automatically invoke XMLMatch() on Properties files", "files_name": ["doc/server/plugins/connectors/properties.txt", "src/lib/Bcfg2/Server/Plugins/Properties.py"]}, {"commit_id": "a01b57c799d0eb24c4122003c0c295026edc48ba", "commit_date": "Tue Jun 19 14:39:13 2012 -0400", "commit_message": "added ability to disable Properties write-back", "files_name": ["doc/server/plugins/connectors/properties.txt", "src/lib/Bcfg2/Server/Plugins/Properties.py"]}, {"commit_id": "e93478e013d1cda7f77771f622f5c99ac0199979", "commit_date": "Thu Jun 21 12:34:03 2012 -0400", "commit_message": "fixed changed events in Cfg; stringification of FAM objects", "files_name": ["src/lib/Bcfg2/Server/FileMonitor/__init__.py", "src/lib/Bcfg2/Server/Plugins/Cfg/__init__.py"]}, {"commit_id": "94788714a2867ebc2fcc5b80ba8a0939dcb9aa48", "commit_date": "Mon Jun 25 14:36:33 2012 -0400", "commit_message": "unified [Single]XMLFileBacked, enabled xinclude pretty much everywhere", "files_name": ["src/lib/Bcfg2/Server/FileMonitor/__init__.py", "src/lib/Bcfg2/Server/Plugin.py", "src/lib/Bcfg2/Server/Plugins/Bundler.py", "src/lib/Bcfg2/Server/Plugins/FileProbes.py", "src/lib/Bcfg2/Server/Plugins/GroupPatterns.py", "src/lib/Bcfg2/Server/Plugins/Metadata.py", "src/lib/Bcfg2/Server/Plugins/NagiosGen.py", "src/lib/Bcfg2/Server/Plugins/Packages/PackagesSources.py", "src/lib/Bcfg2/Server/Plugins/Properties.py", "src/lib/Bcfg2/Server/Plugins/PuppetENC.py"]}, {"commit_id": "9fe65b2fe9323da6583625cde1b2494352207d51", "commit_date": "Tue Jun 26 16:24:48 2012 -0400", "commit_message": "fixed yumng verify_flags option handling", "files_name": ["src/lib/Bcfg2/Client/Tools/YUMng.py"]}, {"commit_id": "09e934512dc053a96bd7b16c2c95563e055720f7", "commit_date": "Tue Jul 3 08:56:47 2012 -0400", "commit_message": "added selinux support", "files_name": ["doc/server/configurationentries.txt", "doc/server/index.txt", "doc/server/info.txt", "doc/server/plugins/generators/rules.txt", "doc/server/plugins/generators/semodules.txt", "doc/server/selinux.txt", "schemas/base.xsd", "schemas/bundle.xsd", "schemas/defaults.xsd", "schemas/info.xsd"]}], "parents": [{"commit_id_before": "503ea9de36d74ac6d7ad564d04a923a016592ccd", "url_before": "https://api.github.com/repos/Bcfg2/bcfg2/commits/503ea9de36d74ac6d7ad564d04a923a016592ccd", "html_url_before": "https://github.com/Bcfg2/bcfg2/commit/503ea9de36d74ac6d7ad564d04a923a016592ccd"}], "details": [{"raw_url": "https://github.com/Bcfg2/bcfg2/raw/a524967e8d5c4c22e49cd619aed20c87a316c0be/src%2Flib%2FServer%2FPlugins%2FTrigger.py", "code": "import os\nimport pipes\nimport Bcfg2.Server.Plugin\nfrom subprocess import Popen, PIPE\n\nclass Trigger(Bcfg2.Server.Plugin.Plugin,\n              Bcfg2.Server.Plugin.Statistics):\n    \"\"\"Trigger is a plugin that calls external scripts (on the server).\"\"\"\n    name = 'Trigger'\n    __version__ = '$Id'\n    __author__ = 'bcfg-dev@mcs.anl.gov'\n\n    def __init__(self, core, datastore):\n        Bcfg2.Server.Plugin.Plugin.__init__(self, core, datastore)\n        Bcfg2.Server.Plugin.Statistics.__init__(self)\n        try:\n            os.stat(self.data)\n        except:\n            self.logger.error(\"Trigger: spool directory %s does not exist; \"\n                              \"unloading\" % self.data)\n            raise Bcfg2.Server.Plugin.PluginInitError\n\n    def async_run(self, args):\n        pid = os.fork()\n        if pid:\n            os.waitpid(pid, 0)\n        else:\n            dpid = os.fork()\n            if not dpid:\n                self.debug_log(\"Running %s\" % \" \".join(pipes.quote(a)\n                                                       for a in args))\n                proc = Popen(args, stdin=PIPE, stdout=PIPE, stderr=PIPE)\n                (out, err) = proc.communicate()\n                rv = proc.wait()\n                if rv != 0:\n                    self.logger.error(\"Trigger: Error running %s (%s): %s\" %\n                                      (args[0], rv, err))\n                elif err:\n                    self.debug_log(\"Trigger: Error: %s\" % err)\n            os._exit(0)\n\n    def process_statistics(self, metadata, _):\n        args = [metadata.hostname, '-p', metadata.profile, '-g',\n                ':'.join([g for g in metadata.groups])]\n        self.debug_log(\"running triggers\")\n        for notifier in os.listdir(self.data):\n            self.debug_log(\"running %s\" % notifier)\n            if ((notifier[-1] == '~') or\n                (notifier[:2] == '.#') or\n                (notifier[-4:] == '.swp') or\n                (notifier in ['SCCS', '.svn', '4913'])):\n                continue\n            npath = os.path.join(self.data, notifier)\n            self.async_run([npath] + args)\n", "code_before": "import os\nimport Bcfg2.Server.Plugin\n\n\ndef async_run(prog, args):\n    pid = os.fork()\n    if pid:\n        os.waitpid(pid, 0)\n    else:\n        dpid = os.fork()\n        if not dpid:\n            os.system(\" \".join([prog] + args))\n        os._exit(0)\n\n\nclass Trigger(Bcfg2.Server.Plugin.Plugin,\n              Bcfg2.Server.Plugin.Statistics):\n    \"\"\"Trigger is a plugin that calls external scripts (on the server).\"\"\"\n    name = 'Trigger'\n    __version__ = '$Id'\n    __author__ = 'bcfg-dev@mcs.anl.gov'\n\n    def __init__(self, core, datastore):\n        Bcfg2.Server.Plugin.Plugin.__init__(self, core, datastore)\n        Bcfg2.Server.Plugin.Statistics.__init__(self)\n        try:\n            os.stat(self.data)\n        except:\n            self.logger.error(\"Trigger: spool directory %s does not exist; \"\n                              \"unloading\" % self.data)\n            raise Bcfg2.Server.Plugin.PluginInitError\n\n    def process_statistics(self, metadata, _):\n        args = [metadata.hostname, '-p', metadata.profile, '-g',\n                ':'.join([g for g in metadata.groups])]\n        for notifier in os.listdir(self.data):\n            if ((notifier[-1] == '~') or\n                (notifier[:2] == '.#') or\n                (notifier[-4:] == '.swp') or\n                (notifier in ['SCCS', '.svn', '4913'])):\n                continue\n            npath = self.data + '/' + notifier\n            self.logger.debug(\"Running %s %s\" % (npath, \" \".join(args)))\n            async_run(npath, args)\n", "patch": "@@ -1,17 +1,7 @@\n import os\n+import pipes\n import Bcfg2.Server.Plugin\n-\n-\n-def async_run(prog, args):\n-    pid = os.fork()\n-    if pid:\n-        os.waitpid(pid, 0)\n-    else:\n-        dpid = os.fork()\n-        if not dpid:\n-            os.system(\" \".join([prog] + args))\n-        os._exit(0)\n-\n+from subprocess import Popen, PIPE\n \n class Trigger(Bcfg2.Server.Plugin.Plugin,\n               Bcfg2.Server.Plugin.Statistics):\n@@ -30,15 +20,35 @@ def __init__(self, core, datastore):\n                               \"unloading\" % self.data)\n             raise Bcfg2.Server.Plugin.PluginInitError\n \n+    def async_run(self, args):\n+        pid = os.fork()\n+        if pid:\n+            os.waitpid(pid, 0)\n+        else:\n+            dpid = os.fork()\n+            if not dpid:\n+                self.debug_log(\"Running %s\" % \" \".join(pipes.quote(a)\n+                                                       for a in args))\n+                proc = Popen(args, stdin=PIPE, stdout=PIPE, stderr=PIPE)\n+                (out, err) = proc.communicate()\n+                rv = proc.wait()\n+                if rv != 0:\n+                    self.logger.error(\"Trigger: Error running %s (%s): %s\" %\n+                                      (args[0], rv, err))\n+                elif err:\n+                    self.debug_log(\"Trigger: Error: %s\" % err)\n+            os._exit(0)\n+\n     def process_statistics(self, metadata, _):\n         args = [metadata.hostname, '-p', metadata.profile, '-g',\n                 ':'.join([g for g in metadata.groups])]\n+        self.debug_log(\"running triggers\")\n         for notifier in os.listdir(self.data):\n+            self.debug_log(\"running %s\" % notifier)\n             if ((notifier[-1] == '~') or\n                 (notifier[:2] == '.#') or\n                 (notifier[-4:] == '.swp') or\n                 (notifier in ['SCCS', '.svn', '4913'])):\n                 continue\n-            npath = self.data + '/' + notifier\n-            self.logger.debug(\"Running %s %s\" % (npath, \" \".join(args)))\n-            async_run(npath, args)\n+            npath = os.path.join(self.data, notifier)\n+            self.async_run([npath] + args)", "file_path": "files/2012_7/27", "file_language": "py", "file_name": "src/lib/Server/Plugins/Trigger.py", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 0, "llm_check": 1, "static_check": 1, "static": {"rats": [true, ["/data/rdhu/other/Static/tmp/2012_7_27.py:12: High: system\n            os.system(\" \".join([prog] + args))\nArgument 1 to this function call should be checked to ensure that it does not\ncome from an untrusted source without first verifying that it contains nothing\ndangerous.\n"]], "semgrep": [false, []]}, "target": 1, "function_before": [{"function": "def async_run(prog, args):\n    pid = os.fork()\n    if pid:\n        os.waitpid(pid, 0)\n    else:\n        dpid = os.fork()\n        if not dpid:\n            os.system(\" \".join([prog] + args))\n        os._exit(0)", "target": 1, "line": "@@  -1,17 +1,7  @@\n import os\n+import pipes\n import Bcfg2.Server.Plugin\n-\n-\n-def async_run(prog, args):\n-    pid = os.fork()\n-    if pid:\n-        os.waitpid(pid, 0)\n-    else:\n-        dpid = os.fork()\n-        if not dpid:\n-            os.system(\" \".join([prog] + args))\n-        os._exit(0)\n-\n+from subprocess import Popen, PIPE\n \n class Trigger(Bcfg2.Server.Plugin.Plugin,\n               Bcfg2.Server.Plugin.Statistics):\n"}, {"function": "class Trigger(Bcfg2.Server.Plugin.Plugin,\n              Bcfg2.Server.Plugin.Statistics):\n    \"\"\"Trigger is a plugin that calls external scripts (on the server).\"\"\"\n    name = 'Trigger'\n    __version__ = '$Id'\n    __author__ = 'bcfg-dev@mcs.anl.gov'\n\n    def __init__(self, core, datastore):\n        Bcfg2.Server.Plugin.Plugin.__init__(self, core, datastore)\n        Bcfg2.Server.Plugin.Statistics.__init__(self)\n        try:\n            os.stat(self.data)\n        except:\n            self.logger.error(\"Trigger: spool directory %s does not exist; \"\n                              \"unloading\" % self.data)\n            raise Bcfg2.Server.Plugin.PluginInitError\n\n    def process_statistics(self, metadata, _):\n        args = [metadata.hostname, '-p', metadata.profile, '-g',\n                ':'.join([g for g in metadata.groups])]\n        for notifier in os.listdir(self.data):\n            if ((notifier[-1] == '~') or\n                (notifier[:2] == '.#') or\n                (notifier[-4:] == '.swp') or\n                (notifier in ['SCCS', '.svn', '4913'])):\n                continue\n            npath = self.data + '/' + notifier\n            self.logger.debug(\"Running %s %s\" % (npath, \" \".join(args)))\n            async_run(npath, args)", "target": 1, "line": "@@  -1,17 +1,7  @@\n import os\n+import pipes\n import Bcfg2.Server.Plugin\n-\n-\n-def async_run(prog, args):\n-    pid = os.fork()\n-    if pid:\n-        os.waitpid(pid, 0)\n-    else:\n-        dpid = os.fork()\n-        if not dpid:\n-            os.system(\" \".join([prog] + args))\n-        os._exit(0)\n-\n+from subprocess import Popen, PIPE\n \n class Trigger(Bcfg2.Server.Plugin.Plugin,\n               Bcfg2.Server.Plugin.Statistics):\n@@  -30,15 +20,35  @@ def __init__(self, core, datastore):\n                               \"unloading\" % self.data)\n             raise Bcfg2.Server.Plugin.PluginInitError\n \n+    def async_run(self, args):\n+        pid = os.fork()\n+        if pid:\n+            os.waitpid(pid, 0)\n+        else:\n+            dpid = os.fork()\n+            if not dpid:\n+                self.debug_log(\"Running %s\" % \" \".join(pipes.quote(a)\n+                                                       for a in args))\n+                proc = Popen(args, stdin=PIPE, stdout=PIPE, stderr=PIPE)\n+                (out, err) = proc.communicate()\n+                rv = proc.wait()\n+                if rv != 0:\n+                    self.logger.error(\"Trigger: Error running %s (%s): %s\" %\n+                                      (args[0], rv, err))\n+                elif err:\n+                    self.debug_log(\"Trigger: Error: %s\" % err)\n+            os._exit(0)\n+\n     def process_statistics(self, metadata, _):\n         args = [metadata.hostname, '-p', metadata.profile, '-g',\n                 ':'.join([g for g in metadata.groups])]\n+        self.debug_log(\"running triggers\")\n         for notifier in os.listdir(self.data):\n+            self.debug_log(\"running %s\" % notifier)\n             if ((notifier[-1] == '~') or\n                 (notifier[:2] == '.#') or\n                 (notifier[-4:] == '.swp') or\n                 (notifier in ['SCCS', '.svn', '4913'])):\n                 continue\n-            npath = self.data + '/' + notifier\n-            self.logger.debug(\"Running %s %s\" % (npath, \" \".join(args)))\n-            async_run(npath, args)\n+            npath = os.path.join(self.data, notifier)\n+            self.async_run([npath] + args)"}], "function_after": [{"function": "class Trigger(Bcfg2.Server.Plugin.Plugin,\n              Bcfg2.Server.Plugin.Statistics):\n    \"\"\"Trigger is a plugin that calls external scripts (on the server).\"\"\"\n    name = 'Trigger'\n    __version__ = '$Id'\n    __author__ = 'bcfg-dev@mcs.anl.gov'\n\n    def __init__(self, core, datastore):\n        Bcfg2.Server.Plugin.Plugin.__init__(self, core, datastore)\n        Bcfg2.Server.Plugin.Statistics.__init__(self)\n        try:\n            os.stat(self.data)\n        except:\n            self.logger.error(\"Trigger: spool directory %s does not exist; \"\n                              \"unloading\" % self.data)\n            raise Bcfg2.Server.Plugin.PluginInitError\n\n    def async_run(self, args):\n        pid = os.fork()\n        if pid:\n            os.waitpid(pid, 0)\n        else:\n            dpid = os.fork()\n            if not dpid:\n                self.debug_log(\"Running %s\" % \" \".join(pipes.quote(a)\n                                                       for a in args))\n                proc = Popen(args, stdin=PIPE, stdout=PIPE, stderr=PIPE)\n                (out, err) = proc.communicate()\n                rv = proc.wait()\n                if rv != 0:\n                    self.logger.error(\"Trigger: Error running %s (%s): %s\" %\n                                      (args[0], rv, err))\n                elif err:\n                    self.debug_log(\"Trigger: Error: %s\" % err)\n            os._exit(0)\n\n    def process_statistics(self, metadata, _):\n        args = [metadata.hostname, '-p', metadata.profile, '-g',\n                ':'.join([g for g in metadata.groups])]\n        self.debug_log(\"running triggers\")\n        for notifier in os.listdir(self.data):\n            self.debug_log(\"running %s\" % notifier)\n            if ((notifier[-1] == '~') or\n                (notifier[:2] == '.#') or\n                (notifier[-4:] == '.swp') or\n                (notifier in ['SCCS', '.svn', '4913'])):\n                continue\n            npath = os.path.join(self.data, notifier)\n            self.async_run([npath] + args)", "target": 0}]}], "outdated": 0, "cwe_descripiton": "", "cwe_consequence": "", "cwe_method": "", "cwe_solution": ""}
