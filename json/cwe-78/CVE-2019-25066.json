{"index": 8450, "cve_id": "CVE-2019-25066", "cwe_id": ["CWE-78"], "cve_language": "Python", "cve_description": "A vulnerability has been found in ajenti 2.1.31 and classified as critical. This vulnerability affects unknown code of the component API. The manipulation leads to privilege escalation. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 2.1.32 is able to address this issue. The name of the patch is 7aa146b724e0e20cfee2c71ca78fafbf53a8767c. It is recommended to upgrade the affected component.", "cvss": "8.8", "publish_date": "June 9, 2022", "AV": "NETWORK", "AC": "NETWORK", "PR": "LOW", "UI": "NONE", "S": "UNCHANGED", "C": "HIGH", "I": "HIGH", "A": "HIGH", "commit_id": "7aa146b724e0e20cfee2c71ca78fafbf53a8767c", "commit_message": "fixed shell injection in os auth provider", "commit_date": "2019-10-05T14:06:48Z", "project": "ajenti/ajenti", "url": "https://api.github.com/repos/ajenti/ajenti/commits/7aa146b724e0e20cfee2c71ca78fafbf53a8767c", "html_url": "https://github.com/ajenti/ajenti/commit/7aa146b724e0e20cfee2c71ca78fafbf53a8767c", "windows_before": [{"commit_id": "b6a94915347349e8b1ec9c29668cc07bd24c1b07", "commit_date": "Wed Oct 2 22:35:51 2019 +0200", "commit_message": "Add session max time option in samples.", "files_name": ["ajenti-panel/config.yml", "ajenti-panel/setup.py"]}, {"commit_id": "e444f4d58422ce9acd8f4d4816eeccf996b4e422", "commit_date": "Wed Oct 2 22:21:16 2019 +0200", "commit_message": "Show remaining session time.", "files_name": ["plugins/core/content/pages/index.html", "plugins/core/resources/css/app.less", "plugins/core/resources/js/core/controllers/root.controller.es", "plugins/core/views/api.py"]}, {"commit_id": "ebb260f4cebde34491278da51bea22a7e156bf23", "commit_date": "Wed Oct 2 09:58:29 2019 +0200", "commit_message": "Configure session max duration, default 3600.", "files_name": ["ajenti-core/aj/config.py", "ajenti-core/aj/gate/middleware.py", "ajenti-core/aj/gate/session.py"]}, {"commit_id": "ef385f96d7e9e09b81ca5e48dc4e04042d5a74a4", "commit_date": "Tue Oct 1 18:26:37 2019 +0200", "commit_message": "fixed #1193", "files_name": ["plugins/core/bower.json", "plugins/core/plugin.yml"]}, {"commit_id": "e623860d59cfeb181cf00a104be5d8ed75dc44c5", "commit_date": "Tue Sep 24 14:19:36 2019 +0200", "commit_message": "bump", "files_name": ["ajenti-core/aj/__init__.py"]}, {"commit_id": "29a69c7fb43543db6013556a0993140db6ebce41", "commit_date": "Tue Sep 24 14:14:28 2019 +0200", "commit_message": "Merge pull request #1192 from kiarn/closepipe", "files_name": ["67e09d50d9716694cbfb3a4160b2cec01d3c19f5 - Tue Sep 24 14:00:29 2019 +0200 : Closing properly GIPC pipes.", "ajenti-core/aj/gate/gate.py", "ajenti-core/aj/gate/stream.py"]}, {"commit_id": "1550cf7b0274a350dc2a78a6c46c64542c362c21", "commit_date": "Tue Sep 24 09:59:07 2019 +0200", "commit_message": "Force TLSv1.2", "files_name": ["ajenti-core/aj/core.py"]}, {"commit_id": "6188af41b8f35f44203500a2cc95093c04fec696", "commit_date": "Wed Sep 18 12:11:13 2019 +0200", "commit_message": "Merge pull request #1189 from kiarn/dashboard", "files_name": ["be3acfbcd6e3f00bd2fa54054f41eb94f1c8bddc - Tue Sep 17 15:50:55 2019 +0200 : Save config when removing tab.", "plugins/dashboard/resources/js/controllers/index.controller.es"]}, {"commit_id": "29a93ef36e8e2550d2e5391fb413beb5885a542f", "commit_date": "Thu Aug 15 16:11:17 2019 +0200", "commit_message": "Add option to set log level. (#1184)", "files_name": ["852593ea7ad0cea9bd62fe14d98c1ea2f11c1872 - Thu Aug 15 15:56:20 2019 +0200 : Add option to set log level.", "ajenti-panel/ajenti-panel"]}, {"commit_id": "71f46b2886a6ed35762f26e8a4425a36c2943d2e", "commit_date": "Thu Aug 15 10:55:14 2019 +0200", "commit_message": "Merge branch 'master' of github.com:ajenti/ajenti", "files_name": ["315add38ca381df4c6ad93ff114c817340e5df73 - Thu Aug 15 10:52:22 2019 +0200 : Merge pull request #1183 from kiarn/setup", "2d77f0af5b37a61a5731dd62674c0fc1c40f5108 - Wed Aug 14 22:39:31 2019 +0200 : Bump version.", "ajenti-core/aj/__init__.py"]}, {"commit_id": "5f6816efc20c3cef3de7d3f285ebf8a98d7b7a23", "commit_date": "Tue Aug 13 18:38:05 2019 +0200", "commit_message": "Include all data for all packaging methods.", "files_name": ["ajenti-core/setup.py"]}, {"commit_id": "ee6d738b5cf3d75e4fd080a41dc73937ac731010", "commit_date": "Mon Aug 12 21:19:19 2019 +0200", "commit_message": "bump", "files_name": ["ajenti-core/aj/__init__.py", "ajenti-core/setup.py"]}, {"commit_id": "2a212a3e04b23947f2ba826e0334f9830ca80797", "commit_date": "Mon Aug 12 21:16:05 2019 +0200", "commit_message": "Merge pull request #1181 from kiarn/setup", "files_name": ["25cf9e75512e19b9e3c12fbf3f7dd027ded5cf07 - Mon Aug 12 21:00:17 2019 +0200 : Add path to static files.", "ajenti-core/setup.py"]}, {"commit_id": "4abfb67fe475c5d4008a7003065163df632dedbd", "commit_date": "Mon Aug 12 15:17:16 2019 +0200", "commit_message": "bump, added image to the package", "files_name": ["ajenti-core/MANIFEST.in", "ajenti-core/aj/__init__.py", "plugins/augeas/plugin.yml", "plugins/auth_users/plugin.yml", "plugins/core/plugin.yml", "plugins/datetime/plugin.yml", "plugins/filemanager/plugin.yml", "plugins/filesystem/plugin.yml", "plugins/network/plugin.yml", "plugins/packages/plugin.yml", "plugins/plugins/plugin.yml", "plugins/services/plugin.yml", "plugins/settings/plugin.yml"]}, {"commit_id": "ab377d4b492c3b5c7a71348e89bb3b29ec799850", "commit_date": "Mon Aug 12 10:17:28 2019 +0200", "commit_message": "Pyyaml - some fixs for new version of PyYAML and config save ac\u2026 (#1180)", "files_name": ["c65b462097e32134c097f1c9de643813b9081cd2 - Mon Aug 12 10:13:20 2019 +0200 : Better indentation.", "plugins/settings/resources/js/controllers/index.controller.es"]}, {"commit_id": "4c3d01de88a81d0c529824f011023a190c58a6ce", "commit_date": "Mon Aug 12 10:10:17 2019 +0200", "commit_message": "Cleanup and have to learn to better read git diff.", "files_name": ["ajenti-panel/ajenti-panel"]}, {"commit_id": "7b77c2f6f5ba7bddfc70701d924bb31a15ddea0f", "commit_date": "Sun Aug 11 18:42:59 2019 +0200", "commit_message": "Create doesn't need mode, and has to return a promise.", "files_name": ["plugins/filemanager/resources/js/controllers/index.controller.es", "plugins/filesystem/resources/js/services/filesystem.service.es"]}, {"commit_id": "3df0115e1fa74afac2261705e6c27a515a7d865f", "commit_date": "Sun Aug 11 18:42:10 2019 +0200", "commit_message": "Double parent relation for binding.", "files_name": ["plugins/filemanager/resources/partial/index.html"]}, {"commit_id": "057eb61a2bbd8c67c95aa4b76cc3b587a9633439", "commit_date": "Thu Aug 8 13:51:06 2019 +0200", "commit_message": "Yaml safe_dump is byte obj in PY3.", "files_name": ["ajenti-core/aj/config.py", "ajenti-panel/ajenti-client-ssl-gen", "ajenti-panel/ajenti-panel", "ajenti-panel/ajenti-ssl-gen"]}, {"commit_id": "0a020acf568a9951adf278a00ef38befd95d20f8", "commit_date": "Thu Aug 8 12:59:08 2019 +0200", "commit_message": "Safe loader for new version of pyyaml.", "files_name": ["ajenti-core/aj/config.py", "ajenti-core/aj/plugins.py", "ajenti-panel/ajenti-client-ssl-gen", "ajenti-panel/ajenti-panel", "ajenti-panel/ajenti-ssl-gen", "plugins/network/managers/ubuntu_manager.py"]}, {"commit_id": "b92680c994db037db9946e509a0fc56197eae19a", "commit_date": "Thu Aug 8 12:38:16 2019 +0200", "commit_message": "Save config if no change in cert.", "files_name": ["plugins/settings/resources/js/controllers/index.controller.es"]}, {"commit_id": "56d22dad3a1ff23716eda919159cafe770f8007d", "commit_date": "Thu Jun 27 12:05:05 2019 +0200", "commit_message": "Merge remote-tracking branch 'upstream/master'", "files_name": ["ad1bf3d13c0ad7fe5c615ca4963d18f2339ca303 - Wed Jun 12 10:23:23 2019 +0200 : Updated FontAwesome to the most current version (#1177)", "1e1dc5df466c7d12759c2893148f42d48c599c22 - Wed Jun 12 10:16:23 2019 +0200 : added fontawesome5 v4shims", "plugins/core/content/pages/index.html"]}, {"commit_id": "ee33e7b378c9e4edc6c67fc2148e55292ead9de5", "commit_date": "Tue Jun 11 17:52:54 2019 +0200", "commit_message": "Updated FontAwesome to the current version", "files_name": ["plugins/core/bower.json", "plugins/core/content/pages/index.html"]}, {"commit_id": "6dfba14a45e3d752f4f5948c614139a23aa5597a", "commit_date": "Tue Jun 11 17:50:57 2019 +0200", "commit_message": "Merge pull request #1 from ajenti/master", "files_name": ["7b45195e2a1f8e973330c73e0ca10d4ab796207e - Sun May 26 22:18:06 2019 +0200 : Merge branch 'configpost'", "6a05170b456d117fb1ddbaf2686d98571b52b766 - Sun May 26 22:16:54 2019 +0200 : Merge branch 'customredir'", "1972063e66aae4b40f664ec1f26906d23b0c3170 - Sun May 26 22:13:47 2019 +0200 : Merge branch 'network'", "3ba55914cf036608f47c83cb30d09e927f6db4e7 - Sun May 26 22:10:20 2019 +0200 : Output from systemd list must be json serializable. (#1175)", "b8afdcb2175c560206c1a385cf8ca4e4a476b84d - Sun May 26 22:09:47 2019 +0200 : Merge pull request #1172 from kiarn/configpost", "c2e58aae4eb910da85761de8c85c1ffa1209c208 - Sun May 26 22:08:57 2019 +0200 : Merge pull request #1174 from kiarn/network", "01bb86dd8835343b1a40070cee3098d45b7cb364 - Sun May 26 22:08:37 2019 +0200 : Merge pull request #1173 from kiarn/customredir", "a082c3e20f504f9e4602e4d38b98b2f3d15970be - Sun May 26 15:21:07 2019 +0200 : Output from systemd list must be json serializable.", "plugins/services/managers/systemd_manager.py"]}, {"commit_id": "14d3a41d1a0382aecb06919bb14bec154e7d67b3", "commit_date": "Sun May 26 14:49:38 2019 +0200", "commit_message": "HTML entities not rendered.", "files_name": ["plugins/datetime/main.py"]}, {"commit_id": "a7282e9fa1926328edd5ef92d11fb5f402a80777", "commit_date": "Sun May 26 14:23:10 2019 +0200", "commit_message": "Cleanup.", "files_name": ["plugins/auth_users/resources/js/controllers/index.controller.es"]}, {"commit_id": "c48c0203a3ae8df3a59e868c9d9e4ac0f90acceb", "commit_date": "Sun May 26 14:21:27 2019 +0200", "commit_message": "Need to pass config as parameter for post request.", "files_name": ["plugins/auth_users/resources/js/controllers/index.controller.es", "plugins/settings/resources/js/controllers/index.controller.es"]}, {"commit_id": "9306917b9c7ee1df40334dbbb3bbb2c275124cc0", "commit_date": "Sat May 25 23:38:41 2019 +0200", "commit_message": "Custom redirection after login.", "files_name": ["plugins/core/resources/js/core/controllers/login.controller.es"]}, {"commit_id": "07f43cee00b422a4b5b0f62dbf023c701dd0893b", "commit_date": "Sat May 18 20:12:01 2019 +0200", "commit_message": "Right response type for a server error.", "files_name": ["ajenti-core/aj/routing.py"]}, {"commit_id": "c98a079261f75dbd43c4a2ece40323fc1f40e347", "commit_date": "Sat May 18 19:54:30 2019 +0200", "commit_message": "Encoding hostname response.", "files_name": ["plugins/network/managers/centos_manager.py", "plugins/network/managers/debian_manager.py", "plugins/network/managers/gentoo_manager.py", "plugins/network/managers/ubuntu_manager.py"]}, {"commit_id": "6511f00f69d7e694a5be49fb30a59a4fde025a9e", "commit_date": "Fri May 17 10:51:47 2019 +0200", "commit_message": "Merge pull request #1171 from kiarn/p3plugin", "files_name": ["aadd747e3c26fb0988f6850575c3a94b17b4e208 - Sun May 12 17:21:01 2019 +0200 : Support for netplan for Ubuntu above 18.04 with ip instead of ifconfig.", "plugins/network/__init__.py", "plugins/network/managers/debian_manager.py", "plugins/network/managers/ip.py", "plugins/network/managers/ubuntu_manager.py"]}, {"commit_id": "441122d9d94dbc6119c4ea85b46998dc31caa703", "commit_date": "Sun May 12 17:20:37 2019 +0200", "commit_message": "Path as string for augeas in PY3.", "files_name": ["plugins/augeas/api.py"]}, {"commit_id": "4d6078e0ba1aac3fd091ca3d9d0f1bfecc744f66", "commit_date": "Sat May 4 14:29:46 2019 +0200", "commit_message": "Bytes for PY3.", "files_name": ["plugins/services/managers/systemd_manager.py"]}, {"commit_id": "86c4ce2a9dc82a49b02f22dfd4a309498cf42d17", "commit_date": "Sat May 4 14:27:16 2019 +0200", "commit_message": "PY3 comptability.", "files_name": ["plugins/plugins/views.py"]}, {"commit_id": "dda6a4590d54c386ae4bbdfba688bd30f4c3dfe7", "commit_date": "Fri May 3 21:58:02 2019 +0200", "commit_message": "Merge pull request #1169 from kiarn/p3ssl", "files_name": ["451562960e7ae78fd4c13a76796cd773fc75dbaa - Mon Apr 22 14:57:23 2019 +0200 : Prevent EPIPE error.", "ajenti-core/aj/routing.py"]}, {"commit_id": "7ba861e281950d477455e1c072d561369730575b", "commit_date": "Fri Apr 19 15:23:07 2019 +0200", "commit_message": "Read static files in binary mode for compatibility with gzip.", "files_name": ["ajenti-core/aj/http.py"]}, {"commit_id": "3649f5adcf9843f5a2bbbfb7cd0270d990ed8c12", "commit_date": "Thu Apr 18 16:00:00 2019 +0200", "commit_message": "Binary type for data stream io in SSL.", "files_name": ["ajenti-core/aj/util/sslsocket.py"]}, {"commit_id": "a6ac5f9d1f05ab66de9f28890bb404c163d4f0f6", "commit_date": "Mon Apr 22 11:11:29 2019 +0200", "commit_message": "rq.id is a str, resp.id must also be a str for comparison in middleware.", "files_name": ["ajenti-core/aj/gate/stream.py"]}, {"commit_id": "2cc9ca78abe2ece403b73314d8aaae3db7a5f433", "commit_date": "Mon Apr 1 15:51:42 2019 +0200", "commit_message": "Version must be str replacement in html file.", "files_name": ["ajenti-core/aj/__init__.py"]}, {"commit_id": "a5fefabdc9d6f88f6878f78c419bbf0f9a78876e", "commit_date": "Mon Apr 1 11:46:58 2019 +0200", "commit_message": "Methods for with statement in PY3.", "files_name": ["ajenti-core/aj/util/sslsocket.py"]}, {"commit_id": "529b9cd651f712ba2d44bdf62f513fe7ea580f24", "commit_date": "Mon Mar 18 21:26:25 2019 +0100", "commit_message": "Merge pull request #1166 from kiarn/pathselector", "files_name": ["65f649514ac74671afe7c9e8da142d37067ed38c - Mon Mar 18 21:24:38 2019 +0100 : Undefined path causes 404.", "plugins/filesystem/resources/js/directives/pathSelector.es"]}, {"commit_id": "5428b0d6797decfa3287ae56e68c25961904d445", "commit_date": "Thu Mar 14 17:53:15 2019 +0100", "commit_message": "Merge pull request #1164 from kiarn/404", "files_name": ["2d4cbab81f59c278f56f06315baf2f3f1dc1930c - Wed Mar 13 23:58:17 2019 +0100 : Merge pull request #1165 from kiarn/pickle", "562522b82a087767779556901f7ef6e4f92ad4ec - Wed Mar 13 23:53:56 2019 +0100 : Local variable instead of object property.", "ajenti-core/aj/gate/stream.py"]}, {"commit_id": "9f45e07a89a5e105cd0aea3c96b44a32ca698612", "commit_date": "Wed Mar 13 23:51:26 2019 +0100", "commit_message": "Better place for convert as str.", "files_name": ["ajenti-core/aj/gate/stream.py"]}, {"commit_id": "5eb7520e37e6d720fb8e970a2baa62fd286b8a4e", "commit_date": "Sun Mar 10 23:38:58 2019 +0100", "commit_message": "Handles binary types with six.", "files_name": ["ajenti-core/aj/gate/stream.py", "ajenti-core/aj/wsgi.py"]}, {"commit_id": "21b72426f28cfd5f72f7c39ffc74c0fd0a0d8126", "commit_date": "Sun Mar 10 23:38:28 2019 +0100", "commit_message": "Version must be text, not binary.", "files_name": ["plugins/core/views/main.py"]}, {"commit_id": "8f56ef4bec2119c232ba7e51494246299ddc7b81", "commit_date": "Mon Jan 28 18:11:04 2019 +0100", "commit_message": "Pickle compatibility for PY3.", "files_name": []}], "windows_after": [{"commit_id": "e0f91bc28a6a59c137ce086d191acaa479853a58", "commit_date": "Sat Oct 5 07:08:22 2019 -0700", "commit_message": "bump", "files_name": ["ajenti-core/aj/__init__.py"]}, {"commit_id": "3a7f2c0a25fda225cf9bb029f98038505ccb82d1", "commit_date": "Sun Oct 6 00:08:34 2019 +0200", "commit_message": "Session time closer to hostname.", "files_name": ["plugins/core/resources/css/app.less"]}, {"commit_id": "d32303ae95869a124b2514ab6f03b95345563938", "commit_date": "Sun Oct 6 00:09:11 2019 +0200", "commit_message": "Session time only if connected.", "files_name": ["plugins/core/content/pages/index.html"]}, {"commit_id": "61f112cdea9b964234863ebfc868c8228f232f79", "commit_date": "Sat Oct 12 14:47:15 2019 +0200", "commit_message": "Consider config parameter also in resttime calculation.", "files_name": ["plugins/core/views/api.py"]}, {"commit_id": "e83d03fbef9be5e1546b2ae26fc9cf3076d0ad18", "commit_date": "Sat Oct 12 14:48:06 2019 +0200", "commit_message": "Show resttime only if lower than 30min.", "files_name": ["plugins/core/content/pages/index.html", "plugins/core/resources/js/core/controllers/root.controller.es"]}, {"commit_id": "bed1c2c8f7acab27c27190368cd0bf1a117814db", "commit_date": "Mon Oct 14 21:23:02 2019 +0200", "commit_message": "First attempt to use gevent SSLSocket.", "files_name": ["ajenti-core/aj/core.py", "ajenti-core/aj/wsgi.py"]}, {"commit_id": "0462cf67b2d7ae9c75bd95c40b69bfba904afb4d", "commit_date": "Thu Oct 24 10:36:24 2019 +0200", "commit_message": "Gevent SSL also for PY2.", "files_name": ["ajenti-core/aj/wsgi.py"]}, {"commit_id": "5877a3fdb25319249a6bc700862f8dac0add0b3e", "commit_date": "Thu Oct 24 10:45:35 2019 +0200", "commit_message": "Use gevent-socketio-hartwork instead.", "files_name": ["ajenti-core/requirements.txt", "docs/source/conf.py", "scripts/install.sh"]}, {"commit_id": "f0e3a05e89f1e360621105256f73e0e8ff2d0f2f", "commit_date": "Tue Oct 29 13:33:45 2019 +0100", "commit_message": "Merge pull request #1194 from kiarn/sessions", "files_name": ["0fdabe3eca032ec4f2a4bf6bd477cce57ab1e75e - Tue Oct 29 14:26:16 2019 +0100 : Merge branch 'sessions'", "e3d8598572be66ca41c1b0678586f7c808ef90ee - Tue Oct 29 18:13:00 2019 +0100 : Fix bug with client auth cert serial.", "ajenti-core/aj/security/verifier.py", "plugins/settings/views.py"]}, {"commit_id": "5ab5cbf7f54bb61e0da62a4a0f30917279bfd58c", "commit_date": "Sun Nov 3 22:31:17 2019 +0100", "commit_message": "Use ssl context to have more flexibility.", "files_name": ["ajenti-core/aj/core.py"]}, {"commit_id": "91dedf337834fb024a1705ca8f5a44bd4d54f3e9", "commit_date": "Wed Nov 13 09:39:10 2019 +0100", "commit_message": "git tag is not actual.", "files_name": ["ajenti-core/aj/__init__.py"]}, {"commit_id": "b5503c354fdfb5cb55376164dc32416c24ad3ebc", "commit_date": "Wed Nov 13 09:55:43 2019 +0100", "commit_message": "Update readme based on Ajenti.", "files_name": ["README.md"]}, {"commit_id": "030f551a36ea9b4cbf0471143e2724699aba2032", "commit_date": "Wed Nov 13 11:31:31 2019 +0100", "commit_message": "Add screenshots for readme.", "files_name": ["docs/img/screen-ajenti2-dashboard.png", "docs/img/screen-ajenti2-login.png", "docs/img/screen-ajenti2-plugins.png", "docs/img/screen-ajenti2-settings.png", "docs/img/screen-ajenti2-systemd.png", "docs/img/screen-ajenti2-terminal.png"]}, {"commit_id": "2a5f83be3c8e0e691f9e4e014d66651bca851186", "commit_date": "Wed Nov 13 11:38:03 2019 +0100", "commit_message": "Relativ links for screenshots.", "files_name": ["README.md"]}, {"commit_id": "9793b82424770b84f0a13cc940a847a673af494e", "commit_date": "Wed Nov 13 11:59:15 2019 +0100", "commit_message": "Merge pull request #1198 from kiarn/version", "files_name": ["8e690c8d0e841842392d97cc384dc5ad7a2fb974 - Mon Nov 18 22:06:11 2019 +0100 : Cleanup.", "ajenti-core/aj/core.py", "ajenti-core/aj/wsgi.py"]}, {"commit_id": "5bf044a0a00f898cc46998c8c2f52ef54b53eec8", "commit_date": "Mon Nov 18 23:02:24 2019 +0100", "commit_message": "Add fqdn certificate option in settings.", "files_name": ["ajenti-core/aj/config.py", "ajenti-core/aj/core.py", "ajenti-panel/config.yml", "ajenti-panel/setup.py", "plugins/settings/resources/js/controllers/index.controller.es", "plugins/settings/resources/partial/index.html"]}, {"commit_id": "ac1f438a56ecec9aa3c5995632141a6c15b36528", "commit_date": "Tue Nov 19 13:05:54 2019 +0100", "commit_message": "PY3 compatibility for long.", "files_name": ["ajenti-core/aj/security/verifier.py"]}, {"commit_id": "2cba81d4714c37f3225954c14ea139e891474b0b", "commit_date": "Tue Nov 19 16:14:56 2019 +0100", "commit_message": "Activate peer cert test.", "files_name": ["ajenti-core/aj/core.py", "ajenti-core/aj/wsgi.py", "plugins/settings/resources/js/controllers/index.controller.es"]}, {"commit_id": "1363ddfe4c0c5c2b344f56116138d333533ff665", "commit_date": "Tue Nov 26 13:58:14 2019 +0100", "commit_message": "Merge pull request #1199 from kiarn/sslsocket", "files_name": ["b54fc9aad0f6b076d9d26d3e7fe534482956fe48 - Tue Nov 26 14:16:03 2019 +0100 : Merge branch 'sslsocket'", "c8ce6e06630a59fd903ced435b0ff5eedc0f3bf5 - Tue Dec 10 11:24:14 2019 +0100 : Prepare session for client auth login.", "ajenti-core/aj/auth.py"]}, {"commit_id": "48b93502e68ad1e31ebda16c358e7d14d041179d", "commit_date": "Tue Dec 10 14:27:03 2019 +0100", "commit_message": "Broadcast updated and serialized session list to all workers.", "files_name": ["ajenti-core/aj/__init__.py", "ajenti-core/aj/gate/gate.py", "ajenti-core/aj/gate/middleware.py", "ajenti-core/aj/gate/session.py", "ajenti-core/aj/gate/worker.py"]}, {"commit_id": "7fca5931550c129e028c1363195fb7baffaf1122", "commit_date": "Tue Dec 10 14:39:21 2019 +0100", "commit_message": "Set identity in session.", "files_name": ["ajenti-core/aj/gate/session.py"]}, {"commit_id": "d48bc522d06c02f51effa2ca4620e214cb010523", "commit_date": "Mon Dec 16 20:19:23 2019 +0100", "commit_message": "Merge pull request #1203 from kiarn/sessions", "files_name": ["c608cf82317d67a10ead07afe9cc62bc2245f4d6 - Mon Dec 16 20:30:15 2019 +0100 : Merge pull request #1202 from kiarn/clientauth", "1efbe87b053578d8dbadadeff3fd57615d831dac - Mon Dec 16 21:56:09 2019 +0100 : Merge branch 'sessions'", "a5b036ee87739c5df91dccd4dd59f474f39f932b - Mon Dec 23 14:17:28 2019 +0100 : File:line more readable on dark background.", "ajenti-core/aj/log.py"]}, {"commit_id": "4aff377f46bb54f8cb35f80de84795c9561a2b56", "commit_date": "Mon Dec 23 17:04:14 2019 +0100", "commit_message": "Bytes for PY3.", "files_name": ["ajenti-core/aj/security/verifier.py"]}, {"commit_id": "ff43120caee30d91a804a18259ba1aa5251306e8", "commit_date": "Mon Dec 23 17:09:13 2019 +0100", "commit_message": "Throw 401 if client auth is forced and client cert is not valid.", "files_name": ["ajenti-core/aj/http.py", "ajenti-core/aj/routing.py", "ajenti-core/aj/wsgi.py"]}, {"commit_id": "938b01ceb764fcd94abfba62e2b65164e206f20d", "commit_date": "Mon Dec 23 17:25:08 2019 +0100", "commit_message": "Merge pull request #1204 from kiarn/401", "files_name": ["a04d1223a0d29fa847d3fb1841e670b7f0be902f - Fri Dec 27 11:39:35 2019 +0100 : Type attribute to show differents load averages.", "plugins/core/resources/js/core/directives/smartProgress.es"]}, {"commit_id": "9bbb9958fcbc9e8a48becc1a22cd3e40e9a2b502", "commit_date": "Fri Dec 27 15:39:19 2019 +0100", "commit_message": "Same log level in log file as passed in ajenti-panel.", "files_name": ["ajenti-core/aj/entry.py", "ajenti-core/aj/log.py", "ajenti-panel/ajenti-panel"]}, {"commit_id": "4c71b4ffecea1cf1d05535cb36d0506b22c22f37", "commit_date": "Sat Dec 28 12:18:32 2019 +0100", "commit_message": "Merge pull request #1207 from kiarn/loglevel", "files_name": ["47c6cba43aaa91dc83c6704900f271ab8b17f2b6 - Sat Dec 28 12:18:58 2019 +0100 : Merge pull request #1206 from kiarn/progressbar", "1534e13b19c4f9dafc607deb78bba105be5cfa29 - Sat Dec 28 23:50:22 2019 +0100 : Merge branch 'progressbar'", "4e62dd6ddacfc680729c3c6a50b3743debc192e1 - Sun Dec 29 00:04:29 2019 +0100 : PY3 : range is almost an iterator and has no method extend.", "ajenti-core/aj/entry.py"]}, {"commit_id": "dcba213f0ac74c4dac303ad808c02c4c94a4c50e", "commit_date": "Sun Dec 29 00:07:28 2019 +0100", "commit_message": "PY3 : range is almost an iterator and has no method extend.", "files_name": ["ajenti-core/aj/entry.py"]}, {"commit_id": "12d7b1efbe34920029e1c97e51f3ccc66b47cf37", "commit_date": "Sun Dec 29 10:37:38 2019 +0100", "commit_message": "More pythonic way.", "files_name": ["ajenti-core/aj/entry.py"]}, {"commit_id": "bf22f6666de61e471ea9e652cb8c7b86b984ba72", "commit_date": "Sun Dec 29 11:11:05 2019 +0100", "commit_message": "Range (#1208)", "files_name": ["6dc47ff9400c7da71e6bedb1fac752f8fc989d48 - Mon Dec 30 17:15:21 2019 +0100 : Merge branch 'range'", "1528cb65c1d8e5a3eb37a8d8198476ad36dce7bc - Tue Dec 31 16:06:20 2019 +0100 : Ensure ASCII chars in request object.", "ajenti-core/aj/http.py"]}, {"commit_id": "7ce63ccc1b3c8aabf54f71fe62410c1398afa7be", "commit_date": "Tue Dec 31 16:08:35 2019 +0100", "commit_message": "Merge pull request #1209 from kiarn/pickle", "files_name": ["f614c7c8f0408a6f74d9711da9dba09f1caa8a8b - Wed Jan 1 17:04:46 2020 +0100 : Cannot build resources as restricted user in dev mode.", "plugins/core/views/main.py"]}, {"commit_id": "6774834494cddb64e0398a56ba271fc1e6b2c377", "commit_date": "Wed Jan 1 17:44:48 2020 +0100", "commit_message": "Merge pull request #1210 from kiarn/checks", "files_name": ["948a8e889b2b9de8bddbeb9c1fe04ce6fc70f2f2 - Fri Jan 3 22:33:07 2020 +0100 : Redirect to login page after session timeout.", "plugins/core/content/pages/index.html", "plugins/core/resources/js/core/controllers/root.controller.es"]}, {"commit_id": "d1878ae2ef51dc2afd9602a4d8c8544c70cd17af", "commit_date": "Fri Jan 3 23:36:29 2020 +0100", "commit_message": "Merge pull request #1211 from kiarn/timeout", "files_name": ["0eb01f6411bfee628787216f02ec51247ffdbf61 - Mon Feb 10 14:32:42 2020 +0100 : Ignore Pycharm config files.", ".gitignore"]}, {"commit_id": "c380a2a0ad4c80090d1da11bdb5369a55419458d", "commit_date": "Mon Feb 10 14:36:06 2020 +0100", "commit_message": "Reset timer if session was touched.", "files_name": ["ajenti-core/aj/gate/gate.py", "plugins/core/resources/js/core/controllers/root.controller.es", "plugins/core/views/api.py"]}, {"commit_id": "690b1e44b29acb14abd004a0639d2ec5d43481cd", "commit_date": "Mon Feb 10 16:59:36 2020 +0100", "commit_message": "Prevent pw to appear in error notification.", "files_name": ["plugins/core/resources/js/core/controllers/login.controller.es"]}, {"commit_id": "a4de0785dfebea9facefd34f26f065044fc33a95", "commit_date": "Mon Feb 10 17:13:02 2020 +0100", "commit_message": "Merge pull request #1213 from kiarn/fixs", "files_name": ["694df72ada99c0dc42e216b2c6e0f330a1e5fd24 - Sun Feb 23 18:00:18 2020 +0100 : Configure session max time in settings.", "plugins/settings/resources/partial/index.html"]}, {"commit_id": "92d184672fcc96b8872e9d3d4edf15aff05f7d73", "commit_date": "Sun Feb 23 18:05:14 2020 +0100", "commit_message": "Merge pull request #1217 from kiarn/config_session", "files_name": ["5bb4adb6c37ee5b00a304592192d81637211cdb8 - Fri Feb 28 22:31:23 2020 +0100 : Ignore disconnect event from socketio.", "ajenti-core/aj/gate/stream.py"]}, {"commit_id": "e6b5bcf5d017489841588ff7673305023fb76b83", "commit_date": "Sat Feb 29 13:35:09 2020 +0100", "commit_message": "Merge pull request #1218 from kiarn/gipc", "files_name": ["f019f0364fc3279cf5c534cfacdf0f3988a3210a - Sat Feb 29 16:48:12 2020 +0100 : HTTP method DELETE has an empty body.", "ajenti-core/aj/http.py"]}, {"commit_id": "91ffe4ee81189a6dc3b5e6245130343e702c0129", "commit_date": "Sat Feb 29 20:58:20 2020 +0100", "commit_message": "Avoid bytes in json for filesystem write/read.", "files_name": ["plugins/filesystem/views.py"]}, {"commit_id": "a8ab8388e24fbedf7a7ccf464ae73c520854a20f", "commit_date": "Sun Mar 1 09:18:22 2020 +0100", "commit_message": "Merge pull request #1219 from kiarn/py3", "files_name": ["4de75dfd439985b0318fbe0df4cfcc203fd4c4c7 - Tue Mar 3 16:30:17 2020 +0100 : Next version", "ajenti-core/aj/__init__.py"]}, {"commit_id": "340686f23e414b49323985efa0d4b21eafc23452", "commit_date": "Tue Mar 3 17:25:20 2020 +0100", "commit_message": "Detailled test between local version and repo version.", "files_name": ["plugins/plugins/resources/js/controllers/index.controller.es"]}, {"commit_id": "abfd8fdd283be6dd9d6498f253c9e1a1f81bf7cf", "commit_date": "Wed Mar 4 15:57:21 2020 +0100", "commit_message": "Merge pull request #1220 from kiarn/version", "files_name": ["ea6120c7be66c283450e657d781a41bc3dfe0cb7 - Thu Mar 26 18:17:22 2020 +0100 : Group isolation for worker.", "ajenti-core/aj/auth.py", "ajenti-core/aj/gate/worker.py"]}, {"commit_id": "33cb28c57c4235280e4081669b6b0432bcb21b48", "commit_date": "Fri Mar 27 12:46:20 2020 +0100", "commit_message": "Merge pull request #1223 from kiarn/gid", "files_name": ["3d611c7cef84fd6fff8ea0c7f04caef603f01c1d - Sun Mar 29 22:29:45 2020 +0200 : Pyte use defaultdict to store data.", "plugins/terminal/terminal.py"]}, {"commit_id": "bfa0abd184a390e529d537753a16943fe7279780", "commit_date": "Sun Mar 29 22:29:45 2020 +0200", "commit_message": "Pyte use defaultdict to store data.", "files_name": ["plugins/terminal/terminal.py"]}, {"commit_id": "54c6048489f0f5f90146534a99882e06baf913be", "commit_date": "Sun Mar 29 22:40:02 2020 +0200", "commit_message": "Use pip3 instead of pip.", "files_name": ["ajenti-core/requirements.txt", "ajenti-panel/ajenti-upgrade", "plugins/packages/managers/pip_manager.py", "plugins/plugins/tasks.py", "plugins/plugins/views.py", "scripts/ci.sh"]}, {"commit_id": "bda4dfe65ccc87c0c3e30691dd4f4ac4d7f79d63", "commit_date": "Sun Mar 29 22:59:14 2020 +0200", "commit_message": "Format the pip cmd.", "files_name": ["plugins/packages/managers/pip_manager.py"]}, {"commit_id": "e1329d8f0e78eec5ad56a9ae24bc909298d5a5e4", "commit_date": "Mon Mar 30 11:13:01 2020 +0200", "commit_message": "Merge pull request #1225 from kiarn/pip3", "files_name": []}], "parents": [{"commit_id_before": "ef385f96d7e9e09b81ca5e48dc4e04042d5a74a4", "url_before": "https://api.github.com/repos/ajenti/ajenti/commits/ef385f96d7e9e09b81ca5e48dc4e04042d5a74a4", "html_url_before": "https://github.com/ajenti/ajenti/commit/ef385f96d7e9e09b81ca5e48dc4e04042d5a74a4"}], "details": [{"raw_url": "https://github.com/ajenti/ajenti/raw/7aa146b724e0e20cfee2c71ca78fafbf53a8767c/ajenti-core%2Faj%2Fauth.py", "code": "import json\nimport logging\nimport pexpect\nimport pwd\nimport subprocess\nimport syslog\nfrom jadi import component, service, interface\nfrom six import PY3\n\nimport aj\nfrom aj.api.http import BaseHttpHandler\nfrom aj.security.verifier import ClientCertificateVerificator\nfrom aj.util import public\n\n\n@public\nclass SudoError(Exception):\n    def __init__(self, message):\n        Exception.__init__(self)\n        self.message = message\n\n    def __str__(self):\n        return self.message\n\n\n@public\nclass SecurityError(Exception):\n    def __init__(self, permission):\n        Exception.__init__(self)\n        self.message = 'Permission \"%s\" is required' % permission\n\n    def __str__(self):\n        return self.message\n\n\n@public\n@service\nclass AuthenticationMiddleware(BaseHttpHandler):\n    def __init__(self, context):\n        self.context = context\n        self.auth = AuthenticationService.get(self.context)\n        if not hasattr(context, 'identity'):\n            context.identity = None\n\n    def handle(self, http_context):\n        if http_context.env['SSL_CLIENT_VALID']:\n            if not self.context.identity:\n                username = http_context.env['SSL_CLIENT_USER']\n                logging.info(\n                    'SSL client certificate %s verified as %s',\n                    http_context.env['SSL_CLIENT_DIGEST'],\n                    username\n                )\n                try:\n                    pwd.getpwnam(username)\n                    found = True\n                except KeyError:\n                    found = False\n                if found:\n                    self.auth.login(username)\n\n        http_context.add_header('X-Auth-Identity', str(self.context.identity or ''))\n\n\nclass AuthenticationError(Exception):\n    def __init__(self, message):\n        self.message = message\n\n    def __str__(self):\n        return self.message\n\n\n@interface\nclass AuthenticationProvider(object):\n    id = None\n    name = None\n    allows_sudo_elevation = False\n\n    def __init__(self, context):\n        self.context = context\n\n    def authenticate(self, username, password):\n        raise NotImplementedError\n\n    def authorize(self, username, permission):\n        raise NotImplementedError\n\n    def get_isolation_uid(self, username):\n        raise NotImplementedError\n\n    def get_profile(self, username):\n        return {}\n\n\n@component(AuthenticationProvider)\nclass OSAuthenticationProvider(AuthenticationProvider):\n    id = 'os'\n    name = 'OS users'\n    allows_sudo_elevation = True\n\n    def authenticate(self, username, password):\n        child = None\n\n        if PY3:\n            from shlex import quote\n        else:\n            from pipes import quote\n\n        try:\n            child = pexpect.spawn('/bin/sh', ['-c', '/bin/su -c \"/bin/echo SUCCESS\" - %s' % quote(username)], timeout=5)\n            child.expect('.*:')\n            child.sendline(password)\n            result = child.expect(['su: .*', 'SUCCESS'])\n        except Exception as err:\n            if child and child.isalive():\n                child.close()\n            logging.error('Error checking password: %s', err)\n            return False\n        if result == 0:\n            return False\n        else:\n            return True\n\n    def authorize(self, username, permission):\n        return True\n\n    def get_isolation_uid(self, username):\n        return pwd.getpwnam(username).pw_uid\n\n\n@public\n@service\nclass AuthenticationService(object):\n    def __init__(self, context):\n        self.context = context\n\n    def get_provider(self):\n        provider_id = aj.config.data['auth'].get('provider', 'os')\n        for provider in AuthenticationProvider.all(self.context):\n            if provider.id == provider_id:\n                return provider\n        raise AuthenticationError('Authentication provider %s is unavailable' % provider_id)\n\n    def check_password(self, username, password):\n        return self.get_provider().authenticate(username, password)\n\n    def check_sudo_password(self, username, password):\n        if not aj.config.data['auth'].get('allow_sudo', False):\n            return False\n        sudo = subprocess.Popen(\n            ['sudo', '-S', '-k', '-u', username, '--', 'ls'],\n            stdin=subprocess.PIPE,\n            stdout=subprocess.PIPE,\n            stderr=subprocess.PIPE,\n        )\n        o, e = sudo.communicate(password + '\\n')\n        if sudo.returncode != 0:\n            raise SudoError((o + e).splitlines()[-1].strip())\n        return True\n\n    def client_certificate_callback(self, connection, x509, errno, depth, result):\n        if depth == 0 and (errno == 9 or errno == 10):\n            return False  # expired / not yet valid\n        if not aj.config.data['ssl']['client_auth']['force']:\n            return True\n        user = ClientCertificateVerificator.get(aj.context).verify(x509)\n        return bool(user)\n\n    def get_identity(self):\n        return self.context.identity\n\n    def login(self, username, demote=True):\n        logging.info('Authenticating session as %s', username)\n        syslog.syslog(syslog.LOG_NOTICE | syslog.LOG_AUTH, '%s has logged in from %s' % (\n            username,\n            self.context.session.client_info['address'],\n        ))\n        if demote:\n            uid = self.get_provider().get_isolation_uid(username)\n            logging.debug('Authentication provider \"%s\" maps \"%s\" -> %i' % (\n                self.get_provider().name,\n                username,\n                uid,\n            ))\n            self.context.worker.demote(uid)\n        self.context.identity = username\n\n    def prepare_session_redirect(self, http_context, username, auth_info):\n        http_context.add_header('X-Session-Redirect', username)\n        http_context.add_header('X-Auth-Info', auth_info)\n\n\n@public\n@interface\nclass PermissionProvider(object):\n    def __init__(self, context):\n        self.context = context\n\n    def provide(self):\n        return []\n\n\n@public\nclass authorize(object):\n    def __init__(self, permission_id):\n        self.permission_id = permission_id\n\n    def check(self):\n        username = aj.worker.context.identity\n        provider = AuthenticationService.get(aj.worker.context).get_provider()\n        for permission in [\n            p\n            for permission_provider in PermissionProvider.all(aj.worker.context)\n            for p in permission_provider.provide()\n        ]:\n            if permission['id'] == self.permission_id:\n                if provider.authorize(username, permission):\n                    break\n                else:\n                    raise SecurityError(self.permission_id)\n        else:\n            raise SecurityError(self.permission_id)\n\n    def __call__(self, fx):\n        def wrapper(*args, **kwargs):\n            self.check()\n            return fx(*args, **kwargs)\n        return wrapper\n\n    def __enter__(self):\n        self.check()\n\n    def __exit__(self, exc_type, exc_val, exc_tb):\n        pass\n", "code_before": "import json\nimport logging\nimport pexpect\nimport pwd\nimport subprocess\nimport syslog\nfrom jadi import component, service, interface\n\nimport aj\nfrom aj.api.http import BaseHttpHandler\nfrom aj.security.verifier import ClientCertificateVerificator\nfrom aj.util import public\n\n\n@public\nclass SudoError(Exception):\n    def __init__(self, message):\n        Exception.__init__(self)\n        self.message = message\n\n    def __str__(self):\n        return self.message\n\n\n@public\nclass SecurityError(Exception):\n    def __init__(self, permission):\n        Exception.__init__(self)\n        self.message = 'Permission \"%s\" is required' % permission\n\n    def __str__(self):\n        return self.message\n\n\n@public\n@service\nclass AuthenticationMiddleware(BaseHttpHandler):\n    def __init__(self, context):\n        self.context = context\n        self.auth = AuthenticationService.get(self.context)\n        if not hasattr(context, 'identity'):\n            context.identity = None\n\n    def handle(self, http_context):\n        if http_context.env['SSL_CLIENT_VALID']:\n            if not self.context.identity:\n                username = http_context.env['SSL_CLIENT_USER']\n                logging.info(\n                    'SSL client certificate %s verified as %s',\n                    http_context.env['SSL_CLIENT_DIGEST'],\n                    username\n                )\n                try:\n                    pwd.getpwnam(username)\n                    found = True\n                except KeyError:\n                    found = False\n                if found:\n                    self.auth.login(username)\n\n        http_context.add_header('X-Auth-Identity', str(self.context.identity or ''))\n\n\nclass AuthenticationError(Exception):\n    def __init__(self, message):\n        self.message = message\n\n    def __str__(self):\n        return self.message\n\n\n@interface\nclass AuthenticationProvider(object):\n    id = None\n    name = None\n    allows_sudo_elevation = False\n\n    def __init__(self, context):\n        self.context = context\n\n    def authenticate(self, username, password):\n        raise NotImplementedError\n\n    def authorize(self, username, permission):\n        raise NotImplementedError\n\n    def get_isolation_uid(self, username):\n        raise NotImplementedError\n\n    def get_profile(self, username):\n        return {}\n\n\n@component(AuthenticationProvider)\nclass OSAuthenticationProvider(AuthenticationProvider):\n    id = 'os'\n    name = 'OS users'\n    allows_sudo_elevation = True\n\n    def authenticate(self, username, password):\n        child = None\n        try:\n            child = pexpect.spawn('/bin/sh', ['-c', '/bin/su -c \"/bin/echo SUCCESS\" - %s' % username], timeout=5)\n            child.expect('.*:')\n            child.sendline(password)\n            result = child.expect(['su: .*', 'SUCCESS'])\n        except Exception as err:\n            if child and child.isalive():\n                child.close()\n            logging.error('Error checking password: %s', err)\n            return False\n        if result == 0:\n            return False\n        else:\n            return True\n\n    def authorize(self, username, permission):\n        return True\n\n    def get_isolation_uid(self, username):\n        return pwd.getpwnam(username).pw_uid\n\n\n@public\n@service\nclass AuthenticationService(object):\n    def __init__(self, context):\n        self.context = context\n\n    def get_provider(self):\n        provider_id = aj.config.data['auth'].get('provider', 'os')\n        for provider in AuthenticationProvider.all(self.context):\n            if provider.id == provider_id:\n                return provider\n        raise AuthenticationError('Authentication provider %s is unavailable' % provider_id)\n\n    def check_password(self, username, password):\n        return self.get_provider().authenticate(username, password)\n\n    def check_sudo_password(self, username, password):\n        if not aj.config.data['auth'].get('allow_sudo', False):\n            return False\n        sudo = subprocess.Popen(\n            ['sudo', '-S', '-k', '-u', username, '--', 'ls'],\n            stdin=subprocess.PIPE,\n            stdout=subprocess.PIPE,\n            stderr=subprocess.PIPE,\n        )\n        o, e = sudo.communicate(password + '\\n')\n        if sudo.returncode != 0:\n            raise SudoError((o + e).splitlines()[-1].strip())\n        return True\n\n    def client_certificate_callback(self, connection, x509, errno, depth, result):\n        if depth == 0 and (errno == 9 or errno == 10):\n            return False  # expired / not yet valid\n        if not aj.config.data['ssl']['client_auth']['force']:\n            return True\n        user = ClientCertificateVerificator.get(aj.context).verify(x509)\n        return bool(user)\n\n    def get_identity(self):\n        return self.context.identity\n\n    def login(self, username, demote=True):\n        logging.info('Authenticating session as %s', username)\n        syslog.syslog(syslog.LOG_NOTICE | syslog.LOG_AUTH, '%s has logged in from %s' % (\n            username,\n            self.context.session.client_info['address'],\n        ))\n        if demote:\n            uid = self.get_provider().get_isolation_uid(username)\n            logging.debug('Authentication provider \"%s\" maps \"%s\" -> %i' % (\n                self.get_provider().name,\n                username,\n                uid,\n            ))\n            self.context.worker.demote(uid)\n        self.context.identity = username\n\n    def prepare_session_redirect(self, http_context, username, auth_info):\n        http_context.add_header('X-Session-Redirect', username)\n        http_context.add_header('X-Auth-Info', auth_info)\n\n\n@public\n@interface\nclass PermissionProvider(object):\n    def __init__(self, context):\n        self.context = context\n\n    def provide(self):\n        return []\n\n\n@public\nclass authorize(object):\n    def __init__(self, permission_id):\n        self.permission_id = permission_id\n\n    def check(self):\n        username = aj.worker.context.identity\n        provider = AuthenticationService.get(aj.worker.context).get_provider()\n        for permission in [\n            p\n            for permission_provider in PermissionProvider.all(aj.worker.context)\n            for p in permission_provider.provide()\n        ]:\n            if permission['id'] == self.permission_id:\n                if provider.authorize(username, permission):\n                    break\n                else:\n                    raise SecurityError(self.permission_id)\n        else:\n            raise SecurityError(self.permission_id)\n\n    def __call__(self, fx):\n        def wrapper(*args, **kwargs):\n            self.check()\n            return fx(*args, **kwargs)\n        return wrapper\n\n    def __enter__(self):\n        self.check()\n\n    def __exit__(self, exc_type, exc_val, exc_tb):\n        pass\n", "patch": "@@ -5,6 +5,7 @@\n import subprocess\n import syslog\n from jadi import component, service, interface\n+from six import PY3\n \n import aj\n from aj.api.http import BaseHttpHandler\n@@ -99,8 +100,14 @@ class OSAuthenticationProvider(AuthenticationProvider):\n \n     def authenticate(self, username, password):\n         child = None\n+\n+        if PY3:\n+            from shlex import quote\n+        else:\n+            from pipes import quote\n+\n         try:\n-            child = pexpect.spawn('/bin/sh', ['-c', '/bin/su -c \"/bin/echo SUCCESS\" - %s' % username], timeout=5)\n+            child = pexpect.spawn('/bin/sh', ['-c', '/bin/su -c \"/bin/echo SUCCESS\" - %s' % quote(username)], timeout=5)\n             child.expect('.*:')\n             child.sendline(password)\n             result = child.expect(['su: .*', 'SUCCESS'])", "file_path": "files/2022_6/731", "file_language": "py", "file_name": "ajenti-core/aj/auth.py", "outdated_file_modify": 0, "outdated_file_before": 0, "outdated_file_after": 0, "llm_check": 1, "static_check": 0, "static": {"rats": [false, []], "semgrep": [false, []]}, "target": -1, "function_before": [], "function_after": []}], "outdated": 0, "cwe_descripiton": "", "cwe_consequence": "", "cwe_method": "", "cwe_solution": ""}
